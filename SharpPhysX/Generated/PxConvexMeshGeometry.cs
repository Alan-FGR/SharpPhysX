//Generated by MinBinder.
using System;
using System.Runtime.InteropServices;
using PxBaseFlags = System.UInt32;
using PxActorFlags = System.UInt32;

[Flags]
public enum PxConvexMeshGeometryFlag : int {
 eTIGHT_BOUNDS = (1<<0),

}

public static partial class physx{
    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern PxFlags_PxConvexMeshGeometryFlag_byte C_OP_Pipe(PxConvexMeshGeometryFlag a,PxConvexMeshGeometryFlag b);
    public static PxFlags_PxConvexMeshGeometryFlag_byte Pipe(PxConvexMeshGeometryFlag a,PxConvexMeshGeometryFlag b){
        return C_OP_Pipe(a,b);    
    }


    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern PxFlags_PxConvexMeshGeometryFlag_byte C_OP_Amp(PxConvexMeshGeometryFlag a,PxConvexMeshGeometryFlag b);
    public static PxFlags_PxConvexMeshGeometryFlag_byte Amp(PxConvexMeshGeometryFlag a,PxConvexMeshGeometryFlag b){
        return C_OP_Amp(a,b);    
    }


    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern PxFlags_PxConvexMeshGeometryFlag_byte C_OP_Tilde(PxConvexMeshGeometryFlag a);
    public static PxFlags_PxConvexMeshGeometryFlag_byte Tilde(PxConvexMeshGeometryFlag a){
        return C_OP_Tilde(a);    
    }


}

public partial struct PxConvexMeshGeometry : IPxGeometry { // ptr holder

    public PxGeometryType getType() {// base call
        return ((PxGeometry)this).getType();
    }
    

    private IntPtr nativePtr_;
    
    public static unsafe implicit operator PxGeometry(PxConvexMeshGeometry obj) {// upcast
        return *(PxGeometry*)&obj;
    }
    
    public static unsafe explicit operator PxConvexMeshGeometry(PxGeometry obj) {// downcast
        return *(PxConvexMeshGeometry*)&obj;
    }
    
    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern PxConvexMeshGeometry C_PxConvexMeshGeometry_PxConvexMeshGeometry(PxConvexMesh mesh,PxMeshScale scaling,PxConvexMeshGeometryFlags flags);
    public unsafe PxConvexMeshGeometry(PxConvexMesh mesh,PxMeshScale scaling,PxConvexMeshGeometryFlags flags){
        var _new = C_PxConvexMeshGeometry_PxConvexMeshGeometry(mesh,scaling,flags);        
        fixed (void* ptr = &this)
          Buffer.MemoryCopy(&_new, ptr, Marshal.SizeOf(this), Marshal.SizeOf(this));    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern bool C_CONST_PxConvexMeshGeometry_isValid(PxConvexMeshGeometry cls);
    public bool isValid(){
        return C_CONST_PxConvexMeshGeometry_isValid(this);    
    }


}
