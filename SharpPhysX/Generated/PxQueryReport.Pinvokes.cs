// Generated by minBND 5.1.93.2 - Â© github.com/Alan-FGR
using System;
using System.Runtime.InteropServices;
public static unsafe partial class minBND_pinvokes {

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxHitFlags_operator_Ptr_Pipe_PxHitFlagEnum_PxHitFlagEnum_(physx.PxHitFlags* pvk_RetRef, physx.PxHitFlagEnum pvk_a, physx.PxHitFlagEnum pvk_b);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxHitFlags_operator_Ptr_Amp_PxHitFlagEnum_PxHitFlagEnum_(physx.PxHitFlags* pvk_RetRef, physx.PxHitFlagEnum pvk_a, physx.PxHitFlagEnum pvk_b);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxHitFlags_operator_Ptr_Tilde_PxHitFlagEnum_(physx.PxHitFlags* pvk_RetRef, physx.PxHitFlagEnum pvk_a);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxRaycastHitPtr PxRaycastCallbackPtr_GET_block(physx.PxRaycastCallbackPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxRaycastCallbackPtr_SET_block(physx.PxRaycastCallbackPtr cls, physx.PxRaycastHitPtr value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern bool PxRaycastCallbackPtr_GET_hasBlock(physx.PxRaycastCallbackPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxRaycastCallbackPtr_SET_hasBlock(physx.PxRaycastCallbackPtr cls, bool value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxRaycastHitPtr PxRaycastCallbackPtr_GET_touches(physx.PxRaycastCallbackPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxRaycastCallbackPtr_SET_touches(physx.PxRaycastCallbackPtr cls, physx.PxRaycastHitPtr value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern uint PxRaycastCallbackPtr_GET_maxNbTouches(physx.PxRaycastCallbackPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxRaycastCallbackPtr_SET_maxNbTouches(physx.PxRaycastCallbackPtr cls, uint value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern uint PxRaycastCallbackPtr_GET_nbTouches(physx.PxRaycastCallbackPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxRaycastCallbackPtr_SET_nbTouches(physx.PxRaycastCallbackPtr cls, uint value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern bool bool_PxRaycastCallbackPtr_processTouchesPtr_PxRaycastHitPtr_uint_(physx.PxRaycastCallbackPtr pvk_this, physx.PxRaycastHitPtr pvk_buffer, uint pvk_nbHits);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void void_PxRaycastCallbackPtr_finalizeQueryPtr(physx.PxRaycastCallbackPtr pvk_this);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern bool bool_PxRaycastCallbackPtr_hasAnyHitsPtr(physx.PxRaycastCallbackPtr pvk_this);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxSweepHitPtr PxSweepCallbackPtr_GET_block(physx.PxSweepCallbackPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxSweepCallbackPtr_SET_block(physx.PxSweepCallbackPtr cls, physx.PxSweepHitPtr value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern bool PxSweepCallbackPtr_GET_hasBlock(physx.PxSweepCallbackPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxSweepCallbackPtr_SET_hasBlock(physx.PxSweepCallbackPtr cls, bool value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxSweepHitPtr PxSweepCallbackPtr_GET_touches(physx.PxSweepCallbackPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxSweepCallbackPtr_SET_touches(physx.PxSweepCallbackPtr cls, physx.PxSweepHitPtr value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern uint PxSweepCallbackPtr_GET_maxNbTouches(physx.PxSweepCallbackPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxSweepCallbackPtr_SET_maxNbTouches(physx.PxSweepCallbackPtr cls, uint value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern uint PxSweepCallbackPtr_GET_nbTouches(physx.PxSweepCallbackPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxSweepCallbackPtr_SET_nbTouches(physx.PxSweepCallbackPtr cls, uint value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern bool bool_PxSweepCallbackPtr_processTouchesPtr_PxSweepHitPtr_uint_(physx.PxSweepCallbackPtr pvk_this, physx.PxSweepHitPtr pvk_buffer, uint pvk_nbHits);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void void_PxSweepCallbackPtr_finalizeQueryPtr(physx.PxSweepCallbackPtr pvk_this);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern bool bool_PxSweepCallbackPtr_hasAnyHitsPtr(physx.PxSweepCallbackPtr pvk_this);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxOverlapHitPtr PxOverlapCallbackPtr_GET_block(physx.PxOverlapCallbackPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxOverlapCallbackPtr_SET_block(physx.PxOverlapCallbackPtr cls, physx.PxOverlapHitPtr value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern bool PxOverlapCallbackPtr_GET_hasBlock(physx.PxOverlapCallbackPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxOverlapCallbackPtr_SET_hasBlock(physx.PxOverlapCallbackPtr cls, bool value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxOverlapHitPtr PxOverlapCallbackPtr_GET_touches(physx.PxOverlapCallbackPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxOverlapCallbackPtr_SET_touches(physx.PxOverlapCallbackPtr cls, physx.PxOverlapHitPtr value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern uint PxOverlapCallbackPtr_GET_maxNbTouches(physx.PxOverlapCallbackPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxOverlapCallbackPtr_SET_maxNbTouches(physx.PxOverlapCallbackPtr cls, uint value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern uint PxOverlapCallbackPtr_GET_nbTouches(physx.PxOverlapCallbackPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxOverlapCallbackPtr_SET_nbTouches(physx.PxOverlapCallbackPtr cls, uint value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern bool bool_PxOverlapCallbackPtr_processTouchesPtr_PxOverlapHitPtr_uint_(physx.PxOverlapCallbackPtr pvk_this, physx.PxOverlapHitPtr pvk_buffer, uint pvk_nbHits);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void void_PxOverlapCallbackPtr_finalizeQueryPtr(physx.PxOverlapCallbackPtr pvk_this);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern bool bool_PxOverlapCallbackPtr_hasAnyHitsPtr(physx.PxOverlapCallbackPtr pvk_this);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void Freer_physx_PxRaycastBufferPtr(physx.PxRaycastBufferPtr ptr);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxRaycastBufferPtr Ctor_PxRaycastBufferPtr_PxRaycastHitPtr_uint(physx.PxRaycastHitPtr pvk_aTouches, uint pvk_aMaxNbTouches);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxRaycastBufferPtr Ctor_PxRaycastBufferPtr_();

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxRaycastBufferPtr Ctor_PxRaycastBufferPtr_PxRaycastHitPtr(physx.PxRaycastHitPtr pvk_aTouches);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern uint uint_const_PxRaycastBufferPtr_getNbAnyHitsPtr(physx.PxRaycastBufferPtr pvk_this);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxRaycastHitPtr PxRaycastHitPtr_const_PxRaycastBufferPtr_getAnyHitPtr_uintC(physx.PxRaycastBufferPtr pvk_this, uint pvk_index);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern uint uint_const_PxRaycastBufferPtr_getNbTouchesPtr(physx.PxRaycastBufferPtr pvk_this);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxRaycastHitPtr PxRaycastHitPtr_const_PxRaycastBufferPtr_getTouchesPtr(physx.PxRaycastBufferPtr pvk_this);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxRaycastHitPtr PxRaycastHitPtr_const_PxRaycastBufferPtr_getTouchPtr_uintC(physx.PxRaycastBufferPtr pvk_this, uint pvk_index);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern uint uint_const_PxRaycastBufferPtr_getMaxNbTouchesPtr(physx.PxRaycastBufferPtr pvk_this);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void Freer_physx_PxOverlapBufferPtr(physx.PxOverlapBufferPtr ptr);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxOverlapBufferPtr Ctor_PxOverlapBufferPtr_PxOverlapHitPtr_uint(physx.PxOverlapHitPtr pvk_aTouches, uint pvk_aMaxNbTouches);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxOverlapBufferPtr Ctor_PxOverlapBufferPtr_();

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxOverlapBufferPtr Ctor_PxOverlapBufferPtr_PxOverlapHitPtr(physx.PxOverlapHitPtr pvk_aTouches);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern uint uint_const_PxOverlapBufferPtr_getNbAnyHitsPtr(physx.PxOverlapBufferPtr pvk_this);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxOverlapHitPtr PxOverlapHitPtr_const_PxOverlapBufferPtr_getAnyHitPtr_uintC(physx.PxOverlapBufferPtr pvk_this, uint pvk_index);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern uint uint_const_PxOverlapBufferPtr_getNbTouchesPtr(physx.PxOverlapBufferPtr pvk_this);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxOverlapHitPtr PxOverlapHitPtr_const_PxOverlapBufferPtr_getTouchesPtr(physx.PxOverlapBufferPtr pvk_this);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxOverlapHitPtr PxOverlapHitPtr_const_PxOverlapBufferPtr_getTouchPtr_uintC(physx.PxOverlapBufferPtr pvk_this, uint pvk_index);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern uint uint_const_PxOverlapBufferPtr_getMaxNbTouchesPtr(physx.PxOverlapBufferPtr pvk_this);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void Freer_physx_PxSweepBufferPtr(physx.PxSweepBufferPtr ptr);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxSweepBufferPtr Ctor_PxSweepBufferPtr_PxSweepHitPtr_uint(physx.PxSweepHitPtr pvk_aTouches, uint pvk_aMaxNbTouches);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxSweepBufferPtr Ctor_PxSweepBufferPtr_();

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxSweepBufferPtr Ctor_PxSweepBufferPtr_PxSweepHitPtr(physx.PxSweepHitPtr pvk_aTouches);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern uint uint_const_PxSweepBufferPtr_getNbAnyHitsPtr(physx.PxSweepBufferPtr pvk_this);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxSweepHitPtr PxSweepHitPtr_const_PxSweepBufferPtr_getAnyHitPtr_uintC(physx.PxSweepBufferPtr pvk_this, uint pvk_index);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern uint uint_const_PxSweepBufferPtr_getNbTouchesPtr(physx.PxSweepBufferPtr pvk_this);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxSweepHitPtr PxSweepHitPtr_const_PxSweepBufferPtr_getTouchesPtr(physx.PxSweepBufferPtr pvk_this);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxSweepHitPtr PxSweepHitPtr_const_PxSweepBufferPtr_getTouchPtr_uintC(physx.PxSweepBufferPtr pvk_this, uint pvk_index);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern uint uint_const_PxSweepBufferPtr_getMaxNbTouchesPtr(physx.PxSweepBufferPtr pvk_this);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void Freer_physx_PxActorShapePtr(physx.PxActorShapePtr ptr);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxActorShapePtr Ctor_PxActorShapePtr_();

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxActorShapePtr Ctor_PxActorShapePtr_PxRigidActorPtr_PxShapePtr(physx.PxRigidActorPtr pvk_a, physx.PxShapePtr pvk_s);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxRigidActorPtr PxActorShapePtr_GET_actor(physx.PxActorShapePtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxActorShapePtr_SET_actor(physx.PxActorShapePtr cls, physx.PxRigidActorPtr value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxShapePtr PxActorShapePtr_GET_shape(physx.PxActorShapePtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxActorShapePtr_SET_shape(physx.PxActorShapePtr cls, physx.PxShapePtr value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void Freer_physx_PxQueryHitPtr(physx.PxQueryHitPtr ptr);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxQueryHitPtr Ctor_PxQueryHitPtr_();

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern uint PxQueryHitPtr_GET_faceIndex(physx.PxQueryHitPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxQueryHitPtr_SET_faceIndex(physx.PxQueryHitPtr cls, uint value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void Freer_physx_PxLocationHitPtr(physx.PxLocationHitPtr ptr);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxLocationHitPtr Ctor_PxLocationHitPtr_();

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxLocationHitPtr_GET_flags(physx.PxLocationHitPtr cls, physx.PxHitFlags* GetRetRef);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxLocationHitPtr_SET_flags(physx.PxLocationHitPtr cls, physx.PxHitFlags value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxLocationHitPtr_GET_position(physx.PxLocationHitPtr cls, physx.PxVec3* GetRetRef);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxLocationHitPtr_SET_position(physx.PxLocationHitPtr cls, physx.PxVec3 value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxLocationHitPtr_GET_normal(physx.PxLocationHitPtr cls, physx.PxVec3* GetRetRef);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxLocationHitPtr_SET_normal(physx.PxLocationHitPtr cls, physx.PxVec3 value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern float PxLocationHitPtr_GET_distance(physx.PxLocationHitPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxLocationHitPtr_SET_distance(physx.PxLocationHitPtr cls, float value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern bool bool_const_PxLocationHitPtr_hadInitialOverlapPtr(physx.PxLocationHitPtr pvk_this);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void Freer_physx_PxRaycastHitPtr(physx.PxRaycastHitPtr ptr);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxRaycastHitPtr Ctor_PxRaycastHitPtr_();

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern float PxRaycastHitPtr_GET_u(physx.PxRaycastHitPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxRaycastHitPtr_SET_u(physx.PxRaycastHitPtr cls, float value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern float PxRaycastHitPtr_GET_v(physx.PxRaycastHitPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxRaycastHitPtr_SET_v(physx.PxRaycastHitPtr cls, float value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxOverlapHitPtr Newer_physx_PxOverlapHitPtr();
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void Freer_physx_PxOverlapHitPtr(physx.PxOverlapHitPtr ptr);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern uint PxOverlapHitPtr_GET_padTo16Bytes(physx.PxOverlapHitPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxOverlapHitPtr_SET_padTo16Bytes(physx.PxOverlapHitPtr cls, uint value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void Freer_physx_PxSweepHitPtr(physx.PxSweepHitPtr ptr);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxSweepHitPtr Ctor_PxSweepHitPtr_();

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern uint PxSweepHitPtr_GET_padTo16Bytes(physx.PxSweepHitPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxSweepHitPtr_SET_padTo16Bytes(physx.PxSweepHitPtr cls, uint value);

}
