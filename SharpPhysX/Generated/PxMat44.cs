// Generated by minBND 5.1.78.26 - Â© github.com/Alan-FGR
//DEBUG: UnitNode  - 0
//Unit PxMat44
using System;
using System.Runtime.InteropServices;

//DEBUG: NamespaceNode physx - 42-372
public static unsafe partial class physx {
    //DEBUG: FunctionNode physx::operator* - 216
    //ERRORS OCCURED IN physx::operator*
    //Signature of physx::operator* - PxMat44 operator*(float, const PxMat44&) forbidden in configuration
    
    //DEBUG: ClassNode physx::PxMat44 - 54-358
    public unsafe partial struct PxMat44{
        public physx.PxVec4 column0;
        public physx.PxVec4 column1;
        public physx.PxVec4 column2;
        public physx.PxVec4 column3;
        
    //DEBUG: DeclNode physx::PxMat44 - 216
        // TODO DeclNode.GenBinding()
        
        //DEBUG: DefaulterNode physx::PxMat44::PxMat44 - 58-60
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void Default_physx_PxMat44_(physx.PxMat44* RetRef);
        
        public static physx.PxMat44 Default() {
            //RET nat: physx.PxMat44, man: physx.PxMat44, stg: Blittable, ret: False
            physx.PxMat44 RetRef;
            Default_physx_PxMat44_(&RetRef);
            return RetRef;
        }
        
        //DEBUG: BlittableCtorNode physx::PxMat44::PxMat44 - 63-70
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxMat44_PxMat44_Ctor_physx_PxIDENTITY_(physx.PxMat44* pvk_this, physx.PxIDENTITY pvk_r);
        
        public PxMat44(physx.PxIDENTITY r) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: physx::PxMat44, man: physx.PxMat44, stg: Blittable
            
            //PAR nat: physx::PxIDENTITY, man: physx.PxIDENTITY, stg: Value
            physx.PxIDENTITY pvk_in_r = r;
            PxMat44 toInit;
            var pvk_in_this = &toInit;
            void_physx_PxMat44_PxMat44_Ctor_physx_PxIDENTITY_(pvk_in_this, pvk_in_r);
            this = toInit;
        }
        
        //DEBUG: BlittableCtorNode physx::PxMat44::PxMat44 - 73-76
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxMat44_PxMat44_Ctor_physx_PxZERO_(physx.PxMat44* pvk_this, physx.PxZERO pvk_r);
        
        public PxMat44(physx.PxZERO r) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: physx::PxMat44, man: physx.PxMat44, stg: Blittable
            
            //PAR nat: physx::PxZERO, man: physx.PxZERO, stg: Value
            physx.PxZERO pvk_in_r = r;
            PxMat44 toInit;
            var pvk_in_this = &toInit;
            void_physx_PxMat44_PxMat44_Ctor_physx_PxZERO_(pvk_in_this, pvk_in_r);
            this = toInit;
        }
        
        //DEBUG: BlittableCtorNode physx::PxMat44::PxMat44 - 79-82
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxMat44_PxMat44_Ctor_physx_PxVec4_physx_PxVec4_physx_PxVec4_physx_PxVec4_(physx.PxMat44* pvk_this, physx.PxVec4* pvk_col0, physx.PxVec4* pvk_col1, physx.PxVec4* pvk_col2, physx.PxVec4* pvk_col3);
        
        public PxMat44(physx.PxVec4* col0, physx.PxVec4* col1, physx.PxVec4* col2, physx.PxVec4* col3) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: physx::PxMat44, man: physx.PxMat44, stg: Blittable
            
            //PAR nat: physx::PxVec4*, man: physx.PxVec4*, stg: Value
            physx.PxVec4* pvk_in_col0 = col0;
            //PAR nat: physx::PxVec4*, man: physx.PxVec4*, stg: Value
            physx.PxVec4* pvk_in_col1 = col1;
            //PAR nat: physx::PxVec4*, man: physx.PxVec4*, stg: Value
            physx.PxVec4* pvk_in_col2 = col2;
            //PAR nat: physx::PxVec4*, man: physx.PxVec4*, stg: Value
            physx.PxVec4* pvk_in_col3 = col3;
            PxMat44 toInit;
            var pvk_in_this = &toInit;
            void_physx_PxMat44_PxMat44_Ctor_physx_PxVec4_physx_PxVec4_physx_PxVec4_physx_PxVec4_(pvk_in_this, pvk_in_col0, pvk_in_col1, pvk_in_col2, pvk_in_col3);
            this = toInit;
        }
        
        //DEBUG: BlittableCtorNode physx::PxMat44::PxMat44 - 85-91
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxMat44_PxMat44_Ctor_float_(physx.PxMat44* pvk_this, float pvk_r);
        
        public PxMat44(float r) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: physx::PxMat44, man: physx.PxMat44, stg: Blittable
            
            //PAR nat: float, man: float, stg: Value
            float pvk_in_r = r;
            PxMat44 toInit;
            var pvk_in_this = &toInit;
            void_physx_PxMat44_PxMat44_Ctor_float_(pvk_in_this, pvk_in_r);
            this = toInit;
        }
        
        //DEBUG: BlittableCtorNode physx::PxMat44::PxMat44 - 94-97
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxMat44_PxMat44_Ctor_physx_PxVec3_physx_PxVec3_physx_PxVec3_physx_PxVec3_(physx.PxMat44* pvk_this, physx.PxVec3* pvk_col0, physx.PxVec3* pvk_col1, physx.PxVec3* pvk_col2, physx.PxVec3* pvk_col3);
        
        public PxMat44(physx.PxVec3* col0, physx.PxVec3* col1, physx.PxVec3* col2, physx.PxVec3* col3) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: physx::PxMat44, man: physx.PxMat44, stg: Blittable
            
            //PAR nat: physx::PxVec3*, man: physx.PxVec3*, stg: Value
            physx.PxVec3* pvk_in_col0 = col0;
            //PAR nat: physx::PxVec3*, man: physx.PxVec3*, stg: Value
            physx.PxVec3* pvk_in_col1 = col1;
            //PAR nat: physx::PxVec3*, man: physx.PxVec3*, stg: Value
            physx.PxVec3* pvk_in_col2 = col2;
            //PAR nat: physx::PxVec3*, man: physx.PxVec3*, stg: Value
            physx.PxVec3* pvk_in_col3 = col3;
            PxMat44 toInit;
            var pvk_in_this = &toInit;
            void_physx_PxMat44_PxMat44_Ctor_physx_PxVec3_physx_PxVec3_physx_PxVec3_physx_PxVec3_(pvk_in_this, pvk_in_col0, pvk_in_col1, pvk_in_col2, pvk_in_col3);
            this = toInit;
        }
        
        //DEBUG: BlittableCtorNode physx::PxMat44::PxMat44 - 100-106
        //ERRORS OCCURED IN physx::PxMat44::PxMat44
        //////################################################################## FIXME
        //Unparsed type ( TODO ): float[]
        
        //DEBUG: BlittableCtorNode physx::PxMat44::PxMat44 - 109-136
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxMat44_PxMat44_Ctor_physx_PxQuat_(physx.PxMat44* pvk_this, physx.PxQuat* pvk_q);
        
        public PxMat44(physx.PxQuat* q) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: physx::PxMat44, man: physx.PxMat44, stg: Blittable
            
            //PAR nat: physx::PxQuat*, man: physx.PxQuat*, stg: Value
            physx.PxQuat* pvk_in_q = q;
            PxMat44 toInit;
            var pvk_in_this = &toInit;
            void_physx_PxMat44_PxMat44_Ctor_physx_PxQuat_(pvk_in_this, pvk_in_q);
            this = toInit;
        }
        
        //DEBUG: BlittableCtorNode physx::PxMat44::PxMat44 - 139-145
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxMat44_PxMat44_Ctor_physx_PxVec4_(physx.PxMat44* pvk_this, physx.PxVec4* pvk_diagonal);
        
        public PxMat44(physx.PxVec4* diagonal) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: physx::PxMat44, man: physx.PxMat44, stg: Blittable
            
            //PAR nat: physx::PxVec4*, man: physx.PxVec4*, stg: Value
            physx.PxVec4* pvk_in_diagonal = diagonal;
            PxMat44 toInit;
            var pvk_in_this = &toInit;
            void_physx_PxMat44_PxMat44_Ctor_physx_PxVec4_(pvk_in_this, pvk_in_diagonal);
            this = toInit;
        }
        
        //DEBUG: BlittableCtorNode physx::PxMat44::PxMat44 - 148-151
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxMat44_PxMat44_Ctor_physx_PxMat33_physx_PxVec3_(physx.PxMat44* pvk_this, physx.PxMat33* pvk_axes, physx.PxVec3* pvk_position);
        
        public PxMat44(physx.PxMat33* axes, physx.PxVec3* position) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: physx::PxMat44, man: physx.PxMat44, stg: Blittable
            
            //PAR nat: physx::PxMat33*, man: physx.PxMat33*, stg: Value
            physx.PxMat33* pvk_in_axes = axes;
            //PAR nat: physx::PxVec3*, man: physx.PxVec3*, stg: Value
            physx.PxVec3* pvk_in_position = position;
            PxMat44 toInit;
            var pvk_in_this = &toInit;
            void_physx_PxMat44_PxMat44_Ctor_physx_PxMat33_physx_PxVec3_(pvk_in_this, pvk_in_axes, pvk_in_position);
            this = toInit;
        }
        
        //DEBUG: BlittableCtorNode physx::PxMat44::PxMat44 - 153-156
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxMat44_PxMat44_Ctor_physx_PxTransform_(physx.PxMat44* pvk_this, physx.PxTransform* pvk_t);
        
        public PxMat44(physx.PxTransform* t) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: physx::PxMat44, man: physx.PxMat44, stg: Blittable
            
            //PAR nat: physx::PxTransform*, man: physx.PxTransform*, stg: Value
            physx.PxTransform* pvk_in_t = t;
            PxMat44 toInit;
            var pvk_in_this = &toInit;
            void_physx_PxMat44_PxMat44_Ctor_physx_PxTransform_(pvk_in_this, pvk_in_t);
            this = toInit;
        }
        
        //DEBUG: MethodNode physx::PxMat44::operator== - 161-164
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern bool bool_const_physx_PxMat44_operator_EqualEqual_physx_PxMat44_(physx.PxMat44* pvk_lhs, physx.PxMat44* pvk_m);
        
        public static bool operator==(physx.PxMat44 lhs, physx.PxMat44* m) {
            //RET nat: bool, man: bool, stg: Value, ret: True
            //PAR nat: physx::PxMat44, man: physx.PxMat44, stg: Blittable
            physx.PxMat44* pvk_in_lhs = &lhs;
            //PAR nat: physx::PxMat44*, man: physx.PxMat44*, stg: Value
            physx.PxMat44* pvk_in_m = m;
            return bool_const_physx_PxMat44_operator_EqualEqual_physx_PxMat44_(pvk_in_lhs, pvk_in_m);
        }
        public static bool operator!=(physx.PxMat44 lhs, physx.PxMat44* m){return !(lhs==m);} // Generated Matching Operator
        
        //DEBUG: BlittableCtorNode physx::PxMat44::PxMat44 - 167-170
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxMat44_PxMat44_Ctor_physx_PxMat44_(physx.PxMat44* pvk_this, physx.PxMat44* pvk_other);
        
        public PxMat44(physx.PxMat44* other) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: physx::PxMat44, man: physx.PxMat44, stg: Blittable
            
            //PAR nat: physx::PxMat44*, man: physx.PxMat44*, stg: Value
            physx.PxMat44* pvk_in_other = other;
            PxMat44 toInit;
            var pvk_in_this = &toInit;
            void_physx_PxMat44_PxMat44_Ctor_physx_PxMat44_(pvk_in_this, pvk_in_other);
            this = toInit;
        }
        
        //DEBUG: MethodNode physx::PxMat44::operator= - 173-180
        //ERRORS OCCURED IN physx::PxMat44::operator=
        //Unbindable Operator: Equal
        
        //DEBUG: MethodNode physx::PxMat44::getTranspose - 183-188
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void physx_PxMat44_const_physx_PxMat44_getTranspose(physx.PxMat44* RetRef, physx.PxMat44* pvk_this);
        
        public physx.PxMat44 getTranspose() {
            //RET nat: physx.PxMat44, man: physx.PxMat44, stg: Blittable, ret: False
            physx.PxMat44 RetRef;
            //PAR nat: physx::PxMat44, man: physx.PxMat44, stg: Blittable
            
            fixed (PxMat44* pvk_in_this = &this){
                physx_PxMat44_const_physx_PxMat44_getTranspose(&RetRef, pvk_in_this);
            }
            return RetRef;
        }
        
        //DEBUG: MethodNode physx::PxMat44::operator- - 191-194
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void physx_PxMat44_const_physx_PxMat44_operator_Minus(physx.PxMat44* RetRef, physx.PxMat44* pvk_lhs);
        
        public static physx.PxMat44 operator-(physx.PxMat44 lhs) {
            //RET nat: physx.PxMat44, man: physx.PxMat44, stg: Blittable, ret: False
            physx.PxMat44 RetRef;
            //PAR nat: physx::PxMat44, man: physx.PxMat44, stg: Blittable
            physx.PxMat44* pvk_in_lhs = &lhs;
            physx_PxMat44_const_physx_PxMat44_operator_Minus(&RetRef, pvk_in_lhs);
            return RetRef;
        }
        
        //DEBUG: MethodNode physx::PxMat44::operator+ - 197-201
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void physx_PxMat44_const_physx_PxMat44_operator_Plus_physx_PxMat44_(physx.PxMat44* RetRef, physx.PxMat44* pvk_lhs, physx.PxMat44* pvk_other);
        
        public static physx.PxMat44 operator+(physx.PxMat44 lhs, physx.PxMat44* other) {
            //RET nat: physx.PxMat44, man: physx.PxMat44, stg: Blittable, ret: False
            physx.PxMat44 RetRef;
            //PAR nat: physx::PxMat44, man: physx.PxMat44, stg: Blittable
            physx.PxMat44* pvk_in_lhs = &lhs;
            //PAR nat: physx::PxMat44*, man: physx.PxMat44*, stg: Value
            physx.PxMat44* pvk_in_other = other;
            physx_PxMat44_const_physx_PxMat44_operator_Plus_physx_PxMat44_(&RetRef, pvk_in_lhs, pvk_in_other);
            return RetRef;
        }
        
        //DEBUG: MethodNode physx::PxMat44::operator- - 204-208
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void physx_PxMat44_const_physx_PxMat44_operator_Minus_physx_PxMat44_(physx.PxMat44* RetRef, physx.PxMat44* pvk_lhs, physx.PxMat44* pvk_other);
        
        public static physx.PxMat44 operator-(physx.PxMat44 lhs, physx.PxMat44* other) {
            //RET nat: physx.PxMat44, man: physx.PxMat44, stg: Blittable, ret: False
            physx.PxMat44 RetRef;
            //PAR nat: physx::PxMat44, man: physx.PxMat44, stg: Blittable
            physx.PxMat44* pvk_in_lhs = &lhs;
            //PAR nat: physx::PxMat44*, man: physx.PxMat44*, stg: Value
            physx.PxMat44* pvk_in_other = other;
            physx_PxMat44_const_physx_PxMat44_operator_Minus_physx_PxMat44_(&RetRef, pvk_in_lhs, pvk_in_other);
            return RetRef;
        }
        
        //DEBUG: MethodNode physx::PxMat44::operator* - 211-214
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void physx_PxMat44_const_physx_PxMat44_operator_Star_float_(physx.PxMat44* RetRef, physx.PxMat44* pvk_lhs, float pvk_scalar);
        
        public static physx.PxMat44 operator*(physx.PxMat44 lhs, float scalar) {
            //RET nat: physx.PxMat44, man: physx.PxMat44, stg: Blittable, ret: False
            physx.PxMat44 RetRef;
            //PAR nat: physx::PxMat44, man: physx.PxMat44, stg: Blittable
            physx.PxMat44* pvk_in_lhs = &lhs;
            //PAR nat: float, man: float, stg: Value
            float pvk_in_scalar = scalar;
            physx_PxMat44_const_physx_PxMat44_operator_Star_float_(&RetRef, pvk_in_lhs, pvk_in_scalar);
            return RetRef;
        }
        
        //DEBUG: MethodNode physx::PxMat44::operator* - 219-225
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void physx_PxMat44_const_physx_PxMat44_operator_Star_physx_PxMat44_(physx.PxMat44* RetRef, physx.PxMat44* pvk_lhs, physx.PxMat44* pvk_other);
        
        public static physx.PxMat44 operator*(physx.PxMat44 lhs, physx.PxMat44* other) {
            //RET nat: physx.PxMat44, man: physx.PxMat44, stg: Blittable, ret: False
            physx.PxMat44 RetRef;
            //PAR nat: physx::PxMat44, man: physx.PxMat44, stg: Blittable
            physx.PxMat44* pvk_in_lhs = &lhs;
            //PAR nat: physx::PxMat44*, man: physx.PxMat44*, stg: Value
            physx.PxMat44* pvk_in_other = other;
            physx_PxMat44_const_physx_PxMat44_operator_Star_physx_PxMat44_(&RetRef, pvk_in_lhs, pvk_in_other);
            return RetRef;
        }
        
        //DEBUG: MethodNode physx::PxMat44::operator+= - 230-237
        //ERRORS OCCURED IN physx::PxMat44::operator+=
        //Unbindable Operator: PlusEqual
        
        //DEBUG: MethodNode physx::PxMat44::operator-= - 240-247
        //ERRORS OCCURED IN physx::PxMat44::operator-=
        //Unbindable Operator: MinusEqual
        
        //DEBUG: MethodNode physx::PxMat44::operator*= - 250-257
        //ERRORS OCCURED IN physx::PxMat44::operator*=
        //Unbindable Operator: StarEqual
        
        //DEBUG: MethodNode physx::PxMat44::operator*= - 260-264
        //ERRORS OCCURED IN physx::PxMat44::operator*=
        //Unbindable Operator: StarEqual
        
        //DEBUG: MethodNode physx::PxMat44::operator() - 267-270
        //ERRORS OCCURED IN physx::PxMat44::operator()
        //Unbindable Operator: Call
        
        //DEBUG: MethodNode physx::PxMat44::operator() - 273-276
        //ERRORS OCCURED IN physx::PxMat44::operator()
        //Unbindable Operator: Call
        
        //DEBUG: MethodNode physx::PxMat44::transform - 279-282
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void physx_PxVec4_const_physx_PxMat44_transform_physx_PxVec4_(physx.PxVec4* RetRef, physx.PxMat44* pvk_this, physx.PxVec4* pvk_other);
        
        public physx.PxVec4 transform(physx.PxVec4* other) {
            //RET nat: physx.PxVec4, man: physx.PxVec4, stg: Blittable, ret: False
            physx.PxVec4 RetRef;
            //PAR nat: physx::PxMat44, man: physx.PxMat44, stg: Blittable
            
            //PAR nat: physx::PxVec4*, man: physx.PxVec4*, stg: Value
            physx.PxVec4* pvk_in_other = other;
            fixed (PxMat44* pvk_in_this = &this){
                physx_PxVec4_const_physx_PxMat44_transform_physx_PxVec4_(&RetRef, pvk_in_this, pvk_in_other);
            }
            return RetRef;
        }
        
        //DEBUG: MethodNode physx::PxMat44::transform - 285-288
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void physx_PxVec3_const_physx_PxMat44_transform_physx_PxVec3_(physx.PxVec3* RetRef, physx.PxMat44* pvk_this, physx.PxVec3* pvk_other);
        
        public physx.PxVec3 transform(physx.PxVec3* other) {
            //RET nat: physx.PxVec3, man: physx.PxVec3, stg: Blittable, ret: False
            physx.PxVec3 RetRef;
            //PAR nat: physx::PxMat44, man: physx.PxMat44, stg: Blittable
            
            //PAR nat: physx::PxVec3*, man: physx.PxVec3*, stg: Value
            physx.PxVec3* pvk_in_other = other;
            fixed (PxMat44* pvk_in_this = &this){
                physx_PxVec3_const_physx_PxMat44_transform_physx_PxVec3_(&RetRef, pvk_in_this, pvk_in_other);
            }
            return RetRef;
        }
        
        //DEBUG: MethodNode physx::PxMat44::rotate - 291-294
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void physx_PxVec4_const_physx_PxMat44_rotate_physx_PxVec4_(physx.PxVec4* RetRef, physx.PxMat44* pvk_this, physx.PxVec4* pvk_other);
        
        public physx.PxVec4 rotate(physx.PxVec4* other) {
            //RET nat: physx.PxVec4, man: physx.PxVec4, stg: Blittable, ret: False
            physx.PxVec4 RetRef;
            //PAR nat: physx::PxMat44, man: physx.PxMat44, stg: Blittable
            
            //PAR nat: physx::PxVec4*, man: physx.PxVec4*, stg: Value
            physx.PxVec4* pvk_in_other = other;
            fixed (PxMat44* pvk_in_this = &this){
                physx_PxVec4_const_physx_PxMat44_rotate_physx_PxVec4_(&RetRef, pvk_in_this, pvk_in_other);
            }
            return RetRef;
        }
        
        //DEBUG: MethodNode physx::PxMat44::rotate - 297-300
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void physx_PxVec3_const_physx_PxMat44_rotate_physx_PxVec3_(physx.PxVec3* RetRef, physx.PxMat44* pvk_this, physx.PxVec3* pvk_other);
        
        public physx.PxVec3 rotate(physx.PxVec3* other) {
            //RET nat: physx.PxVec3, man: physx.PxVec3, stg: Blittable, ret: False
            physx.PxVec3 RetRef;
            //PAR nat: physx::PxMat44, man: physx.PxMat44, stg: Blittable
            
            //PAR nat: physx::PxVec3*, man: physx.PxVec3*, stg: Value
            physx.PxVec3* pvk_in_other = other;
            fixed (PxMat44* pvk_in_this = &this){
                physx_PxVec3_const_physx_PxMat44_rotate_physx_PxVec3_(&RetRef, pvk_in_this, pvk_in_other);
            }
            return RetRef;
        }
        
        //DEBUG: MethodNode physx::PxMat44::getBasis - 302-306
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void physx_PxVec3_const_physx_PxMat44_getBasis_int_(physx.PxVec3* RetRef, physx.PxMat44* pvk_this, int pvk_num);
        
        public physx.PxVec3 getBasis(int num) {
            //RET nat: physx.PxVec3, man: physx.PxVec3, stg: Blittable, ret: False
            physx.PxVec3 RetRef;
            //PAR nat: physx::PxMat44, man: physx.PxMat44, stg: Blittable
            
            //PAR nat: int, man: int, stg: Value
            int pvk_in_num = num;
            fixed (PxMat44* pvk_in_this = &this){
                physx_PxVec3_const_physx_PxMat44_getBasis_int_(&RetRef, pvk_in_this, pvk_in_num);
            }
            return RetRef;
        }
        
        //DEBUG: MethodNode physx::PxMat44::getPosition - 308-311
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void physx_PxVec3_const_physx_PxMat44_getPosition(physx.PxVec3* RetRef, physx.PxMat44* pvk_this);
        
        public physx.PxVec3 getPosition() {
            //RET nat: physx.PxVec3, man: physx.PxVec3, stg: Blittable, ret: False
            physx.PxVec3 RetRef;
            //PAR nat: physx::PxMat44, man: physx.PxMat44, stg: Blittable
            
            fixed (PxMat44* pvk_in_this = &this){
                physx_PxVec3_const_physx_PxMat44_getPosition(&RetRef, pvk_in_this);
            }
            return RetRef;
        }
        
        //DEBUG: MethodNode physx::PxMat44::setPosition - 313-318
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxMat44_setPosition_physx_PxVec3_(physx.PxMat44* pvk_this, physx.PxVec3* pvk_position);
        
        public void setPosition(physx.PxVec3* position) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: physx::PxMat44, man: physx.PxMat44, stg: Blittable
            
            //PAR nat: physx::PxVec3*, man: physx.PxVec3*, stg: Value
            physx.PxVec3* pvk_in_position = position;
            fixed (PxMat44* pvk_in_this = &this){
                void_physx_PxMat44_setPosition_physx_PxVec3_(pvk_in_this, pvk_in_position);
            }
        }
        
        //DEBUG: MethodNode physx::PxMat44::front - 320-323
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern float* float_const_physx_PxMat44_front(physx.PxMat44* pvk_this);
        
        public float* front() {
            //RET nat: float*, man: float*, stg: Value, ret: True
            //PAR nat: physx::PxMat44, man: physx.PxMat44, stg: Blittable
            
            fixed (PxMat44* pvk_in_this = &this){
                return float_const_physx_PxMat44_front(pvk_in_this);
            }
        }
        
        //DEBUG: MethodNode physx::PxMat44::operator[] - 325-328
        //ERRORS OCCURED IN physx::PxMat44::operator[]
        //Unbindable Operator: Subscript
        
        //DEBUG: MethodNode physx::PxMat44::operator[] - 329-332
        //ERRORS OCCURED IN physx::PxMat44::operator[]
        //Unbindable Operator: Subscript
        
        //DEBUG: MethodNode physx::PxMat44::scale - 334-340
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxMat44_scale_physx_PxVec4_(physx.PxMat44* pvk_this, physx.PxVec4* pvk_p);
        
        public void scale(physx.PxVec4* p) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: physx::PxMat44, man: physx.PxMat44, stg: Blittable
            
            //PAR nat: physx::PxVec4*, man: physx.PxVec4*, stg: Value
            physx.PxVec4* pvk_in_p = p;
            fixed (PxMat44* pvk_in_this = &this){
                void_physx_PxMat44_scale_physx_PxVec4_(pvk_in_this, pvk_in_p);
            }
        }
        
        //DEBUG: MethodNode physx::PxMat44::inverseRT - 342-348
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void physx_PxMat44_const_physx_PxMat44_inverseRT(physx.PxMat44* RetRef, physx.PxMat44* pvk_this);
        
        public physx.PxMat44 inverseRT() {
            //RET nat: physx.PxMat44, man: physx.PxMat44, stg: Blittable, ret: False
            physx.PxMat44 RetRef;
            //PAR nat: physx::PxMat44, man: physx.PxMat44, stg: Blittable
            
            fixed (PxMat44* pvk_in_this = &this){
                physx_PxMat44_const_physx_PxMat44_inverseRT(&RetRef, pvk_in_this);
            }
            return RetRef;
        }
        
        //DEBUG: MethodNode physx::PxMat44::isFinite - 350-353
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern bool bool_const_physx_PxMat44_isFinite(physx.PxMat44* pvk_this);
        
        public bool isFinite() {
            //RET nat: bool, man: bool, stg: Value, ret: True
            //PAR nat: physx::PxMat44, man: physx.PxMat44, stg: Blittable
            
            fixed (PxMat44* pvk_in_this = &this){
                return bool_const_physx_PxMat44_isFinite(pvk_in_this);
            }
        }
        
        //DEBUG: MethodNode physx::PxMat44::~PxMat44 - 54
        //ERRORS OCCURED IN physx::PxMat44::~PxMat44
        //Implicit Function/Method
        //Destructor
        //DEBUG: ExternalOpNode physx::operator* - 216
        //ERRORS OCCURED IN physx::operator*
        //Signature of physx::operator* - PxMat44 operator*(float, const PxMat44&) forbidden in configuration
    }
    
}
