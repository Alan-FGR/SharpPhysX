// Generated by minBND 5.1.78.10 - Â© github.com/Alan-FGR
//Unit PxMemory
using System;
using System.Runtime.InteropServices;

public static unsafe partial class physx {
    [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern IntPtr IntPtr_physx_PxMemZero_IntPtr_uint_(IntPtr pvk_dest, uint pvk_count);
    
    public static IntPtr PxMemZero(IntPtr dest, uint count) {
        IntPtr pvk_in_dest = dest;
        uint pvk_in_count = count;
        return IntPtr_physx_PxMemZero_IntPtr_uint_(pvk_in_dest, pvk_in_count);
    }
    
    [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern IntPtr IntPtr_physx_PxMemSet_IntPtr_int_uint_(IntPtr pvk_dest, int pvk_c, uint pvk_count);
    
    public static IntPtr PxMemSet(IntPtr dest, int c, uint count) {
        IntPtr pvk_in_dest = dest;
        int pvk_in_c = c;
        uint pvk_in_count = count;
        return IntPtr_physx_PxMemSet_IntPtr_int_uint_(pvk_in_dest, pvk_in_c, pvk_in_count);
    }
    
    [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern IntPtr IntPtr_physx_PxMemCopy_IntPtr_IntPtr_uint_(IntPtr pvk_dest, IntPtr pvk_src, uint pvk_count);
    
    public static IntPtr PxMemCopy(IntPtr dest, IntPtr src, uint count) {
        IntPtr pvk_in_dest = dest;
        IntPtr pvk_in_src = src;
        uint pvk_in_count = count;
        return IntPtr_physx_PxMemCopy_IntPtr_IntPtr_uint_(pvk_in_dest, pvk_in_src, pvk_in_count);
    }
    
    [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern IntPtr IntPtr_physx_PxMemMove_IntPtr_IntPtr_uint_(IntPtr pvk_dest, IntPtr pvk_src, uint pvk_count);
    
    public static IntPtr PxMemMove(IntPtr dest, IntPtr src, uint count) {
        IntPtr pvk_in_dest = dest;
        IntPtr pvk_in_src = src;
        uint pvk_in_count = count;
        return IntPtr_physx_PxMemMove_IntPtr_IntPtr_uint_(pvk_in_dest, pvk_in_src, pvk_in_count);
    }
    
}
