// Generated by minBND 5.1.91.1 - Â© github.com/Alan-FGR
using System;
using System.Runtime.InteropServices;
public static unsafe partial class minBND_pinvokes {

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.Px1DConstraintFlagsPtr Px1DConstraintFlagsPtr_operator_Ptr_Pipe_Px1DConstraintFlagPtr_Type_Px1DConstraintFlagPtr_Type_(physx.Px1DConstraintFlagPtr.Type pvk_a, physx.Px1DConstraintFlagPtr.Type pvk_b);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.Px1DConstraintFlagsPtr Px1DConstraintFlagsPtr_operator_Ptr_Amp_Px1DConstraintFlagPtr_Type_Px1DConstraintFlagPtr_Type_(physx.Px1DConstraintFlagPtr.Type pvk_a, physx.Px1DConstraintFlagPtr.Type pvk_b);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.Px1DConstraintFlagsPtr Px1DConstraintFlagsPtr_operator_Ptr_Tilde_Px1DConstraintFlagPtr_Type_(physx.Px1DConstraintFlagPtr.Type pvk_a);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void Freer_physx_Px1DConstraintFlagPtr(physx.Px1DConstraintFlagPtr ptr);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.Px1DConstraintFlagPtr Ctor_Px1DConstraintFlagPtr_();

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.Px1DConstraintPtr.physx_Px1DConstraint_ANONYMOUS_unionPtr.SpringModifiersPtr Newer_physx_Px1DConstraintPtr_physx_Px1DConstraint_ANONYMOUS_unionPtr_SpringModifiersPtr();
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void Freer_physx_Px1DConstraintPtr_physx_Px1DConstraint_ANONYMOUS_unionPtr_SpringModifiersPtr(physx.Px1DConstraintPtr.physx_Px1DConstraint_ANONYMOUS_unionPtr.SpringModifiersPtr ptr);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern float SpringModifiersPtr_GET_stiffness(physx.Px1DConstraintPtr.physx_Px1DConstraint_ANONYMOUS_unionPtr.SpringModifiersPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void SpringModifiersPtr_SET_stiffness(physx.Px1DConstraintPtr.physx_Px1DConstraint_ANONYMOUS_unionPtr.SpringModifiersPtr cls, float value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern float SpringModifiersPtr_GET_damping(physx.Px1DConstraintPtr.physx_Px1DConstraint_ANONYMOUS_unionPtr.SpringModifiersPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void SpringModifiersPtr_SET_damping(physx.Px1DConstraintPtr.physx_Px1DConstraint_ANONYMOUS_unionPtr.SpringModifiersPtr cls, float value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.Px1DConstraintPtr.physx_Px1DConstraint_ANONYMOUS_unionPtr.RestitutionModifiersPtr Newer_physx_Px1DConstraintPtr_physx_Px1DConstraint_ANONYMOUS_unionPtr_RestitutionModifiersPtr();
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void Freer_physx_Px1DConstraintPtr_physx_Px1DConstraint_ANONYMOUS_unionPtr_RestitutionModifiersPtr(physx.Px1DConstraintPtr.physx_Px1DConstraint_ANONYMOUS_unionPtr.RestitutionModifiersPtr ptr);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern float RestitutionModifiersPtr_GET_restitution(physx.Px1DConstraintPtr.physx_Px1DConstraint_ANONYMOUS_unionPtr.RestitutionModifiersPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void RestitutionModifiersPtr_SET_restitution(physx.Px1DConstraintPtr.physx_Px1DConstraint_ANONYMOUS_unionPtr.RestitutionModifiersPtr cls, float value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern float RestitutionModifiersPtr_GET_velocityThreshold(physx.Px1DConstraintPtr.physx_Px1DConstraint_ANONYMOUS_unionPtr.RestitutionModifiersPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void RestitutionModifiersPtr_SET_velocityThreshold(physx.Px1DConstraintPtr.physx_Px1DConstraint_ANONYMOUS_unionPtr.RestitutionModifiersPtr cls, float value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.Px1DConstraintPtr.physx_Px1DConstraint_ANONYMOUS_unionPtr Newer_physx_Px1DConstraintPtr_physx_Px1DConstraint_ANONYMOUS_unionPtr();
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void Freer_physx_Px1DConstraintPtr_physx_Px1DConstraint_ANONYMOUS_unionPtr(physx.Px1DConstraintPtr.physx_Px1DConstraint_ANONYMOUS_unionPtr ptr);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.Px1DConstraintPtr.physx_Px1DConstraint_ANONYMOUS_unionPtr.SpringModifiersPtr physx_Px1DConstraint_ANONYMOUS_unionPtr_GET_spring(physx.Px1DConstraintPtr.physx_Px1DConstraint_ANONYMOUS_unionPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void physx_Px1DConstraint_ANONYMOUS_unionPtr_SET_spring(physx.Px1DConstraintPtr.physx_Px1DConstraint_ANONYMOUS_unionPtr cls, physx.Px1DConstraintPtr.physx_Px1DConstraint_ANONYMOUS_unionPtr.SpringModifiersPtr value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.Px1DConstraintPtr.physx_Px1DConstraint_ANONYMOUS_unionPtr.RestitutionModifiersPtr physx_Px1DConstraint_ANONYMOUS_unionPtr_GET_bounce(physx.Px1DConstraintPtr.physx_Px1DConstraint_ANONYMOUS_unionPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void physx_Px1DConstraint_ANONYMOUS_unionPtr_SET_bounce(physx.Px1DConstraintPtr.physx_Px1DConstraint_ANONYMOUS_unionPtr cls, physx.Px1DConstraintPtr.physx_Px1DConstraint_ANONYMOUS_unionPtr.RestitutionModifiersPtr value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.Px1DConstraintPtr Newer_physx_Px1DConstraintPtr();
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void Freer_physx_Px1DConstraintPtr(physx.Px1DConstraintPtr ptr);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void Px1DConstraintPtr_GET_linear0(physx.Px1DConstraintPtr cls, physx.PxVec3* GetRetRef);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void Px1DConstraintPtr_SET_linear0(physx.Px1DConstraintPtr cls, physx.PxVec3 value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern float Px1DConstraintPtr_GET_geometricError(physx.Px1DConstraintPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void Px1DConstraintPtr_SET_geometricError(physx.Px1DConstraintPtr cls, float value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void Px1DConstraintPtr_GET_angular0(physx.Px1DConstraintPtr cls, physx.PxVec3* GetRetRef);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void Px1DConstraintPtr_SET_angular0(physx.Px1DConstraintPtr cls, physx.PxVec3 value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern float Px1DConstraintPtr_GET_velocityTarget(physx.Px1DConstraintPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void Px1DConstraintPtr_SET_velocityTarget(physx.Px1DConstraintPtr cls, float value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void Px1DConstraintPtr_GET_linear1(physx.Px1DConstraintPtr cls, physx.PxVec3* GetRetRef);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void Px1DConstraintPtr_SET_linear1(physx.Px1DConstraintPtr cls, physx.PxVec3 value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern float Px1DConstraintPtr_GET_minImpulse(physx.Px1DConstraintPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void Px1DConstraintPtr_SET_minImpulse(physx.Px1DConstraintPtr cls, float value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void Px1DConstraintPtr_GET_angular1(physx.Px1DConstraintPtr cls, physx.PxVec3* GetRetRef);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void Px1DConstraintPtr_SET_angular1(physx.Px1DConstraintPtr cls, physx.PxVec3 value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern float Px1DConstraintPtr_GET_maxImpulse(physx.Px1DConstraintPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void Px1DConstraintPtr_SET_maxImpulse(physx.Px1DConstraintPtr cls, float value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.Px1DConstraintPtr.physx_Px1DConstraint_ANONYMOUS_unionPtr Px1DConstraintPtr_GET_mods(physx.Px1DConstraintPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void Px1DConstraintPtr_SET_mods(physx.Px1DConstraintPtr cls, physx.Px1DConstraintPtr.physx_Px1DConstraint_ANONYMOUS_unionPtr value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern float Px1DConstraintPtr_GET_forInternalUse(physx.Px1DConstraintPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void Px1DConstraintPtr_SET_forInternalUse(physx.Px1DConstraintPtr cls, float value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern ushort Px1DConstraintPtr_GET_flags(physx.Px1DConstraintPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void Px1DConstraintPtr_SET_flags(physx.Px1DConstraintPtr cls, ushort value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern ushort Px1DConstraintPtr_GET_solveHint(physx.Px1DConstraintPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void Px1DConstraintPtr_SET_solveHint(physx.Px1DConstraintPtr cls, ushort value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void Freer_physx_PxConstraintInvMassScalePtr(physx.PxConstraintInvMassScalePtr ptr);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxConstraintInvMassScalePtr Ctor_PxConstraintInvMassScalePtr_();

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxConstraintInvMassScalePtr Ctor_PxConstraintInvMassScalePtr_float_float_float_float(float pvk_lin0, float pvk_ang0, float pvk_lin1, float pvk_ang1);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern float PxConstraintInvMassScalePtr_GET_linear0(physx.PxConstraintInvMassScalePtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxConstraintInvMassScalePtr_SET_linear0(physx.PxConstraintInvMassScalePtr cls, float value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern float PxConstraintInvMassScalePtr_GET_angular0(physx.PxConstraintInvMassScalePtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxConstraintInvMassScalePtr_SET_angular0(physx.PxConstraintInvMassScalePtr cls, float value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern float PxConstraintInvMassScalePtr_GET_linear1(physx.PxConstraintInvMassScalePtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxConstraintInvMassScalePtr_SET_linear1(physx.PxConstraintInvMassScalePtr cls, float value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern float PxConstraintInvMassScalePtr_GET_angular1(physx.PxConstraintInvMassScalePtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxConstraintInvMassScalePtr_SET_angular1(physx.PxConstraintInvMassScalePtr cls, float value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void void_PxConstraintVisualizerPtr_visualizeJointFramesPtr_PxTransform_PxTransform_(physx.PxConstraintVisualizerPtr pvk_this, physx.PxTransform* pvk_parent, physx.PxTransform* pvk_child);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void void_PxConstraintVisualizerPtr_visualizeLinearLimitPtr_PxTransform_PxTransform_float_bool_(physx.PxConstraintVisualizerPtr pvk_this, physx.PxTransform* pvk_t0, physx.PxTransform* pvk_t1, float pvk_value, bool pvk_active);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void void_PxConstraintVisualizerPtr_visualizeAngularLimitPtr_PxTransform_float_float_bool_(physx.PxConstraintVisualizerPtr pvk_this, physx.PxTransform* pvk_t0, float pvk_lower, float pvk_upper, bool pvk_active);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void void_PxConstraintVisualizerPtr_visualizeLimitConePtr_PxTransform_float_float_bool_(physx.PxConstraintVisualizerPtr pvk_this, physx.PxTransform* pvk_t, float pvk_tanQSwingY, float pvk_tanQSwingZ, bool pvk_active);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void void_PxConstraintVisualizerPtr_visualizeDoubleConePtr_PxTransform_float_bool_(physx.PxConstraintVisualizerPtr pvk_this, physx.PxTransform* pvk_t, float pvk_angle, bool pvk_active);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void void_PxConstraintVisualizerPtr_visualizeLinePtr_PxVec3_PxVec3_uint_(physx.PxConstraintVisualizerPtr pvk_this, physx.PxVec3* pvk_p0, physx.PxVec3* pvk_p1, uint pvk_color);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern IntPtr IntPtr_PxConstraintConnectorPtr_prepareDataPtr(physx.PxConstraintConnectorPtr pvk_this);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void void_PxConstraintConnectorPtr_onConstraintReleasePtr(physx.PxConstraintConnectorPtr pvk_this);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void void_PxConstraintConnectorPtr_onComShiftPtr_uint_(physx.PxConstraintConnectorPtr pvk_this, uint pvk_actor);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void void_PxConstraintConnectorPtr_onOriginShiftPtr_PxVec3_(physx.PxConstraintConnectorPtr pvk_this, physx.PxVec3* pvk_shift);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern IntPtr IntPtr_PxConstraintConnectorPtr_getExternalReferencePtr_uint_(physx.PxConstraintConnectorPtr pvk_this, uint* pvk_typeID);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxBasePtr PxBasePtr_PxConstraintConnectorPtr_getSerializablePtr(physx.PxConstraintConnectorPtr pvk_this);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern PxConstraintSolverPrep PxConstraintSolverPrep_const_PxConstraintConnectorPtr_getPrepPtr(physx.PxConstraintConnectorPtr pvk_this);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern IntPtr IntPtr_const_PxConstraintConnectorPtr_getConstantBlockPtr(physx.PxConstraintConnectorPtr pvk_this);

}
