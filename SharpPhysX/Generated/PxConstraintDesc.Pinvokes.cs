// Generated by minBND 5.1.90.51 - Â© github.com/Alan-FGR
using System;
using System.Runtime.InteropServices;
public static unsafe partial class minBND_pinvokes {

//DBG: DeclTree PvdDataStream physx::pvdsdk::PvdDataStream L45
//Skipping DeclTree PvdDataStream physx::pvdsdk::PvdDataStream L45...

//DBG: FunctionNode physx::operator| L85
//physx::operator| static physx.Px1DConstraintFlagsPtr OpPipe_New(physx.Px1DConstraintFlagPtr.Type a, physx.Px1DConstraintFlagPtr.Type b) will also be bound as member operator
//RET nat: Px1DConstraintFlagsPtr, man: physx.Px1DConstraintFlagsPtr, ret: True, kind: PtrStruct
//PAR nat: physx::Px1DConstraintFlag::Type, man: physx.Px1DConstraintFlagPtr.Type, kind: Value
//PAR nat: physx::Px1DConstraintFlag::Type, man: physx.Px1DConstraintFlagPtr.Type, kind: Value
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.Px1DConstraintFlagsPtr Px1DConstraintFlagsPtr_operator_Ptr_Pipe_Px1DConstraintFlagPtr_Type_Px1DConstraintFlagPtr_Type_(physx.Px1DConstraintFlagPtr.Type pvk_a, physx.Px1DConstraintFlagPtr.Type pvk_b);

//DBG: FunctionNode physx::operator& L85
//physx::operator& static physx.Px1DConstraintFlagsPtr OpAnd_New(physx.Px1DConstraintFlagPtr.Type a, physx.Px1DConstraintFlagPtr.Type b) will also be bound as member operator
//RET nat: Px1DConstraintFlagsPtr, man: physx.Px1DConstraintFlagsPtr, ret: True, kind: PtrStruct
//PAR nat: physx::Px1DConstraintFlag::Type, man: physx.Px1DConstraintFlagPtr.Type, kind: Value
//PAR nat: physx::Px1DConstraintFlag::Type, man: physx.Px1DConstraintFlagPtr.Type, kind: Value
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.Px1DConstraintFlagsPtr Px1DConstraintFlagsPtr_operator_Ptr_Amp_Px1DConstraintFlagPtr_Type_Px1DConstraintFlagPtr_Type_(physx.Px1DConstraintFlagPtr.Type pvk_a, physx.Px1DConstraintFlagPtr.Type pvk_b);

//DBG: FunctionNode physx::operator~ L85
//physx::operator~ static physx.Px1DConstraintFlagsPtr OpTilde_New(physx.Px1DConstraintFlagPtr.Type a) will also be bound as member operator
//RET nat: Px1DConstraintFlagsPtr, man: physx.Px1DConstraintFlagsPtr, ret: True, kind: PtrStruct
//PAR nat: physx::Px1DConstraintFlag::Type, man: physx.Px1DConstraintFlagPtr.Type, kind: Value
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.Px1DConstraintFlagsPtr Px1DConstraintFlagsPtr_operator_Ptr_Tilde_Px1DConstraintFlagPtr_Type_(physx.Px1DConstraintFlagPtr.Type pvk_a);

//DBG: DeclTree PxRenderBuffer physx::PxRenderBuffer L59
//Skipping DeclTree PxRenderBuffer physx::PxRenderBuffer L59...
//Subclasses using this: 0

//DBG: ClassNode Px1DConstraintFlag physx::Px1DConstraintFlag L67-82

//DBG: NewerFreerNode Px1DConstraintFlag physx::Px1DConstraintFlag L67-82
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void Freer_physx_Px1DConstraintFlagPtr(physx.Px1DConstraintFlagPtr ptr);

//DBG: PtrWrapperCtorNode physx::Px1DConstraintFlag::Px1DConstraintFlag L69
//RET nat: Px1DConstraintFlagPtr, man: physx.Px1DConstraintFlagPtr, ret: True, kind: PtrStruct
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.Px1DConstraintFlagPtr Ctor_Px1DConstraintFlagPtr_();

//DBG: PtrWrapperCtorNode physx::Px1DConstraintFlag::Px1DConstraintFlag L67
//ERRORS in PtrWrapperCtorNode: Skipping Implicit PtrWrapperCtorNode physx::Px1DConstraintFlag::Px1DConstraintFlag L67

//DBG: PtrWrapperCtorNode physx::Px1DConstraintFlag::Px1DConstraintFlag L67
//ERRORS in PtrWrapperCtorNode: Skipping Implicit PtrWrapperCtorNode physx::Px1DConstraintFlag::Px1DConstraintFlag L67

//DBG: MethodNode physx::Px1DConstraintFlag::operator= L67
//ERRORS in MethodNode: Skipping Implicit MethodNode physx::Px1DConstraintFlag::operator= L67

//DBG: MethodNode physx::Px1DConstraintFlag::operator= L67
//ERRORS in MethodNode: Skipping Implicit MethodNode physx::Px1DConstraintFlag::operator= L67

//DBG: MethodNode physx::Px1DConstraintFlag::~Px1DConstraintFlag L67
//ERRORS in MethodNode: Skipping Implicit MethodNode physx::Px1DConstraintFlag::~Px1DConstraintFlag L67, Destructor

//Operators

//DBG: ClassNode PxConstraintSolveHint physx::PxConstraintSolveHint L90-104
//Subclasses using this: 0

//DBG: ClassNode Px1DConstraint physx::Px1DConstraint L141-170
//Subclasses using this: 0

//DBG: ClassNode  physx::Px1DConstraint L153-165
//Subclasses using this: 0

//DBG: ClassNode SpringModifiers physx::Px1DConstraint::SpringModifiers L155-159

//DBG: NewerFreerNode SpringModifiers physx::Px1DConstraint::SpringModifiers L155-159
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.Px1DConstraintPtr.physx_Px1DConstraint_ANONYMOUS_unionPtr.SpringModifiersPtr Newer_physx_Px1DConstraintPtr_physx_Px1DConstraint_ANONYMOUS_unionPtr_SpringModifiersPtr();
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void Freer_physx_Px1DConstraintPtr_physx_Px1DConstraint_ANONYMOUS_unionPtr_SpringModifiersPtr(physx.Px1DConstraintPtr.physx_Px1DConstraint_ANONYMOUS_unionPtr.SpringModifiersPtr ptr);

//DBG: PtrWrapperCtorNode physx::Px1DConstraint::SpringModifiers::SpringModifiers L155
//ERRORS in PtrWrapperCtorNode: Skipping Implicit PtrWrapperCtorNode physx::Px1DConstraint::SpringModifiers::SpringModifiers L155

//DBG: PtrWrapperCtorNode physx::Px1DConstraint::SpringModifiers::SpringModifiers L155
//ERRORS in PtrWrapperCtorNode: Skipping Implicit PtrWrapperCtorNode physx::Px1DConstraint::SpringModifiers::SpringModifiers L155

//DBG: PtrWrapperCtorNode physx::Px1DConstraint::SpringModifiers::SpringModifiers L155
//ERRORS in PtrWrapperCtorNode: Skipping Implicit PtrWrapperCtorNode physx::Px1DConstraint::SpringModifiers::SpringModifiers L155

//DBG: Field: stiffness - 157-157
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern float SpringModifiersPtr_GET_stiffness(physx.Px1DConstraintPtr.physx_Px1DConstraint_ANONYMOUS_unionPtr.SpringModifiersPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void SpringModifiersPtr_SET_stiffness(physx.Px1DConstraintPtr.physx_Px1DConstraint_ANONYMOUS_unionPtr.SpringModifiersPtr cls, float value);

//DBG: Field: damping - 158-158
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern float SpringModifiersPtr_GET_damping(physx.Px1DConstraintPtr.physx_Px1DConstraint_ANONYMOUS_unionPtr.SpringModifiersPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void SpringModifiersPtr_SET_damping(physx.Px1DConstraintPtr.physx_Px1DConstraint_ANONYMOUS_unionPtr.SpringModifiersPtr cls, float value);

//DBG: MethodNode physx::Px1DConstraint::SpringModifiers::~SpringModifiers L155
//ERRORS in MethodNode: Skipping Implicit MethodNode physx::Px1DConstraint::SpringModifiers::~SpringModifiers L155, Destructor

//DBG: MethodNode physx::Px1DConstraint::SpringModifiers::operator= L155
//ERRORS in MethodNode: Skipping Implicit MethodNode physx::Px1DConstraint::SpringModifiers::operator= L155

//DBG: MethodNode physx::Px1DConstraint::SpringModifiers::operator= L155
//ERRORS in MethodNode: Skipping Implicit MethodNode physx::Px1DConstraint::SpringModifiers::operator= L155

//Operators
//Subclasses using this: 0

//DBG: ClassNode RestitutionModifiers physx::Px1DConstraint::RestitutionModifiers L160-164

//DBG: NewerFreerNode RestitutionModifiers physx::Px1DConstraint::RestitutionModifiers L160-164
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.Px1DConstraintPtr.physx_Px1DConstraint_ANONYMOUS_unionPtr.RestitutionModifiersPtr Newer_physx_Px1DConstraintPtr_physx_Px1DConstraint_ANONYMOUS_unionPtr_RestitutionModifiersPtr();
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void Freer_physx_Px1DConstraintPtr_physx_Px1DConstraint_ANONYMOUS_unionPtr_RestitutionModifiersPtr(physx.Px1DConstraintPtr.physx_Px1DConstraint_ANONYMOUS_unionPtr.RestitutionModifiersPtr ptr);

//DBG: PtrWrapperCtorNode physx::Px1DConstraint::RestitutionModifiers::RestitutionModifiers L160
//ERRORS in PtrWrapperCtorNode: Skipping Implicit PtrWrapperCtorNode physx::Px1DConstraint::RestitutionModifiers::RestitutionModifiers L160

//DBG: PtrWrapperCtorNode physx::Px1DConstraint::RestitutionModifiers::RestitutionModifiers L160
//ERRORS in PtrWrapperCtorNode: Skipping Implicit PtrWrapperCtorNode physx::Px1DConstraint::RestitutionModifiers::RestitutionModifiers L160

//DBG: PtrWrapperCtorNode physx::Px1DConstraint::RestitutionModifiers::RestitutionModifiers L160
//ERRORS in PtrWrapperCtorNode: Skipping Implicit PtrWrapperCtorNode physx::Px1DConstraint::RestitutionModifiers::RestitutionModifiers L160

//DBG: Field: restitution - 162-162
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern float RestitutionModifiersPtr_GET_restitution(physx.Px1DConstraintPtr.physx_Px1DConstraint_ANONYMOUS_unionPtr.RestitutionModifiersPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void RestitutionModifiersPtr_SET_restitution(physx.Px1DConstraintPtr.physx_Px1DConstraint_ANONYMOUS_unionPtr.RestitutionModifiersPtr cls, float value);

//DBG: Field: velocityThreshold - 163-163
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern float RestitutionModifiersPtr_GET_velocityThreshold(physx.Px1DConstraintPtr.physx_Px1DConstraint_ANONYMOUS_unionPtr.RestitutionModifiersPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void RestitutionModifiersPtr_SET_velocityThreshold(physx.Px1DConstraintPtr.physx_Px1DConstraint_ANONYMOUS_unionPtr.RestitutionModifiersPtr cls, float value);

//DBG: MethodNode physx::Px1DConstraint::RestitutionModifiers::~RestitutionModifiers L160
//ERRORS in MethodNode: Skipping Implicit MethodNode physx::Px1DConstraint::RestitutionModifiers::~RestitutionModifiers L160, Destructor

//DBG: MethodNode physx::Px1DConstraint::RestitutionModifiers::operator= L160
//ERRORS in MethodNode: Skipping Implicit MethodNode physx::Px1DConstraint::RestitutionModifiers::operator= L160

//DBG: MethodNode physx::Px1DConstraint::RestitutionModifiers::operator= L160
//ERRORS in MethodNode: Skipping Implicit MethodNode physx::Px1DConstraint::RestitutionModifiers::operator= L160

//Operators

//DBG: NewerFreerNode  physx::Px1DConstraint L153-165
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.Px1DConstraintPtr.physx_Px1DConstraint_ANONYMOUS_unionPtr Newer_physx_Px1DConstraintPtr_physx_Px1DConstraint_ANONYMOUS_unionPtr();
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void Freer_physx_Px1DConstraintPtr_physx_Px1DConstraint_ANONYMOUS_unionPtr(physx.Px1DConstraintPtr.physx_Px1DConstraint_ANONYMOUS_unionPtr ptr);

//DBG: PtrWrapperCtorNode physx::Px1DConstraint L153
//ERRORS in PtrWrapperCtorNode: Skipping Implicit PtrWrapperCtorNode physx::Px1DConstraint L153

//DBG: PtrWrapperCtorNode physx::Px1DConstraint L153
//ERRORS in PtrWrapperCtorNode: Skipping Implicit PtrWrapperCtorNode physx::Px1DConstraint L153

//DBG: PtrWrapperCtorNode physx::Px1DConstraint L153
//ERRORS in PtrWrapperCtorNode: Skipping Implicit PtrWrapperCtorNode physx::Px1DConstraint L153

//DBG: Field: spring - 155-159
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.Px1DConstraintPtr.physx_Px1DConstraint_ANONYMOUS_unionPtr.SpringModifiersPtr physx_Px1DConstraint_ANONYMOUS_unionPtr_GET_spring(physx.Px1DConstraintPtr.physx_Px1DConstraint_ANONYMOUS_unionPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void physx_Px1DConstraint_ANONYMOUS_unionPtr_SET_spring(physx.Px1DConstraintPtr.physx_Px1DConstraint_ANONYMOUS_unionPtr cls, physx.Px1DConstraintPtr.physx_Px1DConstraint_ANONYMOUS_unionPtr.SpringModifiersPtr value);

//DBG: Field: bounce - 160-164
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.Px1DConstraintPtr.physx_Px1DConstraint_ANONYMOUS_unionPtr.RestitutionModifiersPtr physx_Px1DConstraint_ANONYMOUS_unionPtr_GET_bounce(physx.Px1DConstraintPtr.physx_Px1DConstraint_ANONYMOUS_unionPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void physx_Px1DConstraint_ANONYMOUS_unionPtr_SET_bounce(physx.Px1DConstraintPtr.physx_Px1DConstraint_ANONYMOUS_unionPtr cls, physx.Px1DConstraintPtr.physx_Px1DConstraint_ANONYMOUS_unionPtr.RestitutionModifiersPtr value);

//DBG: MethodNode physx::Px1DConstraint::~ L153
//ERRORS in MethodNode: Skipping Implicit MethodNode physx::Px1DConstraint::~ L153, Destructor

//DBG: MethodNode physx::Px1DConstraint::operator= L153
//ERRORS in MethodNode: Skipping Implicit MethodNode physx::Px1DConstraint::operator= L153

//DBG: MethodNode physx::Px1DConstraint::operator= L153
//ERRORS in MethodNode: Skipping Implicit MethodNode physx::Px1DConstraint::operator= L153

//Operators

//DBG: NewerFreerNode Px1DConstraint physx::Px1DConstraint L141-170
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.Px1DConstraintPtr Newer_physx_Px1DConstraintPtr();
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void Freer_physx_Px1DConstraintPtr(physx.Px1DConstraintPtr ptr);

//DBG: PtrWrapperCtorNode physx::Px1DConstraint::Px1DConstraint L141
//ERRORS in PtrWrapperCtorNode: Skipping Implicit PtrWrapperCtorNode physx::Px1DConstraint::Px1DConstraint L141

//DBG: PtrWrapperCtorNode physx::Px1DConstraint::Px1DConstraint L141
//ERRORS in PtrWrapperCtorNode: Skipping Implicit PtrWrapperCtorNode physx::Px1DConstraint::Px1DConstraint L141

//DBG: PtrWrapperCtorNode physx::Px1DConstraint::Px1DConstraint L141
//ERRORS in PtrWrapperCtorNode: Skipping Implicit PtrWrapperCtorNode physx::Px1DConstraint::Px1DConstraint L141

//DBG: Field: linear0 - 143-143
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void Px1DConstraintPtr_GET_linear0(physx.Px1DConstraintPtr cls, physx.PxVec3* GetRetRef);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void Px1DConstraintPtr_SET_linear0(physx.Px1DConstraintPtr cls, physx.PxVec3 value);

//DBG: Field: geometricError - 144-144
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern float Px1DConstraintPtr_GET_geometricError(physx.Px1DConstraintPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void Px1DConstraintPtr_SET_geometricError(physx.Px1DConstraintPtr cls, float value);

//DBG: Field: angular0 - 145-145
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void Px1DConstraintPtr_GET_angular0(physx.Px1DConstraintPtr cls, physx.PxVec3* GetRetRef);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void Px1DConstraintPtr_SET_angular0(physx.Px1DConstraintPtr cls, physx.PxVec3 value);

//DBG: Field: velocityTarget - 146-146
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern float Px1DConstraintPtr_GET_velocityTarget(physx.Px1DConstraintPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void Px1DConstraintPtr_SET_velocityTarget(physx.Px1DConstraintPtr cls, float value);

//DBG: Field: linear1 - 148-148
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void Px1DConstraintPtr_GET_linear1(physx.Px1DConstraintPtr cls, physx.PxVec3* GetRetRef);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void Px1DConstraintPtr_SET_linear1(physx.Px1DConstraintPtr cls, physx.PxVec3 value);

//DBG: Field: minImpulse - 149-149
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern float Px1DConstraintPtr_GET_minImpulse(physx.Px1DConstraintPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void Px1DConstraintPtr_SET_minImpulse(physx.Px1DConstraintPtr cls, float value);

//DBG: Field: angular1 - 150-150
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void Px1DConstraintPtr_GET_angular1(physx.Px1DConstraintPtr cls, physx.PxVec3* GetRetRef);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void Px1DConstraintPtr_SET_angular1(physx.Px1DConstraintPtr cls, physx.PxVec3 value);

//DBG: Field: maxImpulse - 151-151
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern float Px1DConstraintPtr_GET_maxImpulse(physx.Px1DConstraintPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void Px1DConstraintPtr_SET_maxImpulse(physx.Px1DConstraintPtr cls, float value);

//DBG: Field: mods - 153-165
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.Px1DConstraintPtr.physx_Px1DConstraint_ANONYMOUS_unionPtr Px1DConstraintPtr_GET_mods(physx.Px1DConstraintPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void Px1DConstraintPtr_SET_mods(physx.Px1DConstraintPtr cls, physx.Px1DConstraintPtr.physx_Px1DConstraint_ANONYMOUS_unionPtr value);

//DBG: Field: forInternalUse - 167-167
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern float Px1DConstraintPtr_GET_forInternalUse(physx.Px1DConstraintPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void Px1DConstraintPtr_SET_forInternalUse(physx.Px1DConstraintPtr cls, float value);

//DBG: Field: flags - 168-168
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern ushort Px1DConstraintPtr_GET_flags(physx.Px1DConstraintPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void Px1DConstraintPtr_SET_flags(physx.Px1DConstraintPtr cls, ushort value);

//DBG: Field: solveHint - 169-169
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern ushort Px1DConstraintPtr_GET_solveHint(physx.Px1DConstraintPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void Px1DConstraintPtr_SET_solveHint(physx.Px1DConstraintPtr cls, ushort value);

//DBG: MethodNode physx::Px1DConstraint::operator= L141
//ERRORS in MethodNode: Skipping Implicit MethodNode physx::Px1DConstraint::operator= L141

//DBG: MethodNode physx::Px1DConstraint::operator= L141
//ERRORS in MethodNode: Skipping Implicit MethodNode physx::Px1DConstraint::operator= L141

//DBG: MethodNode physx::Px1DConstraint::~Px1DConstraint L141
//ERRORS in MethodNode: Skipping Implicit MethodNode physx::Px1DConstraint::~Px1DConstraint L141, Destructor

//Operators

//DBG: ClassNode PxConstraintVisualizationFlag physx::PxConstraintVisualizationFlag L179-186
//Subclasses using this: 0

//DBG: ClassNode PxConstraintInvMassScale physx::PxConstraintInvMassScale L189-205

//DBG: NewerFreerNode PxConstraintInvMassScale physx::PxConstraintInvMassScale L189-205
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void Freer_physx_PxConstraintInvMassScalePtr(physx.PxConstraintInvMassScalePtr ptr);

//DBG: PtrWrapperCtorNode physx::PxConstraintInvMassScale::PxConstraintInvMassScale L203
//RET nat: PxConstraintInvMassScalePtr, man: physx.PxConstraintInvMassScalePtr, ret: True, kind: PtrStruct
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxConstraintInvMassScalePtr Ctor_PxConstraintInvMassScalePtr_();

//DBG: PtrWrapperCtorNode physx::PxConstraintInvMassScale::PxConstraintInvMassScale L204
//RET nat: PxConstraintInvMassScalePtr, man: physx.PxConstraintInvMassScalePtr, ret: True, kind: PtrStruct
//PAR nat: PxReal, man: float, kind: Value
//PAR nat: PxReal, man: float, kind: Value
//PAR nat: PxReal, man: float, kind: Value
//PAR nat: PxReal, man: float, kind: Value
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxConstraintInvMassScalePtr Ctor_PxConstraintInvMassScalePtr_float_float_float_float(float pvk_lin0, float pvk_ang0, float pvk_lin1, float pvk_ang1);

//DBG: PtrWrapperCtorNode physx::PxConstraintInvMassScale::PxConstraintInvMassScale L189
//ERRORS in PtrWrapperCtorNode: Skipping Implicit PtrWrapperCtorNode physx::PxConstraintInvMassScale::PxConstraintInvMassScale L189

//DBG: PtrWrapperCtorNode physx::PxConstraintInvMassScale::PxConstraintInvMassScale L189
//ERRORS in PtrWrapperCtorNode: Skipping Implicit PtrWrapperCtorNode physx::PxConstraintInvMassScale::PxConstraintInvMassScale L189

//DBG: Field: linear0 - 198-198
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern float PxConstraintInvMassScalePtr_GET_linear0(physx.PxConstraintInvMassScalePtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxConstraintInvMassScalePtr_SET_linear0(physx.PxConstraintInvMassScalePtr cls, float value);

//DBG: Field: angular0 - 199-199
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern float PxConstraintInvMassScalePtr_GET_angular0(physx.PxConstraintInvMassScalePtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxConstraintInvMassScalePtr_SET_angular0(physx.PxConstraintInvMassScalePtr cls, float value);

//DBG: Field: linear1 - 200-200
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern float PxConstraintInvMassScalePtr_GET_linear1(physx.PxConstraintInvMassScalePtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxConstraintInvMassScalePtr_SET_linear1(physx.PxConstraintInvMassScalePtr cls, float value);

//DBG: Field: angular1 - 201-201
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern float PxConstraintInvMassScalePtr_GET_angular1(physx.PxConstraintInvMassScalePtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxConstraintInvMassScalePtr_SET_angular1(physx.PxConstraintInvMassScalePtr cls, float value);

//DBG: MethodNode physx::PxConstraintInvMassScale::operator= L189
//ERRORS in MethodNode: Skipping Implicit MethodNode physx::PxConstraintInvMassScale::operator= L189

//DBG: MethodNode physx::PxConstraintInvMassScale::operator= L189
//ERRORS in MethodNode: Skipping Implicit MethodNode physx::PxConstraintInvMassScale::operator= L189

//DBG: MethodNode physx::PxConstraintInvMassScale::~PxConstraintInvMassScale L189
//ERRORS in MethodNode: Skipping Implicit MethodNode physx::PxConstraintInvMassScale::~PxConstraintInvMassScale L189, Destructor

//Operators
//Subclasses using this: 0

//DBG: ClassNode PxConstraintVisualizer physx::PxConstraintVisualizer L257-311

//DBG: MethodNode physx::PxConstraintVisualizer::visualizeJointFrames L267
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: PxConstraintVisualizerPtr, man: physx.PxConstraintVisualizerPtr, kind: PtrStruct
//PAR nat: physx::PxTransform*, man: physx.PxTransform*, kind: Value
//PAR nat: physx::PxTransform*, man: physx.PxTransform*, kind: Value
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void void_PxConstraintVisualizerPtr_visualizeJointFramesPtr_PxTransform_PxTransform_(physx.PxConstraintVisualizerPtr pvk_this, physx.PxTransform* pvk_parent, physx.PxTransform* pvk_child);

//DBG: MethodNode physx::PxConstraintVisualizer::visualizeLinearLimit L276
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: PxConstraintVisualizerPtr, man: physx.PxConstraintVisualizerPtr, kind: PtrStruct
//PAR nat: physx::PxTransform*, man: physx.PxTransform*, kind: Value
//PAR nat: physx::PxTransform*, man: physx.PxTransform*, kind: Value
//PAR nat: PxReal, man: float, kind: Value
//PAR nat: bool, man: bool, kind: Value
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void void_PxConstraintVisualizerPtr_visualizeLinearLimitPtr_PxTransform_PxTransform_float_bool_(physx.PxConstraintVisualizerPtr pvk_this, physx.PxTransform* pvk_t0, physx.PxTransform* pvk_t1, float pvk_value, bool pvk_active);

//DBG: MethodNode physx::PxConstraintVisualizer::visualizeAngularLimit L285
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: PxConstraintVisualizerPtr, man: physx.PxConstraintVisualizerPtr, kind: PtrStruct
//PAR nat: physx::PxTransform*, man: physx.PxTransform*, kind: Value
//PAR nat: PxReal, man: float, kind: Value
//PAR nat: PxReal, man: float, kind: Value
//PAR nat: bool, man: bool, kind: Value
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void void_PxConstraintVisualizerPtr_visualizeAngularLimitPtr_PxTransform_float_float_bool_(physx.PxConstraintVisualizerPtr pvk_this, physx.PxTransform* pvk_t0, float pvk_lower, float pvk_upper, bool pvk_active);

//DBG: MethodNode physx::PxConstraintVisualizer::visualizeLimitCone L294
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: PxConstraintVisualizerPtr, man: physx.PxConstraintVisualizerPtr, kind: PtrStruct
//PAR nat: physx::PxTransform*, man: physx.PxTransform*, kind: Value
//PAR nat: PxReal, man: float, kind: Value
//PAR nat: PxReal, man: float, kind: Value
//PAR nat: bool, man: bool, kind: Value
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void void_PxConstraintVisualizerPtr_visualizeLimitConePtr_PxTransform_float_float_bool_(physx.PxConstraintVisualizerPtr pvk_this, physx.PxTransform* pvk_t, float pvk_tanQSwingY, float pvk_tanQSwingZ, bool pvk_active);

//DBG: MethodNode physx::PxConstraintVisualizer::visualizeDoubleCone L302
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: PxConstraintVisualizerPtr, man: physx.PxConstraintVisualizerPtr, kind: PtrStruct
//PAR nat: physx::PxTransform*, man: physx.PxTransform*, kind: Value
//PAR nat: PxReal, man: float, kind: Value
//PAR nat: bool, man: bool, kind: Value
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void void_PxConstraintVisualizerPtr_visualizeDoubleConePtr_PxTransform_float_bool_(physx.PxConstraintVisualizerPtr pvk_this, physx.PxTransform* pvk_t, float pvk_angle, bool pvk_active);

//DBG: MethodNode physx::PxConstraintVisualizer::visualizeLine L310
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: PxConstraintVisualizerPtr, man: physx.PxConstraintVisualizerPtr, kind: PtrStruct
//PAR nat: physx::PxVec3*, man: physx.PxVec3*, kind: Value
//PAR nat: physx::PxVec3*, man: physx.PxVec3*, kind: Value
//PAR nat: PxU32, man: uint, kind: Value
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void void_PxConstraintVisualizerPtr_visualizeLinePtr_PxVec3_PxVec3_uint_(physx.PxConstraintVisualizerPtr pvk_this, physx.PxVec3* pvk_p0, physx.PxVec3* pvk_p1, uint pvk_color);

//DBG: MethodNode physx::PxConstraintVisualizer::operator= L257
//ERRORS in MethodNode: Skipping Implicit MethodNode physx::PxConstraintVisualizer::operator= L257

//DBG: MethodNode physx::PxConstraintVisualizer::visualizeJointFrames L267
//Value Converter visualizeJointFrames
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: PxConstraintVisualizerPtr, man: physx.PxConstraintVisualizerPtr, kind: PtrStruct
//PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable
//PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable

//DBG: MethodNode physx::PxConstraintVisualizer::visualizeJointFrames L267
//Value Converter visualizeJointFrames
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: PxConstraintVisualizerPtr, man: physx.PxConstraintVisualizerPtr, kind: PtrStruct
//PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable
//PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable

//DBG: MethodNode physx::PxConstraintVisualizer::visualizeLinearLimit L276
//Value Converter visualizeLinearLimit
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: PxConstraintVisualizerPtr, man: physx.PxConstraintVisualizerPtr, kind: PtrStruct
//PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable
//PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable
//PAR nat: PxReal, man: float, kind: Value
//PAR nat: bool, man: bool, kind: Value

//DBG: MethodNode physx::PxConstraintVisualizer::visualizeLinearLimit L276
//Value Converter visualizeLinearLimit
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: PxConstraintVisualizerPtr, man: physx.PxConstraintVisualizerPtr, kind: PtrStruct
//PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable
//PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable
//PAR nat: PxReal, man: float, kind: Value
//PAR nat: bool, man: bool, kind: Value

//DBG: MethodNode physx::PxConstraintVisualizer::visualizeAngularLimit L285
//Value Converter visualizeAngularLimit
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: PxConstraintVisualizerPtr, man: physx.PxConstraintVisualizerPtr, kind: PtrStruct
//PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable
//PAR nat: PxReal, man: float, kind: Value
//PAR nat: PxReal, man: float, kind: Value
//PAR nat: bool, man: bool, kind: Value

//DBG: MethodNode physx::PxConstraintVisualizer::visualizeAngularLimit L285
//Value Converter visualizeAngularLimit
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: PxConstraintVisualizerPtr, man: physx.PxConstraintVisualizerPtr, kind: PtrStruct
//PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable
//PAR nat: PxReal, man: float, kind: Value
//PAR nat: PxReal, man: float, kind: Value
//PAR nat: bool, man: bool, kind: Value

//DBG: MethodNode physx::PxConstraintVisualizer::visualizeLimitCone L294
//Value Converter visualizeLimitCone
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: PxConstraintVisualizerPtr, man: physx.PxConstraintVisualizerPtr, kind: PtrStruct
//PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable
//PAR nat: PxReal, man: float, kind: Value
//PAR nat: PxReal, man: float, kind: Value
//PAR nat: bool, man: bool, kind: Value

//DBG: MethodNode physx::PxConstraintVisualizer::visualizeLimitCone L294
//Value Converter visualizeLimitCone
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: PxConstraintVisualizerPtr, man: physx.PxConstraintVisualizerPtr, kind: PtrStruct
//PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable
//PAR nat: PxReal, man: float, kind: Value
//PAR nat: PxReal, man: float, kind: Value
//PAR nat: bool, man: bool, kind: Value

//DBG: MethodNode physx::PxConstraintVisualizer::visualizeDoubleCone L302
//Value Converter visualizeDoubleCone
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: PxConstraintVisualizerPtr, man: physx.PxConstraintVisualizerPtr, kind: PtrStruct
//PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable
//PAR nat: PxReal, man: float, kind: Value
//PAR nat: bool, man: bool, kind: Value

//DBG: MethodNode physx::PxConstraintVisualizer::visualizeDoubleCone L302
//Value Converter visualizeDoubleCone
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: PxConstraintVisualizerPtr, man: physx.PxConstraintVisualizerPtr, kind: PtrStruct
//PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable
//PAR nat: PxReal, man: float, kind: Value
//PAR nat: bool, man: bool, kind: Value

//DBG: MethodNode physx::PxConstraintVisualizer::visualizeLine L310
//Value Converter visualizeLine
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: PxConstraintVisualizerPtr, man: physx.PxConstraintVisualizerPtr, kind: PtrStruct
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
//PAR nat: PxU32, man: uint, kind: Value

//DBG: MethodNode physx::PxConstraintVisualizer::visualizeLine L310
//Value Converter visualizeLine
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: PxConstraintVisualizerPtr, man: physx.PxConstraintVisualizerPtr, kind: PtrStruct
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
//PAR nat: PxU32, man: uint, kind: Value

//Operators

//DBG: ClassNode PxPvdUpdateType physx::PxPvdUpdateType L332-341
//Subclasses using this: 0

//DBG: ClassNode PxConstraintConnector physx::PxConstraintConnector L352-436

//DBG: MethodNode physx::PxConstraintConnector::prepareData L359
//RET nat: void*, man: IntPtr, ret: True, kind: Value
//PAR nat: PxConstraintConnectorPtr, man: physx.PxConstraintConnectorPtr, kind: PtrStruct
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern IntPtr IntPtr_PxConstraintConnectorPtr_prepareDataPtr(physx.PxConstraintConnectorPtr pvk_this);

//DBG: MethodNode physx::PxConstraintConnector::updatePvdProperties L364-366

//DBG: MethodNode physx::PxConstraintConnector::onConstraintRelease L378
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: PxConstraintConnectorPtr, man: physx.PxConstraintConnectorPtr, kind: PtrStruct
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void void_PxConstraintConnectorPtr_onConstraintReleasePtr(physx.PxConstraintConnectorPtr pvk_this);

//DBG: MethodNode physx::PxConstraintConnector::onComShift L386
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: PxConstraintConnectorPtr, man: physx.PxConstraintConnectorPtr, kind: PtrStruct
//PAR nat: PxU32, man: uint, kind: Value
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void void_PxConstraintConnectorPtr_onComShiftPtr_uint_(physx.PxConstraintConnectorPtr pvk_this, uint pvk_actor);

//DBG: MethodNode physx::PxConstraintConnector::onOriginShift L399
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: PxConstraintConnectorPtr, man: physx.PxConstraintConnectorPtr, kind: PtrStruct
//PAR nat: physx::PxVec3*, man: physx.PxVec3*, kind: Value
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void void_PxConstraintConnectorPtr_onOriginShiftPtr_PxVec3_(physx.PxConstraintConnectorPtr pvk_this, physx.PxVec3* pvk_shift);

//DBG: MethodNode physx::PxConstraintConnector::getExternalReference L413
//RET nat: void*, man: IntPtr, ret: True, kind: Value
//PAR nat: PxConstraintConnectorPtr, man: physx.PxConstraintConnectorPtr, kind: PtrStruct
//PAR nat: PxU32*, man: uint*, kind: Value
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern IntPtr IntPtr_PxConstraintConnectorPtr_getExternalReferencePtr_uint_(physx.PxConstraintConnectorPtr pvk_this, uint* pvk_typeID);

//DBG: MethodNode physx::PxConstraintConnector::getSerializable L420
//RET nat: PxBasePtr, man: physx.PxBasePtr, ret: True, kind: PtrStruct
//PAR nat: PxConstraintConnectorPtr, man: physx.PxConstraintConnectorPtr, kind: PtrStruct
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxBasePtr PxBasePtr_PxConstraintConnectorPtr_getSerializablePtr(physx.PxConstraintConnectorPtr pvk_this);

//DBG: MethodNode physx::PxConstraintConnector::getPrep L425
//RET nat: PxConstraintSolverPrep, man: PxConstraintSolverPrep, ret: True, kind: Value
//PAR nat: PxConstraintConnectorPtr, man: physx.PxConstraintConnectorPtr, kind: PtrStruct
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern PxConstraintSolverPrep PxConstraintSolverPrep_const_PxConstraintConnectorPtr_getPrepPtr(physx.PxConstraintConnectorPtr pvk_this);

//DBG: MethodNode physx::PxConstraintConnector::getConstantBlock L430
//RET nat: void*, man: IntPtr, ret: True, kind: Value
//PAR nat: PxConstraintConnectorPtr, man: physx.PxConstraintConnectorPtr, kind: PtrStruct
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern IntPtr IntPtr_const_PxConstraintConnectorPtr_getConstantBlockPtr(physx.PxConstraintConnectorPtr pvk_this);

//DBG: MethodNode physx::PxConstraintConnector::~PxConstraintConnector L435
//ERRORS in MethodNode: Destructor

//DBG: MethodNode physx::PxConstraintConnector::operator= L352
//ERRORS in MethodNode: Skipping Implicit MethodNode physx::PxConstraintConnector::operator= L352

//DBG: MethodNode physx::PxConstraintConnector::onOriginShift L399
//Value Converter onOriginShift
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: PxConstraintConnectorPtr, man: physx.PxConstraintConnectorPtr, kind: PtrStruct
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable

//DBG: MethodNode physx::PxConstraintConnector::onOriginShift L399
//Value Converter onOriginShift
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: PxConstraintConnectorPtr, man: physx.PxConstraintConnectorPtr, kind: PtrStruct
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable

//Operators

//DBG: DeclNode PxConstraintSolverPrep physx::PxConstraintSolverPrep L228-237

//DBG: DeclNode PxConstraintProject physx::PxConstraintProject L249-252

//DBG: DeclNode PxConstraintVisualize physx::PxConstraintVisualize L325-329

//DBG: DeclNode Px1DConstraintFlags physx::Px1DConstraintFlags L84
}
