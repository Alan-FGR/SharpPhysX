// Generated by minBND 5.1.94.90 - Â© github.com/Alan-FGR
using System;
using System.Runtime.InteropServices;
public static unsafe partial class minBND_pinvokes {

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern bool bool_PxRigidBodyExtPtr_updateMassAndInertiaPtr_PxRigidBodyPtr_float_uint_PxVec3_bool_(physx.PxRigidBodyPtr pvk_body, float* pvk_shapeDensities, uint pvk_shapeDensityCount, physx.PxVec3* pvk_massLocalPose, bool pvk_includeNonSimShapes);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern bool bool_PxRigidBodyExtPtr_updateMassAndInertiaPtr_PxRigidBodyPtr_float_PxVec3_bool_(physx.PxRigidBodyPtr pvk_body, float pvk_density, physx.PxVec3* pvk_massLocalPose, bool pvk_includeNonSimShapes);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern bool bool_PxRigidBodyExtPtr_setMassAndUpdateInertiaPtr_PxRigidBodyPtr_float_uint_PxVec3_bool_(physx.PxRigidBodyPtr pvk_body, float* pvk_shapeMasses, uint pvk_shapeMassCount, physx.PxVec3* pvk_massLocalPose, bool pvk_includeNonSimShapes);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern bool bool_PxRigidBodyExtPtr_setMassAndUpdateInertiaPtr_PxRigidBodyPtr_float_PxVec3_bool_(physx.PxRigidBodyPtr pvk_body, float pvk_mass, physx.PxVec3* pvk_massLocalPose, bool pvk_includeNonSimShapes);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxMassPropertiesPtr PxMassPropertiesPtr_PxRigidBodyExtPtr_computeMassPropertiesFromShapesPtr_PxShapePtr_uint_(physx.PxShapePtr* pvk_shapes, uint pvk_shapeCount);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void void_PxRigidBodyExtPtr_addForceAtPosPtr_PxRigidBodyPtr_PxVec3_PxVec3_PxForceMode_bool_(physx.PxRigidBodyPtr pvk_body, physx.PxVec3* pvk_force, physx.PxVec3* pvk_pos, physx.PxForceMode pvk_mode, bool pvk_wakeup);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void void_PxRigidBodyExtPtr_addForceAtLocalPosPtr_PxRigidBodyPtr_PxVec3_PxVec3_PxForceMode_bool_(physx.PxRigidBodyPtr pvk_body, physx.PxVec3* pvk_force, physx.PxVec3* pvk_pos, physx.PxForceMode pvk_mode, bool pvk_wakeup);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void void_PxRigidBodyExtPtr_addLocalForceAtPosPtr_PxRigidBodyPtr_PxVec3_PxVec3_PxForceMode_bool_(physx.PxRigidBodyPtr pvk_body, physx.PxVec3* pvk_force, physx.PxVec3* pvk_pos, physx.PxForceMode pvk_mode, bool pvk_wakeup);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void void_PxRigidBodyExtPtr_addLocalForceAtLocalPosPtr_PxRigidBodyPtr_PxVec3_PxVec3_PxForceMode_bool_(physx.PxRigidBodyPtr pvk_body, physx.PxVec3* pvk_force, physx.PxVec3* pvk_pos, physx.PxForceMode pvk_mode, bool pvk_wakeup);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxVec3_PxRigidBodyExtPtr_getVelocityAtPosPtr_PxRigidBodyPtr_PxVec3_(physx.PxVec3* pvk_RetRef, physx.PxRigidBodyPtr pvk_body, physx.PxVec3* pvk_pos);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxVec3_PxRigidBodyExtPtr_getLocalVelocityAtLocalPosPtr_PxRigidBodyPtr_PxVec3_(physx.PxVec3* pvk_RetRef, physx.PxRigidBodyPtr pvk_body, physx.PxVec3* pvk_pos);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxVec3_PxRigidBodyExtPtr_getVelocityAtOffsetPtr_PxRigidBodyPtr_PxVec3_(physx.PxVec3* pvk_RetRef, physx.PxRigidBodyPtr pvk_body, physx.PxVec3* pvk_pos);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern bool bool_PxRigidBodyExtPtr_linearSweepSinglePtr_PxRigidBodyPtr_PxScenePtr_PxVec3_float_PxHitFlags_PxSweepHitPtr_uint_PxQueryFilterDataPtr_PxQueryFilterCallbackPtr_PxQueryCachePtr_float_C_C(physx.PxRigidBodyPtr pvk_body, physx.PxScenePtr pvk_scene, physx.PxVec3* pvk_unitDir, float pvk_distance, physx.PxHitFlags pvk_outputFlags, physx.PxSweepHitPtr pvk_closestHit, uint* pvk_shapeIndex, physx.PxQueryFilterDataPtr pvk_filterData, physx.PxQueryFilterCallbackPtr pvk_filterCall, physx.PxQueryCachePtr pvk_cache, float pvk_inflation);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern uint uint_PxRigidBodyExtPtr_linearSweepMultiplePtr_PxRigidBodyPtr_PxScenePtr_PxVec3_float_PxHitFlags_PxSweepHitPtr_uint_uint_PxSweepHitPtr_int_bool_PxQueryFilterDataPtr_PxQueryFilterCallbackPtr_PxQueryCachePtr_float_C_C(physx.PxRigidBodyPtr pvk_body, physx.PxScenePtr pvk_scene, physx.PxVec3* pvk_unitDir, float pvk_distance, physx.PxHitFlags pvk_outputFlags, physx.PxSweepHitPtr pvk_touchHitBuffer, uint* pvk_touchHitShapeIndices, uint pvk_touchHitBufferSize, physx.PxSweepHitPtr pvk_block, int* pvk_blockingShapeIndex, bool* pvk_overflow, physx.PxQueryFilterDataPtr pvk_filterData, physx.PxQueryFilterCallbackPtr pvk_filterCall, physx.PxQueryCachePtr pvk_cache, float pvk_inflation);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void void_PxRigidBodyExtPtr_computeVelocityDeltaFromImpulsePtr_PxRigidBodyPtr_PxVec3_PxVec3_PxVec3_PxVec3_(physx.PxRigidBodyPtr pvk_body, physx.PxVec3* pvk_impulsiveForce, physx.PxVec3* pvk_impulsiveTorque, physx.PxVec3* pvk_deltaLinearVelocity, physx.PxVec3* pvk_deltaAngularVelocity);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void void_PxRigidBodyExtPtr_computeVelocityDeltaFromImpulsePtr_PxRigidBodyPtr_PxTransform_PxVec3_PxVec3_float_float_PxVec3_PxVec3_CC_(physx.PxRigidBodyPtr pvk_body, physx.PxTransform* pvk_globalPose, physx.PxVec3* pvk_point, physx.PxVec3* pvk_impulse, float pvk_invMassScale, float pvk_invInertiaScale, physx.PxVec3* pvk_deltaLinearVelocity, physx.PxVec3* pvk_deltaAngularVelocity);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void void_PxRigidBodyExtPtr_computeLinearAngularImpulsePtr_PxRigidBodyPtr_PxTransform_PxVec3_PxVec3_float_float_PxVec3_PxVec3_CC_(physx.PxRigidBodyPtr pvk_body, physx.PxTransform* pvk_globalPose, physx.PxVec3* pvk_point, physx.PxVec3* pvk_impulse, float pvk_invMassScale, float pvk_invInertiaScale, physx.PxVec3* pvk_linearImpulse, physx.PxVec3* pvk_angularImpulse);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern bool bool_PxRigidBodyExtPtr_updateMassAndInertiaPtr_PxRigidBodyPtr_float_uint_(physx.PxRigidBodyPtr pvk_body, float* pvk_shapeDensities, uint pvk_shapeDensityCount);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern bool bool_PxRigidBodyExtPtr_updateMassAndInertiaPtr_PxRigidBodyPtr_float_uint_PxVec3_(physx.PxRigidBodyPtr pvk_body, float* pvk_shapeDensities, uint pvk_shapeDensityCount, physx.PxVec3* pvk_massLocalPose);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern bool bool_PxRigidBodyExtPtr_updateMassAndInertiaPtr_PxRigidBodyPtr_float_(physx.PxRigidBodyPtr pvk_body, float pvk_density);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern bool bool_PxRigidBodyExtPtr_updateMassAndInertiaPtr_PxRigidBodyPtr_float_PxVec3_(physx.PxRigidBodyPtr pvk_body, float pvk_density, physx.PxVec3* pvk_massLocalPose);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern bool bool_PxRigidBodyExtPtr_setMassAndUpdateInertiaPtr_PxRigidBodyPtr_float_uint_(physx.PxRigidBodyPtr pvk_body, float* pvk_shapeMasses, uint pvk_shapeMassCount);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern bool bool_PxRigidBodyExtPtr_setMassAndUpdateInertiaPtr_PxRigidBodyPtr_float_uint_PxVec3_(physx.PxRigidBodyPtr pvk_body, float* pvk_shapeMasses, uint pvk_shapeMassCount, physx.PxVec3* pvk_massLocalPose);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern bool bool_PxRigidBodyExtPtr_setMassAndUpdateInertiaPtr_PxRigidBodyPtr_float_(physx.PxRigidBodyPtr pvk_body, float pvk_mass);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern bool bool_PxRigidBodyExtPtr_setMassAndUpdateInertiaPtr_PxRigidBodyPtr_float_PxVec3_(physx.PxRigidBodyPtr pvk_body, float pvk_mass, physx.PxVec3* pvk_massLocalPose);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void void_PxRigidBodyExtPtr_addForceAtPosPtr_PxRigidBodyPtr_PxVec3_PxVec3_(physx.PxRigidBodyPtr pvk_body, physx.PxVec3* pvk_force, physx.PxVec3* pvk_pos);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void void_PxRigidBodyExtPtr_addForceAtPosPtr_PxRigidBodyPtr_PxVec3_PxVec3_PxForceMode_(physx.PxRigidBodyPtr pvk_body, physx.PxVec3* pvk_force, physx.PxVec3* pvk_pos, physx.PxForceMode pvk_mode);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void void_PxRigidBodyExtPtr_addForceAtLocalPosPtr_PxRigidBodyPtr_PxVec3_PxVec3_(physx.PxRigidBodyPtr pvk_body, physx.PxVec3* pvk_force, physx.PxVec3* pvk_pos);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void void_PxRigidBodyExtPtr_addForceAtLocalPosPtr_PxRigidBodyPtr_PxVec3_PxVec3_PxForceMode_(physx.PxRigidBodyPtr pvk_body, physx.PxVec3* pvk_force, physx.PxVec3* pvk_pos, physx.PxForceMode pvk_mode);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void void_PxRigidBodyExtPtr_addLocalForceAtPosPtr_PxRigidBodyPtr_PxVec3_PxVec3_(physx.PxRigidBodyPtr pvk_body, physx.PxVec3* pvk_force, physx.PxVec3* pvk_pos);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void void_PxRigidBodyExtPtr_addLocalForceAtPosPtr_PxRigidBodyPtr_PxVec3_PxVec3_PxForceMode_(physx.PxRigidBodyPtr pvk_body, physx.PxVec3* pvk_force, physx.PxVec3* pvk_pos, physx.PxForceMode pvk_mode);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void void_PxRigidBodyExtPtr_addLocalForceAtLocalPosPtr_PxRigidBodyPtr_PxVec3_PxVec3_(physx.PxRigidBodyPtr pvk_body, physx.PxVec3* pvk_force, physx.PxVec3* pvk_pos);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void void_PxRigidBodyExtPtr_addLocalForceAtLocalPosPtr_PxRigidBodyPtr_PxVec3_PxVec3_PxForceMode_(physx.PxRigidBodyPtr pvk_body, physx.PxVec3* pvk_force, physx.PxVec3* pvk_pos, physx.PxForceMode pvk_mode);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern bool bool_PxRigidBodyExtPtr_linearSweepSinglePtr_PxRigidBodyPtr_PxScenePtr_PxVec3_float_PxHitFlags_PxSweepHitPtr_uint_C_(physx.PxRigidBodyPtr pvk_body, physx.PxScenePtr pvk_scene, physx.PxVec3* pvk_unitDir, float pvk_distance, physx.PxHitFlags pvk_outputFlags, physx.PxSweepHitPtr pvk_closestHit, uint* pvk_shapeIndex);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern bool bool_PxRigidBodyExtPtr_linearSweepSinglePtr_PxRigidBodyPtr_PxScenePtr_PxVec3_float_PxHitFlags_PxSweepHitPtr_uint_PxQueryFilterDataPtr_C_(physx.PxRigidBodyPtr pvk_body, physx.PxScenePtr pvk_scene, physx.PxVec3* pvk_unitDir, float pvk_distance, physx.PxHitFlags pvk_outputFlags, physx.PxSweepHitPtr pvk_closestHit, uint* pvk_shapeIndex, physx.PxQueryFilterDataPtr pvk_filterData);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern bool bool_PxRigidBodyExtPtr_linearSweepSinglePtr_PxRigidBodyPtr_PxScenePtr_PxVec3_float_PxHitFlags_PxSweepHitPtr_uint_PxQueryFilterDataPtr_PxQueryFilterCallbackPtr_C_(physx.PxRigidBodyPtr pvk_body, physx.PxScenePtr pvk_scene, physx.PxVec3* pvk_unitDir, float pvk_distance, physx.PxHitFlags pvk_outputFlags, physx.PxSweepHitPtr pvk_closestHit, uint* pvk_shapeIndex, physx.PxQueryFilterDataPtr pvk_filterData, physx.PxQueryFilterCallbackPtr pvk_filterCall);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern bool bool_PxRigidBodyExtPtr_linearSweepSinglePtr_PxRigidBodyPtr_PxScenePtr_PxVec3_float_PxHitFlags_PxSweepHitPtr_uint_PxQueryFilterDataPtr_PxQueryFilterCallbackPtr_PxQueryCachePtr_C_(physx.PxRigidBodyPtr pvk_body, physx.PxScenePtr pvk_scene, physx.PxVec3* pvk_unitDir, float pvk_distance, physx.PxHitFlags pvk_outputFlags, physx.PxSweepHitPtr pvk_closestHit, uint* pvk_shapeIndex, physx.PxQueryFilterDataPtr pvk_filterData, physx.PxQueryFilterCallbackPtr pvk_filterCall, physx.PxQueryCachePtr pvk_cache);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern uint uint_PxRigidBodyExtPtr_linearSweepMultiplePtr_PxRigidBodyPtr_PxScenePtr_PxVec3_float_PxHitFlags_PxSweepHitPtr_uint_uint_PxSweepHitPtr_int_bool_C_(physx.PxRigidBodyPtr pvk_body, physx.PxScenePtr pvk_scene, physx.PxVec3* pvk_unitDir, float pvk_distance, physx.PxHitFlags pvk_outputFlags, physx.PxSweepHitPtr pvk_touchHitBuffer, uint* pvk_touchHitShapeIndices, uint pvk_touchHitBufferSize, physx.PxSweepHitPtr pvk_block, int* pvk_blockingShapeIndex, bool* pvk_overflow);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern uint uint_PxRigidBodyExtPtr_linearSweepMultiplePtr_PxRigidBodyPtr_PxScenePtr_PxVec3_float_PxHitFlags_PxSweepHitPtr_uint_uint_PxSweepHitPtr_int_bool_PxQueryFilterDataPtr_C_(physx.PxRigidBodyPtr pvk_body, physx.PxScenePtr pvk_scene, physx.PxVec3* pvk_unitDir, float pvk_distance, physx.PxHitFlags pvk_outputFlags, physx.PxSweepHitPtr pvk_touchHitBuffer, uint* pvk_touchHitShapeIndices, uint pvk_touchHitBufferSize, physx.PxSweepHitPtr pvk_block, int* pvk_blockingShapeIndex, bool* pvk_overflow, physx.PxQueryFilterDataPtr pvk_filterData);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern uint uint_PxRigidBodyExtPtr_linearSweepMultiplePtr_PxRigidBodyPtr_PxScenePtr_PxVec3_float_PxHitFlags_PxSweepHitPtr_uint_uint_PxSweepHitPtr_int_bool_PxQueryFilterDataPtr_PxQueryFilterCallbackPtr_C_(physx.PxRigidBodyPtr pvk_body, physx.PxScenePtr pvk_scene, physx.PxVec3* pvk_unitDir, float pvk_distance, physx.PxHitFlags pvk_outputFlags, physx.PxSweepHitPtr pvk_touchHitBuffer, uint* pvk_touchHitShapeIndices, uint pvk_touchHitBufferSize, physx.PxSweepHitPtr pvk_block, int* pvk_blockingShapeIndex, bool* pvk_overflow, physx.PxQueryFilterDataPtr pvk_filterData, physx.PxQueryFilterCallbackPtr pvk_filterCall);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern uint uint_PxRigidBodyExtPtr_linearSweepMultiplePtr_PxRigidBodyPtr_PxScenePtr_PxVec3_float_PxHitFlags_PxSweepHitPtr_uint_uint_PxSweepHitPtr_int_bool_PxQueryFilterDataPtr_PxQueryFilterCallbackPtr_PxQueryCachePtr_C_(physx.PxRigidBodyPtr pvk_body, physx.PxScenePtr pvk_scene, physx.PxVec3* pvk_unitDir, float pvk_distance, physx.PxHitFlags pvk_outputFlags, physx.PxSweepHitPtr pvk_touchHitBuffer, uint* pvk_touchHitShapeIndices, uint pvk_touchHitBufferSize, physx.PxSweepHitPtr pvk_block, int* pvk_blockingShapeIndex, bool* pvk_overflow, physx.PxQueryFilterDataPtr pvk_filterData, physx.PxQueryFilterCallbackPtr pvk_filterCall, physx.PxQueryCachePtr pvk_cache);

}
