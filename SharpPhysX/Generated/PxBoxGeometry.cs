//Generated by MinBinder.
using System;
using System.Runtime.InteropServices;
using PxBaseFlags = System.UInt32;
using PxActorFlags = System.UInt32;

public partial struct PxBoxGeometry : IPxGeometry { // ptr holder

    public PxGeometryType getType() {// base call
        return ((PxGeometry)this).getType();
    }
    

    private IntPtr nativePtr_;
    
    public static unsafe implicit operator PxGeometry(PxBoxGeometry obj) {// upcast
        return *(PxGeometry*)&obj;
    }
    
    public static unsafe explicit operator PxBoxGeometry(PxGeometry obj) {// downcast
        return *(PxBoxGeometry*)&obj;
    }
    
    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern PxBoxGeometry C_PxBoxGeometry_PxBoxGeometry(float hx,float hy,float hz);
    public unsafe PxBoxGeometry(float hx,float hy,float hz){
        var _new = C_PxBoxGeometry_PxBoxGeometry(hx,hy,hz);        
        fixed (void* ptr = &this)
          Buffer.MemoryCopy(&_new, ptr, Marshal.SizeOf(this), Marshal.SizeOf(this));    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern PxBoxGeometry C_PxBoxGeometry_PxBoxGeometry_2(PxVec3 halfExtents_);
    public unsafe PxBoxGeometry(PxVec3 halfExtents_){
        var _new = C_PxBoxGeometry_PxBoxGeometry_2(halfExtents_);        
        fixed (void* ptr = &this)
          Buffer.MemoryCopy(&_new, ptr, Marshal.SizeOf(this), Marshal.SizeOf(this));    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern bool C_CONST_PxBoxGeometry_isValid(PxBoxGeometry cls);
    public bool isValid(){
        return C_CONST_PxBoxGeometry_isValid(this);    
    }


}
