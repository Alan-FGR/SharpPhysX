// Generated by minBND 5.1.90.51 - Â© github.com/Alan-FGR
using System;
using System.Runtime.InteropServices;
using static minBND_pinvokes;

public static unsafe partial class physx {

    //DBG: FunctionNode physx::PxShortestRotation L52
    //Value Converter PxShortestRotation
    //RET nat: physx::PxQuat, man: physx.PxQuat, ret: False, kind: Blittable
    //PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
    //PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
    public static physx.PxQuat PxShortestRotation(physx.PxVec3 from, physx.PxVec3 target) {
        return PxShortestRotation((physx.PxVec3*)&from, (physx.PxVec3*)&target);
    }

    //DBG: FunctionNode physx::PxShortestRotation L52
    //Value Converter PxShortestRotation
    //RET nat: physx::PxQuat, man: physx.PxQuat, ret: False, kind: Blittable
    //PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
    //PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
    public static physx.PxQuat PxShortestRotation(physx.PxVec3.Ref from, physx.PxVec3.Ref target) {
        return PxShortestRotation((physx.PxVec3*)(*((IntPtr*)(&from))), (physx.PxVec3*)(*((IntPtr*)(&target))));
    }

    //DBG: FunctionNode physx::PxShortestRotation L52
    //RET nat: physx::PxQuat, man: physx.PxQuat, ret: False, kind: Blittable
    //PAR nat: physx::PxVec3*, man: physx.PxVec3*, kind: Value
    //PAR nat: physx::PxVec3*, man: physx.PxVec3*, kind: Value
    public static physx.PxQuat PxShortestRotation(physx.PxVec3* from, physx.PxVec3* target) {
        physx.PxQuat RetRef;
        physx.PxVec3* pvk_in_from = from;
        physx.PxVec3* pvk_in_target = target;
        PxQuat_PxShortestRotationPtr_PxVec3_PxVec3_(&RetRef, pvk_in_from, pvk_in_target);
        return RetRef;
    }

    //DBG: FunctionNode physx::PxDiagonalize L66
    //Value Converter PxDiagonalize
    //RET nat: physx::PxVec3, man: physx.PxVec3, ret: False, kind: Blittable
    //PAR nat: physx::PxMat33, man: physx.PxMat33, kind: Blittable
    //PAR nat: physx::PxQuat, man: physx.PxQuat, kind: Blittable
    public static physx.PxVec3 PxDiagonalize(physx.PxMat33 m, physx.PxQuat axes) {
        return PxDiagonalize((physx.PxMat33*)&m, (physx.PxQuat*)&axes);
    }

    //DBG: FunctionNode physx::PxDiagonalize L66
    //Value Converter PxDiagonalize
    //RET nat: physx::PxVec3, man: physx.PxVec3, ret: False, kind: Blittable
    //PAR nat: physx::PxMat33, man: physx.PxMat33, kind: Blittable
    //PAR nat: physx::PxQuat, man: physx.PxQuat, kind: Blittable
    public static physx.PxVec3 PxDiagonalize(physx.PxMat33.Ref m, physx.PxQuat.Ref axes) {
        return PxDiagonalize((physx.PxMat33*)(*((IntPtr*)(&m))), (physx.PxQuat*)(*((IntPtr*)(&axes))));
    }

    //DBG: FunctionNode physx::PxDiagonalize L66
    //RET nat: physx::PxVec3, man: physx.PxVec3, ret: False, kind: Blittable
    //PAR nat: physx::PxMat33*, man: physx.PxMat33*, kind: Value
    //PAR nat: physx::PxQuat*, man: physx.PxQuat*, kind: Value
    public static physx.PxVec3 PxDiagonalize(physx.PxMat33* m, physx.PxQuat* axes) {
        physx.PxVec3 RetRef;
        physx.PxMat33* pvk_in_m = m;
        physx.PxQuat* pvk_in_axes = axes;
        PxVec3_PxDiagonalizePtr_PxMat33_PxQuat_(&RetRef, pvk_in_m, pvk_in_axes);
        return RetRef;
    }
}
