//Generated by MinBinder.
using System;
using System.Runtime.InteropServices;

public partial struct PxPhysics {


}
public partial struct PxSerializationContext {

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern void C_PxSerializationContext_registerReference(PxSerializationContext cls,PxBasePtr base,PxU32 kind,size_t reference);
    public void registerReference(PxBasePtr base,PxU32 kind,size_t reference){
        return C_PxSerializationContext_registerReference(this,base,kind,reference);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern PxCollection C_CONST_PxSerializationContext_getCollection(PxSerializationContext cls);
    public PxCollection getCollection(){
        return C_CONST_PxSerializationContext_getCollection(this);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern void C_PxSerializationContext_writeData(PxSerializationContext cls,void data,PxU32 size);
    public void writeData(void data,PxU32 size){
        return C_PxSerializationContext_writeData(this,data,size);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern void C_PxSerializationContext_alignData(PxSerializationContext cls,PxU32 alignment);
    public void alignData(PxU32 alignment){
        return C_PxSerializationContext_alignData(this,alignment);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern void C_PxSerializationContext_writeName(PxSerializationContext cls,string name);
    public void writeName(string name){
        return C_PxSerializationContext_writeName(this,name);    
    }


}
public partial struct PxRepXSerializer {


}
public partial struct PxSerializer {


}
public partial struct PxProcessPxBaseCallback {


}
public partial class PxDeserializationContext {
    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern PxBasePtr C_CONST_PxDeserializationContext_resolveReference(PxDeserializationContext cls,PxU32 kind,size_t reference);
    public PxBasePtr resolveReference(PxU32 kind,size_t reference){
        return C_CONST_PxDeserializationContext_resolveReference(this,kind,reference);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern void C_PxDeserializationContext_translatePxBase(PxDeserializationContext cls,PtrPtr base);
    public void translatePxBase(PtrPtr base){
        return C_PxDeserializationContext_translatePxBase(this,base);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern void C_PxDeserializationContext_readName(PxDeserializationContext cls,stringPtr name);
    public void readName(stringPtr name){
        return C_PxDeserializationContext_readName(this,name);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern Ptr C_PxDeserializationContext_readExtraData(PxDeserializationContext cls,PxU32 count);
    public Ptr readExtraData(PxU32 count){
        return C_PxDeserializationContext_readExtraData(this,count);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern Ptr C_PxDeserializationContext_readExtraData(PxDeserializationContext cls,PxU32 count);
    public Ptr readExtraData(PxU32 count){
        return C_PxDeserializationContext_readExtraData(this,count);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern void C_PxDeserializationContext_alignExtraData(PxDeserializationContext cls,PxU32 alignment);
    public void alignExtraData(PxU32 alignment){
        return C_PxDeserializationContext_alignExtraData(this,alignment);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern PxU32 C_CONST_PxDeserializationContext_getPhysXVersion(PxDeserializationContext cls);
    public PxU32 getPhysXVersion(){
        return C_CONST_PxDeserializationContext_getPhysXVersion(this);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern PxDeserializationContext C_PxDeserializationContext_PxDeserializationContext();
    public unsafe PxDeserializationContext(){
        var _new = C_PxDeserializationContext_PxDeserializationContext();        fixed (void* ptr = &this)
          Buffer.MemoryCopy(&_new, ptr, Marshal.SizeOf(this), Marshal.SizeOf(this));    
    }


}
public partial struct PxSerializationRegistry {

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern void C_PxSerializationRegistry_registerSerializer(PxSerializationRegistry cls,PxType type,PxSerializer serializer);
    public void registerSerializer(PxType type,PxSerializer serializer){
        return C_PxSerializationRegistry_registerSerializer(this,type,serializer);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern PxSerializer C_PxSerializationRegistry_unregisterSerializer(PxSerializationRegistry cls,PxType type);
    public PxSerializer unregisterSerializer(PxType type){
        return C_PxSerializationRegistry_unregisterSerializer(this,type);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern void C_PxSerializationRegistry_registerBinaryMetaDataCallback(PxSerializationRegistry cls,PxBinaryMetaDataCallback callback);
    public void registerBinaryMetaDataCallback(PxBinaryMetaDataCallback callback){
        return C_PxSerializationRegistry_registerBinaryMetaDataCallback(this,callback);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern PxSerializer C_CONST_PxSerializationRegistry_getSerializer(PxSerializationRegistry cls,PxType type);
    public PxSerializer getSerializer(PxType type){
        return C_CONST_PxSerializationRegistry_getSerializer(this,type);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern void C_PxSerializationRegistry_registerRepXSerializer(PxSerializationRegistry cls,PxType type,PxRepXSerializer serializer);
    public void registerRepXSerializer(PxType type,PxRepXSerializer serializer){
        return C_PxSerializationRegistry_registerRepXSerializer(this,type,serializer);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern PxRepXSerializer C_PxSerializationRegistry_unregisterRepXSerializer(PxSerializationRegistry cls,PxType type);
    public PxRepXSerializer unregisterRepXSerializer(PxType type){
        return C_PxSerializationRegistry_unregisterRepXSerializer(this,type);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern PxRepXSerializer C_CONST_PxSerializationRegistry_getRepXSerializer(PxSerializationRegistry cls,string typeName);
    public PxRepXSerializer getRepXSerializer(string typeName){
        return C_CONST_PxSerializationRegistry_getRepXSerializer(this,typeName);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern void C_PxSerializationRegistry_release(PxSerializationRegistry cls);
    public void release(){
        return C_PxSerializationRegistry_release(this);    
    }


}
