//Generated by MinBinder.
using System;
using System.Runtime.InteropServices;
using PxBaseFlags = System.UInt32;
using PxActorFlags = System.UInt32;

public partial struct PxSerializationContext { // blittable



    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern PxCollection C_CONST_PxSerializationContext_getCollection(PxSerializationContext cls);
    public PxCollection getCollection(){
        return C_CONST_PxSerializationContext_getCollection(this);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern void C_PxSerializationContext_writeData(PxSerializationContext cls,void data,uint size);
    public void writeData(void data,uint size){
         C_PxSerializationContext_writeData(this,data,size);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern void C_PxSerializationContext_alignData(PxSerializationContext cls,uint alignment);
    public void alignData(uint alignment){
         C_PxSerializationContext_alignData(this,alignment);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern void C_PxSerializationContext_writeName(PxSerializationContext cls,string name);
    public void writeName(string name){
         C_PxSerializationContext_writeName(this,name);    
    }


}
public partial struct PxDeserializationContext { // ptr holder


    private IntPtr nativePtr_;
    
    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern PxBase C_CONST_PxDeserializationContext_resolveReference(PxDeserializationContext cls,uint kind,ulong reference);
    public PxBase resolveReference(uint kind,ulong reference){
        return C_CONST_PxDeserializationContext_resolveReference(this,kind,reference);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern void C_PxDeserializationContext_readName(PxDeserializationContext cls,string name);
    public void readName(string name){
         C_PxDeserializationContext_readName(this,name);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern void C_PxDeserializationContext_alignExtraData(PxDeserializationContext cls,uint alignment);
    public void alignExtraData(uint alignment){
         C_PxDeserializationContext_alignExtraData(this,alignment);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern uint C_CONST_PxDeserializationContext_getPhysXVersion(PxDeserializationContext cls);
    public uint getPhysXVersion(){
        return C_CONST_PxDeserializationContext_getPhysXVersion(this);    
    }


}
public partial struct PxSerializationRegistry { // blittable



    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern PxSerializer C_PxSerializationRegistry_unregisterSerializer(PxSerializationRegistry cls,ushort type);
    public PxSerializer unregisterSerializer(ushort type){
        return C_PxSerializationRegistry_unregisterSerializer(this,type);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern void C_PxSerializationRegistry_registerBinaryMetaDataCallback(PxSerializationRegistry cls,Action<global::PhysX.physx.PxOutputStream stream> callback);
    public void registerBinaryMetaDataCallback(Action<global::PhysX.physx.PxOutputStream stream> callback){
         C_PxSerializationRegistry_registerBinaryMetaDataCallback(this,callback);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern PxSerializer C_CONST_PxSerializationRegistry_getSerializer(PxSerializationRegistry cls,ushort type);
    public PxSerializer getSerializer(ushort type){
        return C_CONST_PxSerializationRegistry_getSerializer(this,type);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern PxRepXSerializer C_PxSerializationRegistry_unregisterRepXSerializer(PxSerializationRegistry cls,ushort type);
    public PxRepXSerializer unregisterRepXSerializer(ushort type){
        return C_PxSerializationRegistry_unregisterRepXSerializer(this,type);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern PxRepXSerializer C_CONST_PxSerializationRegistry_getRepXSerializer(PxSerializationRegistry cls,string typeName);
    public PxRepXSerializer getRepXSerializer(string typeName){
        return C_CONST_PxSerializationRegistry_getRepXSerializer(this,typeName);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern void C_PxSerializationRegistry_release(PxSerializationRegistry cls);
    public void release(){
         C_PxSerializationRegistry_release(this);    
    }


}
