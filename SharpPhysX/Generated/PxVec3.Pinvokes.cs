// Generated by minBND 5.1.91.17 - Â© github.com/Alan-FGR
using System;
using System.Runtime.InteropServices;
public static unsafe partial class minBND_pinvokes {

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxVec3_operator_Ptr_Star_float_PxVec3_(physx.PxVec3* pvk_RetRef, float pvk_f, physx.PxVec3* pvk_v);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void Default_PxVec3_(physx.PxVec3* pvk_RetRef);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void void_PxVec3_PxVec3Ptr_Ctor_PxZERO_(physx.PxVec3* pvk_this, physx.PxZERO pvk_r);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void void_PxVec3_PxVec3Ptr_Ctor_float_(physx.PxVec3* pvk_this, float pvk_a);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void void_PxVec3_PxVec3Ptr_Ctor_float_float_float_(physx.PxVec3* pvk_this, float pvk_nx, float pvk_ny, float pvk_nz);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void void_PxVec3_PxVec3Ptr_Ctor_PxVec3_(physx.PxVec3* pvk_this, physx.PxVec3* pvk_v);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxVec3* PxVec3_PxVec3_operator_Ptr_Equal_PxVec3_(physx.PxVec3* pvk_lhs, physx.PxVec3* pvk_p);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern float* float_PxVec3_operator_Ptr_Subscript_uint_(physx.PxVec3* pvk_lhs, uint pvk_index);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern float* float_const_PxVec3_operator_Ptr_Subscript_uint_(physx.PxVec3* pvk_lhs, uint pvk_index);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern bool bool_const_PxVec3_operator_Ptr_EqualEqual_PxVec3_(physx.PxVec3* pvk_lhs, physx.PxVec3* pvk_v);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern bool bool_const_PxVec3_operator_Ptr_ExclaimEqual_PxVec3_(physx.PxVec3* pvk_lhs, physx.PxVec3* pvk_v);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern bool bool_const_PxVec3_isZeroPtr(physx.PxVec3* pvk_this);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern bool bool_const_PxVec3_isFinitePtr(physx.PxVec3* pvk_this);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern bool bool_const_PxVec3_isNormalizedPtr(physx.PxVec3* pvk_this);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern float float_const_PxVec3_magnitudeSquaredPtr(physx.PxVec3* pvk_this);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern float float_const_PxVec3_magnitudePtr(physx.PxVec3* pvk_this);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxVec3_const_PxVec3_operator_Ptr_Minus(physx.PxVec3* pvk_RetRef, physx.PxVec3* pvk_lhs);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxVec3_const_PxVec3_operator_Ptr_Plus_PxVec3_(physx.PxVec3* pvk_RetRef, physx.PxVec3* pvk_lhs, physx.PxVec3* pvk_v);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxVec3_const_PxVec3_operator_Ptr_Minus_PxVec3_(physx.PxVec3* pvk_RetRef, physx.PxVec3* pvk_lhs, physx.PxVec3* pvk_v);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxVec3_const_PxVec3_operator_Ptr_Star_float_(physx.PxVec3* pvk_RetRef, physx.PxVec3* pvk_lhs, float pvk_f);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxVec3_const_PxVec3_operator_Ptr_Slash_float_(physx.PxVec3* pvk_RetRef, physx.PxVec3* pvk_lhs, float pvk_f);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxVec3* PxVec3_PxVec3_operator_Ptr_PlusEqual_PxVec3_(physx.PxVec3* pvk_lhs, physx.PxVec3* pvk_v);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxVec3* PxVec3_PxVec3_operator_Ptr_MinusEqual_PxVec3_(physx.PxVec3* pvk_lhs, physx.PxVec3* pvk_v);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxVec3* PxVec3_PxVec3_operator_Ptr_StarEqual_float_(physx.PxVec3* pvk_lhs, float pvk_f);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxVec3* PxVec3_PxVec3_operator_Ptr_SlashEqual_float_(physx.PxVec3* pvk_lhs, float pvk_f);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern float float_const_PxVec3_dotPtr_PxVec3_(physx.PxVec3* pvk_this, physx.PxVec3* pvk_v);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxVec3_const_PxVec3_crossPtr_PxVec3_(physx.PxVec3* pvk_RetRef, physx.PxVec3* pvk_this, physx.PxVec3* pvk_v);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxVec3_const_PxVec3_getNormalizedPtr(physx.PxVec3* pvk_RetRef, physx.PxVec3* pvk_this);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern float float_PxVec3_normalizePtr(physx.PxVec3* pvk_this);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern float float_PxVec3_normalizeSafePtr(physx.PxVec3* pvk_this);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern float float_PxVec3_normalizeFastPtr(physx.PxVec3* pvk_this);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxVec3_const_PxVec3_multiplyPtr_PxVec3_(physx.PxVec3* pvk_RetRef, physx.PxVec3* pvk_this, physx.PxVec3* pvk_a);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxVec3_const_PxVec3_minimumPtr_PxVec3_(physx.PxVec3* pvk_RetRef, physx.PxVec3* pvk_this, physx.PxVec3* pvk_v);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern float float_const_PxVec3_minElementPtr(physx.PxVec3* pvk_this);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxVec3_const_PxVec3_maximumPtr_PxVec3_(physx.PxVec3* pvk_RetRef, physx.PxVec3* pvk_this, physx.PxVec3* pvk_v);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern float float_const_PxVec3_maxElementPtr(physx.PxVec3* pvk_this);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxVec3_const_PxVec3_absPtr(physx.PxVec3* pvk_RetRef, physx.PxVec3* pvk_this);

}
