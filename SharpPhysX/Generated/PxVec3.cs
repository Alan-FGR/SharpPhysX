//Generated by MinBinder.
using System.Runtime.InteropServices;
public partial class PxVec3 {
[DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
static extern PxVec3 __Star(float f, PxVec3Ptr v);

}
public partial class PxVec3 {
 float x;
 float y;
 float z;

[DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
static extern PxVec3Ptr __REF_PxVec3__Equal(PxVec3 cls, PxVec3Ptr p);

[DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
static extern floatPtr __REF_PxVec3__Subscript(PxVec3 cls, uint index);

[DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
static extern floatPtr __REF_PxVec3__Subscript(PxVec3 cls, uint index);

[DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
static extern bool PxVec3__EqualEqual(PxVec3 cls, PxVec3Ptr v);

[DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
static extern bool PxVec3__ExclaimEqual(PxVec3 cls, PxVec3Ptr v);

[DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
static extern bool PxVec3__isZero(PxVec3 cls);

[DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
static extern bool PxVec3__isFinite(PxVec3 cls);

[DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
static extern bool PxVec3__isNormalized(PxVec3 cls);

[DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
static extern float PxVec3__magnitudeSquared(PxVec3 cls);

[DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
static extern float PxVec3__magnitude(PxVec3 cls);

[DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
static extern PxVec3 PxVec3__Minus(PxVec3 cls);

[DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
static extern PxVec3 PxVec3__Plus(PxVec3 cls, PxVec3Ptr v);

[DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
static extern PxVec3 PxVec3__Minus(PxVec3 cls, PxVec3Ptr v);

[DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
static extern PxVec3 PxVec3__Star(PxVec3 cls, float f);

[DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
static extern PxVec3 PxVec3__Slash(PxVec3 cls, float f);

[DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
static extern PxVec3Ptr __REF_PxVec3__PlusEqual(PxVec3 cls, PxVec3Ptr v);

[DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
static extern PxVec3Ptr __REF_PxVec3__MinusEqual(PxVec3 cls, PxVec3Ptr v);

[DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
static extern PxVec3Ptr __REF_PxVec3__StarEqual(PxVec3 cls, float f);

[DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
static extern PxVec3Ptr __REF_PxVec3__SlashEqual(PxVec3 cls, float f);

[DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
static extern float PxVec3__dot(PxVec3 cls, PxVec3Ptr v);

[DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
static extern PxVec3 PxVec3__cross(PxVec3 cls, PxVec3Ptr v);

[DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
static extern PxVec3 PxVec3__getNormalized(PxVec3 cls);

[DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
static extern float PxVec3__normalize(PxVec3 cls);

[DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
static extern float PxVec3__normalizeSafe(PxVec3 cls);

[DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
static extern float PxVec3__normalizeFast(PxVec3 cls);

[DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
static extern PxVec3 PxVec3__multiply(PxVec3 cls, PxVec3Ptr a);

[DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
static extern PxVec3 PxVec3__minimum(PxVec3 cls, PxVec3Ptr v);

[DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
static extern float PxVec3__minElement(PxVec3 cls);

[DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
static extern PxVec3 PxVec3__maximum(PxVec3 cls, PxVec3Ptr v);

[DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
static extern float PxVec3__maxElement(PxVec3 cls);

[DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
static extern PxVec3 PxVec3__abs(PxVec3 cls);

}
