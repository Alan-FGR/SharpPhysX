// Generated by minBND 5.1.91.17 - Â© github.com/Alan-FGR
using System;
using System.Runtime.InteropServices;
using static minBND_pinvokes;

public static unsafe partial class physx {

    public static physx.PxFlags_PxArticulationAxisEnum_bytePtr OpPipe_New(physx.PxArticulationAxisEnum a, physx.PxArticulationAxisEnum b) {
        physx.PxArticulationAxisEnum pvk_in_a = a;
        physx.PxArticulationAxisEnum pvk_in_b = b;
        return PxFlags_PxArticulationAxisEnum_bytePtr_operator_Ptr_Pipe_PxArticulationAxisEnum_PxArticulationAxisEnum_(pvk_in_a, pvk_in_b);
    }

    public static physx.PxFlags_PxArticulationAxisEnum_bytePtr OpAnd_New(physx.PxArticulationAxisEnum a, physx.PxArticulationAxisEnum b) {
        physx.PxArticulationAxisEnum pvk_in_a = a;
        physx.PxArticulationAxisEnum pvk_in_b = b;
        return PxFlags_PxArticulationAxisEnum_bytePtr_operator_Ptr_Amp_PxArticulationAxisEnum_PxArticulationAxisEnum_(pvk_in_a, pvk_in_b);
    }

    public static physx.PxFlags_PxArticulationAxisEnum_bytePtr OpTilde_New(physx.PxArticulationAxisEnum a) {
        physx.PxArticulationAxisEnum pvk_in_a = a;
        return PxFlags_PxArticulationAxisEnum_bytePtr_operator_Ptr_Tilde_PxArticulationAxisEnum_(pvk_in_a);
    }

    public static physx.PxArticulationMotionsPtr OpPipe_New(physx.PxArticulationMotionEnum a, physx.PxArticulationMotionEnum b) {
        physx.PxArticulationMotionEnum pvk_in_a = a;
        physx.PxArticulationMotionEnum pvk_in_b = b;
        return PxArticulationMotionsPtr_operator_Ptr_Pipe_PxArticulationMotionEnum_PxArticulationMotionEnum_(pvk_in_a, pvk_in_b);
    }

    public static physx.PxArticulationMotionsPtr OpAnd_New(physx.PxArticulationMotionEnum a, physx.PxArticulationMotionEnum b) {
        physx.PxArticulationMotionEnum pvk_in_a = a;
        physx.PxArticulationMotionEnum pvk_in_b = b;
        return PxArticulationMotionsPtr_operator_Ptr_Amp_PxArticulationMotionEnum_PxArticulationMotionEnum_(pvk_in_a, pvk_in_b);
    }

    public static physx.PxArticulationMotionsPtr OpTilde_New(physx.PxArticulationMotionEnum a) {
        physx.PxArticulationMotionEnum pvk_in_a = a;
        return PxArticulationMotionsPtr_operator_Ptr_Tilde_PxArticulationMotionEnum_(pvk_in_a);
    }

    public enum PxArticulationJointDriveTypeEnum : int {
        eTARGET = 0, // eTARGET = 0
        eERROR = 1,  // eERROR = 1
    }

    public enum PxArticulationAxisEnum : int {
        eTWIST = 0,  // eTWIST = 0
        eSWING1 = 1, // eSWING1 = 1
        eSWING2 = 2, // eSWING2 = 2
        eX = 3,      // eX = 3
        eY = 4,      // eY = 4
        eZ = 5,      // eZ = 5
        eCOUNT = 6,  // eCOUNT = 6
    }

    public enum PxArticulationMotionEnum : int {
        eLOCKED = 0,  // eLOCKED = 0
        eLIMITED = 1, // eLIMITED = 1
        eFREE = 2,    // eFREE = 2
    }

    public enum PxArticulationJointTypeEnum : int {
        ePRISMATIC = 0, // ePRISMATIC = 0
        eREVOLUTE = 1,  // eREVOLUTE = 1
        eSPHERICAL = 2, // eSPHERICAL = 2
        eFIX = 3,       // eFIX = 3
        eUNDEFINED = 4, // eUNDEFINED = 4
    }

    public unsafe partial struct PxArticulationJointBasePtr : physx.PxArticulationJointBasePtr.IPxArticulationJointBasePtr, physx.PxBasePtr.IPxBasePtr {
        private System.IntPtr nativePtr_;

        public physx.PxArticulationLinkPtr getParentArticulationLink() {
            physx.PxArticulationJointBasePtr pvk_in_this = this;
            return PxArticulationLinkPtr_const_PxArticulationJointBasePtr_getParentArticulationLinkPtr(pvk_in_this);
        }

        public void setParentPose(physx.PxTransform* pose) {
            physx.PxArticulationJointBasePtr pvk_in_this = this;
            physx.PxTransform* pvk_in_pose = pose;
            void_PxArticulationJointBasePtr_setParentPosePtr_PxTransform_(pvk_in_this, pvk_in_pose);
        }

        public physx.PxTransform getParentPose() {
            physx.PxTransform RetRef;
            physx.PxArticulationJointBasePtr pvk_in_this = this;
            PxTransform_const_PxArticulationJointBasePtr_getParentPosePtr(&RetRef, pvk_in_this);
            return RetRef;
        }

        public physx.PxArticulationLinkPtr getChildArticulationLink() {
            physx.PxArticulationJointBasePtr pvk_in_this = this;
            return PxArticulationLinkPtr_const_PxArticulationJointBasePtr_getChildArticulationLinkPtr(pvk_in_this);
        }

        public void setChildPose(physx.PxTransform* pose) {
            physx.PxArticulationJointBasePtr pvk_in_this = this;
            physx.PxTransform* pvk_in_pose = pose;
            void_PxArticulationJointBasePtr_setChildPosePtr_PxTransform_(pvk_in_this, pvk_in_pose);
        }

        public physx.PxTransform getChildPose() {
            physx.PxTransform RetRef;
            physx.PxArticulationJointBasePtr pvk_in_this = this;
            PxTransform_const_PxArticulationJointBasePtr_getChildPosePtr(&RetRef, pvk_in_this);
            return RetRef;
        }

        public void setParentPose(physx.PxTransform pose) {
            setParentPose((physx.PxTransform*)&pose);
        }

        public void setParentPose(physx.PxTransform.Ref pose) {
            setParentPose((physx.PxTransform*)(*((IntPtr*)(&pose))));
        }

        public void setChildPose(physx.PxTransform pose) {
            setChildPose((physx.PxTransform*)&pose);
        }

        public void setChildPose(physx.PxTransform.Ref pose) {
            setChildPose((physx.PxTransform*)(*((IntPtr*)(&pose))));
        }
        public static implicit operator physx.PxBasePtr(PxArticulationJointBasePtr obj) => *(physx.PxBasePtr*)&obj;
        public static explicit operator PxArticulationJointBasePtr(physx.PxBasePtr obj) => *(PxArticulationJointBasePtr*)&obj;

        public void release(){((physx.PxBasePtr)this).release();}
        public string getConcreteTypeName(){return((physx.PxBasePtr)this).getConcreteTypeName();}
        public ushort getConcreteType(){return((physx.PxBasePtr)this).getConcreteType();}
        public void setBaseFlag(physx.PxBaseFlagEnum flag, bool value){((physx.PxBasePtr)this).setBaseFlag(flag, value);}
        public void setBaseFlags(physx.PxBaseFlagsPtr inFlags){((physx.PxBasePtr)this).setBaseFlags(inFlags);}
        public physx.PxBaseFlagsPtr getBaseFlags_New(){return((physx.PxBasePtr)this).getBaseFlags_New();}
        public bool isReleasable(){return((physx.PxBasePtr)this).isReleasable();}

        public unsafe interface IPxArticulationJointBasePtr {
            physx.PxArticulationLinkPtr getParentArticulationLink();
            void setParentPose(physx.PxTransform* pose);
            physx.PxTransform getParentPose();
            physx.PxArticulationLinkPtr getChildArticulationLink();
            void setChildPose(physx.PxTransform* pose);
            physx.PxTransform getChildPose();
            void setParentPose(physx.PxTransform pose);
            void setParentPose(physx.PxTransform.Ref pose);
            void setChildPose(physx.PxTransform pose);
            void setChildPose(physx.PxTransform.Ref pose);
        }
    }

    public unsafe partial struct PxArticulationJointPtr : physx.PxArticulationJointBasePtr.IPxArticulationJointBasePtr, physx.PxBasePtr.IPxBasePtr {
        private System.IntPtr nativePtr_;

        public void setTargetOrientation(physx.PxQuat* orientation) {
            physx.PxArticulationJointPtr pvk_in_this = this;
            physx.PxQuat* pvk_in_orientation = orientation;
            void_PxArticulationJointPtr_setTargetOrientationPtr_PxQuat_(pvk_in_this, pvk_in_orientation);
        }

        public physx.PxQuat getTargetOrientation() {
            physx.PxQuat RetRef;
            physx.PxArticulationJointPtr pvk_in_this = this;
            PxQuat_const_PxArticulationJointPtr_getTargetOrientationPtr(&RetRef, pvk_in_this);
            return RetRef;
        }

        public void setTargetVelocity(physx.PxVec3* velocity) {
            physx.PxArticulationJointPtr pvk_in_this = this;
            physx.PxVec3* pvk_in_velocity = velocity;
            void_PxArticulationJointPtr_setTargetVelocityPtr_PxVec3_(pvk_in_this, pvk_in_velocity);
        }

        public physx.PxVec3 getTargetVelocity() {
            physx.PxVec3 RetRef;
            physx.PxArticulationJointPtr pvk_in_this = this;
            PxVec3_const_PxArticulationJointPtr_getTargetVelocityPtr(&RetRef, pvk_in_this);
            return RetRef;
        }

        public void setDriveType(physx.PxArticulationJointDriveTypeEnum driveType) {
            physx.PxArticulationJointPtr pvk_in_this = this;
            physx.PxArticulationJointDriveTypeEnum pvk_in_driveType = driveType;
            void_PxArticulationJointPtr_setDriveTypePtr_PxArticulationJointDriveTypeEnum_(pvk_in_this, pvk_in_driveType);
        }

        public physx.PxArticulationJointDriveTypeEnum getDriveType() {
            physx.PxArticulationJointPtr pvk_in_this = this;
            return PxArticulationJointDriveTypeEnum_const_PxArticulationJointPtr_getDriveTypePtr(pvk_in_this);
        }

        public void setStiffness(float spring) {
            physx.PxArticulationJointPtr pvk_in_this = this;
            float pvk_in_spring = spring;
            void_PxArticulationJointPtr_setStiffnessPtr_float_(pvk_in_this, pvk_in_spring);
        }

        public float getStiffness() {
            physx.PxArticulationJointPtr pvk_in_this = this;
            return float_const_PxArticulationJointPtr_getStiffnessPtr(pvk_in_this);
        }

        public void setDamping(float damping) {
            physx.PxArticulationJointPtr pvk_in_this = this;
            float pvk_in_damping = damping;
            void_PxArticulationJointPtr_setDampingPtr_float_(pvk_in_this, pvk_in_damping);
        }

        public float getDamping() {
            physx.PxArticulationJointPtr pvk_in_this = this;
            return float_const_PxArticulationJointPtr_getDampingPtr(pvk_in_this);
        }

        public void setInternalCompliance(float compliance) {
            physx.PxArticulationJointPtr pvk_in_this = this;
            float pvk_in_compliance = compliance;
            void_PxArticulationJointPtr_setInternalCompliancePtr_float_(pvk_in_this, pvk_in_compliance);
        }

        public float getInternalCompliance() {
            physx.PxArticulationJointPtr pvk_in_this = this;
            return float_const_PxArticulationJointPtr_getInternalCompliancePtr(pvk_in_this);
        }

        public void setExternalCompliance(float compliance) {
            physx.PxArticulationJointPtr pvk_in_this = this;
            float pvk_in_compliance = compliance;
            void_PxArticulationJointPtr_setExternalCompliancePtr_float_(pvk_in_this, pvk_in_compliance);
        }

        public float getExternalCompliance() {
            physx.PxArticulationJointPtr pvk_in_this = this;
            return float_const_PxArticulationJointPtr_getExternalCompliancePtr(pvk_in_this);
        }

        public void setSwingLimit(float zLimit, float yLimit) {
            physx.PxArticulationJointPtr pvk_in_this = this;
            float pvk_in_zLimit = zLimit;
            float pvk_in_yLimit = yLimit;
            void_PxArticulationJointPtr_setSwingLimitPtr_float_float_(pvk_in_this, pvk_in_zLimit, pvk_in_yLimit);
        }

        public void getSwingLimit(float* zLimit, float* yLimit) {
            physx.PxArticulationJointPtr pvk_in_this = this;
            float* pvk_in_zLimit = zLimit;
            float* pvk_in_yLimit = yLimit;
            void_const_PxArticulationJointPtr_getSwingLimitPtr_float_float_(pvk_in_this, pvk_in_zLimit, pvk_in_yLimit);
        }

        public void setTangentialStiffness(float spring) {
            physx.PxArticulationJointPtr pvk_in_this = this;
            float pvk_in_spring = spring;
            void_PxArticulationJointPtr_setTangentialStiffnessPtr_float_(pvk_in_this, pvk_in_spring);
        }

        public float getTangentialStiffness() {
            physx.PxArticulationJointPtr pvk_in_this = this;
            return float_const_PxArticulationJointPtr_getTangentialStiffnessPtr(pvk_in_this);
        }

        public void setTangentialDamping(float damping) {
            physx.PxArticulationJointPtr pvk_in_this = this;
            float pvk_in_damping = damping;
            void_PxArticulationJointPtr_setTangentialDampingPtr_float_(pvk_in_this, pvk_in_damping);
        }

        public float getTangentialDamping() {
            physx.PxArticulationJointPtr pvk_in_this = this;
            return float_const_PxArticulationJointPtr_getTangentialDampingPtr(pvk_in_this);
        }

        public void setSwingLimitContactDistance(float contactDistance) {
            physx.PxArticulationJointPtr pvk_in_this = this;
            float pvk_in_contactDistance = contactDistance;
            void_PxArticulationJointPtr_setSwingLimitContactDistancePtr_float_(pvk_in_this, pvk_in_contactDistance);
        }

        public float getSwingLimitContactDistance() {
            physx.PxArticulationJointPtr pvk_in_this = this;
            return float_const_PxArticulationJointPtr_getSwingLimitContactDistancePtr(pvk_in_this);
        }

        public void setSwingLimitEnabled(bool enabled) {
            physx.PxArticulationJointPtr pvk_in_this = this;
            bool pvk_in_enabled = enabled;
            void_PxArticulationJointPtr_setSwingLimitEnabledPtr_bool_(pvk_in_this, pvk_in_enabled);
        }

        public bool getSwingLimitEnabled() {
            physx.PxArticulationJointPtr pvk_in_this = this;
            return bool_const_PxArticulationJointPtr_getSwingLimitEnabledPtr(pvk_in_this);
        }

        public void setTwistLimit(float lower, float upper) {
            physx.PxArticulationJointPtr pvk_in_this = this;
            float pvk_in_lower = lower;
            float pvk_in_upper = upper;
            void_PxArticulationJointPtr_setTwistLimitPtr_float_float_(pvk_in_this, pvk_in_lower, pvk_in_upper);
        }

        public void getTwistLimit(float* lower, float* upper) {
            physx.PxArticulationJointPtr pvk_in_this = this;
            float* pvk_in_lower = lower;
            float* pvk_in_upper = upper;
            void_const_PxArticulationJointPtr_getTwistLimitPtr_float_float_(pvk_in_this, pvk_in_lower, pvk_in_upper);
        }

        public void setTwistLimitEnabled(bool enabled) {
            physx.PxArticulationJointPtr pvk_in_this = this;
            bool pvk_in_enabled = enabled;
            void_PxArticulationJointPtr_setTwistLimitEnabledPtr_bool_(pvk_in_this, pvk_in_enabled);
        }

        public bool getTwistLimitEnabled() {
            physx.PxArticulationJointPtr pvk_in_this = this;
            return bool_const_PxArticulationJointPtr_getTwistLimitEnabledPtr(pvk_in_this);
        }

        public void setTwistLimitContactDistance(float contactDistance) {
            physx.PxArticulationJointPtr pvk_in_this = this;
            float pvk_in_contactDistance = contactDistance;
            void_PxArticulationJointPtr_setTwistLimitContactDistancePtr_float_(pvk_in_this, pvk_in_contactDistance);
        }

        public float getTwistLimitContactDistance() {
            physx.PxArticulationJointPtr pvk_in_this = this;
            return float_const_PxArticulationJointPtr_getTwistLimitContactDistancePtr(pvk_in_this);
        }

        public string getConcreteTypeName() {
            physx.PxArticulationJointPtr pvk_in_this = this;
            return string_const_PxArticulationJointPtr_getConcreteTypeNamePtr(pvk_in_this);
        }

        public void setTargetOrientation(physx.PxQuat orientation) {
            setTargetOrientation((physx.PxQuat*)&orientation);
        }

        public void setTargetOrientation(physx.PxQuat.Ref orientation) {
            setTargetOrientation((physx.PxQuat*)(*((IntPtr*)(&orientation))));
        }

        public void setTargetVelocity(physx.PxVec3 velocity) {
            setTargetVelocity((physx.PxVec3*)&velocity);
        }

        public void setTargetVelocity(physx.PxVec3.Ref velocity) {
            setTargetVelocity((physx.PxVec3*)(*((IntPtr*)(&velocity))));
        }
        public static implicit operator physx.PxArticulationJointBasePtr(PxArticulationJointPtr obj) => *(physx.PxArticulationJointBasePtr*)&obj;
        public static explicit operator PxArticulationJointPtr(physx.PxArticulationJointBasePtr obj) => *(PxArticulationJointPtr*)&obj;
        public static implicit operator physx.PxBasePtr(PxArticulationJointPtr obj) => *(physx.PxBasePtr*)&obj;
        public static explicit operator PxArticulationJointPtr(physx.PxBasePtr obj) => *(PxArticulationJointPtr*)&obj;

        public physx.PxArticulationLinkPtr getParentArticulationLink(){return((physx.PxArticulationJointBasePtr)this).getParentArticulationLink();}
        public void setParentPose(physx.PxTransform* pose){((physx.PxArticulationJointBasePtr)this).setParentPose(pose);}
        public physx.PxTransform getParentPose(){return((physx.PxArticulationJointBasePtr)this).getParentPose();}
        public physx.PxArticulationLinkPtr getChildArticulationLink(){return((physx.PxArticulationJointBasePtr)this).getChildArticulationLink();}
        public void setChildPose(physx.PxTransform* pose){((physx.PxArticulationJointBasePtr)this).setChildPose(pose);}
        public physx.PxTransform getChildPose(){return((physx.PxArticulationJointBasePtr)this).getChildPose();}
        public void setParentPose(physx.PxTransform pose){((physx.PxArticulationJointBasePtr)this).setParentPose((physx.PxTransform*)&pose);}
        public void setParentPose(physx.PxTransform.Ref pose){((physx.PxArticulationJointBasePtr)this).setParentPose((physx.PxTransform*)(*((IntPtr*)(&pose))));}
        public void setChildPose(physx.PxTransform pose){((physx.PxArticulationJointBasePtr)this).setChildPose((physx.PxTransform*)&pose);}
        public void setChildPose(physx.PxTransform.Ref pose){((physx.PxArticulationJointBasePtr)this).setChildPose((physx.PxTransform*)(*((IntPtr*)(&pose))));}
        public void release(){((physx.PxBasePtr)this).release();}
        public ushort getConcreteType(){return((physx.PxBasePtr)this).getConcreteType();}
        public void setBaseFlag(physx.PxBaseFlagEnum flag, bool value){((physx.PxBasePtr)this).setBaseFlag(flag, value);}
        public void setBaseFlags(physx.PxBaseFlagsPtr inFlags){((physx.PxBasePtr)this).setBaseFlags(inFlags);}
        public physx.PxBaseFlagsPtr getBaseFlags_New(){return((physx.PxBasePtr)this).getBaseFlags_New();}
        public bool isReleasable(){return((physx.PxBasePtr)this).isReleasable();}
    }

}
