// Generated by minBND 5.1.81.43 - Â© github.com/Alan-FGR
//Unit PxSphereGeometry
using System;
using System.Runtime.InteropServices;

public static unsafe partial class physx {
    public unsafe partial struct PxSphereGeometryPtr : physx.PxGeometryPtr.IPxGeometryPtr {
        private System.IntPtr nativePtr_;
        
    [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void Freer_physx_PxSphereGeometryPtr(PxSphereGeometryPtr ptr);
        
        public static void Free(PxSphereGeometryPtr ptr){
            Freer_physx_PxSphereGeometryPtr(ptr);
        }
        public void Free(){
            Freer_physx_PxSphereGeometryPtr(this);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxSphereGeometryPtr Ctor_physx_PxSphereGeometryPtr_();
        
        public static physx.PxSphereGeometryPtr New() {
            return Ctor_physx_PxSphereGeometryPtr_();
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxSphereGeometryPtr Ctor_physx_PxSphereGeometryPtr_float(float pvk_ir);
        
        public static physx.PxSphereGeometryPtr New(float ir) {
            float pvk_in_ir = ir;
            return Ctor_physx_PxSphereGeometryPtr_float(pvk_in_ir);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern float PxSphereGeometry_GET_radius(PxSphereGeometryPtr cls);
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void PxSphereGeometry_SET_radius(PxSphereGeometryPtr cls, float value);
        
        public float radius {
            get => PxSphereGeometry_GET_radius(this);
            set => PxSphereGeometry_SET_radius(this, value);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern bool bool_const_physx_PxSphereGeometry_isValid(physx.PxSphereGeometryPtr pvk_this);
        
        public bool isValid() {
            physx.PxSphereGeometryPtr pvk_in_this = this;
            return bool_const_physx_PxSphereGeometry_isValid(pvk_in_this);
        }
        public static implicit operator physx.PxGeometryPtr(PxSphereGeometryPtr obj) => *(physx.PxGeometryPtr*)&obj;
        public static explicit operator PxSphereGeometryPtr(physx.PxGeometryPtr obj) => *(PxSphereGeometryPtr*)&obj;
    
        // PIPING
        public physx.PxGeometryTypeEnum getType(){return((physx.PxGeometryPtr)this).getType();}
    }
    
}
