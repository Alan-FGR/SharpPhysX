// Generated by minBND 5.1.94.90 - Â© github.com/Alan-FGR
using System;
using System.Runtime.InteropServices;
public static unsafe partial class minBND_pinvokes {

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxFlags_PxArticulationAxis_bytePtr PxFlags_PxArticulationAxis_bytePtr_operator_Ptr_Pipe_PxArticulationAxis_PxArticulationAxis_(physx.PxArticulationAxis pvk_a, physx.PxArticulationAxis pvk_b);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxFlags_PxArticulationAxis_bytePtr PxFlags_PxArticulationAxis_bytePtr_operator_Ptr_Amp_PxArticulationAxis_PxArticulationAxis_(physx.PxArticulationAxis pvk_a, physx.PxArticulationAxis pvk_b);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxFlags_PxArticulationAxis_bytePtr PxFlags_PxArticulationAxis_bytePtr_operator_Ptr_Tilde_PxArticulationAxis_(physx.PxArticulationAxis pvk_a);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxArticulationMotionsPtr PxArticulationMotionsPtr_operator_Ptr_Pipe_PxArticulationMotion_PxArticulationMotion_(physx.PxArticulationMotion pvk_a, physx.PxArticulationMotion pvk_b);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxArticulationMotionsPtr PxArticulationMotionsPtr_operator_Ptr_Amp_PxArticulationMotion_PxArticulationMotion_(physx.PxArticulationMotion pvk_a, physx.PxArticulationMotion pvk_b);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxArticulationMotionsPtr PxArticulationMotionsPtr_operator_Ptr_Tilde_PxArticulationMotion_(physx.PxArticulationMotion pvk_a);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxArticulationLinkPtr PxArticulationLinkPtr_const_PxArticulationJointBasePtr_getParentArticulationLinkPtr(physx.PxArticulationJointBasePtr pvk_this);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void void_PxArticulationJointBasePtr_setParentPosePtr_PxTransform_(physx.PxArticulationJointBasePtr pvk_this, physx.PxTransform* pvk_pose);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxTransform_const_PxArticulationJointBasePtr_getParentPosePtr(physx.PxTransform* pvk_RetRef, physx.PxArticulationJointBasePtr pvk_this);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxArticulationLinkPtr PxArticulationLinkPtr_const_PxArticulationJointBasePtr_getChildArticulationLinkPtr(physx.PxArticulationJointBasePtr pvk_this);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void void_PxArticulationJointBasePtr_setChildPosePtr_PxTransform_(physx.PxArticulationJointBasePtr pvk_this, physx.PxTransform* pvk_pose);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxTransform_const_PxArticulationJointBasePtr_getChildPosePtr(physx.PxTransform* pvk_RetRef, physx.PxArticulationJointBasePtr pvk_this);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void void_PxArticulationJointPtr_setTargetOrientationPtr_PxQuat_(physx.PxArticulationJointPtr pvk_this, physx.PxQuat* pvk_orientation);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxQuat_const_PxArticulationJointPtr_getTargetOrientationPtr(physx.PxQuat* pvk_RetRef, physx.PxArticulationJointPtr pvk_this);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void void_PxArticulationJointPtr_setTargetVelocityPtr_PxVec3_(physx.PxArticulationJointPtr pvk_this, physx.PxVec3* pvk_velocity);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxVec3_const_PxArticulationJointPtr_getTargetVelocityPtr(physx.PxVec3* pvk_RetRef, physx.PxArticulationJointPtr pvk_this);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void void_PxArticulationJointPtr_setDriveTypePtr_PxArticulationJointDriveType_(physx.PxArticulationJointPtr pvk_this, physx.PxArticulationJointDriveType pvk_driveType);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxArticulationJointDriveType PxArticulationJointDriveType_const_PxArticulationJointPtr_getDriveTypePtr(physx.PxArticulationJointPtr pvk_this);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void void_PxArticulationJointPtr_setStiffnessPtr_float_(physx.PxArticulationJointPtr pvk_this, float pvk_spring);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern float float_const_PxArticulationJointPtr_getStiffnessPtr(physx.PxArticulationJointPtr pvk_this);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void void_PxArticulationJointPtr_setDampingPtr_float_(physx.PxArticulationJointPtr pvk_this, float pvk_damping);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern float float_const_PxArticulationJointPtr_getDampingPtr(physx.PxArticulationJointPtr pvk_this);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void void_PxArticulationJointPtr_setInternalCompliancePtr_float_(physx.PxArticulationJointPtr pvk_this, float pvk_compliance);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern float float_const_PxArticulationJointPtr_getInternalCompliancePtr(physx.PxArticulationJointPtr pvk_this);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void void_PxArticulationJointPtr_setExternalCompliancePtr_float_(physx.PxArticulationJointPtr pvk_this, float pvk_compliance);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern float float_const_PxArticulationJointPtr_getExternalCompliancePtr(physx.PxArticulationJointPtr pvk_this);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void void_PxArticulationJointPtr_setSwingLimitPtr_float_float_(physx.PxArticulationJointPtr pvk_this, float pvk_zLimit, float pvk_yLimit);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void void_const_PxArticulationJointPtr_getSwingLimitPtr_float_float_(physx.PxArticulationJointPtr pvk_this, float* pvk_zLimit, float* pvk_yLimit);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void void_PxArticulationJointPtr_setTangentialStiffnessPtr_float_(physx.PxArticulationJointPtr pvk_this, float pvk_spring);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern float float_const_PxArticulationJointPtr_getTangentialStiffnessPtr(physx.PxArticulationJointPtr pvk_this);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void void_PxArticulationJointPtr_setTangentialDampingPtr_float_(physx.PxArticulationJointPtr pvk_this, float pvk_damping);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern float float_const_PxArticulationJointPtr_getTangentialDampingPtr(physx.PxArticulationJointPtr pvk_this);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void void_PxArticulationJointPtr_setSwingLimitContactDistancePtr_float_(physx.PxArticulationJointPtr pvk_this, float pvk_contactDistance);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern float float_const_PxArticulationJointPtr_getSwingLimitContactDistancePtr(physx.PxArticulationJointPtr pvk_this);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void void_PxArticulationJointPtr_setSwingLimitEnabledPtr_bool_(physx.PxArticulationJointPtr pvk_this, bool pvk_enabled);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern bool bool_const_PxArticulationJointPtr_getSwingLimitEnabledPtr(physx.PxArticulationJointPtr pvk_this);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void void_PxArticulationJointPtr_setTwistLimitPtr_float_float_(physx.PxArticulationJointPtr pvk_this, float pvk_lower, float pvk_upper);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void void_const_PxArticulationJointPtr_getTwistLimitPtr_float_float_(physx.PxArticulationJointPtr pvk_this, float* pvk_lower, float* pvk_upper);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void void_PxArticulationJointPtr_setTwistLimitEnabledPtr_bool_(physx.PxArticulationJointPtr pvk_this, bool pvk_enabled);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern bool bool_const_PxArticulationJointPtr_getTwistLimitEnabledPtr(physx.PxArticulationJointPtr pvk_this);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void void_PxArticulationJointPtr_setTwistLimitContactDistancePtr_float_(physx.PxArticulationJointPtr pvk_this, float pvk_contactDistance);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern float float_const_PxArticulationJointPtr_getTwistLimitContactDistancePtr(physx.PxArticulationJointPtr pvk_this);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern string string_const_PxArticulationJointPtr_getConcreteTypeNamePtr(physx.PxArticulationJointPtr pvk_this);

}
