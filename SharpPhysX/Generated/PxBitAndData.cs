// Generated by minBND 5.1.78.26 - Â© github.com/Alan-FGR
//DEBUG: UnitNode  - 0
//Unit PxBitAndData
using System;
using System.Runtime.InteropServices;

//DEBUG: NamespaceNode physx - 39-83
public static unsafe partial class physx {
    //DEBUG: ClassNode physx::PxBitAndDataT - 44-77
    //Type PxBitAndDataT is template class, adding templated class node
    public unsafe partial struct PxBitAndBytePtr{
        private System.IntPtr nativePtr_;
        
    //DEBUG: NewerFreerNode physx::PxBitAndDataT<byte, > - -1
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void Freer_PxBitAndBytePtr(PxBitAndBytePtr ptr);
        
        public static void Free(PxBitAndBytePtr ptr){
            Freer_PxBitAndBytePtr(ptr);
        }
        public void Free(){
            Freer_PxBitAndBytePtr(this);
        }
        
        //DEBUG: PtrStructCtorNode physx::PxBitAndDataT<byte, >::PxBitAndDataT - 47
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern PxBitAndBytePtr Ctor_PxBitAndBytePtr_physx_PxEMPTY(physx.PxEMPTY pvk__);
        
        public static PxBitAndBytePtr New(physx.PxEMPTY _) {
            //RET nat: PxBitAndBytePtr, man: PxBitAndBytePtr, stg: PtrStruct, ret: True
            //PAR nat: physx::PxEMPTY, man: physx.PxEMPTY, stg: Value
            physx.PxEMPTY pvk_in__ = _;
            return Ctor_PxBitAndBytePtr_physx_PxEMPTY(pvk_in__);
        }
        
        //DEBUG: PtrStructCtorNode physx::PxBitAndDataT<byte, >::PxBitAndDataT - 50
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern PxBitAndBytePtr Ctor_PxBitAndBytePtr_();
        
        public static PxBitAndBytePtr New() {
            //RET nat: PxBitAndBytePtr, man: PxBitAndBytePtr, stg: PtrStruct, ret: True
            return Ctor_PxBitAndBytePtr_();
        }
        
        //DEBUG: PtrStructCtorNode physx::PxBitAndDataT<byte, >::PxBitAndDataT - 53
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern PxBitAndBytePtr Ctor_PxBitAndBytePtr_byte_bool(byte pvk_data, bool pvk_bit);
        
        public static PxBitAndBytePtr New(byte data, bool bit=false) {
            //RET nat: PxBitAndBytePtr, man: PxBitAndBytePtr, stg: PtrStruct, ret: True
            //PAR nat: unsigned char, man: byte, stg: Value
            byte pvk_in_data = data;
            //PAR nat: bool, man: bool, stg: Value
            bool pvk_in_bit = bit;
            return Ctor_PxBitAndBytePtr_byte_bool(pvk_in_data, pvk_in_bit);
        }
        
        //DEBUG: PtrStructCtorNode physx::PxBitAndDataT<byte, >::PxBitAndDataT - 53
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern PxBitAndBytePtr Ctor_PxBitAndBytePtr_byte(byte pvk_data);
        
        public static PxBitAndBytePtr New(byte data) {
            //RET nat: PxBitAndBytePtr, man: PxBitAndBytePtr, stg: PtrStruct, ret: True
            //PAR nat: unsigned char, man: byte, stg: Value
            byte pvk_in_data = data;
            return Ctor_PxBitAndBytePtr_byte(pvk_in_data);
        }
        
        //DEBUG: PtrStructCtorNode physx::PxBitAndDataT<byte, >::PxBitAndDataT - 44
        //ERRORS OCCURED IN physx::PxBitAndDataT<byte, >::PxBitAndDataT
        //Implicit Function/Method
        
        //DEBUG: PtrStructCtorNode physx::PxBitAndDataT<byte, >::PxBitAndDataT - 44
        //ERRORS OCCURED IN physx::PxBitAndDataT<byte, >::PxBitAndDataT
        //Implicit Function/Method
        
        //DEBUG: MethodNode physx::PxBitAndDataT<byte, >::operator unsigned char - 58
        //ERRORS OCCURED IN physx::PxBitAndDataT<byte, >::operator unsigned char
        //Unbindable Operator: Conversion
        
        //DEBUG: MethodNode physx::PxBitAndDataT<byte, >::setBit - 62-65
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxBitAndDataT_byte_setBit(PxBitAndBytePtr pvk_this);
        
        public void setBit() {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: PxBitAndBytePtr, man: PxBitAndBytePtr, stg: PtrStruct
            PxBitAndBytePtr pvk_in_this = this;
            void_physx_PxBitAndDataT_byte_setBit(pvk_in_this);
        }
        
        //DEBUG: MethodNode physx::PxBitAndDataT<byte, >::clearBit - 66-69
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxBitAndDataT_byte_clearBit(PxBitAndBytePtr pvk_this);
        
        public void clearBit() {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: PxBitAndBytePtr, man: PxBitAndBytePtr, stg: PtrStruct
            PxBitAndBytePtr pvk_in_this = this;
            void_physx_PxBitAndDataT_byte_clearBit(pvk_in_this);
        }
        
        //DEBUG: MethodNode physx::PxBitAndDataT<byte, >::isBitSet - 70-73
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern byte byte_const_physx_PxBitAndDataT_byte_isBitSet(PxBitAndBytePtr pvk_this);
        
        public byte isBitSet() {
            //RET nat: byte, man: byte, stg: Value, ret: True
            //PAR nat: PxBitAndBytePtr, man: PxBitAndBytePtr, stg: PtrStruct
            PxBitAndBytePtr pvk_in_this = this;
            return byte_const_physx_PxBitAndDataT_byte_isBitSet(pvk_in_this);
        }
        
        //DEBUG: MethodNode physx::PxBitAndDataT<byte, >::~PxBitAndDataT - 44
        //ERRORS OCCURED IN physx::PxBitAndDataT<byte, >::~PxBitAndDataT
        //Implicit Function/Method
        //Destructor
        
        //DEBUG: MethodNode physx::PxBitAndDataT<byte, >::operator= - 44
        //ERRORS OCCURED IN physx::PxBitAndDataT<byte, >::operator=
        //Implicit Function/Method
        //Unbindable Operator: Equal
        
        //DEBUG: MethodNode physx::PxBitAndDataT<byte, >::operator= - 44
        //ERRORS OCCURED IN physx::PxBitAndDataT<byte, >::operator=
        //Implicit Function/Method
        //Unbindable Operator: Equal
    }
    public unsafe partial struct PxBitAndWordPtr{
        private System.IntPtr nativePtr_;
        
    //DEBUG: NewerFreerNode physx::PxBitAndDataT<ushort, > - -1
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void Freer_PxBitAndWordPtr(PxBitAndWordPtr ptr);
        
        public static void Free(PxBitAndWordPtr ptr){
            Freer_PxBitAndWordPtr(ptr);
        }
        public void Free(){
            Freer_PxBitAndWordPtr(this);
        }
    }
    public unsafe partial struct PxBitAndDwordPtr{
        private System.IntPtr nativePtr_;
        
    //DEBUG: NewerFreerNode physx::PxBitAndDataT<uint, > - -1
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void Freer_PxBitAndDwordPtr(PxBitAndDwordPtr ptr);
        
        public static void Free(PxBitAndDwordPtr ptr){
            Freer_PxBitAndDwordPtr(ptr);
        }
        public void Free(){
            Freer_PxBitAndDwordPtr(this);
        }
    }
    
    //DEBUG: DeclNode physx::PxBitAndDataT - 43-77
    // TODO DeclNode.GenBinding()
    
    //DEBUG: DeclNode physx::PxBitAndByte - 78
    // TODO DeclNode.GenBinding()
    
    //DEBUG: DeclNode physx::PxBitAndWord - 79
    // TODO DeclNode.GenBinding()
    
    //DEBUG: DeclNode physx::PxBitAndDword - 80
    // TODO DeclNode.GenBinding()
    
}
