// Generated by minBND 5.1.94.90 - Â© github.com/Alan-FGR
using System;
using System.Runtime.InteropServices;
using static minBND_pinvokes;

public static unsafe partial class physx {

    public unsafe partial struct PxBitAndBytePtr {
        private System.IntPtr nativePtr_;

        public static void Free(physx.PxBitAndBytePtr ptr){
            Freer_physx_PxBitAndBytePtr(ptr);
        }
        public void Free(){
            Freer_physx_PxBitAndBytePtr(this);
        }

        public static physx.PxBitAndBytePtr New(physx.PxEMPTY _) {
            physx.PxEMPTY pvk_in__ = _;
            return Ctor_PxBitAndBytePtr_PxEMPTY(pvk_in__);
        }

        public static physx.PxBitAndBytePtr New() {
            return Ctor_PxBitAndBytePtr_();
        }

        public static physx.PxBitAndBytePtr New(byte data, bool bit=false) {
            byte pvk_in_data = data;
            bool pvk_in_bit = bit;
            return Ctor_PxBitAndBytePtr_byte_bool(pvk_in_data, pvk_in_bit);
        }

        public static physx.PxBitAndBytePtr New(byte data) {
            byte pvk_in_data = data;
            return Ctor_PxBitAndBytePtr_byte(pvk_in_data);
        }

        public static byte ToByte(physx.PxBitAndBytePtr lhs) {
            physx.PxBitAndBytePtr pvk_in_lhs = lhs;
            return byte_const_PxBitAndBytePtr_operator_unsigned_charPtr_Conversion(pvk_in_lhs);
        }

        public void setBit() {
            physx.PxBitAndBytePtr pvk_in_this = this;
            void_PxBitAndBytePtr_setBitPtr(pvk_in_this);
        }

        public void clearBit() {
            physx.PxBitAndBytePtr pvk_in_this = this;
            void_PxBitAndBytePtr_clearBitPtr(pvk_in_this);
        }

        public byte isBitSet() {
            physx.PxBitAndBytePtr pvk_in_this = this;
            return byte_const_PxBitAndBytePtr_isBitSetPtr(pvk_in_this);
        }

    }

    public unsafe partial struct PxBitAndWordPtr {
        private System.IntPtr nativePtr_;

        public static void Free(physx.PxBitAndWordPtr ptr){
            Freer_physx_PxBitAndWordPtr(ptr);
        }
        public void Free(){
            Freer_physx_PxBitAndWordPtr(this);
        }
    }

    public unsafe partial struct PxBitAndDwordPtr {
        private System.IntPtr nativePtr_;

        public static void Free(physx.PxBitAndDwordPtr ptr){
            Freer_physx_PxBitAndDwordPtr(ptr);
        }
        public void Free(){
            Freer_physx_PxBitAndDwordPtr(this);
        }
    }

}
