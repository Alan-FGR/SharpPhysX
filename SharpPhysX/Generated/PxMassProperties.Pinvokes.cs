// Generated by minBND 5.1.91.1 - Â© github.com/Alan-FGR
using System;
using System.Runtime.InteropServices;
public static unsafe partial class minBND_pinvokes {

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void Freer_physx_PxMassPropertiesPtr(physx.PxMassPropertiesPtr ptr);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxMassPropertiesPtr Ctor_PxMassPropertiesPtr_();

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxMassPropertiesPtr Ctor_PxMassPropertiesPtr_float_PxMat33_PxVec3_(float pvk_m, physx.PxMat33* pvk_inertiaT, physx.PxVec3* pvk_com);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxMassPropertiesPtr Ctor_PxMassPropertiesPtr_PxGeometry_(physx.PxGeometry* pvk_geometry);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxMassPropertiesPtr_GET_inertiaTensor(physx.PxMassPropertiesPtr cls, physx.PxMat33* GetRetRef);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxMassPropertiesPtr_SET_inertiaTensor(physx.PxMassPropertiesPtr cls, physx.PxMat33 value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxMassPropertiesPtr_GET_centerOfMass(physx.PxMassPropertiesPtr cls, physx.PxVec3* GetRetRef);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxMassPropertiesPtr_SET_centerOfMass(physx.PxMassPropertiesPtr cls, physx.PxVec3 value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern float PxMassPropertiesPtr_GET_mass(physx.PxMassPropertiesPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxMassPropertiesPtr_SET_mass(physx.PxMassPropertiesPtr cls, float value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxMassPropertiesPtr PxMassPropertiesPtr_const_PxMassPropertiesPtr_operator_Ptr_Star_floatC(physx.PxMassPropertiesPtr pvk_lhs, float pvk_scale);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void void_PxMassPropertiesPtr_translatePtr_PxVec3_(physx.PxMassPropertiesPtr pvk_this, physx.PxVec3* pvk_t);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxVec3_PxMassPropertiesPtr_getMassSpaceInertiaPtr_PxMat33_PxQuat_(physx.PxVec3* pvk_RetRef, physx.PxMat33* pvk_inertia, physx.PxQuat* pvk_massFrame);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxMat33_PxMassPropertiesPtr_translateInertiaPtr_PxMat33_float_PxVec3_C_(physx.PxMat33* pvk_RetRef, physx.PxMat33* pvk_inertia, float pvk_mass, physx.PxVec3* pvk_t);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxMat33_PxMassPropertiesPtr_rotateInertiaPtr_PxMat33_PxQuat_(physx.PxMat33* pvk_RetRef, physx.PxMat33* pvk_inertia, physx.PxQuat* pvk_q);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxMat33_PxMassPropertiesPtr_scaleInertiaPtr_PxMat33_PxQuat_PxVec3_(physx.PxMat33* pvk_RetRef, physx.PxMat33* pvk_inertia, physx.PxQuat* pvk_scaleRotation, physx.PxVec3* pvk_scale);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxMassPropertiesPtr PxMassPropertiesPtr_PxMassPropertiesPtr_sumPtr_PxMassPropertiesPtr_PxTransform_uint_C(physx.PxMassPropertiesPtr pvk_props, physx.PxTransform* pvk_transforms, uint pvk_count);

}
