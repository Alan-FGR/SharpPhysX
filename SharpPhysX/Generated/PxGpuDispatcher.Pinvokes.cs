// Generated by minBND 5.1.93.2 - Â© github.com/Alan-FGR
using System;
using System.Runtime.InteropServices;
public static unsafe partial class minBND_pinvokes {

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void void_PxGpuDispatcherPtr_startSimulationPtr(physx.PxGpuDispatcherPtr pvk_this);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void void_PxGpuDispatcherPtr_startGroupPtr(physx.PxGpuDispatcherPtr pvk_this);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void void_PxGpuDispatcherPtr_submitTaskPtr_PxTaskPtr_(physx.PxGpuDispatcherPtr pvk_this, physx.PxTaskPtr pvk_task);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void void_PxGpuDispatcherPtr_finishGroupPtr(physx.PxGpuDispatcherPtr pvk_this);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void void_PxGpuDispatcherPtr_addCompletionPrereqPtr_PxBaseTaskPtr_(physx.PxGpuDispatcherPtr pvk_this, physx.PxBaseTaskPtr pvk_task);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void void_PxGpuDispatcherPtr_stopSimulationPtr(physx.PxGpuDispatcherPtr pvk_this);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern bool bool_const_PxGpuDispatcherPtr_failureDetectedPtr(physx.PxGpuDispatcherPtr pvk_this);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void void_PxGpuDispatcherPtr_forceFailureModePtr(physx.PxGpuDispatcherPtr pvk_this);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void void_PxGpuDispatcherPtr_launchCopyKernelPtr_PxGpuCopyDescPtr_uint_CUstream_(physx.PxGpuDispatcherPtr pvk_this, physx.PxGpuCopyDescPtr pvk_desc, uint pvk_count, CUstream pvk_stream);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxBaseTaskPtr PxBaseTaskPtr_PxGpuDispatcherPtr_getPreLaunchTaskPtr(physx.PxGpuDispatcherPtr pvk_this);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void void_PxGpuDispatcherPtr_addPreLaunchDependentPtr_PxBaseTaskPtr_(physx.PxGpuDispatcherPtr pvk_this, physx.PxBaseTaskPtr pvk_dependent);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxBaseTaskPtr PxBaseTaskPtr_PxGpuDispatcherPtr_getPostLaunchTaskPtr(physx.PxGpuDispatcherPtr pvk_this);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void void_PxGpuDispatcherPtr_addPostLaunchDependentPtr_PxBaseTaskPtr_(physx.PxGpuDispatcherPtr pvk_this, physx.PxBaseTaskPtr pvk_dependent);

}
