// Generated by minBND 5.1.78.10 - Â© github.com/Alan-FGR
//Unit PxMeshScale
using System;
using System.Runtime.InteropServices;

public static unsafe partial class physx {
    public unsafe partial struct PxMeshScalePtr{
        private System.IntPtr nativePtr_;
        
    [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void Freer_physx_PxMeshScalePtr(PxMeshScalePtr ptr);
        
        public static void Free(PxMeshScalePtr ptr){
            Freer_physx_PxMeshScalePtr(ptr);
        }
        public void Free(){
            Freer_physx_PxMeshScalePtr(this);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxMeshScalePtr Ctor_physx_PxMeshScalePtr_();
        
        public static physx.PxMeshScalePtr New() {
            return Ctor_physx_PxMeshScalePtr_();
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxMeshScalePtr Ctor_physx_PxMeshScalePtr_float(float pvk_r);
        
        public static physx.PxMeshScalePtr New(float r) {
            float pvk_in_r = r;
            return Ctor_physx_PxMeshScalePtr_float(pvk_in_r);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxMeshScalePtr Ctor_physx_PxMeshScalePtr_physx_PxVec3Ptr(physx.PxVec3Ptr pvk_s);
        
        public static physx.PxMeshScalePtr New(physx.PxVec3Ptr s) {
            physx.PxVec3Ptr pvk_in_s = s;
            return Ctor_physx_PxMeshScalePtr_physx_PxVec3Ptr(pvk_in_s);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxMeshScalePtr Ctor_physx_PxMeshScalePtr_physx_PxVec3Ptr_physx_PxQuatPtr(physx.PxVec3Ptr pvk_s, physx.PxQuatPtr pvk_r);
        
        public static physx.PxMeshScalePtr New(physx.PxVec3Ptr s, physx.PxQuatPtr r) {
            physx.PxVec3Ptr pvk_in_s = s;
            physx.PxQuatPtr pvk_in_r = r;
            return Ctor_physx_PxMeshScalePtr_physx_PxVec3Ptr_physx_PxQuatPtr(pvk_in_s, pvk_in_r);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxVec3Ptr PxMeshScale_GET_scale(PxMeshScalePtr cls);
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void PxMeshScale_SET_scale(PxMeshScalePtr cls, physx.PxVec3Ptr value);
        
        public physx.PxVec3Ptr scale {
            get => PxMeshScale_GET_scale(this);
            set => PxMeshScale_SET_scale(this, value);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxQuatPtr PxMeshScale_GET_rotation(PxMeshScalePtr cls);
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void PxMeshScale_SET_rotation(PxMeshScalePtr cls, physx.PxQuatPtr value);
        
        public physx.PxQuatPtr rotation {
            get => PxMeshScale_GET_rotation(this);
            set => PxMeshScale_SET_rotation(this, value);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern bool bool_const_physx_PxMeshScale_isIdentity(physx.PxMeshScalePtr pvk_this);
        
        public bool isIdentity() {
            physx.PxMeshScalePtr pvk_in_this = this;
            return bool_const_physx_PxMeshScale_isIdentity(pvk_in_this);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxMeshScalePtr physx_PxMeshScalePtr_const_physx_PxMeshScale_getInverse(physx.PxMeshScalePtr pvk_this);
        
        public physx.PxMeshScalePtr getInverse_New() {
            physx.PxMeshScalePtr pvk_in_this = this;
            return physx_PxMeshScalePtr_const_physx_PxMeshScale_getInverse(pvk_in_this);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxMat33Ptr physx_PxMat33Ptr_const_physx_PxMeshScale_toMat33(physx.PxMeshScalePtr pvk_this);
        
        public physx.PxMat33Ptr toMat33_New() {
            physx.PxMeshScalePtr pvk_in_this = this;
            return physx_PxMat33Ptr_const_physx_PxMeshScale_toMat33(pvk_in_this);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern bool bool_const_physx_PxMeshScale_hasNegativeDeterminant(physx.PxMeshScalePtr pvk_this);
        
        public bool hasNegativeDeterminant() {
            physx.PxMeshScalePtr pvk_in_this = this;
            return bool_const_physx_PxMeshScale_hasNegativeDeterminant(pvk_in_this);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxVec3Ptr physx_PxVec3Ptr_const_physx_PxMeshScale_transform_physx_PxVec3Ptr_(physx.PxMeshScalePtr pvk_this, physx.PxVec3Ptr pvk_v);
        
        public physx.PxVec3Ptr transform_New(physx.PxVec3Ptr v) {
            physx.PxMeshScalePtr pvk_in_this = this;
            physx.PxVec3Ptr pvk_in_v = v;
            return physx_PxVec3Ptr_const_physx_PxMeshScale_transform_physx_PxVec3Ptr_(pvk_in_this, pvk_in_v);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern bool bool_const_physx_PxMeshScale_isValidForTriangleMesh(physx.PxMeshScalePtr pvk_this);
        
        public bool isValidForTriangleMesh() {
            physx.PxMeshScalePtr pvk_in_this = this;
            return bool_const_physx_PxMeshScale_isValidForTriangleMesh(pvk_in_this);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern bool bool_const_physx_PxMeshScale_isValidForConvexMesh(physx.PxMeshScalePtr pvk_this);
        
        public bool isValidForConvexMesh() {
            physx.PxMeshScalePtr pvk_in_this = this;
            return bool_const_physx_PxMeshScale_isValidForConvexMesh(pvk_in_this);
        }
    }
    
}
