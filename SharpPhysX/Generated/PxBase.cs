// Generated by minBND 5.1.78.26 - Â© github.com/Alan-FGR
//DEBUG: UnitNode  - 0
//Unit PxBase
using System;
using System.Runtime.InteropServices;

//DEBUG: NamespaceNode physx - 45-197
public static unsafe partial class physx {
    //DEBUG: FunctionNode physx::getBinaryMetaData_PxBase - 188
    //ERRORS OCCURED IN physx::getBinaryMetaData_PxBase
    //////Type PxOutputStreamPtr explicitly forbidden by user configuration
    
    //DEBUG: FunctionNode physx::operator| - 64
    // physx::operator| [static PxBaseFlagsPtr Pipe_New(physx.PxBaseFlagEnum a, physx.PxBaseFlagEnum b)] will be bound as member operator
    
    //DEBUG: FunctionNode physx::operator& - 64
    // physx::operator& [static PxBaseFlagsPtr Amp_New(physx.PxBaseFlagEnum a, physx.PxBaseFlagEnum b)] will be bound as member operator
    
    //DEBUG: FunctionNode physx::operator~ - 64
    // physx::operator~ [static PxBaseFlagsPtr Tilde_New(physx.PxBaseFlagEnum a)] will be bound as member operator
    
    //DEBUG: ClassNode physx::PxBaseFlag - 54-61
    //DEBUG: EnumNode physx::PxBaseFlag::Enum - 56-60
    public enum PxBaseFlagEnum : int {
        eOWNS_MEMORY = 1,   // eOWNS_MEMORY = (1<<0)
        eIS_RELEASABLE = 2, // eIS_RELEASABLE = (1<<1)
    }
    
    //DEBUG: ClassNode physx::PxBase - 73-194
    //Interface use count: 20
    public unsafe partial struct PxBasePtr{
        private System.IntPtr nativePtr_;
        
    //DEBUG: DeclNode physx::PxBase::is - 101
        // TODO DeclNode.GenBinding()
        
        //DEBUG: DeclNode physx::PxBase::is - 111
        // TODO DeclNode.GenBinding()
        
        //DEBUG: DeclNode physx::PxBase::typeMatch - 180
        // TODO DeclNode.GenBinding()
        
        //DEBUG: DeclNode physx::PxBase - 188
        // TODO DeclNode.GenBinding()
        
        //DEBUG: MethodNode physx::PxBase::release - 85
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxBase_release(physx.PxBasePtr pvk_this);
        
        public void release() {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: PxBasePtr, man: physx.PxBasePtr, stg: PtrStruct
            physx.PxBasePtr pvk_in_this = this;
            void_physx_PxBase_release(pvk_in_this);
        }
        
        //DEBUG: MethodNode physx::PxBase::getConcreteTypeName - 91
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern string string_const_physx_PxBase_getConcreteTypeName(physx.PxBasePtr pvk_this);
        
        public string getConcreteTypeName() {
            //RET nat: string, man: string, stg: Value, ret: True
            //PAR nat: PxBasePtr, man: physx.PxBasePtr, stg: PtrStruct
            physx.PxBasePtr pvk_in_this = this;
            return string_const_physx_PxBase_getConcreteTypeName(pvk_in_this);
        }
        
        //DEBUG: MethodNode physx::PxBase::is - 101
        //ERRORS OCCURED IN physx::PxBase::is
        ////################################################################## FIXME
        //Unparsed type ( TODO ): T*
        
        //DEBUG: MethodNode physx::PxBase::is - 111
        //ERRORS OCCURED IN physx::PxBase::is
        ////################################################################## FIXME
        //Unparsed type ( TODO ): T*
        
        //DEBUG: MethodNode physx::PxBase::getConcreteType - 119
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern ushort ushort_const_physx_PxBase_getConcreteType(physx.PxBasePtr pvk_this);
        
        public ushort getConcreteType() {
            //RET nat: ushort, man: ushort, stg: Value, ret: True
            //PAR nat: PxBasePtr, man: physx.PxBasePtr, stg: PtrStruct
            physx.PxBasePtr pvk_in_this = this;
            return ushort_const_physx_PxBase_getConcreteType(pvk_in_this);
        }
        
        //DEBUG: MethodNode physx::PxBase::setBaseFlag - 127
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxBase_setBaseFlag_physx_PxBaseFlagEnum_bool_(physx.PxBasePtr pvk_this, physx.PxBaseFlagEnum pvk_flag, bool pvk_value);
        
        public void setBaseFlag(physx.PxBaseFlagEnum flag, bool value) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: PxBasePtr, man: physx.PxBasePtr, stg: PtrStruct
            physx.PxBasePtr pvk_in_this = this;
            //PAR nat: physx::PxBaseFlag::Enum, man: physx.PxBaseFlagEnum, stg: Value
            physx.PxBaseFlagEnum pvk_in_flag = flag;
            //PAR nat: bool, man: bool, stg: Value
            bool pvk_in_value = value;
            void_physx_PxBase_setBaseFlag_physx_PxBaseFlagEnum_bool_(pvk_in_this, pvk_in_flag, pvk_in_value);
        }
        
        //DEBUG: MethodNode physx::PxBase::setBaseFlags - 136
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxBase_setBaseFlags_PxBaseFlagsPtr_(physx.PxBasePtr pvk_this, PxBaseFlagsPtr pvk_inFlags);
        
        public void setBaseFlags(PxBaseFlagsPtr inFlags) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: PxBasePtr, man: physx.PxBasePtr, stg: PtrStruct
            physx.PxBasePtr pvk_in_this = this;
            //PAR nat: PxBaseFlagsPtr, man: PxBaseFlagsPtr, stg: PtrStruct
            PxBaseFlagsPtr pvk_in_inFlags = inFlags;
            void_physx_PxBase_setBaseFlags_PxBaseFlagsPtr_(pvk_in_this, pvk_in_inFlags);
        }
        
        //DEBUG: MethodNode physx::PxBase::getBaseFlags - 145
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern PxBaseFlagsPtr PxBaseFlagsPtr_const_physx_PxBase_getBaseFlags(physx.PxBasePtr pvk_this);
        
        public PxBaseFlagsPtr getBaseFlags_New() {
            //RET nat: PxBaseFlagsPtr, man: PxBaseFlagsPtr, stg: PtrStruct, ret: True
            //PAR nat: PxBasePtr, man: physx.PxBasePtr, stg: PtrStruct
            physx.PxBasePtr pvk_in_this = this;
            return PxBaseFlagsPtr_const_physx_PxBase_getBaseFlags(pvk_in_this);
        }
        
        //DEBUG: MethodNode physx::PxBase::isReleasable - 156
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern bool bool_const_physx_PxBase_isReleasable(physx.PxBasePtr pvk_this);
        
        public bool isReleasable() {
            //RET nat: bool, man: bool, stg: Value, ret: True
            //PAR nat: PxBasePtr, man: physx.PxBasePtr, stg: PtrStruct
            physx.PxBasePtr pvk_in_this = this;
            return bool_const_physx_PxBase_isReleasable(pvk_in_this);
        }
        
        //DEBUG: MethodNode physx::PxBase::operator= - 73
        //ERRORS OCCURED IN physx::PxBase::operator=
        //Implicit Function/Method
        //Unbindable Operator: Equal
    
    
    
        public unsafe interface IPxBasePtr {
            void release();
            string getConcreteTypeName();
            //////################################################################## FIXME
            //Unparsed type ( TODO ): T* | UNPARSED* is();
            //////################################################################## FIXME
            //Unparsed type ( TODO ): T* | UNPARSED* isConst();
            ushort getConcreteType();
            void setBaseFlag(physx.PxBaseFlagEnum flag, bool value);
            void setBaseFlags(PxBaseFlagsPtr inFlags);
            PxBaseFlagsPtr getBaseFlags_New();
            bool isReleasable();
        }
    }
    
    //DEBUG: DeclNode physx::PxType - 49
    // TODO DeclNode.GenBinding()
    
    //DEBUG: DeclNode physx::PxBaseFlags - 63
    // TODO DeclNode.GenBinding()
    
}
