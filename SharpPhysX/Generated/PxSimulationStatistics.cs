// Generated by minBND 5.1.81.43 - Â© github.com/Alan-FGR
//Unit PxSimulationStatistics
using System;
using System.Runtime.InteropServices;

public static unsafe partial class physx {
    public unsafe partial struct PxSimulationStatisticsPtr {
        private System.IntPtr nativePtr_;
        
    public enum RbPairStatsType : int {
            eDISCRETE_CONTACT_PAIRS = 0, // eDISCRETE_CONTACT_PAIRS
            eCCD_PAIRS = 1,              // eCCD_PAIRS
            eMODIFIED_CONTACT_PAIRS = 2, // eMODIFIED_CONTACT_PAIRS
            eTRIGGER_PAIRS = 3,          // eTRIGGER_PAIRS
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void Freer_physx_PxSimulationStatisticsPtr(PxSimulationStatisticsPtr ptr);
        
        public static void Free(PxSimulationStatisticsPtr ptr){
            Freer_physx_PxSimulationStatisticsPtr(ptr);
        }
        public void Free(){
            Freer_physx_PxSimulationStatisticsPtr(this);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxSimulationStatisticsPtr Ctor_physx_PxSimulationStatisticsPtr_();
        
        public static physx.PxSimulationStatisticsPtr New() {
            return Ctor_physx_PxSimulationStatisticsPtr_();
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern uint PxSimulationStatistics_GET_nbActiveConstraints(PxSimulationStatisticsPtr cls);
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void PxSimulationStatistics_SET_nbActiveConstraints(PxSimulationStatisticsPtr cls, uint value);
        
        public uint nbActiveConstraints {
            get => PxSimulationStatistics_GET_nbActiveConstraints(this);
            set => PxSimulationStatistics_SET_nbActiveConstraints(this, value);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern uint PxSimulationStatistics_GET_nbActiveDynamicBodies(PxSimulationStatisticsPtr cls);
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void PxSimulationStatistics_SET_nbActiveDynamicBodies(PxSimulationStatisticsPtr cls, uint value);
        
        public uint nbActiveDynamicBodies {
            get => PxSimulationStatistics_GET_nbActiveDynamicBodies(this);
            set => PxSimulationStatistics_SET_nbActiveDynamicBodies(this, value);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern uint PxSimulationStatistics_GET_nbActiveKinematicBodies(PxSimulationStatisticsPtr cls);
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void PxSimulationStatistics_SET_nbActiveKinematicBodies(PxSimulationStatisticsPtr cls, uint value);
        
        public uint nbActiveKinematicBodies {
            get => PxSimulationStatistics_GET_nbActiveKinematicBodies(this);
            set => PxSimulationStatistics_SET_nbActiveKinematicBodies(this, value);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern uint PxSimulationStatistics_GET_nbStaticBodies(PxSimulationStatisticsPtr cls);
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void PxSimulationStatistics_SET_nbStaticBodies(PxSimulationStatisticsPtr cls, uint value);
        
        public uint nbStaticBodies {
            get => PxSimulationStatistics_GET_nbStaticBodies(this);
            set => PxSimulationStatistics_SET_nbStaticBodies(this, value);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern uint PxSimulationStatistics_GET_nbDynamicBodies(PxSimulationStatisticsPtr cls);
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void PxSimulationStatistics_SET_nbDynamicBodies(PxSimulationStatisticsPtr cls, uint value);
        
        public uint nbDynamicBodies {
            get => PxSimulationStatistics_GET_nbDynamicBodies(this);
            set => PxSimulationStatistics_SET_nbDynamicBodies(this, value);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern uint PxSimulationStatistics_GET_nbAggregates(PxSimulationStatisticsPtr cls);
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void PxSimulationStatistics_SET_nbAggregates(PxSimulationStatisticsPtr cls, uint value);
        
        public uint nbAggregates {
            get => PxSimulationStatistics_GET_nbAggregates(this);
            set => PxSimulationStatistics_SET_nbAggregates(this, value);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern uint PxSimulationStatistics_GET_nbArticulations(PxSimulationStatisticsPtr cls);
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void PxSimulationStatistics_SET_nbArticulations(PxSimulationStatisticsPtr cls, uint value);
        
        public uint nbArticulations {
            get => PxSimulationStatistics_GET_nbArticulations(this);
            set => PxSimulationStatistics_SET_nbArticulations(this, value);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern uint PxSimulationStatistics_GET_nbAxisSolverConstraints(PxSimulationStatisticsPtr cls);
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void PxSimulationStatistics_SET_nbAxisSolverConstraints(PxSimulationStatisticsPtr cls, uint value);
        
        public uint nbAxisSolverConstraints {
            get => PxSimulationStatistics_GET_nbAxisSolverConstraints(this);
            set => PxSimulationStatistics_SET_nbAxisSolverConstraints(this, value);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern uint PxSimulationStatistics_GET_compressedContactSize(PxSimulationStatisticsPtr cls);
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void PxSimulationStatistics_SET_compressedContactSize(PxSimulationStatisticsPtr cls, uint value);
        
        public uint compressedContactSize {
            get => PxSimulationStatistics_GET_compressedContactSize(this);
            set => PxSimulationStatistics_SET_compressedContactSize(this, value);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern uint PxSimulationStatistics_GET_requiredContactConstraintMemory(PxSimulationStatisticsPtr cls);
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void PxSimulationStatistics_SET_requiredContactConstraintMemory(PxSimulationStatisticsPtr cls, uint value);
        
        public uint requiredContactConstraintMemory {
            get => PxSimulationStatistics_GET_requiredContactConstraintMemory(this);
            set => PxSimulationStatistics_SET_requiredContactConstraintMemory(this, value);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern uint PxSimulationStatistics_GET_peakConstraintMemory(PxSimulationStatisticsPtr cls);
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void PxSimulationStatistics_SET_peakConstraintMemory(PxSimulationStatisticsPtr cls, uint value);
        
        public uint peakConstraintMemory {
            get => PxSimulationStatistics_GET_peakConstraintMemory(this);
            set => PxSimulationStatistics_SET_peakConstraintMemory(this, value);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern uint PxSimulationStatistics_GET_nbDiscreteContactPairsTotal(PxSimulationStatisticsPtr cls);
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void PxSimulationStatistics_SET_nbDiscreteContactPairsTotal(PxSimulationStatisticsPtr cls, uint value);
        
        public uint nbDiscreteContactPairsTotal {
            get => PxSimulationStatistics_GET_nbDiscreteContactPairsTotal(this);
            set => PxSimulationStatistics_SET_nbDiscreteContactPairsTotal(this, value);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern uint PxSimulationStatistics_GET_nbDiscreteContactPairsWithCacheHits(PxSimulationStatisticsPtr cls);
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void PxSimulationStatistics_SET_nbDiscreteContactPairsWithCacheHits(PxSimulationStatisticsPtr cls, uint value);
        
        public uint nbDiscreteContactPairsWithCacheHits {
            get => PxSimulationStatistics_GET_nbDiscreteContactPairsWithCacheHits(this);
            set => PxSimulationStatistics_SET_nbDiscreteContactPairsWithCacheHits(this, value);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern uint PxSimulationStatistics_GET_nbDiscreteContactPairsWithContacts(PxSimulationStatisticsPtr cls);
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void PxSimulationStatistics_SET_nbDiscreteContactPairsWithContacts(PxSimulationStatisticsPtr cls, uint value);
        
        public uint nbDiscreteContactPairsWithContacts {
            get => PxSimulationStatistics_GET_nbDiscreteContactPairsWithContacts(this);
            set => PxSimulationStatistics_SET_nbDiscreteContactPairsWithContacts(this, value);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern uint PxSimulationStatistics_GET_nbNewPairs(PxSimulationStatisticsPtr cls);
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void PxSimulationStatistics_SET_nbNewPairs(PxSimulationStatisticsPtr cls, uint value);
        
        public uint nbNewPairs {
            get => PxSimulationStatistics_GET_nbNewPairs(this);
            set => PxSimulationStatistics_SET_nbNewPairs(this, value);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern uint PxSimulationStatistics_GET_nbLostPairs(PxSimulationStatisticsPtr cls);
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void PxSimulationStatistics_SET_nbLostPairs(PxSimulationStatisticsPtr cls, uint value);
        
        public uint nbLostPairs {
            get => PxSimulationStatistics_GET_nbLostPairs(this);
            set => PxSimulationStatistics_SET_nbLostPairs(this, value);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern uint PxSimulationStatistics_GET_nbNewTouches(PxSimulationStatisticsPtr cls);
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void PxSimulationStatistics_SET_nbNewTouches(PxSimulationStatisticsPtr cls, uint value);
        
        public uint nbNewTouches {
            get => PxSimulationStatistics_GET_nbNewTouches(this);
            set => PxSimulationStatistics_SET_nbNewTouches(this, value);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern uint PxSimulationStatistics_GET_nbLostTouches(PxSimulationStatisticsPtr cls);
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void PxSimulationStatistics_SET_nbLostTouches(PxSimulationStatisticsPtr cls, uint value);
        
        public uint nbLostTouches {
            get => PxSimulationStatistics_GET_nbLostTouches(this);
            set => PxSimulationStatistics_SET_nbLostTouches(this, value);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern uint PxSimulationStatistics_GET_nbPartitions(PxSimulationStatisticsPtr cls);
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void PxSimulationStatistics_SET_nbPartitions(PxSimulationStatisticsPtr cls, uint value);
        
        public uint nbPartitions {
            get => PxSimulationStatistics_GET_nbPartitions(this);
            set => PxSimulationStatistics_SET_nbPartitions(this, value);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern uint PxSimulationStatistics_GET_nbBroadPhaseAdds(PxSimulationStatisticsPtr cls);
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void PxSimulationStatistics_SET_nbBroadPhaseAdds(PxSimulationStatisticsPtr cls, uint value);
        
        public uint nbBroadPhaseAdds {
            get => PxSimulationStatistics_GET_nbBroadPhaseAdds(this);
            set => PxSimulationStatistics_SET_nbBroadPhaseAdds(this, value);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern uint PxSimulationStatistics_GET_nbBroadPhaseRemoves(PxSimulationStatisticsPtr cls);
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void PxSimulationStatistics_SET_nbBroadPhaseRemoves(PxSimulationStatisticsPtr cls, uint value);
        
        public uint nbBroadPhaseRemoves {
            get => PxSimulationStatistics_GET_nbBroadPhaseRemoves(this);
            set => PxSimulationStatistics_SET_nbBroadPhaseRemoves(this, value);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern uint uint_const_physx_PxSimulationStatistics_getNbBroadPhaseAdds(physx.PxSimulationStatisticsPtr pvk_this);
        
        public uint getNbBroadPhaseAdds() {
            physx.PxSimulationStatisticsPtr pvk_in_this = this;
            return uint_const_physx_PxSimulationStatistics_getNbBroadPhaseAdds(pvk_in_this);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern uint uint_const_physx_PxSimulationStatistics_getNbBroadPhaseRemoves(physx.PxSimulationStatisticsPtr pvk_this);
        
        public uint getNbBroadPhaseRemoves() {
            physx.PxSimulationStatisticsPtr pvk_in_this = this;
            return uint_const_physx_PxSimulationStatistics_getNbBroadPhaseRemoves(pvk_in_this);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern uint uint_const_physx_PxSimulationStatistics_getRbPairStats_physx_PxSimulationStatisticsPtr_RbPairStatsType_physx_PxGeometryTypeEnum_physx_PxGeometryTypeEnum_(physx.PxSimulationStatisticsPtr pvk_this, physx.PxSimulationStatisticsPtr.RbPairStatsType pvk_pairType, physx.PxGeometryTypeEnum pvk_g0, physx.PxGeometryTypeEnum pvk_g1);
        
        public uint getRbPairStats(physx.PxSimulationStatisticsPtr.RbPairStatsType pairType, physx.PxGeometryTypeEnum g0, physx.PxGeometryTypeEnum g1) {
            physx.PxSimulationStatisticsPtr pvk_in_this = this;
            physx.PxSimulationStatisticsPtr.RbPairStatsType pvk_in_pairType = pairType;
            physx.PxGeometryTypeEnum pvk_in_g0 = g0;
            physx.PxGeometryTypeEnum pvk_in_g1 = g1;
            return uint_const_physx_PxSimulationStatistics_getRbPairStats_physx_PxSimulationStatisticsPtr_RbPairStatsType_physx_PxGeometryTypeEnum_physx_PxGeometryTypeEnum_(pvk_in_this, pvk_in_pairType, pvk_in_g0, pvk_in_g1);
        }
    }
    
}
