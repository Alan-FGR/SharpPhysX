// Generated by minBND 5.1.94.90 - Â© github.com/Alan-FGR
using System;
using System.Runtime.InteropServices;
public static unsafe partial class minBND_pinvokes {

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxSceneFlagsPtr PxSceneFlagsPtr_operator_Ptr_Pipe_PxSceneFlag_PxSceneFlag_(physx.PxSceneFlag pvk_a, physx.PxSceneFlag pvk_b);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxSceneFlagsPtr PxSceneFlagsPtr_operator_Ptr_Amp_PxSceneFlag_PxSceneFlag_(physx.PxSceneFlag pvk_a, physx.PxSceneFlag pvk_b);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxSceneFlagsPtr PxSceneFlagsPtr_operator_Ptr_Tilde_PxSceneFlag_(physx.PxSceneFlag pvk_a);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void Freer_physx_PxSceneLimitsPtr(physx.PxSceneLimitsPtr ptr);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxSceneLimitsPtr Ctor_PxSceneLimitsPtr_();

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern uint PxSceneLimitsPtr_GET_maxNbActors(physx.PxSceneLimitsPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxSceneLimitsPtr_SET_maxNbActors(physx.PxSceneLimitsPtr cls, uint value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern uint PxSceneLimitsPtr_GET_maxNbBodies(physx.PxSceneLimitsPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxSceneLimitsPtr_SET_maxNbBodies(physx.PxSceneLimitsPtr cls, uint value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern uint PxSceneLimitsPtr_GET_maxNbStaticShapes(physx.PxSceneLimitsPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxSceneLimitsPtr_SET_maxNbStaticShapes(physx.PxSceneLimitsPtr cls, uint value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern uint PxSceneLimitsPtr_GET_maxNbDynamicShapes(physx.PxSceneLimitsPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxSceneLimitsPtr_SET_maxNbDynamicShapes(physx.PxSceneLimitsPtr cls, uint value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern uint PxSceneLimitsPtr_GET_maxNbAggregates(physx.PxSceneLimitsPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxSceneLimitsPtr_SET_maxNbAggregates(physx.PxSceneLimitsPtr cls, uint value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern uint PxSceneLimitsPtr_GET_maxNbConstraints(physx.PxSceneLimitsPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxSceneLimitsPtr_SET_maxNbConstraints(physx.PxSceneLimitsPtr cls, uint value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern uint PxSceneLimitsPtr_GET_maxNbRegions(physx.PxSceneLimitsPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxSceneLimitsPtr_SET_maxNbRegions(physx.PxSceneLimitsPtr cls, uint value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern uint PxSceneLimitsPtr_GET_maxNbBroadPhaseOverlaps(physx.PxSceneLimitsPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxSceneLimitsPtr_SET_maxNbBroadPhaseOverlaps(physx.PxSceneLimitsPtr cls, uint value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void void_PxSceneLimitsPtr_setToDefaultPtr(physx.PxSceneLimitsPtr pvk_this);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern bool bool_const_PxSceneLimitsPtr_isValidPtr(physx.PxSceneLimitsPtr pvk_this);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void Freer_physx_PxgDynamicsMemoryConfigPtr(physx.PxgDynamicsMemoryConfigPtr ptr);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxgDynamicsMemoryConfigPtr Ctor_PxgDynamicsMemoryConfigPtr_();

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern uint PxgDynamicsMemoryConfigPtr_GET_constraintBufferCapacity(physx.PxgDynamicsMemoryConfigPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxgDynamicsMemoryConfigPtr_SET_constraintBufferCapacity(physx.PxgDynamicsMemoryConfigPtr cls, uint value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern uint PxgDynamicsMemoryConfigPtr_GET_contactBufferCapacity(physx.PxgDynamicsMemoryConfigPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxgDynamicsMemoryConfigPtr_SET_contactBufferCapacity(physx.PxgDynamicsMemoryConfigPtr cls, uint value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern uint PxgDynamicsMemoryConfigPtr_GET_tempBufferCapacity(physx.PxgDynamicsMemoryConfigPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxgDynamicsMemoryConfigPtr_SET_tempBufferCapacity(physx.PxgDynamicsMemoryConfigPtr cls, uint value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern uint PxgDynamicsMemoryConfigPtr_GET_contactStreamSize(physx.PxgDynamicsMemoryConfigPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxgDynamicsMemoryConfigPtr_SET_contactStreamSize(physx.PxgDynamicsMemoryConfigPtr cls, uint value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern uint PxgDynamicsMemoryConfigPtr_GET_patchStreamSize(physx.PxgDynamicsMemoryConfigPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxgDynamicsMemoryConfigPtr_SET_patchStreamSize(physx.PxgDynamicsMemoryConfigPtr cls, uint value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern uint PxgDynamicsMemoryConfigPtr_GET_forceStreamCapacity(physx.PxgDynamicsMemoryConfigPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxgDynamicsMemoryConfigPtr_SET_forceStreamCapacity(physx.PxgDynamicsMemoryConfigPtr cls, uint value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern uint PxgDynamicsMemoryConfigPtr_GET_heapCapacity(physx.PxgDynamicsMemoryConfigPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxgDynamicsMemoryConfigPtr_SET_heapCapacity(physx.PxgDynamicsMemoryConfigPtr cls, uint value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern uint PxgDynamicsMemoryConfigPtr_GET_foundLostPairsCapacity(physx.PxgDynamicsMemoryConfigPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxgDynamicsMemoryConfigPtr_SET_foundLostPairsCapacity(physx.PxgDynamicsMemoryConfigPtr cls, uint value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void Freer_physx_PxSceneDescPtr(physx.PxSceneDescPtr ptr);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxSceneDescPtr Ctor_PxSceneDescPtr_PxTolerancesScale_(physx.PxTolerancesScale* pvk_scale);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxSceneDescPtr_GET_gravity(physx.PxSceneDescPtr cls, physx.PxVec3* GetRetRef);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxSceneDescPtr_SET_gravity(physx.PxSceneDescPtr cls, physx.PxVec3 value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern IntPtr PxSceneDescPtr_GET_filterShaderData(physx.PxSceneDescPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxSceneDescPtr_SET_filterShaderData(physx.PxSceneDescPtr cls, IntPtr value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern uint PxSceneDescPtr_GET_filterShaderDataSize(physx.PxSceneDescPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxSceneDescPtr_SET_filterShaderDataSize(physx.PxSceneDescPtr cls, uint value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern PxSimulationFilterShader PxSceneDescPtr_GET_filterShader(physx.PxSceneDescPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxSceneDescPtr_SET_filterShader(physx.PxSceneDescPtr cls, PxSimulationFilterShader value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxSimulationFilterCallbackPtr PxSceneDescPtr_GET_filterCallback(physx.PxSceneDescPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxSceneDescPtr_SET_filterCallback(physx.PxSceneDescPtr cls, physx.PxSimulationFilterCallbackPtr value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxPairFilteringMode PxSceneDescPtr_GET_kineKineFilteringMode(physx.PxSceneDescPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxSceneDescPtr_SET_kineKineFilteringMode(physx.PxSceneDescPtr cls, physx.PxPairFilteringMode value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxPairFilteringMode PxSceneDescPtr_GET_staticKineFilteringMode(physx.PxSceneDescPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxSceneDescPtr_SET_staticKineFilteringMode(physx.PxSceneDescPtr cls, physx.PxPairFilteringMode value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxBroadPhaseType PxSceneDescPtr_GET_broadPhaseType(physx.PxSceneDescPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxSceneDescPtr_SET_broadPhaseType(physx.PxSceneDescPtr cls, physx.PxBroadPhaseType value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxBroadPhaseCallbackPtr PxSceneDescPtr_GET_broadPhaseCallback(physx.PxSceneDescPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxSceneDescPtr_SET_broadPhaseCallback(physx.PxSceneDescPtr cls, physx.PxBroadPhaseCallbackPtr value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxSceneLimitsPtr PxSceneDescPtr_GET_limits(physx.PxSceneDescPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxSceneDescPtr_SET_limits(physx.PxSceneDescPtr cls, physx.PxSceneLimitsPtr value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxFrictionType PxSceneDescPtr_GET_frictionType(physx.PxSceneDescPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxSceneDescPtr_SET_frictionType(physx.PxSceneDescPtr cls, physx.PxFrictionType value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxSolverType PxSceneDescPtr_GET_solverType(physx.PxSceneDescPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxSceneDescPtr_SET_solverType(physx.PxSceneDescPtr cls, physx.PxSolverType value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern float PxSceneDescPtr_GET_bounceThresholdVelocity(physx.PxSceneDescPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxSceneDescPtr_SET_bounceThresholdVelocity(physx.PxSceneDescPtr cls, float value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern float PxSceneDescPtr_GET_frictionOffsetThreshold(physx.PxSceneDescPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxSceneDescPtr_SET_frictionOffsetThreshold(physx.PxSceneDescPtr cls, float value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern float PxSceneDescPtr_GET_ccdMaxSeparation(physx.PxSceneDescPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxSceneDescPtr_SET_ccdMaxSeparation(physx.PxSceneDescPtr cls, float value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern float PxSceneDescPtr_GET_solverOffsetSlop(physx.PxSceneDescPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxSceneDescPtr_SET_solverOffsetSlop(physx.PxSceneDescPtr cls, float value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxSceneFlagsPtr PxSceneDescPtr_GET_flags(physx.PxSceneDescPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxSceneDescPtr_SET_flags(physx.PxSceneDescPtr cls, physx.PxSceneFlagsPtr value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxCpuDispatcherPtr PxSceneDescPtr_GET_cpuDispatcher(physx.PxSceneDescPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxSceneDescPtr_SET_cpuDispatcher(physx.PxSceneDescPtr cls, physx.PxCpuDispatcherPtr value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxGpuDispatcherPtr PxSceneDescPtr_GET_gpuDispatcher(physx.PxSceneDescPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxSceneDescPtr_SET_gpuDispatcher(physx.PxSceneDescPtr cls, physx.PxGpuDispatcherPtr value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxPruningStructureType PxSceneDescPtr_GET_staticStructure(physx.PxSceneDescPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxSceneDescPtr_SET_staticStructure(physx.PxSceneDescPtr cls, physx.PxPruningStructureType value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxPruningStructureType PxSceneDescPtr_GET_dynamicStructure(physx.PxSceneDescPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxSceneDescPtr_SET_dynamicStructure(physx.PxSceneDescPtr cls, physx.PxPruningStructureType value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern uint PxSceneDescPtr_GET_dynamicTreeRebuildRateHint(physx.PxSceneDescPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxSceneDescPtr_SET_dynamicTreeRebuildRateHint(physx.PxSceneDescPtr cls, uint value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxSceneQueryUpdateMode PxSceneDescPtr_GET_sceneQueryUpdateMode(physx.PxSceneDescPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxSceneDescPtr_SET_sceneQueryUpdateMode(physx.PxSceneDescPtr cls, physx.PxSceneQueryUpdateMode value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern IntPtr PxSceneDescPtr_GET_userData(physx.PxSceneDescPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxSceneDescPtr_SET_userData(physx.PxSceneDescPtr cls, IntPtr value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern uint PxSceneDescPtr_GET_solverBatchSize(physx.PxSceneDescPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxSceneDescPtr_SET_solverBatchSize(physx.PxSceneDescPtr cls, uint value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern uint PxSceneDescPtr_GET_nbContactDataBlocks(physx.PxSceneDescPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxSceneDescPtr_SET_nbContactDataBlocks(physx.PxSceneDescPtr cls, uint value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern uint PxSceneDescPtr_GET_maxNbContactDataBlocks(physx.PxSceneDescPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxSceneDescPtr_SET_maxNbContactDataBlocks(physx.PxSceneDescPtr cls, uint value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern float PxSceneDescPtr_GET_maxBiasCoefficient(physx.PxSceneDescPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxSceneDescPtr_SET_maxBiasCoefficient(physx.PxSceneDescPtr cls, float value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern uint PxSceneDescPtr_GET_contactReportStreamBufferSize(physx.PxSceneDescPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxSceneDescPtr_SET_contactReportStreamBufferSize(physx.PxSceneDescPtr cls, uint value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern uint PxSceneDescPtr_GET_ccdMaxPasses(physx.PxSceneDescPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxSceneDescPtr_SET_ccdMaxPasses(physx.PxSceneDescPtr cls, uint value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern float PxSceneDescPtr_GET_wakeCounterResetValue(physx.PxSceneDescPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxSceneDescPtr_SET_wakeCounterResetValue(physx.PxSceneDescPtr cls, float value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxSceneDescPtr_GET_sanityBounds(physx.PxSceneDescPtr cls, physx.PxBounds3* GetRetRef);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxSceneDescPtr_SET_sanityBounds(physx.PxSceneDescPtr cls, physx.PxBounds3 value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxgDynamicsMemoryConfigPtr PxSceneDescPtr_GET_gpuDynamicsConfig(physx.PxSceneDescPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxSceneDescPtr_SET_gpuDynamicsConfig(physx.PxSceneDescPtr cls, physx.PxgDynamicsMemoryConfigPtr value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern uint PxSceneDescPtr_GET_gpuMaxNumPartitions(physx.PxSceneDescPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxSceneDescPtr_SET_gpuMaxNumPartitions(physx.PxSceneDescPtr cls, uint value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern uint PxSceneDescPtr_GET_gpuComputeVersion(physx.PxSceneDescPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxSceneDescPtr_SET_gpuComputeVersion(physx.PxSceneDescPtr cls, uint value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void void_PxSceneDescPtr_setToDefaultPtr_PxTolerancesScale_(physx.PxSceneDescPtr pvk_this, physx.PxTolerancesScale* pvk_scale);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern bool bool_const_PxSceneDescPtr_isValidPtr(physx.PxSceneDescPtr pvk_this);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxTolerancesScale* PxTolerancesScale_const_PxSceneDescPtr_getTolerancesScalePtr(physx.PxSceneDescPtr pvk_this);

}
