//Generated by MinBinder.
using System;
using System.Runtime.InteropServices;
using PxBaseFlags = System.UInt32;
using PxActorFlags = System.UInt32;

public partial struct PxConvexMesh : IPxBase { // ptr holder

    public ushort getConcreteType() {// base call
        return ((PxBase)this).getConcreteType();
    }
    
    public void setBaseFlag(PxBaseFlag flag, bool value) {// base call
         ((PxBase)this).setBaseFlag(flag, value);
    }
    
    public void setBaseFlags(PxBaseFlags inFlags) {// base call
         ((PxBase)this).setBaseFlags(inFlags);
    }
    
    public PxBaseFlags getBaseFlags() {// base call
        return ((PxBase)this).getBaseFlags();
    }
    
    public bool isReleasable() {// base call
        return ((PxBase)this).isReleasable();
    }
    

    private IntPtr nativePtr_;
    
    public static unsafe implicit operator PxBase(PxConvexMesh obj) {// upcast
        return *(PxBase*)&obj;
    }
    
    public static unsafe explicit operator PxConvexMesh(PxBase obj) {// downcast
        return *(PxConvexMesh*)&obj;
    }
    
    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern uint C_CONST_PxConvexMesh_getNbVertices(PxConvexMesh cls);
    public uint getNbVertices(){
        return C_CONST_PxConvexMesh_getNbVertices(this);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern PxVec3 C_CONST_PxConvexMesh_getVertices(PxConvexMesh cls);
    public PxVec3 getVertices(){
        return C_CONST_PxConvexMesh_getVertices(this);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern byte C_CONST_PxConvexMesh_getIndexBuffer(PxConvexMesh cls);
    public byte getIndexBuffer(){
        return C_CONST_PxConvexMesh_getIndexBuffer(this);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern uint C_CONST_PxConvexMesh_getNbPolygons(PxConvexMesh cls);
    public uint getNbPolygons(){
        return C_CONST_PxConvexMesh_getNbPolygons(this);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern void C_PxConvexMesh_release(PxConvexMesh cls);
    public void release(){
         C_PxConvexMesh_release(this);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern uint C_CONST_PxConvexMesh_getReferenceCount(PxConvexMesh cls);
    public uint getReferenceCount(){
        return C_CONST_PxConvexMesh_getReferenceCount(this);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern void C_PxConvexMesh_acquireReference(PxConvexMesh cls);
    public void acquireReference(){
         C_PxConvexMesh_acquireReference(this);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern PxBounds3 C_CONST_PxConvexMesh_getLocalBounds(PxConvexMesh cls);
    public PxBounds3 getLocalBounds(){
        return C_CONST_PxConvexMesh_getLocalBounds(this);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern string C_CONST_PxConvexMesh_getConcreteTypeName(PxConvexMesh cls);
    public string getConcreteTypeName(){
        return C_CONST_PxConvexMesh_getConcreteTypeName(this);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern bool C_CONST_PxConvexMesh_isGpuCompatible(PxConvexMesh cls);
    public bool isGpuCompatible(){
        return C_CONST_PxConvexMesh_isGpuCompatible(this);    
    }


}
public partial struct PxHullPolygon { // ptr holder


    private IntPtr nativePtr_;
    

}
