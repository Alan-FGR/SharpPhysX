// Generated by minBND 5.1.90.51 - Â© github.com/Alan-FGR
using System;
using System.Runtime.InteropServices;
using static minBND_pinvokes;

public static unsafe partial class physx {
    //Subclasses using this: 0

    public unsafe partial struct PxHullPolygonPtr {
        private System.IntPtr nativePtr_;

        //DBG: ClassNode PxHullPolygon physx::PxHullPolygon L51-56

        //DBG: NewerFreerNode PxHullPolygon physx::PxHullPolygon L51-56
        public static physx.PxHullPolygonPtr New(){
            return Newer_physx_PxHullPolygonPtr();
        }
        public static void Free(physx.PxHullPolygonPtr ptr){
            Freer_physx_PxHullPolygonPtr(ptr);
        }
        public void Free(){
            Freer_physx_PxHullPolygonPtr(this);
        }

        //DBG: PtrWrapperCtorNode physx::PxHullPolygon::PxHullPolygon L51
        //ERRORS in PtrWrapperCtorNode: Skipping Implicit PtrWrapperCtorNode physx::PxHullPolygon::PxHullPolygon L51

        //DBG: PtrWrapperCtorNode physx::PxHullPolygon::PxHullPolygon L51
        //ERRORS in PtrWrapperCtorNode: Skipping Implicit PtrWrapperCtorNode physx::PxHullPolygon::PxHullPolygon L51

        //DBG: PtrWrapperCtorNode physx::PxHullPolygon::PxHullPolygon L51
        //ERRORS in PtrWrapperCtorNode: Skipping Implicit PtrWrapperCtorNode physx::PxHullPolygon::PxHullPolygon L51

        //DBG: Field: mPlane - 53-53
        //Errors in type mPlanePtr, field physx::PxHullPolygon::mPlane

        //DBG: Field: mNbVerts - 54-54
        public ushort mNbVerts {
            get => PxHullPolygonPtr_GET_mNbVerts(this);
            set => PxHullPolygonPtr_SET_mNbVerts(this, value);
        }

        //DBG: Field: mIndexBase - 55-55
        public ushort mIndexBase {
            get => PxHullPolygonPtr_GET_mIndexBase(this);
            set => PxHullPolygonPtr_SET_mIndexBase(this, value);
        }

        //DBG: MethodNode physx::PxHullPolygon::operator= L51
        //ERRORS in MethodNode: Skipping Implicit MethodNode physx::PxHullPolygon::operator= L51

        //DBG: MethodNode physx::PxHullPolygon::operator= L51
        //ERRORS in MethodNode: Skipping Implicit MethodNode physx::PxHullPolygon::operator= L51

        //DBG: MethodNode physx::PxHullPolygon::~PxHullPolygon L51
        //ERRORS in MethodNode: Skipping Implicit MethodNode physx::PxHullPolygon::~PxHullPolygon L51, Destructor

        //Operators
    }
    //Subclasses using this: 0

    public unsafe partial struct PxConvexMeshPtr : physx.PxBasePtr.IPxBasePtr {
        private System.IntPtr nativePtr_;

        //DBG: ClassNode PxConvexMesh physx::PxConvexMesh L84-190Bases: PxBasePtr

        //DBG: MethodNode physx::PxConvexMesh::getNbVertices L93
        //RET nat: PxU32, man: uint, ret: True, kind: Value
        //PAR nat: PxConvexMeshPtr, man: physx.PxConvexMeshPtr, kind: PtrStruct
        public uint getNbVertices() {
            physx.PxConvexMeshPtr pvk_in_this = this;
            return uint_const_PxConvexMeshPtr_getNbVerticesPtr(pvk_in_this);
        }

        //DBG: MethodNode physx::PxConvexMesh::getVertices L100
        //RET nat: physx::PxVec3*, man: physx.PxVec3*, ret: True, kind: Value
        //PAR nat: PxConvexMeshPtr, man: physx.PxConvexMeshPtr, kind: PtrStruct
        public physx.PxVec3* getVertices() {
            physx.PxConvexMeshPtr pvk_in_this = this;
            return PxVec3_const_PxConvexMeshPtr_getVerticesPtr(pvk_in_this);
        }

        //DBG: MethodNode physx::PxConvexMesh::getIndexBuffer L107
        //RET nat: PxU8*, man: byte*, ret: True, kind: Value
        //PAR nat: PxConvexMeshPtr, man: physx.PxConvexMeshPtr, kind: PtrStruct
        public byte* getIndexBuffer() {
            physx.PxConvexMeshPtr pvk_in_this = this;
            return byte_const_PxConvexMeshPtr_getIndexBufferPtr(pvk_in_this);
        }

        //DBG: MethodNode physx::PxConvexMesh::getNbPolygons L114
        //RET nat: PxU32, man: uint, ret: True, kind: Value
        //PAR nat: PxConvexMeshPtr, man: physx.PxConvexMeshPtr, kind: PtrStruct
        public uint getNbPolygons() {
            physx.PxConvexMeshPtr pvk_in_this = this;
            return uint_const_PxConvexMeshPtr_getNbPolygonsPtr(pvk_in_this);
        }

        //DBG: MethodNode physx::PxConvexMesh::getPolygonData L123
        //RET nat: bool, man: bool, ret: True, kind: Value
        //PAR nat: PxConvexMeshPtr, man: physx.PxConvexMeshPtr, kind: PtrStruct
        //PAR nat: PxU32, man: uint, kind: Value
        //PAR nat: PxHullPolygonPtr, man: physx.PxHullPolygonPtr, kind: PtrStruct
        public bool getPolygonData(uint index, physx.PxHullPolygonPtr data) {
            physx.PxConvexMeshPtr pvk_in_this = this;
            uint pvk_in_index = index;
            physx.PxHullPolygonPtr pvk_in_data = data;
            return bool_const_PxConvexMeshPtr_getPolygonDataPtr_uint_PxHullPolygonPtr_(pvk_in_this, pvk_in_index, pvk_in_data);
        }

        //DBG: MethodNode physx::PxConvexMesh::release L130
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxConvexMeshPtr, man: physx.PxConvexMeshPtr, kind: PtrStruct
        public void release() {
            physx.PxConvexMeshPtr pvk_in_this = this;
            void_PxConvexMeshPtr_releasePtr(pvk_in_this);
        }

        //DBG: MethodNode physx::PxConvexMesh::getReferenceCount L140
        //RET nat: PxU32, man: uint, ret: True, kind: Value
        //PAR nat: PxConvexMeshPtr, man: physx.PxConvexMeshPtr, kind: PtrStruct
        public uint getReferenceCount() {
            physx.PxConvexMeshPtr pvk_in_this = this;
            return uint_const_PxConvexMeshPtr_getReferenceCountPtr(pvk_in_this);
        }

        //DBG: MethodNode physx::PxConvexMesh::acquireReference L147
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxConvexMeshPtr, man: physx.PxConvexMeshPtr, kind: PtrStruct
        public void acquireReference() {
            physx.PxConvexMeshPtr pvk_in_this = this;
            void_PxConvexMeshPtr_acquireReferencePtr(pvk_in_this);
        }

        //DBG: MethodNode physx::PxConvexMesh::getMassInformation L165
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxConvexMeshPtr, man: physx.PxConvexMeshPtr, kind: PtrStruct
        //PAR nat: PxReal*, man: float*, kind: Value
        //PAR nat: physx::PxMat33*, man: physx.PxMat33*, kind: Value
        //PAR nat: physx::PxVec3*, man: physx.PxVec3*, kind: Value
        public void getMassInformation(float* mass, physx.PxMat33* localInertia, physx.PxVec3* localCenterOfMass) {
            physx.PxConvexMeshPtr pvk_in_this = this;
            float* pvk_in_mass = mass;
            physx.PxMat33* pvk_in_localInertia = localInertia;
            physx.PxVec3* pvk_in_localCenterOfMass = localCenterOfMass;
            void_const_PxConvexMeshPtr_getMassInformationPtr_float_PxMat33_PxVec3_(pvk_in_this, pvk_in_mass, pvk_in_localInertia, pvk_in_localCenterOfMass);
        }

        //DBG: MethodNode physx::PxConvexMesh::getLocalBounds L172
        //RET nat: physx::PxBounds3, man: physx.PxBounds3, ret: False, kind: Blittable
        //PAR nat: PxConvexMeshPtr, man: physx.PxConvexMeshPtr, kind: PtrStruct
        public physx.PxBounds3 getLocalBounds() {
            physx.PxBounds3 RetRef;
            physx.PxConvexMeshPtr pvk_in_this = this;
            PxBounds3_const_PxConvexMeshPtr_getLocalBoundsPtr(&RetRef, pvk_in_this);
            return RetRef;
        }

        //DBG: MethodNode physx::PxConvexMesh::getConcreteTypeName L174
        //RET nat: char*, man: string, ret: True, kind: Value
        //PAR nat: PxConvexMeshPtr, man: physx.PxConvexMeshPtr, kind: PtrStruct
        public string getConcreteTypeName() {
            physx.PxConvexMeshPtr pvk_in_this = this;
            return string_const_PxConvexMeshPtr_getConcreteTypeNamePtr(pvk_in_this);
        }

        //DBG: MethodNode physx::PxConvexMesh::isGpuCompatible L183
        //RET nat: bool, man: bool, ret: True, kind: Value
        //PAR nat: PxConvexMeshPtr, man: physx.PxConvexMeshPtr, kind: PtrStruct
        public bool isGpuCompatible() {
            physx.PxConvexMeshPtr pvk_in_this = this;
            return bool_const_PxConvexMeshPtr_isGpuCompatiblePtr(pvk_in_this);
        }

        //DBG: MethodNode physx::PxConvexMesh::operator= L84
        //ERRORS in MethodNode: Skipping Implicit MethodNode physx::PxConvexMesh::operator= L84

        //DBG: MethodNode physx::PxConvexMesh::getMassInformation L165
        //Value Converter getMassInformation
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxConvexMeshPtr, man: physx.PxConvexMeshPtr, kind: PtrStruct
        //PAR nat: PxReal*, man: float*, kind: Value
        //PAR nat: physx::PxMat33, man: physx.PxMat33, kind: Blittable
        //PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
        public void getMassInformation(float* mass, physx.PxMat33 localInertia, physx.PxVec3 localCenterOfMass) {
            getMassInformation(mass, (physx.PxMat33*)&localInertia, (physx.PxVec3*)&localCenterOfMass);
        }

        //DBG: MethodNode physx::PxConvexMesh::getMassInformation L165
        //Value Converter getMassInformation
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxConvexMeshPtr, man: physx.PxConvexMeshPtr, kind: PtrStruct
        //PAR nat: PxReal*, man: float*, kind: Value
        //PAR nat: physx::PxMat33, man: physx.PxMat33, kind: Blittable
        //PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
        public void getMassInformation(float* mass, physx.PxMat33.Ref localInertia, physx.PxVec3.Ref localCenterOfMass) {
            getMassInformation(mass, (physx.PxMat33*)(*((IntPtr*)(&localInertia))), (physx.PxVec3*)(*((IntPtr*)(&localCenterOfMass))));
        }
        public static implicit operator physx.PxBasePtr(PxConvexMeshPtr obj) => *(physx.PxBasePtr*)&obj;
        public static explicit operator PxConvexMeshPtr(physx.PxBasePtr obj) => *(PxConvexMeshPtr*)&obj;

        //PIPING
        //Skipping: SKIPPING! MethodNode physx::PxBase::is L101 is | 
        //Skipping: SKIPPING! MethodNode physx::PxBase::is L111 isConst | 
        public ushort getConcreteType(){return((physx.PxBasePtr)this).getConcreteType();}
        public void setBaseFlag(physx.PxBaseFlagEnum flag, bool value){((physx.PxBasePtr)this).setBaseFlag(flag, value);}
        public void setBaseFlags(physx.PxBaseFlagsPtr inFlags){((physx.PxBasePtr)this).setBaseFlags(inFlags);}
        public physx.PxBaseFlagsPtr getBaseFlags_New(){return((physx.PxBasePtr)this).getBaseFlags_New();}
        public bool isReleasable(){return((physx.PxBasePtr)this).isReleasable();}

        //Operators
    }
}
