// Generated by minBND 5.1.90.51 - Â© github.com/Alan-FGR
using System;
using System.Runtime.InteropServices;
using static minBND_pinvokes;

public static unsafe partial class physx {
    //Subclasses using this: 0

    [StructLayout(LayoutKind.Sequential, Size = 28)]
    public unsafe partial struct PxTransform {
        public physx.PxQuat q;
        public physx.PxVec3 p;

        //DBG: ClassNode PxTransform physx::PxTransform L48-208

        //DBG: DefaultValueCtorNode physx::PxTransform::PxTransform L54-56
        //RET nat: physx::PxTransform, man: physx.PxTransform, ret: False, kind: Blittable
        public static physx.PxTransform Default() {
            physx.PxTransform RetRef;
            Default_PxTransform_(&RetRef);
            return RetRef;
        }

        //DBG: BlittableCtorNode physx::PxTransform::PxTransform L58-60
        //Value Converter PxTransform
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable
        //PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
        public PxTransform(physx.PxVec3 position) : this((physx.PxVec3*)&position) {
            //ctor piping;
        }

        //DBG: BlittableCtorNode physx::PxTransform::PxTransform L58-60
        //Value Converter PxTransform
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable
        //PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
        public PxTransform(physx.PxVec3.Ref position) : this((physx.PxVec3*)(*((IntPtr*)(&position)))) {
            //ctor piping;
        }

        //DBG: BlittableCtorNode physx::PxTransform::PxTransform L58-60
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable
        //PAR nat: physx::PxVec3*, man: physx.PxVec3*, kind: Value
        public PxTransform(physx.PxVec3* position) {

            physx.PxVec3* pvk_in_position = position;
            PxTransform toInit;
            var pvk_in_this = &toInit;
            void_PxTransform_PxTransformPtr_Ctor_PxVec3_(pvk_in_this, pvk_in_position);
            this = toInit;
        }

        //DBG: BlittableCtorNode physx::PxTransform::PxTransform L62-65
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable
        //PAR nat: physx::PxIDENTITY, man: physx.PxIDENTITY, kind: Value
        public PxTransform(physx.PxIDENTITY r) {

            physx.PxIDENTITY pvk_in_r = r;
            PxTransform toInit;
            var pvk_in_this = &toInit;
            void_PxTransform_PxTransformPtr_Ctor_PxIDENTITY_(pvk_in_this, pvk_in_r);
            this = toInit;
        }

        //DBG: BlittableCtorNode physx::PxTransform::PxTransform L67-70
        //Value Converter PxTransform
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable
        //PAR nat: physx::PxQuat, man: physx.PxQuat, kind: Blittable
        public PxTransform(physx.PxQuat orientation) : this((physx.PxQuat*)&orientation) {
            //ctor piping;
        }

        //DBG: BlittableCtorNode physx::PxTransform::PxTransform L67-70
        //Value Converter PxTransform
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable
        //PAR nat: physx::PxQuat, man: physx.PxQuat, kind: Blittable
        public PxTransform(physx.PxQuat.Ref orientation) : this((physx.PxQuat*)(*((IntPtr*)(&orientation)))) {
            //ctor piping;
        }

        //DBG: BlittableCtorNode physx::PxTransform::PxTransform L67-70
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable
        //PAR nat: physx::PxQuat*, man: physx.PxQuat*, kind: Value
        public PxTransform(physx.PxQuat* orientation) {

            physx.PxQuat* pvk_in_orientation = orientation;
            PxTransform toInit;
            var pvk_in_this = &toInit;
            void_PxTransform_PxTransformPtr_Ctor_PxQuat_(pvk_in_this, pvk_in_orientation);
            this = toInit;
        }

        //DBG: BlittableCtorNode physx::PxTransform::PxTransform L72-75
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable
        //PAR nat: float, man: float, kind: Value
        //PAR nat: float, man: float, kind: Value
        //PAR nat: float, man: float, kind: Value
        public PxTransform(float x, float y, float z) {

            float pvk_in_x = x;
            float pvk_in_y = y;
            float pvk_in_z = z;
            PxTransform toInit;
            var pvk_in_this = &toInit;
            void_PxTransform_PxTransformPtr_Ctor_float_float_float_(pvk_in_this, pvk_in_x, pvk_in_y, pvk_in_z);
            this = toInit;
        }

        //DBG: BlittableCtorNode physx::PxTransform::PxTransform L72-75
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable
        //PAR nat: float, man: float, kind: Value
        //PAR nat: float, man: float, kind: Value
        //PAR nat: float, man: float, kind: Value
        //PAR nat: physx::PxQuat, man: physx.PxQuat, kind: Blittable
        public PxTransform(float x, float y, float z, physx.PxQuat aQ) {

            float pvk_in_x = x;
            float pvk_in_y = y;
            float pvk_in_z = z;
            physx.PxQuat pvk_in_aQ = aQ;
            PxTransform toInit;
            var pvk_in_this = &toInit;
            void_PxTransform_PxTransformPtr_Ctor_float_float_float_PxQuat_(pvk_in_this, pvk_in_x, pvk_in_y, pvk_in_z, pvk_in_aQ);
            this = toInit;
        }

        //DBG: BlittableCtorNode physx::PxTransform::PxTransform L77-80
        //Value Converter PxTransform
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable
        //PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
        //PAR nat: physx::PxQuat, man: physx.PxQuat, kind: Blittable
        public PxTransform(physx.PxVec3 p0, physx.PxQuat q0) : this((physx.PxVec3*)&p0, (physx.PxQuat*)&q0) {
            //ctor piping;
        }

        //DBG: BlittableCtorNode physx::PxTransform::PxTransform L77-80
        //Value Converter PxTransform
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable
        //PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
        //PAR nat: physx::PxQuat, man: physx.PxQuat, kind: Blittable
        public PxTransform(physx.PxVec3.Ref p0, physx.PxQuat.Ref q0) : this((physx.PxVec3*)(*((IntPtr*)(&p0))), (physx.PxQuat*)(*((IntPtr*)(&q0)))) {
            //ctor piping;
        }

        //DBG: BlittableCtorNode physx::PxTransform::PxTransform L77-80
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable
        //PAR nat: physx::PxVec3*, man: physx.PxVec3*, kind: Value
        //PAR nat: physx::PxQuat*, man: physx.PxQuat*, kind: Value
        public PxTransform(physx.PxVec3* p0, physx.PxQuat* q0) {

            physx.PxVec3* pvk_in_p0 = p0;
            physx.PxQuat* pvk_in_q0 = q0;
            PxTransform toInit;
            var pvk_in_this = &toInit;
            void_PxTransform_PxTransformPtr_Ctor_PxVec3_PxQuat_(pvk_in_this, pvk_in_p0, pvk_in_q0);
            this = toInit;
        }

        //DBG: BlittableCtorNode physx::PxTransform::PxTransform L82
        //Value Converter PxTransform
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable
        //PAR nat: physx::PxMat44, man: physx.PxMat44, kind: Blittable
        public PxTransform(physx.PxMat44 m) : this((physx.PxMat44*)&m) {
            //ctor piping;
        }

        //DBG: BlittableCtorNode physx::PxTransform::PxTransform L82
        //Value Converter PxTransform
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable
        //PAR nat: physx::PxMat44, man: physx.PxMat44, kind: Blittable
        public PxTransform(physx.PxMat44.Ref m) : this((physx.PxMat44*)(*((IntPtr*)(&m)))) {
            //ctor piping;
        }

        //DBG: BlittableCtorNode physx::PxTransform::PxTransform L82
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable
        //PAR nat: physx::PxMat44*, man: physx.PxMat44*, kind: Value
        public PxTransform(physx.PxMat44* m) {

            physx.PxMat44* pvk_in_m = m;
            PxTransform toInit;
            var pvk_in_this = &toInit;
            void_PxTransform_PxTransformPtr_Ctor_PxMat44_(pvk_in_this, pvk_in_m);
            this = toInit;
        }

        //DBG: MethodNode physx::PxTransform::operator== L87-90
        //Value Converter OpEquals
        //RET nat: bool, man: bool, ret: True, kind: Value
        //PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable
        //PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable
        public static bool OpEquals(physx.PxTransform lhs, physx.PxTransform t) {
            return OpEquals(lhs, (physx.PxTransform*)&t);
        }

        //DBG: MethodNode physx::PxTransform::operator== L87-90
        //Value Converter OpEquals
        //RET nat: bool, man: bool, ret: True, kind: Value
        //PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable
        //PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable
        public static bool OpEquals(physx.PxTransform lhs, physx.PxTransform.Ref t) {
            return OpEquals(lhs, (physx.PxTransform*)(*((IntPtr*)(&t))));
        }

        //DBG: MethodNode physx::PxTransform::operator== L87-90
        //RET nat: bool, man: bool, ret: True, kind: Value
        //PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable
        //PAR nat: physx::PxTransform*, man: physx.PxTransform*, kind: Value
        public static bool OpEquals(physx.PxTransform lhs, physx.PxTransform* t) {
            physx.PxTransform* pvk_in_lhs = &lhs;
            physx.PxTransform* pvk_in_t = t;
            return bool_const_PxTransform_operator_Ptr_EqualEqual_PxTransform_(pvk_in_lhs, pvk_in_t);
        }

        //DBG: MethodNode physx::PxTransform::operator* L92-96
        //Value Converter OpMultiply
        //RET nat: physx::PxTransform, man: physx.PxTransform, ret: False, kind: Blittable
        //PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable
        //PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable
        public static physx.PxTransform OpMultiply(physx.PxTransform lhs, physx.PxTransform x) {
            return OpMultiply(lhs, (physx.PxTransform*)&x);
        }

        //DBG: MethodNode physx::PxTransform::operator* L92-96
        //Value Converter OpMultiply
        //RET nat: physx::PxTransform, man: physx.PxTransform, ret: False, kind: Blittable
        //PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable
        //PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable
        public static physx.PxTransform OpMultiply(physx.PxTransform lhs, physx.PxTransform.Ref x) {
            return OpMultiply(lhs, (physx.PxTransform*)(*((IntPtr*)(&x))));
        }

        //DBG: MethodNode physx::PxTransform::operator* L92-96
        //RET nat: physx::PxTransform, man: physx.PxTransform, ret: False, kind: Blittable
        //PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable
        //PAR nat: physx::PxTransform*, man: physx.PxTransform*, kind: Value
        public static physx.PxTransform OpMultiply(physx.PxTransform lhs, physx.PxTransform* x) {
            physx.PxTransform RetRef;
            physx.PxTransform* pvk_in_lhs = &lhs;
            physx.PxTransform* pvk_in_x = x;
            PxTransform_const_PxTransform_operator_Ptr_Star_PxTransform_(&RetRef, pvk_in_lhs, pvk_in_x);
            return RetRef;
        }

        //DBG: MethodNode physx::PxTransform::operator*= L99-103
        //Value Converter OpStarEqual
        //RET nat: physx::PxTransform*, man: physx.PxTransform*, ret: True, kind: Value
        //PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable
        //PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable
        public static physx.PxTransform* OpStarEqual(physx.PxTransform lhs, physx.PxTransform other) {
            return OpStarEqual(lhs, (physx.PxTransform*)&other);
        }

        //DBG: MethodNode physx::PxTransform::operator*= L99-103
        //Value Converter OpStarEqual
        //RET nat: physx::PxTransform*, man: physx.PxTransform*, ret: True, kind: Value
        //PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable
        //PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable
        public static physx.PxTransform* OpStarEqual(physx.PxTransform lhs, physx.PxTransform.Ref other) {
            return OpStarEqual(lhs, (physx.PxTransform*)(*((IntPtr*)(&other))));
        }

        //DBG: MethodNode physx::PxTransform::operator*= L99-103
        //RET nat: physx::PxTransform*, man: physx.PxTransform*, ret: True, kind: Value
        //PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable
        //PAR nat: physx::PxTransform*, man: physx.PxTransform*, kind: Value
        public static physx.PxTransform* OpStarEqual(physx.PxTransform lhs, physx.PxTransform* other) {
            physx.PxTransform* pvk_in_lhs = &lhs;
            physx.PxTransform* pvk_in_other = other;
            return PxTransform_PxTransform_operator_Ptr_StarEqual_PxTransform_(pvk_in_lhs, pvk_in_other);
        }

        //DBG: MethodNode physx::PxTransform::getInverse L105-109
        //RET nat: physx::PxTransform, man: physx.PxTransform, ret: False, kind: Blittable
        //PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable
        public physx.PxTransform getInverse() {
            physx.PxTransform RetRef;

            fixed (PxTransform* pvk_in_this = &this){
              PxTransform_const_PxTransform_getInversePtr(&RetRef, pvk_in_this);
            }
            return RetRef;
        }

        //DBG: MethodNode physx::PxTransform::transform L111-115
        //Value Converter transform
        //RET nat: physx::PxVec3, man: physx.PxVec3, ret: False, kind: Blittable
        //PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable
        //PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
        public physx.PxVec3 transform(physx.PxVec3 input) {
            return transform((physx.PxVec3*)&input);
        }

        //DBG: MethodNode physx::PxTransform::transform L111-115
        //Value Converter transform
        //RET nat: physx::PxVec3, man: physx.PxVec3, ret: False, kind: Blittable
        //PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable
        //PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
        public physx.PxVec3 transform(physx.PxVec3.Ref input) {
            return transform((physx.PxVec3*)(*((IntPtr*)(&input))));
        }

        //DBG: MethodNode physx::PxTransform::transform L111-115
        //RET nat: physx::PxVec3, man: physx.PxVec3, ret: False, kind: Blittable
        //PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable
        //PAR nat: physx::PxVec3*, man: physx.PxVec3*, kind: Value
        public physx.PxVec3 transform(physx.PxVec3* input) {
            physx.PxVec3 RetRef;

            physx.PxVec3* pvk_in_input = input;
            fixed (PxTransform* pvk_in_this = &this){
              PxVec3_const_PxTransform_transformPtr_PxVec3_(&RetRef, pvk_in_this, pvk_in_input);
            }
            return RetRef;
        }

        //DBG: MethodNode physx::PxTransform::transformInv L117-121
        //Value Converter transformInv
        //RET nat: physx::PxVec3, man: physx.PxVec3, ret: False, kind: Blittable
        //PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable
        //PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
        public physx.PxVec3 transformInv(physx.PxVec3 input) {
            return transformInv((physx.PxVec3*)&input);
        }

        //DBG: MethodNode physx::PxTransform::transformInv L117-121
        //Value Converter transformInv
        //RET nat: physx::PxVec3, man: physx.PxVec3, ret: False, kind: Blittable
        //PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable
        //PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
        public physx.PxVec3 transformInv(physx.PxVec3.Ref input) {
            return transformInv((physx.PxVec3*)(*((IntPtr*)(&input))));
        }

        //DBG: MethodNode physx::PxTransform::transformInv L117-121
        //RET nat: physx::PxVec3, man: physx.PxVec3, ret: False, kind: Blittable
        //PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable
        //PAR nat: physx::PxVec3*, man: physx.PxVec3*, kind: Value
        public physx.PxVec3 transformInv(physx.PxVec3* input) {
            physx.PxVec3 RetRef;

            physx.PxVec3* pvk_in_input = input;
            fixed (PxTransform* pvk_in_this = &this){
              PxVec3_const_PxTransform_transformInvPtr_PxVec3_(&RetRef, pvk_in_this, pvk_in_input);
            }
            return RetRef;
        }

        //DBG: MethodNode physx::PxTransform::rotate L123-127
        //Value Converter rotate
        //RET nat: physx::PxVec3, man: physx.PxVec3, ret: False, kind: Blittable
        //PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable
        //PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
        public physx.PxVec3 rotate(physx.PxVec3 input) {
            return rotate((physx.PxVec3*)&input);
        }

        //DBG: MethodNode physx::PxTransform::rotate L123-127
        //Value Converter rotate
        //RET nat: physx::PxVec3, man: physx.PxVec3, ret: False, kind: Blittable
        //PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable
        //PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
        public physx.PxVec3 rotate(physx.PxVec3.Ref input) {
            return rotate((physx.PxVec3*)(*((IntPtr*)(&input))));
        }

        //DBG: MethodNode physx::PxTransform::rotate L123-127
        //RET nat: physx::PxVec3, man: physx.PxVec3, ret: False, kind: Blittable
        //PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable
        //PAR nat: physx::PxVec3*, man: physx.PxVec3*, kind: Value
        public physx.PxVec3 rotate(physx.PxVec3* input) {
            physx.PxVec3 RetRef;

            physx.PxVec3* pvk_in_input = input;
            fixed (PxTransform* pvk_in_this = &this){
              PxVec3_const_PxTransform_rotatePtr_PxVec3_(&RetRef, pvk_in_this, pvk_in_input);
            }
            return RetRef;
        }

        //DBG: MethodNode physx::PxTransform::rotateInv L129-133
        //Value Converter rotateInv
        //RET nat: physx::PxVec3, man: physx.PxVec3, ret: False, kind: Blittable
        //PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable
        //PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
        public physx.PxVec3 rotateInv(physx.PxVec3 input) {
            return rotateInv((physx.PxVec3*)&input);
        }

        //DBG: MethodNode physx::PxTransform::rotateInv L129-133
        //Value Converter rotateInv
        //RET nat: physx::PxVec3, man: physx.PxVec3, ret: False, kind: Blittable
        //PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable
        //PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
        public physx.PxVec3 rotateInv(physx.PxVec3.Ref input) {
            return rotateInv((physx.PxVec3*)(*((IntPtr*)(&input))));
        }

        //DBG: MethodNode physx::PxTransform::rotateInv L129-133
        //RET nat: physx::PxVec3, man: physx.PxVec3, ret: False, kind: Blittable
        //PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable
        //PAR nat: physx::PxVec3*, man: physx.PxVec3*, kind: Value
        public physx.PxVec3 rotateInv(physx.PxVec3* input) {
            physx.PxVec3 RetRef;

            physx.PxVec3* pvk_in_input = input;
            fixed (PxTransform* pvk_in_this = &this){
              PxVec3_const_PxTransform_rotateInvPtr_PxVec3_(&RetRef, pvk_in_this, pvk_in_input);
            }
            return RetRef;
        }

        //DBG: MethodNode physx::PxTransform::transform L136-142
        //Value Converter transform
        //RET nat: physx::PxTransform, man: physx.PxTransform, ret: False, kind: Blittable
        //PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable
        //PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable
        public physx.PxTransform transform(physx.PxTransform src) {
            return transform((physx.PxTransform*)&src);
        }

        //DBG: MethodNode physx::PxTransform::transform L136-142
        //Value Converter transform
        //RET nat: physx::PxTransform, man: physx.PxTransform, ret: False, kind: Blittable
        //PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable
        //PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable
        public physx.PxTransform transform(physx.PxTransform.Ref src) {
            return transform((physx.PxTransform*)(*((IntPtr*)(&src))));
        }

        //DBG: MethodNode physx::PxTransform::transform L136-142
        //RET nat: physx::PxTransform, man: physx.PxTransform, ret: False, kind: Blittable
        //PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable
        //PAR nat: physx::PxTransform*, man: physx.PxTransform*, kind: Value
        public physx.PxTransform transform(physx.PxTransform* src) {
            physx.PxTransform RetRef;

            physx.PxTransform* pvk_in_src = src;
            fixed (PxTransform* pvk_in_this = &this){
              PxTransform_const_PxTransform_transformPtr_PxTransform_(&RetRef, pvk_in_this, pvk_in_src);
            }
            return RetRef;
        }

        //DBG: MethodNode physx::PxTransform::isValid L148-151
        //RET nat: bool, man: bool, ret: True, kind: Value
        //PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable
        public bool isValid() {

            fixed (PxTransform* pvk_in_this = &this){
              return bool_const_PxTransform_isValidPtr(pvk_in_this);
            }
        }

        //DBG: MethodNode physx::PxTransform::isSane L158-161
        //RET nat: bool, man: bool, ret: True, kind: Value
        //PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable
        public bool isSane() {

            fixed (PxTransform* pvk_in_this = &this){
              return bool_const_PxTransform_isSanePtr(pvk_in_this);
            }
        }

        //DBG: MethodNode physx::PxTransform::isFinite L166-169
        //RET nat: bool, man: bool, ret: True, kind: Value
        //PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable
        public bool isFinite() {

            fixed (PxTransform* pvk_in_this = &this){
              return bool_const_PxTransform_isFinitePtr(pvk_in_this);
            }
        }

        //DBG: MethodNode physx::PxTransform::transformInv L172-179
        //Value Converter transformInv
        //RET nat: physx::PxTransform, man: physx.PxTransform, ret: False, kind: Blittable
        //PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable
        //PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable
        public physx.PxTransform transformInv(physx.PxTransform src) {
            return transformInv((physx.PxTransform*)&src);
        }

        //DBG: MethodNode physx::PxTransform::transformInv L172-179
        //Value Converter transformInv
        //RET nat: physx::PxTransform, man: physx.PxTransform, ret: False, kind: Blittable
        //PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable
        //PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable
        public physx.PxTransform transformInv(physx.PxTransform.Ref src) {
            return transformInv((physx.PxTransform*)(*((IntPtr*)(&src))));
        }

        //DBG: MethodNode physx::PxTransform::transformInv L172-179
        //RET nat: physx::PxTransform, man: physx.PxTransform, ret: False, kind: Blittable
        //PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable
        //PAR nat: physx::PxTransform*, man: physx.PxTransform*, kind: Value
        public physx.PxTransform transformInv(physx.PxTransform* src) {
            physx.PxTransform RetRef;

            physx.PxTransform* pvk_in_src = src;
            fixed (PxTransform* pvk_in_this = &this){
              PxTransform_const_PxTransform_transformInvPtr_PxTransform_(&RetRef, pvk_in_this, pvk_in_src);
            }
            return RetRef;
        }

        //DBG: MethodNode physx::PxTransform::transform L185-189
        //Value Converter transform
        //RET nat: physx::PxPlane, man: physx.PxPlane, ret: False, kind: Blittable
        //PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable
        //PAR nat: physx::PxPlane, man: physx.PxPlane, kind: Blittable
        public physx.PxPlane transform(physx.PxPlane plane) {
            return transform((physx.PxPlane*)&plane);
        }

        //DBG: MethodNode physx::PxTransform::transform L185-189
        //Value Converter transform
        //RET nat: physx::PxPlane, man: physx.PxPlane, ret: False, kind: Blittable
        //PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable
        //PAR nat: physx::PxPlane, man: physx.PxPlane, kind: Blittable
        public physx.PxPlane transform(physx.PxPlane.Ref plane) {
            return transform((physx.PxPlane*)(*((IntPtr*)(&plane))));
        }

        //DBG: MethodNode physx::PxTransform::transform L185-189
        //RET nat: physx::PxPlane, man: physx.PxPlane, ret: False, kind: Blittable
        //PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable
        //PAR nat: physx::PxPlane*, man: physx.PxPlane*, kind: Value
        public physx.PxPlane transform(physx.PxPlane* plane) {
            physx.PxPlane RetRef;

            physx.PxPlane* pvk_in_plane = plane;
            fixed (PxTransform* pvk_in_this = &this){
              PxPlane_const_PxTransform_transformPtr_PxPlane_(&RetRef, pvk_in_this, pvk_in_plane);
            }
            return RetRef;
        }

        //DBG: MethodNode physx::PxTransform::inverseTransform L195-199
        //Value Converter inverseTransform
        //RET nat: physx::PxPlane, man: physx.PxPlane, ret: False, kind: Blittable
        //PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable
        //PAR nat: physx::PxPlane, man: physx.PxPlane, kind: Blittable
        public physx.PxPlane inverseTransform(physx.PxPlane plane) {
            return inverseTransform((physx.PxPlane*)&plane);
        }

        //DBG: MethodNode physx::PxTransform::inverseTransform L195-199
        //Value Converter inverseTransform
        //RET nat: physx::PxPlane, man: physx.PxPlane, ret: False, kind: Blittable
        //PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable
        //PAR nat: physx::PxPlane, man: physx.PxPlane, kind: Blittable
        public physx.PxPlane inverseTransform(physx.PxPlane.Ref plane) {
            return inverseTransform((physx.PxPlane*)(*((IntPtr*)(&plane))));
        }

        //DBG: MethodNode physx::PxTransform::inverseTransform L195-199
        //RET nat: physx::PxPlane, man: physx.PxPlane, ret: False, kind: Blittable
        //PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable
        //PAR nat: physx::PxPlane*, man: physx.PxPlane*, kind: Value
        public physx.PxPlane inverseTransform(physx.PxPlane* plane) {
            physx.PxPlane RetRef;

            physx.PxPlane* pvk_in_plane = plane;
            fixed (PxTransform* pvk_in_this = &this){
              PxPlane_const_PxTransform_inverseTransformPtr_PxPlane_(&RetRef, pvk_in_this, pvk_in_plane);
            }
            return RetRef;
        }

        //DBG: MethodNode physx::PxTransform::getNormalized L204-207
        //RET nat: physx::PxTransform, man: physx.PxTransform, ret: False, kind: Blittable
        //PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable
        public physx.PxTransform getNormalized() {
            physx.PxTransform RetRef;

            fixed (PxTransform* pvk_in_this = &this){
              PxTransform_const_PxTransform_getNormalizedPtr(&RetRef, pvk_in_this);
            }
            return RetRef;
        }

        //DBG: BlittableCtorNode physx::PxTransform::PxTransform L48
        //ERRORS in BlittableCtorNode: Skipping Implicit BlittableCtorNode physx::PxTransform::PxTransform L48

        //DBG: BlittableCtorNode physx::PxTransform::PxTransform L48
        //ERRORS in BlittableCtorNode: Skipping Implicit BlittableCtorNode physx::PxTransform::PxTransform L48

        //DBG: MethodNode physx::PxTransform::operator= L48
        //ERRORS in MethodNode: Skipping Implicit MethodNode physx::PxTransform::operator= L48

        //DBG: MethodNode physx::PxTransform::~PxTransform L48
        //ERRORS in MethodNode: Skipping Implicit MethodNode physx::PxTransform::~PxTransform L48, Destructor

        //DBG: MethodNode physx::PxTransform::operator= L48
        //ERRORS in MethodNode: Skipping Implicit MethodNode physx::PxTransform::operator= L48

        //REFERENCES
        public struct Ref {
            private IntPtr nativePtr_;
            public static implicit operator Ref(in physx.PxTransform obj)
            {fixed (void* f = &obj) return new Ref {nativePtr_ = (IntPtr)f};}
        }

        //Operators
        public static bool operator==(physx.PxTransform lhs, physx.PxTransform t) {
            return physx.PxTransform.OpEquals(lhs, (physx.PxTransform*)&t);
        }
        public static bool operator!=(physx.PxTransform lhs, physx.PxTransform t) {
            return !(physx.PxTransform.OpEquals(lhs, (physx.PxTransform*)&t)); // Matching Operator
        }
        public static bool operator==(physx.PxTransform lhs, physx.PxTransform.Ref t) {
            return physx.PxTransform.OpEquals(lhs, (physx.PxTransform*)(*((IntPtr*)(&t))));
        }
        public static bool operator!=(physx.PxTransform lhs, physx.PxTransform.Ref t) {
            return !(physx.PxTransform.OpEquals(lhs, (physx.PxTransform*)(*((IntPtr*)(&t))))); // Matching Operator
        }
        public static bool operator==(physx.PxTransform lhs, physx.PxTransform* t) {
            return physx.PxTransform.OpEquals(lhs, t);
        }
        public static bool operator!=(physx.PxTransform lhs, physx.PxTransform* t) {
            return !(physx.PxTransform.OpEquals(lhs, t)); // Matching Operator
        }
        public static physx.PxTransform operator*(physx.PxTransform lhs, physx.PxTransform x) {
            return physx.PxTransform.OpMultiply(lhs, (physx.PxTransform*)&x);
        }
        public static physx.PxTransform operator*(physx.PxTransform lhs, physx.PxTransform.Ref x) {
            return physx.PxTransform.OpMultiply(lhs, (physx.PxTransform*)(*((IntPtr*)(&x))));
        }
        public static physx.PxTransform operator*(physx.PxTransform lhs, physx.PxTransform* x) {
            return physx.PxTransform.OpMultiply(lhs, x);
        }
    }
}
