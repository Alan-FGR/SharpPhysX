// Generated by minBND 5.1.78.10 - Â© github.com/Alan-FGR
//Unit PxTransform
using System;
using System.Runtime.InteropServices;

public static unsafe partial class physx {
    public unsafe partial struct PxTransformPtr{
        private System.IntPtr nativePtr_;
        
    [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void Freer_physx_PxTransformPtr(PxTransformPtr ptr);
        
        public static void Free(PxTransformPtr ptr){
            Freer_physx_PxTransformPtr(ptr);
        }
        public void Free(){
            Freer_physx_PxTransformPtr(this);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxTransformPtr Ctor_physx_PxTransformPtr_();
        
        public static physx.PxTransformPtr New() {
            return Ctor_physx_PxTransformPtr_();
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxTransformPtr Ctor_physx_PxTransformPtr_physx_PxVec3Ptr(physx.PxVec3Ptr pvk_position);
        
        public static physx.PxTransformPtr New(physx.PxVec3Ptr position) {
            physx.PxVec3Ptr pvk_in_position = position;
            return Ctor_physx_PxTransformPtr_physx_PxVec3Ptr(pvk_in_position);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxTransformPtr Ctor_physx_PxTransformPtr_physx_PxIDENTITY(physx.PxIDENTITY pvk_r);
        
        public static physx.PxTransformPtr New(physx.PxIDENTITY r) {
            physx.PxIDENTITY pvk_in_r = r;
            return Ctor_physx_PxTransformPtr_physx_PxIDENTITY(pvk_in_r);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxTransformPtr Ctor_physx_PxTransformPtr_physx_PxQuatPtr(physx.PxQuatPtr pvk_orientation);
        
        public static physx.PxTransformPtr New(physx.PxQuatPtr orientation) {
            physx.PxQuatPtr pvk_in_orientation = orientation;
            return Ctor_physx_PxTransformPtr_physx_PxQuatPtr(pvk_in_orientation);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxTransformPtr Ctor_physx_PxTransformPtr_float_float_float_physx_PxQuatPtr(float pvk_x, float pvk_y, float pvk_z, physx.PxQuatPtr pvk_aQ);
        
        public static physx.PxTransformPtr New(float x, float y, float z, physx.PxQuatPtr aQ) {
            float pvk_in_x = x;
            float pvk_in_y = y;
            float pvk_in_z = z;
            physx.PxQuatPtr pvk_in_aQ = aQ;
            return Ctor_physx_PxTransformPtr_float_float_float_physx_PxQuatPtr(pvk_in_x, pvk_in_y, pvk_in_z, pvk_in_aQ);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxTransformPtr Ctor_physx_PxTransformPtr_float_float_float(float pvk_x, float pvk_y, float pvk_z);
        
        public static physx.PxTransformPtr New(float x, float y, float z) {
            float pvk_in_x = x;
            float pvk_in_y = y;
            float pvk_in_z = z;
            return Ctor_physx_PxTransformPtr_float_float_float(pvk_in_x, pvk_in_y, pvk_in_z);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxTransformPtr Ctor_physx_PxTransformPtr_physx_PxVec3Ptr_physx_PxQuatPtr(physx.PxVec3Ptr pvk_p0, physx.PxQuatPtr pvk_q0);
        
        public static physx.PxTransformPtr New(physx.PxVec3Ptr p0, physx.PxQuatPtr q0) {
            physx.PxVec3Ptr pvk_in_p0 = p0;
            physx.PxQuatPtr pvk_in_q0 = q0;
            return Ctor_physx_PxTransformPtr_physx_PxVec3Ptr_physx_PxQuatPtr(pvk_in_p0, pvk_in_q0);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxTransformPtr Ctor_physx_PxTransformPtr_physx_PxMat44Ptr(physx.PxMat44Ptr pvk_m);
        
        public static physx.PxTransformPtr New(physx.PxMat44Ptr m) {
            physx.PxMat44Ptr pvk_in_m = m;
            return Ctor_physx_PxTransformPtr_physx_PxMat44Ptr(pvk_in_m);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxQuatPtr PxTransform_GET_q(PxTransformPtr cls);
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void PxTransform_SET_q(PxTransformPtr cls, physx.PxQuatPtr value);
        
        public physx.PxQuatPtr q {
            get => PxTransform_GET_q(this);
            set => PxTransform_SET_q(this, value);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxVec3Ptr PxTransform_GET_p(PxTransformPtr cls);
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void PxTransform_SET_p(PxTransformPtr cls, physx.PxVec3Ptr value);
        
        public physx.PxVec3Ptr p {
            get => PxTransform_GET_p(this);
            set => PxTransform_SET_p(this, value);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern bool bool_const_physx_PxTransform_operator_EqualEqual_physx_PxTransformPtr_(physx.PxTransformPtr pvk_lhs, physx.PxTransformPtr pvk_t);
        
        public static bool operator==(physx.PxTransformPtr lhs, physx.PxTransformPtr t) {
            physx.PxTransformPtr pvk_in_lhs = lhs;
            physx.PxTransformPtr pvk_in_t = t;
            return bool_const_physx_PxTransform_operator_EqualEqual_physx_PxTransformPtr_(pvk_in_lhs, pvk_in_t);
        }
        public static bool operator!=(physx.PxTransformPtr lhs, physx.PxTransformPtr t){return !(lhs==t);} // Generated Matching Operator
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxTransformPtr physx_PxTransformPtr_const_physx_PxTransform_operator_Star_physx_PxTransformPtr_(physx.PxTransformPtr pvk_lhs, physx.PxTransformPtr pvk_x);
        
        public static physx.PxTransformPtr operator*(physx.PxTransformPtr lhs, physx.PxTransformPtr x) {
            physx.PxTransformPtr pvk_in_lhs = lhs;
            physx.PxTransformPtr pvk_in_x = x;
            return physx_PxTransformPtr_const_physx_PxTransform_operator_Star_physx_PxTransformPtr_(pvk_in_lhs, pvk_in_x);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxTransformPtr physx_PxTransformPtr_const_physx_PxTransform_getInverse(physx.PxTransformPtr pvk_this);
        
        public physx.PxTransformPtr getInverse_New() {
            physx.PxTransformPtr pvk_in_this = this;
            return physx_PxTransformPtr_const_physx_PxTransform_getInverse(pvk_in_this);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxVec3Ptr physx_PxVec3Ptr_const_physx_PxTransform_transform_physx_PxVec3Ptr_(physx.PxTransformPtr pvk_this, physx.PxVec3Ptr pvk_input);
        
        public physx.PxVec3Ptr transform_New(physx.PxVec3Ptr input) {
            physx.PxTransformPtr pvk_in_this = this;
            physx.PxVec3Ptr pvk_in_input = input;
            return physx_PxVec3Ptr_const_physx_PxTransform_transform_physx_PxVec3Ptr_(pvk_in_this, pvk_in_input);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxVec3Ptr physx_PxVec3Ptr_const_physx_PxTransform_transformInv_physx_PxVec3Ptr_(physx.PxTransformPtr pvk_this, physx.PxVec3Ptr pvk_input);
        
        public physx.PxVec3Ptr transformInv_New(physx.PxVec3Ptr input) {
            physx.PxTransformPtr pvk_in_this = this;
            physx.PxVec3Ptr pvk_in_input = input;
            return physx_PxVec3Ptr_const_physx_PxTransform_transformInv_physx_PxVec3Ptr_(pvk_in_this, pvk_in_input);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxVec3Ptr physx_PxVec3Ptr_const_physx_PxTransform_rotate_physx_PxVec3Ptr_(physx.PxTransformPtr pvk_this, physx.PxVec3Ptr pvk_input);
        
        public physx.PxVec3Ptr rotate_New(physx.PxVec3Ptr input) {
            physx.PxTransformPtr pvk_in_this = this;
            physx.PxVec3Ptr pvk_in_input = input;
            return physx_PxVec3Ptr_const_physx_PxTransform_rotate_physx_PxVec3Ptr_(pvk_in_this, pvk_in_input);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxVec3Ptr physx_PxVec3Ptr_const_physx_PxTransform_rotateInv_physx_PxVec3Ptr_(physx.PxTransformPtr pvk_this, physx.PxVec3Ptr pvk_input);
        
        public physx.PxVec3Ptr rotateInv_New(physx.PxVec3Ptr input) {
            physx.PxTransformPtr pvk_in_this = this;
            physx.PxVec3Ptr pvk_in_input = input;
            return physx_PxVec3Ptr_const_physx_PxTransform_rotateInv_physx_PxVec3Ptr_(pvk_in_this, pvk_in_input);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxTransformPtr physx_PxTransformPtr_const_physx_PxTransform_transform_physx_PxTransformPtr_(physx.PxTransformPtr pvk_this, physx.PxTransformPtr pvk_src);
        
        public physx.PxTransformPtr transform_New(physx.PxTransformPtr src) {
            physx.PxTransformPtr pvk_in_this = this;
            physx.PxTransformPtr pvk_in_src = src;
            return physx_PxTransformPtr_const_physx_PxTransform_transform_physx_PxTransformPtr_(pvk_in_this, pvk_in_src);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern bool bool_const_physx_PxTransform_isValid(physx.PxTransformPtr pvk_this);
        
        public bool isValid() {
            physx.PxTransformPtr pvk_in_this = this;
            return bool_const_physx_PxTransform_isValid(pvk_in_this);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern bool bool_const_physx_PxTransform_isSane(physx.PxTransformPtr pvk_this);
        
        public bool isSane() {
            physx.PxTransformPtr pvk_in_this = this;
            return bool_const_physx_PxTransform_isSane(pvk_in_this);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern bool bool_const_physx_PxTransform_isFinite(physx.PxTransformPtr pvk_this);
        
        public bool isFinite() {
            physx.PxTransformPtr pvk_in_this = this;
            return bool_const_physx_PxTransform_isFinite(pvk_in_this);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxTransformPtr physx_PxTransformPtr_const_physx_PxTransform_transformInv_physx_PxTransformPtr_(physx.PxTransformPtr pvk_this, physx.PxTransformPtr pvk_src);
        
        public physx.PxTransformPtr transformInv_New(physx.PxTransformPtr src) {
            physx.PxTransformPtr pvk_in_this = this;
            physx.PxTransformPtr pvk_in_src = src;
            return physx_PxTransformPtr_const_physx_PxTransform_transformInv_physx_PxTransformPtr_(pvk_in_this, pvk_in_src);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxPlanePtr physx_PxPlanePtr_const_physx_PxTransform_transform_physx_PxPlanePtr_(physx.PxTransformPtr pvk_this, physx.PxPlanePtr pvk_plane);
        
        public physx.PxPlanePtr transform_New(physx.PxPlanePtr plane) {
            physx.PxTransformPtr pvk_in_this = this;
            physx.PxPlanePtr pvk_in_plane = plane;
            return physx_PxPlanePtr_const_physx_PxTransform_transform_physx_PxPlanePtr_(pvk_in_this, pvk_in_plane);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxPlanePtr physx_PxPlanePtr_const_physx_PxTransform_inverseTransform_physx_PxPlanePtr_(physx.PxTransformPtr pvk_this, physx.PxPlanePtr pvk_plane);
        
        public physx.PxPlanePtr inverseTransform_New(physx.PxPlanePtr plane) {
            physx.PxTransformPtr pvk_in_this = this;
            physx.PxPlanePtr pvk_in_plane = plane;
            return physx_PxPlanePtr_const_physx_PxTransform_inverseTransform_physx_PxPlanePtr_(pvk_in_this, pvk_in_plane);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxTransformPtr physx_PxTransformPtr_const_physx_PxTransform_getNormalized(physx.PxTransformPtr pvk_this);
        
        public physx.PxTransformPtr getNormalized_New() {
            physx.PxTransformPtr pvk_in_this = this;
            return physx_PxTransformPtr_const_physx_PxTransform_getNormalized(pvk_in_this);
        }
    }
    
}
