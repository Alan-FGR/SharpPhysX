// Generated by minBND 5.1.78.26 - Â© github.com/Alan-FGR
//DEBUG: UnitNode  - 0
//Unit PxTransform
using System;
using System.Runtime.InteropServices;

//DEBUG: NamespaceNode physx - 40-211
public static unsafe partial class physx {
    //DEBUG: ClassNode physx::PxTransform - 48-208
    public unsafe partial struct PxTransform{
        public physx.PxQuat q;
        public physx.PxVec3 p;
        
    //DEBUG: DefaulterNode physx::PxTransform::PxTransform - 54-56
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void Default_physx_PxTransform_(physx.PxTransform* RetRef);
        
        public static physx.PxTransform Default() {
            //RET nat: physx.PxTransform, man: physx.PxTransform, stg: Blittable, ret: False
            physx.PxTransform RetRef;
            Default_physx_PxTransform_(&RetRef);
            return RetRef;
        }
        
        //DEBUG: BlittableCtorNode physx::PxTransform::PxTransform - 58-60
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxTransform_PxTransform_Ctor_physx_PxVec3_(physx.PxTransform* pvk_this, physx.PxVec3* pvk_position);
        
        public PxTransform(physx.PxVec3* position) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: physx::PxTransform, man: physx.PxTransform, stg: Blittable
            
            //PAR nat: physx::PxVec3*, man: physx.PxVec3*, stg: Value
            physx.PxVec3* pvk_in_position = position;
            PxTransform toInit;
            var pvk_in_this = &toInit;
            void_physx_PxTransform_PxTransform_Ctor_physx_PxVec3_(pvk_in_this, pvk_in_position);
            this = toInit;
        }
        
        //DEBUG: BlittableCtorNode physx::PxTransform::PxTransform - 62-65
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxTransform_PxTransform_Ctor_physx_PxIDENTITY_(physx.PxTransform* pvk_this, physx.PxIDENTITY pvk_r);
        
        public PxTransform(physx.PxIDENTITY r) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: physx::PxTransform, man: physx.PxTransform, stg: Blittable
            
            //PAR nat: physx::PxIDENTITY, man: physx.PxIDENTITY, stg: Value
            physx.PxIDENTITY pvk_in_r = r;
            PxTransform toInit;
            var pvk_in_this = &toInit;
            void_physx_PxTransform_PxTransform_Ctor_physx_PxIDENTITY_(pvk_in_this, pvk_in_r);
            this = toInit;
        }
        
        //DEBUG: BlittableCtorNode physx::PxTransform::PxTransform - 67-70
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxTransform_PxTransform_Ctor_physx_PxQuat_(physx.PxTransform* pvk_this, physx.PxQuat* pvk_orientation);
        
        public PxTransform(physx.PxQuat* orientation) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: physx::PxTransform, man: physx.PxTransform, stg: Blittable
            
            //PAR nat: physx::PxQuat*, man: physx.PxQuat*, stg: Value
            physx.PxQuat* pvk_in_orientation = orientation;
            PxTransform toInit;
            var pvk_in_this = &toInit;
            void_physx_PxTransform_PxTransform_Ctor_physx_PxQuat_(pvk_in_this, pvk_in_orientation);
            this = toInit;
        }
        
        //DEBUG: BlittableCtorNode physx::PxTransform::PxTransform - 72-75
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxTransform_PxTransform_Ctor_float_float_float_physx_PxQuat_(physx.PxTransform* pvk_this, float pvk_x, float pvk_y, float pvk_z, physx.PxQuat pvk_aQ);
        
        public PxTransform(float x, float y, float z, physx.PxQuat aQ) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: physx::PxTransform, man: physx.PxTransform, stg: Blittable
            
            //PAR nat: float, man: float, stg: Value
            float pvk_in_x = x;
            //PAR nat: float, man: float, stg: Value
            float pvk_in_y = y;
            //PAR nat: float, man: float, stg: Value
            float pvk_in_z = z;
            //PAR nat: physx::PxQuat, man: physx.PxQuat, stg: Blittable
            physx.PxQuat pvk_in_aQ = aQ;
            PxTransform toInit;
            var pvk_in_this = &toInit;
            void_physx_PxTransform_PxTransform_Ctor_float_float_float_physx_PxQuat_(pvk_in_this, pvk_in_x, pvk_in_y, pvk_in_z, pvk_in_aQ);
            this = toInit;
        }
        
        //DEBUG: BlittableCtorNode physx::PxTransform::PxTransform - 72-75
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxTransform_PxTransform_Ctor_float_float_float_(physx.PxTransform* pvk_this, float pvk_x, float pvk_y, float pvk_z);
        
        public PxTransform(float x, float y, float z) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: physx::PxTransform, man: physx.PxTransform, stg: Blittable
            
            //PAR nat: float, man: float, stg: Value
            float pvk_in_x = x;
            //PAR nat: float, man: float, stg: Value
            float pvk_in_y = y;
            //PAR nat: float, man: float, stg: Value
            float pvk_in_z = z;
            PxTransform toInit;
            var pvk_in_this = &toInit;
            void_physx_PxTransform_PxTransform_Ctor_float_float_float_(pvk_in_this, pvk_in_x, pvk_in_y, pvk_in_z);
            this = toInit;
        }
        
        //DEBUG: BlittableCtorNode physx::PxTransform::PxTransform - 77-80
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxTransform_PxTransform_Ctor_physx_PxVec3_physx_PxQuat_(physx.PxTransform* pvk_this, physx.PxVec3* pvk_p0, physx.PxQuat* pvk_q0);
        
        public PxTransform(physx.PxVec3* p0, physx.PxQuat* q0) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: physx::PxTransform, man: physx.PxTransform, stg: Blittable
            
            //PAR nat: physx::PxVec3*, man: physx.PxVec3*, stg: Value
            physx.PxVec3* pvk_in_p0 = p0;
            //PAR nat: physx::PxQuat*, man: physx.PxQuat*, stg: Value
            physx.PxQuat* pvk_in_q0 = q0;
            PxTransform toInit;
            var pvk_in_this = &toInit;
            void_physx_PxTransform_PxTransform_Ctor_physx_PxVec3_physx_PxQuat_(pvk_in_this, pvk_in_p0, pvk_in_q0);
            this = toInit;
        }
        
        //DEBUG: BlittableCtorNode physx::PxTransform::PxTransform - 82
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxTransform_PxTransform_Ctor_physx_PxMat44_(physx.PxTransform* pvk_this, physx.PxMat44* pvk_m);
        
        public PxTransform(physx.PxMat44* m) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: physx::PxTransform, man: physx.PxTransform, stg: Blittable
            
            //PAR nat: physx::PxMat44*, man: physx.PxMat44*, stg: Value
            physx.PxMat44* pvk_in_m = m;
            PxTransform toInit;
            var pvk_in_this = &toInit;
            void_physx_PxTransform_PxTransform_Ctor_physx_PxMat44_(pvk_in_this, pvk_in_m);
            this = toInit;
        }
        
        //DEBUG: MethodNode physx::PxTransform::operator== - 87-90
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern bool bool_const_physx_PxTransform_operator_EqualEqual_physx_PxTransform_(physx.PxTransform* pvk_lhs, physx.PxTransform* pvk_t);
        
        public static bool operator==(physx.PxTransform lhs, physx.PxTransform* t) {
            //RET nat: bool, man: bool, stg: Value, ret: True
            //PAR nat: physx::PxTransform, man: physx.PxTransform, stg: Blittable
            physx.PxTransform* pvk_in_lhs = &lhs;
            //PAR nat: physx::PxTransform*, man: physx.PxTransform*, stg: Value
            physx.PxTransform* pvk_in_t = t;
            return bool_const_physx_PxTransform_operator_EqualEqual_physx_PxTransform_(pvk_in_lhs, pvk_in_t);
        }
        public static bool operator!=(physx.PxTransform lhs, physx.PxTransform* t){return !(lhs==t);} // Generated Matching Operator
        
        //DEBUG: MethodNode physx::PxTransform::operator* - 92-96
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void physx_PxTransform_const_physx_PxTransform_operator_Star_physx_PxTransform_(physx.PxTransform* RetRef, physx.PxTransform* pvk_lhs, physx.PxTransform* pvk_x);
        
        public static physx.PxTransform operator*(physx.PxTransform lhs, physx.PxTransform* x) {
            //RET nat: physx.PxTransform, man: physx.PxTransform, stg: Blittable, ret: False
            physx.PxTransform RetRef;
            //PAR nat: physx::PxTransform, man: physx.PxTransform, stg: Blittable
            physx.PxTransform* pvk_in_lhs = &lhs;
            //PAR nat: physx::PxTransform*, man: physx.PxTransform*, stg: Value
            physx.PxTransform* pvk_in_x = x;
            physx_PxTransform_const_physx_PxTransform_operator_Star_physx_PxTransform_(&RetRef, pvk_in_lhs, pvk_in_x);
            return RetRef;
        }
        
        //DEBUG: MethodNode physx::PxTransform::operator*= - 99-103
        //ERRORS OCCURED IN physx::PxTransform::operator*=
        //Unbindable Operator: StarEqual
        
        //DEBUG: MethodNode physx::PxTransform::getInverse - 105-109
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void physx_PxTransform_const_physx_PxTransform_getInverse(physx.PxTransform* RetRef, physx.PxTransform* pvk_this);
        
        public physx.PxTransform getInverse() {
            //RET nat: physx.PxTransform, man: physx.PxTransform, stg: Blittable, ret: False
            physx.PxTransform RetRef;
            //PAR nat: physx::PxTransform, man: physx.PxTransform, stg: Blittable
            
            fixed (PxTransform* pvk_in_this = &this){
                physx_PxTransform_const_physx_PxTransform_getInverse(&RetRef, pvk_in_this);
            }
            return RetRef;
        }
        
        //DEBUG: MethodNode physx::PxTransform::transform - 111-115
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void physx_PxVec3_const_physx_PxTransform_transform_physx_PxVec3_(physx.PxVec3* RetRef, physx.PxTransform* pvk_this, physx.PxVec3* pvk_input);
        
        public physx.PxVec3 transform(physx.PxVec3* input) {
            //RET nat: physx.PxVec3, man: physx.PxVec3, stg: Blittable, ret: False
            physx.PxVec3 RetRef;
            //PAR nat: physx::PxTransform, man: physx.PxTransform, stg: Blittable
            
            //PAR nat: physx::PxVec3*, man: physx.PxVec3*, stg: Value
            physx.PxVec3* pvk_in_input = input;
            fixed (PxTransform* pvk_in_this = &this){
                physx_PxVec3_const_physx_PxTransform_transform_physx_PxVec3_(&RetRef, pvk_in_this, pvk_in_input);
            }
            return RetRef;
        }
        
        //DEBUG: MethodNode physx::PxTransform::transformInv - 117-121
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void physx_PxVec3_const_physx_PxTransform_transformInv_physx_PxVec3_(physx.PxVec3* RetRef, physx.PxTransform* pvk_this, physx.PxVec3* pvk_input);
        
        public physx.PxVec3 transformInv(physx.PxVec3* input) {
            //RET nat: physx.PxVec3, man: physx.PxVec3, stg: Blittable, ret: False
            physx.PxVec3 RetRef;
            //PAR nat: physx::PxTransform, man: physx.PxTransform, stg: Blittable
            
            //PAR nat: physx::PxVec3*, man: physx.PxVec3*, stg: Value
            physx.PxVec3* pvk_in_input = input;
            fixed (PxTransform* pvk_in_this = &this){
                physx_PxVec3_const_physx_PxTransform_transformInv_physx_PxVec3_(&RetRef, pvk_in_this, pvk_in_input);
            }
            return RetRef;
        }
        
        //DEBUG: MethodNode physx::PxTransform::rotate - 123-127
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void physx_PxVec3_const_physx_PxTransform_rotate_physx_PxVec3_(physx.PxVec3* RetRef, physx.PxTransform* pvk_this, physx.PxVec3* pvk_input);
        
        public physx.PxVec3 rotate(physx.PxVec3* input) {
            //RET nat: physx.PxVec3, man: physx.PxVec3, stg: Blittable, ret: False
            physx.PxVec3 RetRef;
            //PAR nat: physx::PxTransform, man: physx.PxTransform, stg: Blittable
            
            //PAR nat: physx::PxVec3*, man: physx.PxVec3*, stg: Value
            physx.PxVec3* pvk_in_input = input;
            fixed (PxTransform* pvk_in_this = &this){
                physx_PxVec3_const_physx_PxTransform_rotate_physx_PxVec3_(&RetRef, pvk_in_this, pvk_in_input);
            }
            return RetRef;
        }
        
        //DEBUG: MethodNode physx::PxTransform::rotateInv - 129-133
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void physx_PxVec3_const_physx_PxTransform_rotateInv_physx_PxVec3_(physx.PxVec3* RetRef, physx.PxTransform* pvk_this, physx.PxVec3* pvk_input);
        
        public physx.PxVec3 rotateInv(physx.PxVec3* input) {
            //RET nat: physx.PxVec3, man: physx.PxVec3, stg: Blittable, ret: False
            physx.PxVec3 RetRef;
            //PAR nat: physx::PxTransform, man: physx.PxTransform, stg: Blittable
            
            //PAR nat: physx::PxVec3*, man: physx.PxVec3*, stg: Value
            physx.PxVec3* pvk_in_input = input;
            fixed (PxTransform* pvk_in_this = &this){
                physx_PxVec3_const_physx_PxTransform_rotateInv_physx_PxVec3_(&RetRef, pvk_in_this, pvk_in_input);
            }
            return RetRef;
        }
        
        //DEBUG: MethodNode physx::PxTransform::transform - 136-142
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void physx_PxTransform_const_physx_PxTransform_transform_physx_PxTransform_(physx.PxTransform* RetRef, physx.PxTransform* pvk_this, physx.PxTransform* pvk_src);
        
        public physx.PxTransform transform(physx.PxTransform* src) {
            //RET nat: physx.PxTransform, man: physx.PxTransform, stg: Blittable, ret: False
            physx.PxTransform RetRef;
            //PAR nat: physx::PxTransform, man: physx.PxTransform, stg: Blittable
            
            //PAR nat: physx::PxTransform*, man: physx.PxTransform*, stg: Value
            physx.PxTransform* pvk_in_src = src;
            fixed (PxTransform* pvk_in_this = &this){
                physx_PxTransform_const_physx_PxTransform_transform_physx_PxTransform_(&RetRef, pvk_in_this, pvk_in_src);
            }
            return RetRef;
        }
        
        //DEBUG: MethodNode physx::PxTransform::isValid - 148-151
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern bool bool_const_physx_PxTransform_isValid(physx.PxTransform* pvk_this);
        
        public bool isValid() {
            //RET nat: bool, man: bool, stg: Value, ret: True
            //PAR nat: physx::PxTransform, man: physx.PxTransform, stg: Blittable
            
            fixed (PxTransform* pvk_in_this = &this){
                return bool_const_physx_PxTransform_isValid(pvk_in_this);
            }
        }
        
        //DEBUG: MethodNode physx::PxTransform::isSane - 158-161
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern bool bool_const_physx_PxTransform_isSane(physx.PxTransform* pvk_this);
        
        public bool isSane() {
            //RET nat: bool, man: bool, stg: Value, ret: True
            //PAR nat: physx::PxTransform, man: physx.PxTransform, stg: Blittable
            
            fixed (PxTransform* pvk_in_this = &this){
                return bool_const_physx_PxTransform_isSane(pvk_in_this);
            }
        }
        
        //DEBUG: MethodNode physx::PxTransform::isFinite - 166-169
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern bool bool_const_physx_PxTransform_isFinite(physx.PxTransform* pvk_this);
        
        public bool isFinite() {
            //RET nat: bool, man: bool, stg: Value, ret: True
            //PAR nat: physx::PxTransform, man: physx.PxTransform, stg: Blittable
            
            fixed (PxTransform* pvk_in_this = &this){
                return bool_const_physx_PxTransform_isFinite(pvk_in_this);
            }
        }
        
        //DEBUG: MethodNode physx::PxTransform::transformInv - 172-179
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void physx_PxTransform_const_physx_PxTransform_transformInv_physx_PxTransform_(physx.PxTransform* RetRef, physx.PxTransform* pvk_this, physx.PxTransform* pvk_src);
        
        public physx.PxTransform transformInv(physx.PxTransform* src) {
            //RET nat: physx.PxTransform, man: physx.PxTransform, stg: Blittable, ret: False
            physx.PxTransform RetRef;
            //PAR nat: physx::PxTransform, man: physx.PxTransform, stg: Blittable
            
            //PAR nat: physx::PxTransform*, man: physx.PxTransform*, stg: Value
            physx.PxTransform* pvk_in_src = src;
            fixed (PxTransform* pvk_in_this = &this){
                physx_PxTransform_const_physx_PxTransform_transformInv_physx_PxTransform_(&RetRef, pvk_in_this, pvk_in_src);
            }
            return RetRef;
        }
        
        //DEBUG: MethodNode physx::PxTransform::transform - 185-189
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void physx_PxPlane_const_physx_PxTransform_transform_physx_PxPlane_(physx.PxPlane* RetRef, physx.PxTransform* pvk_this, physx.PxPlane* pvk_plane);
        
        public physx.PxPlane transform(physx.PxPlane* plane) {
            //RET nat: physx.PxPlane, man: physx.PxPlane, stg: Blittable, ret: False
            physx.PxPlane RetRef;
            //PAR nat: physx::PxTransform, man: physx.PxTransform, stg: Blittable
            
            //PAR nat: physx::PxPlane*, man: physx.PxPlane*, stg: Value
            physx.PxPlane* pvk_in_plane = plane;
            fixed (PxTransform* pvk_in_this = &this){
                physx_PxPlane_const_physx_PxTransform_transform_physx_PxPlane_(&RetRef, pvk_in_this, pvk_in_plane);
            }
            return RetRef;
        }
        
        //DEBUG: MethodNode physx::PxTransform::inverseTransform - 195-199
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void physx_PxPlane_const_physx_PxTransform_inverseTransform_physx_PxPlane_(physx.PxPlane* RetRef, physx.PxTransform* pvk_this, physx.PxPlane* pvk_plane);
        
        public physx.PxPlane inverseTransform(physx.PxPlane* plane) {
            //RET nat: physx.PxPlane, man: physx.PxPlane, stg: Blittable, ret: False
            physx.PxPlane RetRef;
            //PAR nat: physx::PxTransform, man: physx.PxTransform, stg: Blittable
            
            //PAR nat: physx::PxPlane*, man: physx.PxPlane*, stg: Value
            physx.PxPlane* pvk_in_plane = plane;
            fixed (PxTransform* pvk_in_this = &this){
                physx_PxPlane_const_physx_PxTransform_inverseTransform_physx_PxPlane_(&RetRef, pvk_in_this, pvk_in_plane);
            }
            return RetRef;
        }
        
        //DEBUG: MethodNode physx::PxTransform::getNormalized - 204-207
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void physx_PxTransform_const_physx_PxTransform_getNormalized(physx.PxTransform* RetRef, physx.PxTransform* pvk_this);
        
        public physx.PxTransform getNormalized() {
            //RET nat: physx.PxTransform, man: physx.PxTransform, stg: Blittable, ret: False
            physx.PxTransform RetRef;
            //PAR nat: physx::PxTransform, man: physx.PxTransform, stg: Blittable
            
            fixed (PxTransform* pvk_in_this = &this){
                physx_PxTransform_const_physx_PxTransform_getNormalized(&RetRef, pvk_in_this);
            }
            return RetRef;
        }
        
        //DEBUG: BlittableCtorNode physx::PxTransform::PxTransform - 48
        //ERRORS OCCURED IN physx::PxTransform::PxTransform
        //Implicit Function/Method
        
        //DEBUG: BlittableCtorNode physx::PxTransform::PxTransform - 48
        //ERRORS OCCURED IN physx::PxTransform::PxTransform
        //Implicit Function/Method
        
        //DEBUG: MethodNode physx::PxTransform::operator= - 48
        //ERRORS OCCURED IN physx::PxTransform::operator=
        //Implicit Function/Method
        //Unbindable Operator: Equal
        
        //DEBUG: MethodNode physx::PxTransform::~PxTransform - 48
        //ERRORS OCCURED IN physx::PxTransform::~PxTransform
        //Implicit Function/Method
        //Destructor
        
        //DEBUG: MethodNode physx::PxTransform::operator= - 48
        //ERRORS OCCURED IN physx::PxTransform::operator=
        //Implicit Function/Method
        //Unbindable Operator: Equal
    }
    
}
