// Generated by minBND 5.1.78.26 - Â© github.com/Alan-FGR
//DEBUG: UnitNode  - 0
//Unit PxConstraint
using System;
using System.Runtime.InteropServices;

//DEBUG: NamespaceNode physx - 42-276
public static unsafe partial class physx {
    //DEBUG: FunctionNode physx::operator| - 86
    // physx::operator| [static PxConstraintFlagsPtr Pipe_New(physx.PxConstraintFlagEnum a, physx.PxConstraintFlagEnum b)] will be bound as member operator
    
    //DEBUG: FunctionNode physx::operator& - 86
    // physx::operator& [static PxConstraintFlagsPtr Amp_New(physx.PxConstraintFlagEnum a, physx.PxConstraintFlagEnum b)] will be bound as member operator
    
    //DEBUG: FunctionNode physx::operator~ - 86
    // physx::operator~ [static PxConstraintFlagsPtr Tilde_New(physx.PxConstraintFlagEnum a)] will be bound as member operator
    
    //DEBUG: ClassNode physx::PxConstraintFlag - 62-78
    //DEBUG: EnumNode physx::PxConstraintFlag::Enum - 64-77
    public enum PxConstraintFlagEnum : int {
        eBROKEN = 1,                   // eBROKEN = 1<<0
        ePROJECT_TO_ACTOR0 = 2,        // ePROJECT_TO_ACTOR0 = 1<<1
        ePROJECT_TO_ACTOR1 = 4,        // ePROJECT_TO_ACTOR1 = 1<<2
        ePROJECTION = 6,               // ePROJECTION = ePROJECT_TO_ACTOR0 | ePROJECT_TO_ACTOR1
        eCOLLISION_ENABLED = 8,        // eCOLLISION_ENABLED = 1<<3
        eVISUALIZATION = 16,           // eVISUALIZATION = 1<<4
        eDRIVE_LIMITS_ARE_FORCES = 32, // eDRIVE_LIMITS_ARE_FORCES = 1<<5
        eIMPROVED_SLERP = 128,         // eIMPROVED_SLERP = 1<<7
        eDISABLE_PREPROCESSING = 256,  // eDISABLE_PREPROCESSING = 1<<8
        eENABLE_EXTENDED_LIMITS = 512, // eENABLE_EXTENDED_LIMITS = 1<<9
        eGPU_COMPATIBLE = 1024,        // eGPU_COMPATIBLE = 1<<10
    }
    
    //DEBUG: ClassNode physx::PxConstraintShaderTable - 88-99
    //Interface use count: 0
    public unsafe partial struct PxConstraintShaderTablePtr{
        private System.IntPtr nativePtr_;
        
    //DEBUG: EnumNode physx::PxConstraintShaderTable - 90-93
        public enum Enum : int {
            eMAX_SOLVERPRPEP_DATASIZE = 400, // eMAX_SOLVERPRPEP_DATASIZE=400
        }
        
        //DEBUG: NewerFreerNode physx::PxConstraintShaderTable - 88-99
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern PxConstraintShaderTablePtr Newer_physx_PxConstraintShaderTablePtr();
        
        public static PxConstraintShaderTablePtr New(){
            return Newer_physx_PxConstraintShaderTablePtr();
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void Freer_physx_PxConstraintShaderTablePtr(PxConstraintShaderTablePtr ptr);
        
        public static void Free(PxConstraintShaderTablePtr ptr){
            Freer_physx_PxConstraintShaderTablePtr(ptr);
        }
        public void Free(){
            Freer_physx_PxConstraintShaderTablePtr(this);
        }
        
        //DEBUG: PtrStructCtorNode physx::PxConstraintShaderTable::PxConstraintShaderTable - 88
        //ERRORS OCCURED IN physx::PxConstraintShaderTable::PxConstraintShaderTable
        //Implicit Function/Method
        
        //DEBUG: PtrStructCtorNode physx::PxConstraintShaderTable::PxConstraintShaderTable - 88
        //ERRORS OCCURED IN physx::PxConstraintShaderTable::PxConstraintShaderTable
        //Implicit Function/Method
        
        //DEBUG: PtrStructCtorNode physx::PxConstraintShaderTable::PxConstraintShaderTable - 88
        //ERRORS OCCURED IN physx::PxConstraintShaderTable::PxConstraintShaderTable
        //Implicit Function/Method
        
        //DEBUG: GetterSetterNode physx::PxConstraintShaderTable - 88-99
        //Field: solverPrep - 95-95
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern PxConstraintSolverPrep PxConstraintShaderTable_GET_solverPrep(PxConstraintShaderTablePtr cls);
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void PxConstraintShaderTable_SET_solverPrep(PxConstraintShaderTablePtr cls, PxConstraintSolverPrep value);
        
        public PxConstraintSolverPrep solverPrep {
            get => PxConstraintShaderTable_GET_solverPrep(this);
            set => PxConstraintShaderTable_SET_solverPrep(this, value);
        }
        
        //DEBUG: GetterSetterNode physx::PxConstraintShaderTable - 88-99
        //Field: project - 96-96
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern PxConstraintProject PxConstraintShaderTable_GET_project(PxConstraintShaderTablePtr cls);
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void PxConstraintShaderTable_SET_project(PxConstraintShaderTablePtr cls, PxConstraintProject value);
        
        public PxConstraintProject project {
            get => PxConstraintShaderTable_GET_project(this);
            set => PxConstraintShaderTable_SET_project(this, value);
        }
        
        //DEBUG: GetterSetterNode physx::PxConstraintShaderTable - 88-99
        //Field: visualize - 97-97
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern PxConstraintVisualize PxConstraintShaderTable_GET_visualize(PxConstraintShaderTablePtr cls);
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void PxConstraintShaderTable_SET_visualize(PxConstraintShaderTablePtr cls, PxConstraintVisualize value);
        
        public PxConstraintVisualize visualize {
            get => PxConstraintShaderTable_GET_visualize(this);
            set => PxConstraintShaderTable_SET_visualize(this, value);
        }
        
        //DEBUG: GetterSetterNode physx::PxConstraintShaderTable - 88-99
        //Field: flag - 98-98
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxConstraintFlagEnum PxConstraintShaderTable_GET_flag(PxConstraintShaderTablePtr cls);
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void PxConstraintShaderTable_SET_flag(PxConstraintShaderTablePtr cls, physx.PxConstraintFlagEnum value);
        
        public physx.PxConstraintFlagEnum flag {
            get => PxConstraintShaderTable_GET_flag(this);
            set => PxConstraintShaderTable_SET_flag(this, value);
        }
        
        //DEBUG: MethodNode physx::PxConstraintShaderTable::operator= - 88
        //ERRORS OCCURED IN physx::PxConstraintShaderTable::operator=
        //Implicit Function/Method
        //Unbindable Operator: Equal
        
        //DEBUG: MethodNode physx::PxConstraintShaderTable::operator= - 88
        //ERRORS OCCURED IN physx::PxConstraintShaderTable::operator=
        //Implicit Function/Method
        //Unbindable Operator: Equal
        
        //DEBUG: MethodNode physx::PxConstraintShaderTable::~PxConstraintShaderTable - 88
        //ERRORS OCCURED IN physx::PxConstraintShaderTable::~PxConstraintShaderTable
        //Implicit Function/Method
        //Destructor
    }
    
    //DEBUG: ClassNode physx::PxConstraint - 108-273
    //Bases: PxBasePtr
    //Interface use count: 0
    public unsafe partial struct PxConstraintPtr : physx.PxBasePtr.IPxBasePtr{
        private System.IntPtr nativePtr_;
        
    //DEBUG: MethodNode physx::PxConstraint::release - 119
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxConstraint_release(physx.PxConstraintPtr pvk_this);
        
        public void release() {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: PxConstraintPtr, man: physx.PxConstraintPtr, stg: PtrStruct
            physx.PxConstraintPtr pvk_in_this = this;
            void_physx_PxConstraint_release(pvk_in_this);
        }
        
        //DEBUG: MethodNode physx::PxConstraint::getScene - 128
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxScenePtr physx_PxScenePtr_const_physx_PxConstraint_getScene(physx.PxConstraintPtr pvk_this);
        
        public physx.PxScenePtr getScene() {
            //RET nat: physx.PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct, ret: True
            //PAR nat: PxConstraintPtr, man: physx.PxConstraintPtr, stg: PtrStruct
            physx.PxConstraintPtr pvk_in_this = this;
            return physx_PxScenePtr_const_physx_PxConstraint_getScene(pvk_in_this);
        }
        
        //DEBUG: MethodNode physx::PxConstraint::getActors - 138
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_const_physx_PxConstraint_getActors_physx_PxRigidActorPtr_physx_PxRigidActorPtr_(physx.PxConstraintPtr pvk_this, physx.PxRigidActorPtr* pvk_actor0, physx.PxRigidActorPtr* pvk_actor1);
        
        public void getActors(physx.PxRigidActorPtr* actor0, physx.PxRigidActorPtr* actor1) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: PxConstraintPtr, man: physx.PxConstraintPtr, stg: PtrStruct
            physx.PxConstraintPtr pvk_in_this = this;
            //PAR nat: PxRigidActorPtr*, man: physx.PxRigidActorPtr*, stg: Value
            physx.PxRigidActorPtr* pvk_in_actor0 = actor0;
            //PAR nat: PxRigidActorPtr*, man: physx.PxRigidActorPtr*, stg: Value
            physx.PxRigidActorPtr* pvk_in_actor1 = actor1;
            void_const_physx_PxConstraint_getActors_physx_PxRigidActorPtr_physx_PxRigidActorPtr_(pvk_in_this, pvk_in_actor0, pvk_in_actor1);
        }
        
        //DEBUG: MethodNode physx::PxConstraint::setActors - 148
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxConstraint_setActors_physx_PxRigidActorPtr_physx_PxRigidActorPtr_(physx.PxConstraintPtr pvk_this, physx.PxRigidActorPtr pvk_actor0, physx.PxRigidActorPtr pvk_actor1);
        
        public void setActors(physx.PxRigidActorPtr actor0, physx.PxRigidActorPtr actor1) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: PxConstraintPtr, man: physx.PxConstraintPtr, stg: PtrStruct
            physx.PxConstraintPtr pvk_in_this = this;
            //PAR nat: PxRigidActorPtr, man: physx.PxRigidActorPtr, stg: PtrStruct
            physx.PxRigidActorPtr pvk_in_actor0 = actor0;
            //PAR nat: PxRigidActorPtr, man: physx.PxRigidActorPtr, stg: PtrStruct
            physx.PxRigidActorPtr pvk_in_actor1 = actor1;
            void_physx_PxConstraint_setActors_physx_PxRigidActorPtr_physx_PxRigidActorPtr_(pvk_in_this, pvk_in_actor0, pvk_in_actor1);
        }
        
        //DEBUG: MethodNode physx::PxConstraint::markDirty - 153
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxConstraint_markDirty(physx.PxConstraintPtr pvk_this);
        
        public void markDirty() {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: PxConstraintPtr, man: physx.PxConstraintPtr, stg: PtrStruct
            physx.PxConstraintPtr pvk_in_this = this;
            void_physx_PxConstraint_markDirty(pvk_in_this);
        }
        
        //DEBUG: MethodNode physx::PxConstraint::setFlags - 164
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxConstraint_setFlags_PxConstraintFlagsPtr_(physx.PxConstraintPtr pvk_this, PxConstraintFlagsPtr pvk_flags);
        
        public void setFlags(PxConstraintFlagsPtr flags) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: PxConstraintPtr, man: physx.PxConstraintPtr, stg: PtrStruct
            physx.PxConstraintPtr pvk_in_this = this;
            //PAR nat: PxConstraintFlagsPtr, man: PxConstraintFlagsPtr, stg: PtrStruct
            PxConstraintFlagsPtr pvk_in_flags = flags;
            void_physx_PxConstraint_setFlags_PxConstraintFlagsPtr_(pvk_in_this, pvk_in_flags);
        }
        
        //DEBUG: MethodNode physx::PxConstraint::getFlags - 172
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern PxConstraintFlagsPtr PxConstraintFlagsPtr_const_physx_PxConstraint_getFlags(physx.PxConstraintPtr pvk_this);
        
        public PxConstraintFlagsPtr getFlags_New() {
            //RET nat: PxConstraintFlagsPtr, man: PxConstraintFlagsPtr, stg: PtrStruct, ret: True
            //PAR nat: PxConstraintPtr, man: physx.PxConstraintPtr, stg: PtrStruct
            physx.PxConstraintPtr pvk_in_this = this;
            return PxConstraintFlagsPtr_const_physx_PxConstraint_getFlags(pvk_in_this);
        }
        
        //DEBUG: MethodNode physx::PxConstraint::setFlag - 182
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxConstraint_setFlag_physx_PxConstraintFlagEnum_bool_(physx.PxConstraintPtr pvk_this, physx.PxConstraintFlagEnum pvk_flag, bool pvk_value);
        
        public void setFlag(physx.PxConstraintFlagEnum flag, bool value) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: PxConstraintPtr, man: physx.PxConstraintPtr, stg: PtrStruct
            physx.PxConstraintPtr pvk_in_this = this;
            //PAR nat: physx::PxConstraintFlag::Enum, man: physx.PxConstraintFlagEnum, stg: Value
            physx.PxConstraintFlagEnum pvk_in_flag = flag;
            //PAR nat: bool, man: bool, stg: Value
            bool pvk_in_value = value;
            void_physx_PxConstraint_setFlag_physx_PxConstraintFlagEnum_bool_(pvk_in_this, pvk_in_flag, pvk_in_value);
        }
        
        //DEBUG: MethodNode physx::PxConstraint::getForce - 190
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_const_physx_PxConstraint_getForce_physx_PxVec3_physx_PxVec3_(physx.PxConstraintPtr pvk_this, physx.PxVec3* pvk_linear, physx.PxVec3* pvk_angular);
        
        public void getForce(physx.PxVec3* linear, physx.PxVec3* angular) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: PxConstraintPtr, man: physx.PxConstraintPtr, stg: PtrStruct
            physx.PxConstraintPtr pvk_in_this = this;
            //PAR nat: physx::PxVec3*, man: physx.PxVec3*, stg: Value
            physx.PxVec3* pvk_in_linear = linear;
            //PAR nat: physx::PxVec3*, man: physx.PxVec3*, stg: Value
            physx.PxVec3* pvk_in_angular = angular;
            void_const_physx_PxConstraint_getForce_physx_PxVec3_physx_PxVec3_(pvk_in_this, pvk_in_linear, pvk_in_angular);
        }
        
        //DEBUG: MethodNode physx::PxConstraint::isValid - 201
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern bool bool_const_physx_PxConstraint_isValid(physx.PxConstraintPtr pvk_this);
        
        public bool isValid() {
            //RET nat: bool, man: bool, stg: Value, ret: True
            //PAR nat: PxConstraintPtr, man: physx.PxConstraintPtr, stg: PtrStruct
            physx.PxConstraintPtr pvk_in_this = this;
            return bool_const_physx_PxConstraint_isValid(pvk_in_this);
        }
        
        //DEBUG: MethodNode physx::PxConstraint::setBreakForce - 211
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxConstraint_setBreakForce_float_float_(physx.PxConstraintPtr pvk_this, float pvk_linear, float pvk_angular);
        
        public void setBreakForce(float linear, float angular) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: PxConstraintPtr, man: physx.PxConstraintPtr, stg: PtrStruct
            physx.PxConstraintPtr pvk_in_this = this;
            //PAR nat: float, man: float, stg: Value
            float pvk_in_linear = linear;
            //PAR nat: float, man: float, stg: Value
            float pvk_in_angular = angular;
            void_physx_PxConstraint_setBreakForce_float_float_(pvk_in_this, pvk_in_linear, pvk_in_angular);
        }
        
        //DEBUG: MethodNode physx::PxConstraint::getBreakForce - 219
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_const_physx_PxConstraint_getBreakForce_float_float_(physx.PxConstraintPtr pvk_this, float* pvk_linear, float* pvk_angular);
        
        public void getBreakForce(float* linear, float* angular) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: PxConstraintPtr, man: physx.PxConstraintPtr, stg: PtrStruct
            physx.PxConstraintPtr pvk_in_this = this;
            //PAR nat: float*, man: float*, stg: Value
            float* pvk_in_linear = linear;
            //PAR nat: float*, man: float*, stg: Value
            float* pvk_in_angular = angular;
            void_const_physx_PxConstraint_getBreakForce_float_float_(pvk_in_this, pvk_in_linear, pvk_in_angular);
        }
        
        //DEBUG: MethodNode physx::PxConstraint::setMinResponseThreshold - 233
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxConstraint_setMinResponseThreshold_float_(physx.PxConstraintPtr pvk_this, float pvk_threshold);
        
        public void setMinResponseThreshold(float threshold) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: PxConstraintPtr, man: physx.PxConstraintPtr, stg: PtrStruct
            physx.PxConstraintPtr pvk_in_this = this;
            //PAR nat: float, man: float, stg: Value
            float pvk_in_threshold = threshold;
            void_physx_PxConstraint_setMinResponseThreshold_float_(pvk_in_this, pvk_in_threshold);
        }
        
        //DEBUG: MethodNode physx::PxConstraint::getMinResponseThreshold - 240
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern float float_const_physx_PxConstraint_getMinResponseThreshold(physx.PxConstraintPtr pvk_this);
        
        public float getMinResponseThreshold() {
            //RET nat: float, man: float, stg: Value, ret: True
            //PAR nat: PxConstraintPtr, man: physx.PxConstraintPtr, stg: PtrStruct
            physx.PxConstraintPtr pvk_in_this = this;
            return float_const_physx_PxConstraint_getMinResponseThreshold(pvk_in_this);
        }
        
        //DEBUG: MethodNode physx::PxConstraint::getExternalReference - 252
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern IntPtr IntPtr_physx_PxConstraint_getExternalReference_uint_(physx.PxConstraintPtr pvk_this, uint* pvk_typeID);
        
        public IntPtr getExternalReference(uint* typeID) {
            //RET nat: IntPtr, man: IntPtr, stg: Value, ret: True
            //PAR nat: PxConstraintPtr, man: physx.PxConstraintPtr, stg: PtrStruct
            physx.PxConstraintPtr pvk_in_this = this;
            //PAR nat: unsigned int*, man: uint*, stg: Value
            uint* pvk_in_typeID = typeID;
            return IntPtr_physx_PxConstraint_getExternalReference_uint_(pvk_in_this, pvk_in_typeID);
        }
        
        //DEBUG: MethodNode physx::PxConstraint::setConstraintFunctions - 262-263
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxConstraint_setConstraintFunctions_physx_PxConstraintConnectorPtr_physx_PxConstraintShaderTablePtr_(physx.PxConstraintPtr pvk_this, physx.PxConstraintConnectorPtr pvk_connector, physx.PxConstraintShaderTablePtr pvk_shaders);
        
        public void setConstraintFunctions(physx.PxConstraintConnectorPtr connector, physx.PxConstraintShaderTablePtr shaders) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: PxConstraintPtr, man: physx.PxConstraintPtr, stg: PtrStruct
            physx.PxConstraintPtr pvk_in_this = this;
            //PAR nat: PxConstraintConnectorPtr, man: physx.PxConstraintConnectorPtr, stg: PtrStruct
            physx.PxConstraintConnectorPtr pvk_in_connector = connector;
            //PAR nat: PxConstraintShaderTablePtr, man: physx.PxConstraintShaderTablePtr, stg: PtrStruct
            physx.PxConstraintShaderTablePtr pvk_in_shaders = shaders;
            void_physx_PxConstraint_setConstraintFunctions_physx_PxConstraintConnectorPtr_physx_PxConstraintShaderTablePtr_(pvk_in_this, pvk_in_connector, pvk_in_shaders);
        }
        
        //DEBUG: MethodNode physx::PxConstraint::getConcreteTypeName - 265
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern string string_const_physx_PxConstraint_getConcreteTypeName(physx.PxConstraintPtr pvk_this);
        
        public string getConcreteTypeName() {
            //RET nat: string, man: string, stg: Value, ret: True
            //PAR nat: PxConstraintPtr, man: physx.PxConstraintPtr, stg: PtrStruct
            physx.PxConstraintPtr pvk_in_this = this;
            return string_const_physx_PxConstraint_getConcreteTypeName(pvk_in_this);
        }
        
        //DEBUG: MethodNode physx::PxConstraint::operator= - 108
        //ERRORS OCCURED IN physx::PxConstraint::operator=
        //Implicit Function/Method
        //Unbindable Operator: Equal
        public static implicit operator physx.PxBasePtr(PxConstraintPtr obj) => *(physx.PxBasePtr*)&obj;
        public static explicit operator PxConstraintPtr(physx.PxBasePtr obj) => *(PxConstraintPtr*)&obj;
    
        // PIPING
        ////################################################################## FIXME
        //Unparsed type ( TODO ): T*
        ////################################################################## FIXME
        //Unparsed type ( TODO ): T*
        public ushort getConcreteType(){return((physx.PxBasePtr)this).getConcreteType();}
        public void setBaseFlag(physx.PxBaseFlagEnum flag, bool value){((physx.PxBasePtr)this).setBaseFlag(flag, value);}
        public void setBaseFlags(PxBaseFlagsPtr inFlags){((physx.PxBasePtr)this).setBaseFlags(inFlags);}
        public PxBaseFlagsPtr getBaseFlags_New(){return((physx.PxBasePtr)this).getBaseFlags_New();}
        public bool isReleasable(){return((physx.PxBasePtr)this).isReleasable();}
    }
    
    //DEBUG: DeclNode physx::PxConstraintFlags - 85
    // TODO DeclNode.GenBinding()
    
}
