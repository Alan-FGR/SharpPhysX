// Generated by minBND 5.1.90.51 - Â© github.com/Alan-FGR
using System;
using System.Runtime.InteropServices;
using static minBND_pinvokes;

public static unsafe partial class physx {

    //DBG: FunctionNode physx::operator| L86
    //physx::operator| static physx.PxConstraintFlagsPtr OpPipe_New(physx.PxConstraintFlagEnum a, physx.PxConstraintFlagEnum b) will also be bound as member operator
    //RET nat: PxConstraintFlagsPtr, man: physx.PxConstraintFlagsPtr, ret: True, kind: PtrStruct
    //PAR nat: physx::PxConstraintFlag::Enum, man: physx.PxConstraintFlagEnum, kind: Value
    //PAR nat: physx::PxConstraintFlag::Enum, man: physx.PxConstraintFlagEnum, kind: Value
    public static physx.PxConstraintFlagsPtr OpPipe_New(physx.PxConstraintFlagEnum a, physx.PxConstraintFlagEnum b) {
        physx.PxConstraintFlagEnum pvk_in_a = a;
        physx.PxConstraintFlagEnum pvk_in_b = b;
        return PxConstraintFlagsPtr_operator_Ptr_Pipe_PxConstraintFlagEnum_PxConstraintFlagEnum_(pvk_in_a, pvk_in_b);
    }

    //DBG: FunctionNode physx::operator& L86
    //physx::operator& static physx.PxConstraintFlagsPtr OpAnd_New(physx.PxConstraintFlagEnum a, physx.PxConstraintFlagEnum b) will also be bound as member operator
    //RET nat: PxConstraintFlagsPtr, man: physx.PxConstraintFlagsPtr, ret: True, kind: PtrStruct
    //PAR nat: physx::PxConstraintFlag::Enum, man: physx.PxConstraintFlagEnum, kind: Value
    //PAR nat: physx::PxConstraintFlag::Enum, man: physx.PxConstraintFlagEnum, kind: Value
    public static physx.PxConstraintFlagsPtr OpAnd_New(physx.PxConstraintFlagEnum a, physx.PxConstraintFlagEnum b) {
        physx.PxConstraintFlagEnum pvk_in_a = a;
        physx.PxConstraintFlagEnum pvk_in_b = b;
        return PxConstraintFlagsPtr_operator_Ptr_Amp_PxConstraintFlagEnum_PxConstraintFlagEnum_(pvk_in_a, pvk_in_b);
    }

    //DBG: FunctionNode physx::operator~ L86
    //physx::operator~ static physx.PxConstraintFlagsPtr OpTilde_New(physx.PxConstraintFlagEnum a) will also be bound as member operator
    //RET nat: PxConstraintFlagsPtr, man: physx.PxConstraintFlagsPtr, ret: True, kind: PtrStruct
    //PAR nat: physx::PxConstraintFlag::Enum, man: physx.PxConstraintFlagEnum, kind: Value
    public static physx.PxConstraintFlagsPtr OpTilde_New(physx.PxConstraintFlagEnum a) {
        physx.PxConstraintFlagEnum pvk_in_a = a;
        return PxConstraintFlagsPtr_operator_Ptr_Tilde_PxConstraintFlagEnum_(pvk_in_a);
    }

    //DBG: ClassNode PxConstraintFlag physx::PxConstraintFlag L62-78
    public enum PxConstraintFlagEnum : int {
        eBROKEN = 1,                   // eBROKEN = 1<<0
        ePROJECT_TO_ACTOR0 = 2,        // ePROJECT_TO_ACTOR0 = 1<<1
        ePROJECT_TO_ACTOR1 = 4,        // ePROJECT_TO_ACTOR1 = 1<<2
        ePROJECTION = 6,               // ePROJECTION = ePROJECT_TO_ACTOR0 | ePROJECT_TO_ACTOR1
        eCOLLISION_ENABLED = 8,        // eCOLLISION_ENABLED = 1<<3
        eVISUALIZATION = 16,           // eVISUALIZATION = 1<<4
        eDRIVE_LIMITS_ARE_FORCES = 32, // eDRIVE_LIMITS_ARE_FORCES = 1<<5
        eIMPROVED_SLERP = 128,         // eIMPROVED_SLERP = 1<<7
        eDISABLE_PREPROCESSING = 256,  // eDISABLE_PREPROCESSING = 1<<8
        eENABLE_EXTENDED_LIMITS = 512, // eENABLE_EXTENDED_LIMITS = 1<<9
        eGPU_COMPATIBLE = 1024,        // eGPU_COMPATIBLE = 1<<10
    }
    //Subclasses using this: 0

    public unsafe partial struct PxConstraintShaderTablePtr {
        private System.IntPtr nativePtr_;

        //DBG: ClassNode PxConstraintShaderTable physx::PxConstraintShaderTable L88-99
        public enum Enum : int {
            eMAX_SOLVERPRPEP_DATASIZE = 400, // eMAX_SOLVERPRPEP_DATASIZE=400
        }

        //DBG: NewerFreerNode PxConstraintShaderTable physx::PxConstraintShaderTable L88-99
        public static physx.PxConstraintShaderTablePtr New(){
            return Newer_physx_PxConstraintShaderTablePtr();
        }
        public static void Free(physx.PxConstraintShaderTablePtr ptr){
            Freer_physx_PxConstraintShaderTablePtr(ptr);
        }
        public void Free(){
            Freer_physx_PxConstraintShaderTablePtr(this);
        }

        //DBG: PtrWrapperCtorNode physx::PxConstraintShaderTable::PxConstraintShaderTable L88
        //ERRORS in PtrWrapperCtorNode: Skipping Implicit PtrWrapperCtorNode physx::PxConstraintShaderTable::PxConstraintShaderTable L88

        //DBG: PtrWrapperCtorNode physx::PxConstraintShaderTable::PxConstraintShaderTable L88
        //ERRORS in PtrWrapperCtorNode: Skipping Implicit PtrWrapperCtorNode physx::PxConstraintShaderTable::PxConstraintShaderTable L88

        //DBG: PtrWrapperCtorNode physx::PxConstraintShaderTable::PxConstraintShaderTable L88
        //ERRORS in PtrWrapperCtorNode: Skipping Implicit PtrWrapperCtorNode physx::PxConstraintShaderTable::PxConstraintShaderTable L88

        //DBG: Field: solverPrep - 95-95
        public PxConstraintSolverPrep solverPrep {
            get => PxConstraintShaderTablePtr_GET_solverPrep(this);
            set => PxConstraintShaderTablePtr_SET_solverPrep(this, value);
        }

        //DBG: Field: project - 96-96
        public PxConstraintProject project {
            get => PxConstraintShaderTablePtr_GET_project(this);
            set => PxConstraintShaderTablePtr_SET_project(this, value);
        }

        //DBG: Field: visualize - 97-97
        public PxConstraintVisualize visualize {
            get => PxConstraintShaderTablePtr_GET_visualize(this);
            set => PxConstraintShaderTablePtr_SET_visualize(this, value);
        }

        //DBG: Field: flag - 98-98
        public physx.PxConstraintFlagEnum flag {
            get => PxConstraintShaderTablePtr_GET_flag(this);
            set => PxConstraintShaderTablePtr_SET_flag(this, value);
        }

        //DBG: MethodNode physx::PxConstraintShaderTable::operator= L88
        //ERRORS in MethodNode: Skipping Implicit MethodNode physx::PxConstraintShaderTable::operator= L88

        //DBG: MethodNode physx::PxConstraintShaderTable::operator= L88
        //ERRORS in MethodNode: Skipping Implicit MethodNode physx::PxConstraintShaderTable::operator= L88

        //DBG: MethodNode physx::PxConstraintShaderTable::~PxConstraintShaderTable L88
        //ERRORS in MethodNode: Skipping Implicit MethodNode physx::PxConstraintShaderTable::~PxConstraintShaderTable L88, Destructor

        //Operators
    }
    //Subclasses using this: 0

    public unsafe partial struct PxConstraintPtr : physx.PxBasePtr.IPxBasePtr {
        private System.IntPtr nativePtr_;

        //DBG: ClassNode PxConstraint physx::PxConstraint L108-273Bases: PxBasePtr

        //DBG: MethodNode physx::PxConstraint::release L119
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxConstraintPtr, man: physx.PxConstraintPtr, kind: PtrStruct
        public void release() {
            physx.PxConstraintPtr pvk_in_this = this;
            void_PxConstraintPtr_releasePtr(pvk_in_this);
        }

        //DBG: MethodNode physx::PxConstraint::getScene L128
        //RET nat: PxScenePtr, man: physx.PxScenePtr, ret: True, kind: PtrStruct
        //PAR nat: PxConstraintPtr, man: physx.PxConstraintPtr, kind: PtrStruct
        public physx.PxScenePtr getScene() {
            physx.PxConstraintPtr pvk_in_this = this;
            return PxScenePtr_const_PxConstraintPtr_getScenePtr(pvk_in_this);
        }

        //DBG: MethodNode physx::PxConstraint::getActors L138
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxConstraintPtr, man: physx.PxConstraintPtr, kind: PtrStruct
        //PAR nat: PxRigidActorPtr*, man: physx.PxRigidActorPtr*, kind: Value
        //PAR nat: PxRigidActorPtr*, man: physx.PxRigidActorPtr*, kind: Value
        public void getActors(physx.PxRigidActorPtr* actor0, physx.PxRigidActorPtr* actor1) {
            physx.PxConstraintPtr pvk_in_this = this;
            physx.PxRigidActorPtr* pvk_in_actor0 = actor0;
            physx.PxRigidActorPtr* pvk_in_actor1 = actor1;
            void_const_PxConstraintPtr_getActorsPtr_PxRigidActorPtr_PxRigidActorPtr_(pvk_in_this, pvk_in_actor0, pvk_in_actor1);
        }

        //DBG: MethodNode physx::PxConstraint::setActors L148
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxConstraintPtr, man: physx.PxConstraintPtr, kind: PtrStruct
        //PAR nat: PxRigidActorPtr, man: physx.PxRigidActorPtr, kind: PtrStruct
        //PAR nat: PxRigidActorPtr, man: physx.PxRigidActorPtr, kind: PtrStruct
        public void setActors(physx.PxRigidActorPtr actor0, physx.PxRigidActorPtr actor1) {
            physx.PxConstraintPtr pvk_in_this = this;
            physx.PxRigidActorPtr pvk_in_actor0 = actor0;
            physx.PxRigidActorPtr pvk_in_actor1 = actor1;
            void_PxConstraintPtr_setActorsPtr_PxRigidActorPtr_PxRigidActorPtr_(pvk_in_this, pvk_in_actor0, pvk_in_actor1);
        }

        //DBG: MethodNode physx::PxConstraint::markDirty L153
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxConstraintPtr, man: physx.PxConstraintPtr, kind: PtrStruct
        public void markDirty() {
            physx.PxConstraintPtr pvk_in_this = this;
            void_PxConstraintPtr_markDirtyPtr(pvk_in_this);
        }

        //DBG: MethodNode physx::PxConstraint::setFlags L164
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxConstraintPtr, man: physx.PxConstraintPtr, kind: PtrStruct
        //PAR nat: PxConstraintFlagsPtr, man: physx.PxConstraintFlagsPtr, kind: PtrStruct
        public void setFlags(physx.PxConstraintFlagsPtr flags) {
            physx.PxConstraintPtr pvk_in_this = this;
            physx.PxConstraintFlagsPtr pvk_in_flags = flags;
            void_PxConstraintPtr_setFlagsPtr_PxConstraintFlagsPtr_(pvk_in_this, pvk_in_flags);
        }

        //DBG: MethodNode physx::PxConstraint::getFlags L172
        //RET nat: PxConstraintFlagsPtr, man: physx.PxConstraintFlagsPtr, ret: True, kind: PtrStruct
        //PAR nat: PxConstraintPtr, man: physx.PxConstraintPtr, kind: PtrStruct
        public physx.PxConstraintFlagsPtr getFlags_New() {
            physx.PxConstraintPtr pvk_in_this = this;
            return PxConstraintFlagsPtr_const_PxConstraintPtr_getFlagsPtr(pvk_in_this);
        }

        //DBG: MethodNode physx::PxConstraint::setFlag L182
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxConstraintPtr, man: physx.PxConstraintPtr, kind: PtrStruct
        //PAR nat: physx::PxConstraintFlag::Enum, man: physx.PxConstraintFlagEnum, kind: Value
        //PAR nat: bool, man: bool, kind: Value
        public void setFlag(physx.PxConstraintFlagEnum flag, bool value) {
            physx.PxConstraintPtr pvk_in_this = this;
            physx.PxConstraintFlagEnum pvk_in_flag = flag;
            bool pvk_in_value = value;
            void_PxConstraintPtr_setFlagPtr_PxConstraintFlagEnum_bool_(pvk_in_this, pvk_in_flag, pvk_in_value);
        }

        //DBG: MethodNode physx::PxConstraint::getForce L190
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxConstraintPtr, man: physx.PxConstraintPtr, kind: PtrStruct
        //PAR nat: physx::PxVec3*, man: physx.PxVec3*, kind: Value
        //PAR nat: physx::PxVec3*, man: physx.PxVec3*, kind: Value
        public void getForce(physx.PxVec3* linear, physx.PxVec3* angular) {
            physx.PxConstraintPtr pvk_in_this = this;
            physx.PxVec3* pvk_in_linear = linear;
            physx.PxVec3* pvk_in_angular = angular;
            void_const_PxConstraintPtr_getForcePtr_PxVec3_PxVec3_(pvk_in_this, pvk_in_linear, pvk_in_angular);
        }

        //DBG: MethodNode physx::PxConstraint::isValid L201
        //RET nat: bool, man: bool, ret: True, kind: Value
        //PAR nat: PxConstraintPtr, man: physx.PxConstraintPtr, kind: PtrStruct
        public bool isValid() {
            physx.PxConstraintPtr pvk_in_this = this;
            return bool_const_PxConstraintPtr_isValidPtr(pvk_in_this);
        }

        //DBG: MethodNode physx::PxConstraint::setBreakForce L211
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxConstraintPtr, man: physx.PxConstraintPtr, kind: PtrStruct
        //PAR nat: PxReal, man: float, kind: Value
        //PAR nat: PxReal, man: float, kind: Value
        public void setBreakForce(float linear, float angular) {
            physx.PxConstraintPtr pvk_in_this = this;
            float pvk_in_linear = linear;
            float pvk_in_angular = angular;
            void_PxConstraintPtr_setBreakForcePtr_float_float_(pvk_in_this, pvk_in_linear, pvk_in_angular);
        }

        //DBG: MethodNode physx::PxConstraint::getBreakForce L219
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxConstraintPtr, man: physx.PxConstraintPtr, kind: PtrStruct
        //PAR nat: PxReal*, man: float*, kind: Value
        //PAR nat: PxReal*, man: float*, kind: Value
        public void getBreakForce(float* linear, float* angular) {
            physx.PxConstraintPtr pvk_in_this = this;
            float* pvk_in_linear = linear;
            float* pvk_in_angular = angular;
            void_const_PxConstraintPtr_getBreakForcePtr_float_float_(pvk_in_this, pvk_in_linear, pvk_in_angular);
        }

        //DBG: MethodNode physx::PxConstraint::setMinResponseThreshold L233
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxConstraintPtr, man: physx.PxConstraintPtr, kind: PtrStruct
        //PAR nat: PxReal, man: float, kind: Value
        public void setMinResponseThreshold(float threshold) {
            physx.PxConstraintPtr pvk_in_this = this;
            float pvk_in_threshold = threshold;
            void_PxConstraintPtr_setMinResponseThresholdPtr_float_(pvk_in_this, pvk_in_threshold);
        }

        //DBG: MethodNode physx::PxConstraint::getMinResponseThreshold L240
        //RET nat: PxReal, man: float, ret: True, kind: Value
        //PAR nat: PxConstraintPtr, man: physx.PxConstraintPtr, kind: PtrStruct
        public float getMinResponseThreshold() {
            physx.PxConstraintPtr pvk_in_this = this;
            return float_const_PxConstraintPtr_getMinResponseThresholdPtr(pvk_in_this);
        }

        //DBG: MethodNode physx::PxConstraint::getExternalReference L252
        //RET nat: void*, man: IntPtr, ret: True, kind: Value
        //PAR nat: PxConstraintPtr, man: physx.PxConstraintPtr, kind: PtrStruct
        //PAR nat: PxU32*, man: uint*, kind: Value
        public IntPtr getExternalReference(uint* typeID) {
            physx.PxConstraintPtr pvk_in_this = this;
            uint* pvk_in_typeID = typeID;
            return IntPtr_PxConstraintPtr_getExternalReferencePtr_uint_(pvk_in_this, pvk_in_typeID);
        }

        //DBG: MethodNode physx::PxConstraint::setConstraintFunctions L262-263
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxConstraintPtr, man: physx.PxConstraintPtr, kind: PtrStruct
        //PAR nat: PxConstraintConnectorPtr, man: physx.PxConstraintConnectorPtr, kind: PtrStruct
        //PAR nat: PxConstraintShaderTablePtr, man: physx.PxConstraintShaderTablePtr, kind: PtrStruct
        public void setConstraintFunctions(physx.PxConstraintConnectorPtr connector, physx.PxConstraintShaderTablePtr shaders) {
            physx.PxConstraintPtr pvk_in_this = this;
            physx.PxConstraintConnectorPtr pvk_in_connector = connector;
            physx.PxConstraintShaderTablePtr pvk_in_shaders = shaders;
            void_PxConstraintPtr_setConstraintFunctionsPtr_PxConstraintConnectorPtr_PxConstraintShaderTablePtr_(pvk_in_this, pvk_in_connector, pvk_in_shaders);
        }

        //DBG: MethodNode physx::PxConstraint::getConcreteTypeName L265
        //RET nat: char*, man: string, ret: True, kind: Value
        //PAR nat: PxConstraintPtr, man: physx.PxConstraintPtr, kind: PtrStruct
        public string getConcreteTypeName() {
            physx.PxConstraintPtr pvk_in_this = this;
            return string_const_PxConstraintPtr_getConcreteTypeNamePtr(pvk_in_this);
        }

        //DBG: MethodNode physx::PxConstraint::operator= L108
        //ERRORS in MethodNode: Skipping Implicit MethodNode physx::PxConstraint::operator= L108

        //DBG: MethodNode physx::PxConstraint::getForce L190
        //Value Converter getForce
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxConstraintPtr, man: physx.PxConstraintPtr, kind: PtrStruct
        //PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
        //PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
        public void getForce(physx.PxVec3 linear, physx.PxVec3 angular) {
            getForce((physx.PxVec3*)&linear, (physx.PxVec3*)&angular);
        }

        //DBG: MethodNode physx::PxConstraint::getForce L190
        //Value Converter getForce
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxConstraintPtr, man: physx.PxConstraintPtr, kind: PtrStruct
        //PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
        //PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
        public void getForce(physx.PxVec3.Ref linear, physx.PxVec3.Ref angular) {
            getForce((physx.PxVec3*)(*((IntPtr*)(&linear))), (physx.PxVec3*)(*((IntPtr*)(&angular))));
        }
        public static implicit operator physx.PxBasePtr(PxConstraintPtr obj) => *(physx.PxBasePtr*)&obj;
        public static explicit operator PxConstraintPtr(physx.PxBasePtr obj) => *(PxConstraintPtr*)&obj;

        //PIPING
        //Skipping: SKIPPING! MethodNode physx::PxBase::is L101 is | 
        //Skipping: SKIPPING! MethodNode physx::PxBase::is L111 isConst | 
        public ushort getConcreteType(){return((physx.PxBasePtr)this).getConcreteType();}
        public void setBaseFlag(physx.PxBaseFlagEnum flag, bool value){((physx.PxBasePtr)this).setBaseFlag(flag, value);}
        public void setBaseFlags(physx.PxBaseFlagsPtr inFlags){((physx.PxBasePtr)this).setBaseFlags(inFlags);}
        public physx.PxBaseFlagsPtr getBaseFlags_New(){return((physx.PxBasePtr)this).getBaseFlags_New();}
        public bool isReleasable(){return((physx.PxBasePtr)this).isReleasable();}

        //Operators
    }

    //DBG: DeclNode PxConstraintFlags physx::PxConstraintFlags L85
}
