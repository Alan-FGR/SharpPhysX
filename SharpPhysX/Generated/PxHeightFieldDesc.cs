// Generated by minBND 5.1.91.17 - Â© github.com/Alan-FGR
using System;
using System.Runtime.InteropServices;
using static minBND_pinvokes;

public static unsafe partial class physx {

    public unsafe partial struct PxHeightFieldDescPtr {
        private System.IntPtr nativePtr_;

        public static void Free(physx.PxHeightFieldDescPtr ptr){
            Freer_physx_PxHeightFieldDescPtr(ptr);
        }
        public void Free(){
            Freer_physx_PxHeightFieldDescPtr(this);
        }

        public static physx.PxHeightFieldDescPtr New() {
            return Ctor_PxHeightFieldDescPtr_();
        }

        public uint nbRows {
            get => PxHeightFieldDescPtr_GET_nbRows(this);
            set => PxHeightFieldDescPtr_SET_nbRows(this, value);
        }

        public uint nbColumns {
            get => PxHeightFieldDescPtr_GET_nbColumns(this);
            set => PxHeightFieldDescPtr_SET_nbColumns(this, value);
        }

        public physx.PxHeightFieldFormatEnum format {
            get => PxHeightFieldDescPtr_GET_format(this);
            set => PxHeightFieldDescPtr_SET_format(this, value);
        }

        public physx.PxStridedDataPtr samples {
            get => PxHeightFieldDescPtr_GET_samples(this);
            set => PxHeightFieldDescPtr_SET_samples(this, value);
        }

        public float convexEdgeThreshold {
            get => PxHeightFieldDescPtr_GET_convexEdgeThreshold(this);
            set => PxHeightFieldDescPtr_SET_convexEdgeThreshold(this, value);
        }

        public physx.PxHeightFieldFlagsPtr flags {
            get => PxHeightFieldDescPtr_GET_flags(this);
            set => PxHeightFieldDescPtr_SET_flags(this, value);
        }

        public void setToDefault() {
            physx.PxHeightFieldDescPtr pvk_in_this = this;
            void_PxHeightFieldDescPtr_setToDefaultPtr(pvk_in_this);
        }

        public bool isValid() {
            physx.PxHeightFieldDescPtr pvk_in_this = this;
            return bool_const_PxHeightFieldDescPtr_isValidPtr(pvk_in_this);
        }

    }
}
