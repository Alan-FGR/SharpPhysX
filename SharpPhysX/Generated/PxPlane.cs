// Generated by minBND 5.1.78.26 - Â© github.com/Alan-FGR
//DEBUG: UnitNode  - 0
//Unit PxPlane
using System;
using System.Runtime.InteropServices;

//DEBUG: NamespaceNode physx - 41-141
public static unsafe partial class physx {
    //DEBUG: ClassNode physx::PxPlane - 50-138
    public unsafe partial struct PxPlane{
        public physx.PxVec3 n;
        public float d;
        
    //DEBUG: DefaulterNode physx::PxPlane::PxPlane - 56-58
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void Default_physx_PxPlane_(physx.PxPlane* RetRef);
        
        public static physx.PxPlane Default() {
            //RET nat: physx.PxPlane, man: physx.PxPlane, stg: Blittable, ret: False
            physx.PxPlane RetRef;
            Default_physx_PxPlane_(&RetRef);
            return RetRef;
        }
        
        //DEBUG: BlittableCtorNode physx::PxPlane::PxPlane - 63-65
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxPlane_PxPlane_Ctor_float_float_float_float_(physx.PxPlane* pvk_this, float pvk_nx, float pvk_ny, float pvk_nz, float pvk_distance);
        
        public PxPlane(float nx, float ny, float nz, float distance) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: physx::PxPlane, man: physx.PxPlane, stg: Blittable
            
            //PAR nat: float, man: float, stg: Value
            float pvk_in_nx = nx;
            //PAR nat: float, man: float, stg: Value
            float pvk_in_ny = ny;
            //PAR nat: float, man: float, stg: Value
            float pvk_in_nz = nz;
            //PAR nat: float, man: float, stg: Value
            float pvk_in_distance = distance;
            PxPlane toInit;
            var pvk_in_this = &toInit;
            void_physx_PxPlane_PxPlane_Ctor_float_float_float_float_(pvk_in_this, pvk_in_nx, pvk_in_ny, pvk_in_nz, pvk_in_distance);
            this = toInit;
        }
        
        //DEBUG: BlittableCtorNode physx::PxPlane::PxPlane - 70-72
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxPlane_PxPlane_Ctor_physx_PxVec3_float_(physx.PxPlane* pvk_this, physx.PxVec3* pvk_normal, float pvk_distance);
        
        public PxPlane(physx.PxVec3* normal, float distance) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: physx::PxPlane, man: physx.PxPlane, stg: Blittable
            
            //PAR nat: physx::PxVec3*, man: physx.PxVec3*, stg: Value
            physx.PxVec3* pvk_in_normal = normal;
            //PAR nat: float, man: float, stg: Value
            float pvk_in_distance = distance;
            PxPlane toInit;
            var pvk_in_this = &toInit;
            void_physx_PxPlane_PxPlane_Ctor_physx_PxVec3_float_(pvk_in_this, pvk_in_normal, pvk_in_distance);
            this = toInit;
        }
        
        //DEBUG: BlittableCtorNode physx::PxPlane::PxPlane - 77-80
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxPlane_PxPlane_Ctor_physx_PxVec3_physx_PxVec3_(physx.PxPlane* pvk_this, physx.PxVec3* pvk_point, physx.PxVec3* pvk_normal);
        
        public PxPlane(physx.PxVec3* point, physx.PxVec3* normal) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: physx::PxPlane, man: physx.PxPlane, stg: Blittable
            
            //PAR nat: physx::PxVec3*, man: physx.PxVec3*, stg: Value
            physx.PxVec3* pvk_in_point = point;
            //PAR nat: physx::PxVec3*, man: physx.PxVec3*, stg: Value
            physx.PxVec3* pvk_in_normal = normal;
            PxPlane toInit;
            var pvk_in_this = &toInit;
            void_physx_PxPlane_PxPlane_Ctor_physx_PxVec3_physx_PxVec3_(pvk_in_this, pvk_in_point, pvk_in_normal);
            this = toInit;
        }
        
        //DEBUG: BlittableCtorNode physx::PxPlane::PxPlane - 85-89
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxPlane_PxPlane_Ctor_physx_PxVec3_physx_PxVec3_physx_PxVec3_(physx.PxPlane* pvk_this, physx.PxVec3* pvk_p0, physx.PxVec3* pvk_p1, physx.PxVec3* pvk_p2);
        
        public PxPlane(physx.PxVec3* p0, physx.PxVec3* p1, physx.PxVec3* p2) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: physx::PxPlane, man: physx.PxPlane, stg: Blittable
            
            //PAR nat: physx::PxVec3*, man: physx.PxVec3*, stg: Value
            physx.PxVec3* pvk_in_p0 = p0;
            //PAR nat: physx::PxVec3*, man: physx.PxVec3*, stg: Value
            physx.PxVec3* pvk_in_p1 = p1;
            //PAR nat: physx::PxVec3*, man: physx.PxVec3*, stg: Value
            physx.PxVec3* pvk_in_p2 = p2;
            PxPlane toInit;
            var pvk_in_this = &toInit;
            void_physx_PxPlane_PxPlane_Ctor_physx_PxVec3_physx_PxVec3_physx_PxVec3_(pvk_in_this, pvk_in_p0, pvk_in_p1, pvk_in_p2);
            this = toInit;
        }
        
        //DEBUG: MethodNode physx::PxPlane::operator== - 94-97
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern bool bool_const_physx_PxPlane_operator_EqualEqual_physx_PxPlane_(physx.PxPlane* pvk_lhs, physx.PxPlane* pvk_p);
        
        public static bool operator==(physx.PxPlane lhs, physx.PxPlane* p) {
            //RET nat: bool, man: bool, stg: Value, ret: True
            //PAR nat: physx::PxPlane, man: physx.PxPlane, stg: Blittable
            physx.PxPlane* pvk_in_lhs = &lhs;
            //PAR nat: physx::PxPlane*, man: physx.PxPlane*, stg: Value
            physx.PxPlane* pvk_in_p = p;
            return bool_const_physx_PxPlane_operator_EqualEqual_physx_PxPlane_(pvk_in_lhs, pvk_in_p);
        }
        public static bool operator!=(physx.PxPlane lhs, physx.PxPlane* p){return !(lhs==p);} // Generated Matching Operator
        
        //DEBUG: MethodNode physx::PxPlane::distance - 99-102
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern float float_const_physx_PxPlane_distance_physx_PxVec3_(physx.PxPlane* pvk_this, physx.PxVec3* pvk_p);
        
        public float distance(physx.PxVec3* p) {
            //RET nat: float, man: float, stg: Value, ret: True
            //PAR nat: physx::PxPlane, man: physx.PxPlane, stg: Blittable
            
            //PAR nat: physx::PxVec3*, man: physx.PxVec3*, stg: Value
            physx.PxVec3* pvk_in_p = p;
            fixed (PxPlane* pvk_in_this = &this){
                return float_const_physx_PxPlane_distance_physx_PxVec3_(pvk_in_this, pvk_in_p);
            }
        }
        
        //DEBUG: MethodNode physx::PxPlane::contains - 104-107
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern bool bool_const_physx_PxPlane_contains_physx_PxVec3_(physx.PxPlane* pvk_this, physx.PxVec3* pvk_p);
        
        public bool contains(physx.PxVec3* p) {
            //RET nat: bool, man: bool, stg: Value, ret: True
            //PAR nat: physx::PxPlane, man: physx.PxPlane, stg: Blittable
            
            //PAR nat: physx::PxVec3*, man: physx.PxVec3*, stg: Value
            physx.PxVec3* pvk_in_p = p;
            fixed (PxPlane* pvk_in_this = &this){
                return bool_const_physx_PxPlane_contains_physx_PxVec3_(pvk_in_this, pvk_in_p);
            }
        }
        
        //DEBUG: MethodNode physx::PxPlane::project - 112-115
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void physx_PxVec3_const_physx_PxPlane_project_physx_PxVec3_(physx.PxVec3* RetRef, physx.PxPlane* pvk_this, physx.PxVec3* pvk_p);
        
        public physx.PxVec3 project(physx.PxVec3* p) {
            //RET nat: physx.PxVec3, man: physx.PxVec3, stg: Blittable, ret: False
            physx.PxVec3 RetRef;
            //PAR nat: physx::PxPlane, man: physx.PxPlane, stg: Blittable
            
            //PAR nat: physx::PxVec3*, man: physx.PxVec3*, stg: Value
            physx.PxVec3* pvk_in_p = p;
            fixed (PxPlane* pvk_in_this = &this){
                physx_PxVec3_const_physx_PxPlane_project_physx_PxVec3_(&RetRef, pvk_in_this, pvk_in_p);
            }
            return RetRef;
        }
        
        //DEBUG: MethodNode physx::PxPlane::pointInPlane - 120-123
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void physx_PxVec3_const_physx_PxPlane_pointInPlane(physx.PxVec3* RetRef, physx.PxPlane* pvk_this);
        
        public physx.PxVec3 pointInPlane() {
            //RET nat: physx.PxVec3, man: physx.PxVec3, stg: Blittable, ret: False
            physx.PxVec3 RetRef;
            //PAR nat: physx::PxPlane, man: physx.PxPlane, stg: Blittable
            
            fixed (PxPlane* pvk_in_this = &this){
                physx_PxVec3_const_physx_PxPlane_pointInPlane(&RetRef, pvk_in_this);
            }
            return RetRef;
        }
        
        //DEBUG: MethodNode physx::PxPlane::normalize - 129-134
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxPlane_normalize(physx.PxPlane* pvk_this);
        
        public void normalize() {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: physx::PxPlane, man: physx.PxPlane, stg: Blittable
            
            fixed (PxPlane* pvk_in_this = &this){
                void_physx_PxPlane_normalize(pvk_in_this);
            }
        }
        
        //DEBUG: BlittableCtorNode physx::PxPlane::PxPlane - 50
        //ERRORS OCCURED IN physx::PxPlane::PxPlane
        //Implicit Function/Method
        
        //DEBUG: BlittableCtorNode physx::PxPlane::PxPlane - 50
        //ERRORS OCCURED IN physx::PxPlane::PxPlane
        //Implicit Function/Method
        
        //DEBUG: MethodNode physx::PxPlane::operator= - 50
        //ERRORS OCCURED IN physx::PxPlane::operator=
        //Implicit Function/Method
        //Unbindable Operator: Equal
        
        //DEBUG: MethodNode physx::PxPlane::~PxPlane - 50
        //ERRORS OCCURED IN physx::PxPlane::~PxPlane
        //Implicit Function/Method
        //Destructor
        
        //DEBUG: MethodNode physx::PxPlane::operator= - 50
        //ERRORS OCCURED IN physx::PxPlane::operator=
        //Implicit Function/Method
        //Unbindable Operator: Equal
    }
    
}
