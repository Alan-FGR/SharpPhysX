//Generated by MinBinder.
using System;
using System.Runtime.InteropServices;
using PxBaseFlags = System.UInt32;
using PxActorFlags = System.UInt32;

public partial struct PxPlane { // blittable


    public PxVec3 n;
    public float d;

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern PxPlane C_PxPlane_PxPlane(float nx,float ny,float nz,float distance);
    public unsafe PxPlane(float nx,float ny,float nz,float distance){
        var _new = C_PxPlane_PxPlane(nx,ny,nz,distance);        
        fixed (void* ptr = &this)
          Buffer.MemoryCopy(&_new, ptr, Marshal.SizeOf(this), Marshal.SizeOf(this));    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern PxPlane C_PxPlane_PxPlane_2(PxVec3 normal,float distance);
    public unsafe PxPlane(PxVec3 normal,float distance){
        var _new = C_PxPlane_PxPlane_2(normal,distance);        
        fixed (void* ptr = &this)
          Buffer.MemoryCopy(&_new, ptr, Marshal.SizeOf(this), Marshal.SizeOf(this));    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern PxPlane C_PxPlane_PxPlane_3(PxVec3 point,PxVec3 normal);
    public unsafe PxPlane(PxVec3 point,PxVec3 normal){
        var _new = C_PxPlane_PxPlane_3(point,normal);        
        fixed (void* ptr = &this)
          Buffer.MemoryCopy(&_new, ptr, Marshal.SizeOf(this), Marshal.SizeOf(this));    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern PxPlane C_PxPlane_PxPlane_4(PxVec3 p0,PxVec3 p1,PxVec3 p2);
    public unsafe PxPlane(PxVec3 p0,PxVec3 p1,PxVec3 p2){
        var _new = C_PxPlane_PxPlane_4(p0,p1,p2);        
        fixed (void* ptr = &this)
          Buffer.MemoryCopy(&_new, ptr, Marshal.SizeOf(this), Marshal.SizeOf(this));    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern bool C_CONST_PxPlane_OP_EqualEqual(PxPlane cls,PxPlane p);
    public static bool operator==(PxPlane cls,PxPlane p){
        return C_CONST_PxPlane_OP_EqualEqual(cls,p);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern float C_CONST_PxPlane_distance(PxPlane cls,PxVec3 p);
    public float distance(PxVec3 p){
        return C_CONST_PxPlane_distance(this,p);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern bool C_CONST_PxPlane_contains(PxPlane cls,PxVec3 p);
    public bool contains(PxVec3 p){
        return C_CONST_PxPlane_contains(this,p);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern PxVec3 C_CONST_PxPlane_project(PxPlane cls,PxVec3 p);
    public PxVec3 project(PxVec3 p){
        return C_CONST_PxPlane_project(this,p);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern PxVec3 C_CONST_PxPlane_pointInPlane(PxPlane cls);
    public PxVec3 pointInPlane(){
        return C_CONST_PxPlane_pointInPlane(this);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern void C_PxPlane_normalize(PxPlane cls);
    public void normalize(){
         C_PxPlane_normalize(this);    
    }


}
