// Generated by minBND 5.1.78.10 - Â© github.com/Alan-FGR
//Unit PxRigidStatic
using System;
using System.Runtime.InteropServices;

public static unsafe partial class physx {
    public unsafe partial struct PxRigidStaticPtr : physx.PxRigidActorPtr.IPxRigidActorPtr, physx.PxActorPtr.IPxActorPtr, physx.PxBasePtr.IPxBasePtr{
        private System.IntPtr nativePtr_;
        
    [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern string string_const_physx_PxRigidStatic_getConcreteTypeName(physx.PxRigidStaticPtr pvk_this);
        
        public string getConcreteTypeName() {
            physx.PxRigidStaticPtr pvk_in_this = this;
            return string_const_physx_PxRigidStatic_getConcreteTypeName(pvk_in_this);
        }
        public static implicit operator physx.PxRigidActorPtr(PxRigidStaticPtr obj) => *(physx.PxRigidActorPtr*)&obj;
        public static explicit operator PxRigidStaticPtr(physx.PxRigidActorPtr obj) => *(PxRigidStaticPtr*)&obj;
        public static implicit operator physx.PxActorPtr(PxRigidStaticPtr obj) => *(physx.PxActorPtr*)&obj;
        public static explicit operator PxRigidStaticPtr(physx.PxActorPtr obj) => *(PxRigidStaticPtr*)&obj;
        public static implicit operator physx.PxBasePtr(PxRigidStaticPtr obj) => *(physx.PxBasePtr*)&obj;
        public static explicit operator PxRigidStaticPtr(physx.PxBasePtr obj) => *(PxRigidStaticPtr*)&obj;
    
        // PIPING
        public void release(){((physx.PxRigidActorPtr)this).release();}
        public physx.PxTransformPtr getGlobalPose_New(){return((physx.PxRigidActorPtr)this).getGlobalPose_New();}
        public void setGlobalPose(physx.PxTransformPtr pose, bool autowake=true){((physx.PxRigidActorPtr)this).setGlobalPose(pose, autowake);}
        public bool attachShape(physx.PxShapePtr shape){return((physx.PxRigidActorPtr)this).attachShape(shape);}
        public void detachShape(physx.PxShapePtr shape, bool wakeOnLostTouch=true){((physx.PxRigidActorPtr)this).detachShape(shape, wakeOnLostTouch);}
        public uint getNbShapes(){return((physx.PxRigidActorPtr)this).getNbShapes();}
        public uint getShapes(physx.PxShapePtr* userBuffer, uint bufferSize, uint startIndex=0){return((physx.PxRigidActorPtr)this).getShapes(userBuffer, bufferSize, startIndex);}
        public uint getNbConstraints(){return((physx.PxRigidActorPtr)this).getNbConstraints();}
        public uint getConstraints(physx.PxConstraintPtr* userBuffer, uint bufferSize, uint startIndex=0){return((physx.PxRigidActorPtr)this).getConstraints(userBuffer, bufferSize, startIndex);}
        public physx.PxActorTypeEnum getType(){return((physx.PxActorPtr)this).getType();}
        public physx.PxScenePtr getScene(){return((physx.PxActorPtr)this).getScene();}
        public void setName(string name){((physx.PxActorPtr)this).setName(name);}
        public string getName(){return((physx.PxActorPtr)this).getName();}
        public physx.PxBounds3Ptr getWorldBounds_New(float inflation=1.01f){return((physx.PxActorPtr)this).getWorldBounds_New(inflation);}
        public void setActorFlag(physx.PxActorFlagEnum flag, bool value){((physx.PxActorPtr)this).setActorFlag(flag, value);}
        public void setActorFlags(PxActorFlagsPtr inFlags){((physx.PxActorPtr)this).setActorFlags(inFlags);}
        public PxActorFlagsPtr getActorFlags_New(){return((physx.PxActorPtr)this).getActorFlags_New();}
        public void setDominanceGroup(byte dominanceGroup){((physx.PxActorPtr)this).setDominanceGroup(dominanceGroup);}
        public byte getDominanceGroup(){return((physx.PxActorPtr)this).getDominanceGroup();}
        public void setOwnerClient(byte inClient){((physx.PxActorPtr)this).setOwnerClient(inClient);}
        public byte getOwnerClient(){return((physx.PxActorPtr)this).getOwnerClient();}
        public physx.PxAggregatePtr getAggregate(){return((physx.PxActorPtr)this).getAggregate();}
        public ushort getConcreteType(){return((physx.PxBasePtr)this).getConcreteType();}
        public void setBaseFlag(physx.PxBaseFlagEnum flag, bool value){((physx.PxBasePtr)this).setBaseFlag(flag, value);}
        public void setBaseFlags(PxBaseFlagsPtr inFlags){((physx.PxBasePtr)this).setBaseFlags(inFlags);}
        public PxBaseFlagsPtr getBaseFlags_New(){return((physx.PxBasePtr)this).getBaseFlags_New();}
        public bool isReleasable(){return((physx.PxBasePtr)this).isReleasable();}
    }
    
}
