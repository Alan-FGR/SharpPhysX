//Generated by MinBinder.
using System;
using System.Runtime.InteropServices;
using PxBaseFlags = System.UInt32;
using PxActorFlags = System.UInt32;
using PxFoundationPtr = PxFoundation;

public static partial class PhysX{
    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern PxFoundationPtr C_REF_PxGetFoundation();
    public static PxFoundationPtr PxGetFoundation(){
        return C_REF_PxGetFoundation();    
    }


}

public partial struct PxFoundation { // ptr holder


    private IntPtr nativePtr_;
    
    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern void C_PxFoundation_release(PxFoundation cls);
    public void release(){
         C_PxFoundation_release(this);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern PxErrorCallback C_REF_PxFoundation_getErrorCallback(PxFoundation cls);
    public PxErrorCallback getErrorCallback(){
        return C_REF_PxFoundation_getErrorCallback(this);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern void C_PxFoundation_setErrorLevel(PxFoundation cls,PxErrorCode mask);
    public void setErrorLevel(PxErrorCode mask){
         C_PxFoundation_setErrorLevel(this,mask);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern PxErrorCode C_CONST_PxFoundation_getErrorLevel(PxFoundation cls);
    public PxErrorCode getErrorLevel(){
        return C_CONST_PxFoundation_getErrorLevel(this);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern bool C_CONST_PxFoundation_getReportAllocationNames(PxFoundation cls);
    public bool getReportAllocationNames(){
        return C_CONST_PxFoundation_getReportAllocationNames(this);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern void C_PxFoundation_setReportAllocationNames(PxFoundation cls,bool value);
    public void setReportAllocationNames(bool value){
         C_PxFoundation_setReportAllocationNames(this,value);    
    }


}
