// Generated by minBND 5.1.78.26 - Â© github.com/Alan-FGR
//DEBUG: UnitNode  - 0
//Unit PxFoundation
using System;
using System.Runtime.InteropServices;

//DEBUG: NamespaceNode physx - 41-102
public static unsafe partial class physx {
    //DEBUG: ClassNode physx::PxFoundation - 50-99
    //Interface use count: 0
    public unsafe partial struct PxFoundationPtr{
        private System.IntPtr nativePtr_;
        
    //DEBUG: MethodNode physx::PxFoundation::release - 62
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxFoundation_release(physx.PxFoundationPtr pvk_this);
        
        public void release() {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: PxFoundationPtr, man: physx.PxFoundationPtr, stg: PtrStruct
            physx.PxFoundationPtr pvk_in_this = this;
            void_physx_PxFoundation_release(pvk_in_this);
        }
        
        //DEBUG: MethodNode physx::PxFoundation::getErrorCallback - 67
        //ERRORS OCCURED IN physx::PxFoundation::getErrorCallback
        ////Type PxErrorCallbackPtr explicitly forbidden by user configuration
        
        //DEBUG: MethodNode physx::PxFoundation::setErrorLevel - 72
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxFoundation_setErrorLevel_physx_PxErrorCodeEnum_(physx.PxFoundationPtr pvk_this, physx.PxErrorCodeEnum pvk_mask);
        
        public void setErrorLevel(physx.PxErrorCodeEnum mask) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: PxFoundationPtr, man: physx.PxFoundationPtr, stg: PtrStruct
            physx.PxFoundationPtr pvk_in_this = this;
            //PAR nat: physx::PxErrorCode::Enum, man: physx.PxErrorCodeEnum, stg: Value
            physx.PxErrorCodeEnum pvk_in_mask = mask;
            void_physx_PxFoundation_setErrorLevel_physx_PxErrorCodeEnum_(pvk_in_this, pvk_in_mask);
        }
        
        //DEBUG: MethodNode physx::PxFoundation::setErrorLevel - 72
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxFoundation_setErrorLevel(physx.PxFoundationPtr pvk_this);
        
        public void setErrorLevel() {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: PxFoundationPtr, man: physx.PxFoundationPtr, stg: PtrStruct
            physx.PxFoundationPtr pvk_in_this = this;
            void_physx_PxFoundation_setErrorLevel(pvk_in_this);
        }
        
        //DEBUG: MethodNode physx::PxFoundation::getErrorLevel - 77
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxErrorCodeEnum physx_PxErrorCodeEnum_const_physx_PxFoundation_getErrorLevel(physx.PxFoundationPtr pvk_this);
        
        public physx.PxErrorCodeEnum getErrorLevel() {
            //RET nat: physx.PxErrorCodeEnum, man: physx.PxErrorCodeEnum, stg: Value, ret: True
            //PAR nat: PxFoundationPtr, man: physx.PxFoundationPtr, stg: PtrStruct
            physx.PxFoundationPtr pvk_in_this = this;
            return physx_PxErrorCodeEnum_const_physx_PxFoundation_getErrorLevel(pvk_in_this);
        }
        
        //DEBUG: MethodNode physx::PxFoundation::getAllocatorCallback - 82
        //ERRORS OCCURED IN physx::PxFoundation::getAllocatorCallback
        ////Type PxAllocatorCallbackPtr explicitly forbidden by user configuration
        
        //DEBUG: MethodNode physx::PxFoundation::getReportAllocationNames - 87
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern bool bool_const_physx_PxFoundation_getReportAllocationNames(physx.PxFoundationPtr pvk_this);
        
        public bool getReportAllocationNames() {
            //RET nat: bool, man: bool, stg: Value, ret: True
            //PAR nat: PxFoundationPtr, man: physx.PxFoundationPtr, stg: PtrStruct
            physx.PxFoundationPtr pvk_in_this = this;
            return bool_const_physx_PxFoundation_getReportAllocationNames(pvk_in_this);
        }
        
        //DEBUG: MethodNode physx::PxFoundation::setReportAllocationNames - 93
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxFoundation_setReportAllocationNames_bool_(physx.PxFoundationPtr pvk_this, bool pvk_value);
        
        public void setReportAllocationNames(bool value) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: PxFoundationPtr, man: physx.PxFoundationPtr, stg: PtrStruct
            physx.PxFoundationPtr pvk_in_this = this;
            //PAR nat: bool, man: bool, stg: Value
            bool pvk_in_value = value;
            void_physx_PxFoundation_setReportAllocationNames_bool_(pvk_in_this, pvk_in_value);
        }
        
        //DEBUG: MethodNode physx::PxFoundation::operator= - 50
        //ERRORS OCCURED IN physx::PxFoundation::operator=
        //Implicit Function/Method
        //Unbindable Operator: Equal
    }
    
}

public static unsafe partial class PxFoundation{    //DEBUG: FunctionNode PxCreateFoundation - 120-121
    //ERRORS OCCURED IN PxCreateFoundation
    //////Type PxAllocatorCallbackPtr explicitly forbidden by user configuration
    //////Type PxErrorCallbackPtr explicitly forbidden by user configuration
    
    //DEBUG: FunctionNode PxGetFoundation - 135
    [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern physx.PxFoundationPtr physx_PxFoundationPtr_PxGetFoundation();
    
    public static physx.PxFoundationPtr PxGetFoundation() {
        //RET nat: physx.PxFoundationPtr, man: physx.PxFoundationPtr, stg: PtrStruct, ret: True
        return physx_PxFoundationPtr_PxGetFoundation();
    }
    
    //DEBUG: FunctionNode PxGetProfilerCallback - 150
    //ERRORS OCCURED IN PxGetProfilerCallback
    ////Type PxProfilerCallbackPtr explicitly forbidden by user configuration
    
    //DEBUG: FunctionNode PxSetProfilerCallback - 155
    //ERRORS OCCURED IN PxSetProfilerCallback
    //////Type PxProfilerCallbackPtr explicitly forbidden by user configuration
    
}
