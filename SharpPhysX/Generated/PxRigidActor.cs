// Generated by minBND 5.1.81.43 - Â© github.com/Alan-FGR
//Unit PxRigidActor
using System;
using System.Runtime.InteropServices;

public static unsafe partial class physx {
    public unsafe partial struct PxRigidActorPtr : physx.PxRigidActorPtr.IPxRigidActorPtr, physx.PxActorPtr.IPxActorPtr, physx.PxBasePtr.IPxBasePtr {
        private System.IntPtr nativePtr_;
        
    [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxRigidActor_release(physx.PxRigidActorPtr pvk_this);
        
        public void release() {
            physx.PxRigidActorPtr pvk_in_this = this;
            void_physx_PxRigidActor_release(pvk_in_this);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void physx_PxTransform_const_physx_PxRigidActor_getGlobalPose(physx.PxTransform* RetRef, physx.PxRigidActorPtr pvk_this);
        
        public physx.PxTransform getGlobalPose() {
            physx.PxTransform RetRef;
            physx.PxRigidActorPtr pvk_in_this = this;
            physx_PxTransform_const_physx_PxRigidActor_getGlobalPose(&RetRef, pvk_in_this);
            return RetRef;
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxRigidActor_setGlobalPose_physx_PxTransform_bool_(physx.PxRigidActorPtr pvk_this, physx.PxTransform* pvk_pose, bool pvk_autowake);
        
        public void setGlobalPose(physx.PxTransform* pose, bool autowake=true) {
            physx.PxRigidActorPtr pvk_in_this = this;
            physx.PxTransform* pvk_in_pose = pose;
            bool pvk_in_autowake = autowake;
            void_physx_PxRigidActor_setGlobalPose_physx_PxTransform_bool_(pvk_in_this, pvk_in_pose, pvk_in_autowake);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern bool bool_physx_PxRigidActor_attachShape_physx_PxShapePtr_(physx.PxRigidActorPtr pvk_this, physx.PxShapePtr pvk_shape);
        
        public bool attachShape(physx.PxShapePtr shape) {
            physx.PxRigidActorPtr pvk_in_this = this;
            physx.PxShapePtr pvk_in_shape = shape;
            return bool_physx_PxRigidActor_attachShape_physx_PxShapePtr_(pvk_in_this, pvk_in_shape);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxRigidActor_detachShape_physx_PxShapePtr_bool_(physx.PxRigidActorPtr pvk_this, physx.PxShapePtr pvk_shape, bool pvk_wakeOnLostTouch);
        
        public void detachShape(physx.PxShapePtr shape, bool wakeOnLostTouch=true) {
            physx.PxRigidActorPtr pvk_in_this = this;
            physx.PxShapePtr pvk_in_shape = shape;
            bool pvk_in_wakeOnLostTouch = wakeOnLostTouch;
            void_physx_PxRigidActor_detachShape_physx_PxShapePtr_bool_(pvk_in_this, pvk_in_shape, pvk_in_wakeOnLostTouch);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern uint uint_const_physx_PxRigidActor_getNbShapes(physx.PxRigidActorPtr pvk_this);
        
        public uint getNbShapes() {
            physx.PxRigidActorPtr pvk_in_this = this;
            return uint_const_physx_PxRigidActor_getNbShapes(pvk_in_this);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern uint uint_const_physx_PxRigidActor_getShapes_physx_PxShapePtr_uint_uint_(physx.PxRigidActorPtr pvk_this, physx.PxShapePtr* pvk_userBuffer, uint pvk_bufferSize, uint pvk_startIndex);
        
        public uint getShapes(physx.PxShapePtr* userBuffer, uint bufferSize, uint startIndex=0) {
            physx.PxRigidActorPtr pvk_in_this = this;
            physx.PxShapePtr* pvk_in_userBuffer = userBuffer;
            uint pvk_in_bufferSize = bufferSize;
            uint pvk_in_startIndex = startIndex;
            return uint_const_physx_PxRigidActor_getShapes_physx_PxShapePtr_uint_uint_(pvk_in_this, pvk_in_userBuffer, pvk_in_bufferSize, pvk_in_startIndex);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern uint uint_const_physx_PxRigidActor_getNbConstraints(physx.PxRigidActorPtr pvk_this);
        
        public uint getNbConstraints() {
            physx.PxRigidActorPtr pvk_in_this = this;
            return uint_const_physx_PxRigidActor_getNbConstraints(pvk_in_this);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern uint uint_const_physx_PxRigidActor_getConstraints_physx_PxConstraintPtr_uint_uint_(physx.PxRigidActorPtr pvk_this, physx.PxConstraintPtr* pvk_userBuffer, uint pvk_bufferSize, uint pvk_startIndex);
        
        public uint getConstraints(physx.PxConstraintPtr* userBuffer, uint bufferSize, uint startIndex=0) {
            physx.PxRigidActorPtr pvk_in_this = this;
            physx.PxConstraintPtr* pvk_in_userBuffer = userBuffer;
            uint pvk_in_bufferSize = bufferSize;
            uint pvk_in_startIndex = startIndex;
            return uint_const_physx_PxRigidActor_getConstraints_physx_PxConstraintPtr_uint_uint_(pvk_in_this, pvk_in_userBuffer, pvk_in_bufferSize, pvk_in_startIndex);
        }
        
        public void setGlobalPose(physx.PxTransform pose) {
            setGlobalPose(&pose);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxRigidActor_setGlobalPose_physx_PxTransform_(physx.PxRigidActorPtr pvk_this, physx.PxTransform* pvk_pose);
        
        public void setGlobalPose(physx.PxTransform* pose) {
            physx.PxRigidActorPtr pvk_in_this = this;
            physx.PxTransform* pvk_in_pose = pose;
            void_physx_PxRigidActor_setGlobalPose_physx_PxTransform_(pvk_in_this, pvk_in_pose);
        }
        
        public void setGlobalPose(physx.PxTransform pose, bool autowake=true) {
            setGlobalPose(&pose, autowake);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxRigidActor_detachShape_physx_PxShapePtr_(physx.PxRigidActorPtr pvk_this, physx.PxShapePtr pvk_shape);
        
        public void detachShape(physx.PxShapePtr shape) {
            physx.PxRigidActorPtr pvk_in_this = this;
            physx.PxShapePtr pvk_in_shape = shape;
            void_physx_PxRigidActor_detachShape_physx_PxShapePtr_(pvk_in_this, pvk_in_shape);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern uint uint_const_physx_PxRigidActor_getShapes_physx_PxShapePtr_uint_(physx.PxRigidActorPtr pvk_this, physx.PxShapePtr* pvk_userBuffer, uint pvk_bufferSize);
        
        public uint getShapes(physx.PxShapePtr* userBuffer, uint bufferSize) {
            physx.PxRigidActorPtr pvk_in_this = this;
            physx.PxShapePtr* pvk_in_userBuffer = userBuffer;
            uint pvk_in_bufferSize = bufferSize;
            return uint_const_physx_PxRigidActor_getShapes_physx_PxShapePtr_uint_(pvk_in_this, pvk_in_userBuffer, pvk_in_bufferSize);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern uint uint_const_physx_PxRigidActor_getConstraints_physx_PxConstraintPtr_uint_(physx.PxRigidActorPtr pvk_this, physx.PxConstraintPtr* pvk_userBuffer, uint pvk_bufferSize);
        
        public uint getConstraints(physx.PxConstraintPtr* userBuffer, uint bufferSize) {
            physx.PxRigidActorPtr pvk_in_this = this;
            physx.PxConstraintPtr* pvk_in_userBuffer = userBuffer;
            uint pvk_in_bufferSize = bufferSize;
            return uint_const_physx_PxRigidActor_getConstraints_physx_PxConstraintPtr_uint_(pvk_in_this, pvk_in_userBuffer, pvk_in_bufferSize);
        }
        public static implicit operator physx.PxActorPtr(PxRigidActorPtr obj) => *(physx.PxActorPtr*)&obj;
        public static explicit operator PxRigidActorPtr(physx.PxActorPtr obj) => *(PxRigidActorPtr*)&obj;
        public static implicit operator physx.PxBasePtr(PxRigidActorPtr obj) => *(physx.PxBasePtr*)&obj;
        public static explicit operator PxRigidActorPtr(physx.PxBasePtr obj) => *(PxRigidActorPtr*)&obj;
    
        // PIPING
        public physx.PxActorTypeEnum getType(){return((physx.PxActorPtr)this).getType();}
        public physx.PxScenePtr getScene(){return((physx.PxActorPtr)this).getScene();}
        public void setName(string name){((physx.PxActorPtr)this).setName(name);}
        public string getName(){return((physx.PxActorPtr)this).getName();}
        public physx.PxBounds3 getWorldBounds(float inflation=1.01f){return((physx.PxActorPtr)this).getWorldBounds(inflation);}
        public void setActorFlag(physx.PxActorFlagEnum flag, bool value){((physx.PxActorPtr)this).setActorFlag(flag, value);}
        public void setActorFlags(PxActorFlagsPtr inFlags){((physx.PxActorPtr)this).setActorFlags(inFlags);}
        public PxActorFlagsPtr getActorFlags_New(){return((physx.PxActorPtr)this).getActorFlags_New();}
        public void setDominanceGroup(byte dominanceGroup){((physx.PxActorPtr)this).setDominanceGroup(dominanceGroup);}
        public byte getDominanceGroup(){return((physx.PxActorPtr)this).getDominanceGroup();}
        public void setOwnerClient(byte inClient){((physx.PxActorPtr)this).setOwnerClient(inClient);}
        public byte getOwnerClient(){return((physx.PxActorPtr)this).getOwnerClient();}
        public physx.PxAggregatePtr getAggregate(){return((physx.PxActorPtr)this).getAggregate();}
        public physx.PxBounds3 getWorldBounds(){return((physx.PxActorPtr)this).getWorldBounds();}
        public string getConcreteTypeName(){return((physx.PxBasePtr)this).getConcreteTypeName();}
        public ushort getConcreteType(){return((physx.PxBasePtr)this).getConcreteType();}
        public void setBaseFlag(physx.PxBaseFlagEnum flag, bool value){((physx.PxBasePtr)this).setBaseFlag(flag, value);}
        public void setBaseFlags(PxBaseFlagsPtr inFlags){((physx.PxBasePtr)this).setBaseFlags(inFlags);}
        public PxBaseFlagsPtr getBaseFlags_New(){return((physx.PxBasePtr)this).getBaseFlags_New();}
        public bool isReleasable(){return((physx.PxBasePtr)this).isReleasable();}
    
        public unsafe interface IPxRigidActorPtr {
            void release();
            physx.PxTransform getGlobalPose();
            void setGlobalPose(physx.PxTransform* pose, bool autowake=true);
            bool attachShape(physx.PxShapePtr shape);
            void detachShape(physx.PxShapePtr shape, bool wakeOnLostTouch=true);
            uint getNbShapes();
            uint getShapes(physx.PxShapePtr* userBuffer, uint bufferSize, uint startIndex=0);
            uint getNbConstraints();
            uint getConstraints(physx.PxConstraintPtr* userBuffer, uint bufferSize, uint startIndex=0);
            void setGlobalPose(physx.PxTransform pose);
            void setGlobalPose(physx.PxTransform* pose);
            void setGlobalPose(physx.PxTransform pose, bool autowake=true);
            void detachShape(physx.PxShapePtr shape);
            uint getShapes(physx.PxShapePtr* userBuffer, uint bufferSize);
            uint getConstraints(physx.PxConstraintPtr* userBuffer, uint bufferSize);
        }
    }
    
}
