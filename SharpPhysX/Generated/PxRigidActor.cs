// Generated by minBND 5.1.90.51 - Â© github.com/Alan-FGR
using System;
using System.Runtime.InteropServices;
using static minBND_pinvokes;

public static unsafe partial class physx {

    //DBG: DeclTree PxBVHStructure physx::PxBVHStructure L48
    //Skipping DeclTree PxBVHStructure physx::PxBVHStructure L48...
    //Subclasses using this: 4

    public unsafe partial struct PxRigidActorPtr : physx.PxRigidActorPtr.IPxRigidActorPtr, physx.PxActorPtr.IPxActorPtr, physx.PxBasePtr.IPxBasePtr {
        private System.IntPtr nativePtr_;

        //DBG: ClassNode PxRigidActor physx::PxRigidActor L58-229Bases: PxActorPtr|PxBasePtr

        //DBG: MethodNode physx::PxRigidActor::release L77
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxRigidActorPtr, man: physx.PxRigidActorPtr, kind: PtrStruct
        public void release() {
            physx.PxRigidActorPtr pvk_in_this = this;
            void_PxRigidActorPtr_releasePtr(pvk_in_this);
        }

        //DBG: MethodNode physx::PxRigidActor::getGlobalPose L93
        //RET nat: physx::PxTransform, man: physx.PxTransform, ret: False, kind: Blittable
        //PAR nat: PxRigidActorPtr, man: physx.PxRigidActorPtr, kind: PtrStruct
        public physx.PxTransform getGlobalPose() {
            physx.PxTransform RetRef;
            physx.PxRigidActorPtr pvk_in_this = this;
            PxTransform_const_PxRigidActorPtr_getGlobalPosePtr(&RetRef, pvk_in_this);
            return RetRef;
        }

        //DBG: MethodNode physx::PxRigidActor::setGlobalPose L120
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxRigidActorPtr, man: physx.PxRigidActorPtr, kind: PtrStruct
        //PAR nat: physx::PxTransform*, man: physx.PxTransform*, kind: Value
        //PAR nat: bool, man: bool, kind: Value
        public void setGlobalPose(physx.PxTransform* pose, bool autowake=true) {
            physx.PxRigidActorPtr pvk_in_this = this;
            physx.PxTransform* pvk_in_pose = pose;
            bool pvk_in_autowake = autowake;
            void_PxRigidActorPtr_setGlobalPosePtr_PxTransform_bool_(pvk_in_this, pvk_in_pose, pvk_in_autowake);
        }

        //DBG: MethodNode physx::PxRigidActor::attachShape L145
        //RET nat: bool, man: bool, ret: True, kind: Value
        //PAR nat: PxRigidActorPtr, man: physx.PxRigidActorPtr, kind: PtrStruct
        //PAR nat: PxShapePtr, man: physx.PxShapePtr, kind: PtrStruct
        public bool attachShape(physx.PxShapePtr shape) {
            physx.PxRigidActorPtr pvk_in_this = this;
            physx.PxShapePtr pvk_in_shape = shape;
            return bool_PxRigidActorPtr_attachShapePtr_PxShapePtr_(pvk_in_this, pvk_in_shape);
        }

        //DBG: MethodNode physx::PxRigidActor::detachShape L158
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxRigidActorPtr, man: physx.PxRigidActorPtr, kind: PtrStruct
        //PAR nat: PxShapePtr, man: physx.PxShapePtr, kind: PtrStruct
        //PAR nat: bool, man: bool, kind: Value
        public void detachShape(physx.PxShapePtr shape, bool wakeOnLostTouch=true) {
            physx.PxRigidActorPtr pvk_in_this = this;
            physx.PxShapePtr pvk_in_shape = shape;
            bool pvk_in_wakeOnLostTouch = wakeOnLostTouch;
            void_PxRigidActorPtr_detachShapePtr_PxShapePtr_bool_(pvk_in_this, pvk_in_shape, pvk_in_wakeOnLostTouch);
        }

        //DBG: MethodNode physx::PxRigidActor::getNbShapes L170
        //RET nat: PxU32, man: uint, ret: True, kind: Value
        //PAR nat: PxRigidActorPtr, man: physx.PxRigidActorPtr, kind: PtrStruct
        public uint getNbShapes() {
            physx.PxRigidActorPtr pvk_in_this = this;
            return uint_const_PxRigidActorPtr_getNbShapesPtr(pvk_in_this);
        }

        //DBG: MethodNode physx::PxRigidActor::getShapes L189
        //RET nat: PxU32, man: uint, ret: True, kind: Value
        //PAR nat: PxRigidActorPtr, man: physx.PxRigidActorPtr, kind: PtrStruct
        //PAR nat: PxShapePtr*, man: physx.PxShapePtr*, kind: Value
        //PAR nat: PxU32, man: uint, kind: Value
        //PAR nat: PxU32, man: uint, kind: Value
        public uint getShapes(physx.PxShapePtr* userBuffer, uint bufferSize, uint startIndex=0) {
            physx.PxRigidActorPtr pvk_in_this = this;
            physx.PxShapePtr* pvk_in_userBuffer = userBuffer;
            uint pvk_in_bufferSize = bufferSize;
            uint pvk_in_startIndex = startIndex;
            return uint_const_PxRigidActorPtr_getShapesPtr_PxShapePtr_uint_uint_(pvk_in_this, pvk_in_userBuffer, pvk_in_bufferSize, pvk_in_startIndex);
        }

        //DBG: MethodNode physx::PxRigidActor::getNbConstraints L205
        //RET nat: PxU32, man: uint, ret: True, kind: Value
        //PAR nat: PxRigidActorPtr, man: physx.PxRigidActorPtr, kind: PtrStruct
        public uint getNbConstraints() {
            physx.PxRigidActorPtr pvk_in_this = this;
            return uint_const_PxRigidActorPtr_getNbConstraintsPtr(pvk_in_this);
        }

        //DBG: MethodNode physx::PxRigidActor::getConstraints L222
        //RET nat: PxU32, man: uint, ret: True, kind: Value
        //PAR nat: PxRigidActorPtr, man: physx.PxRigidActorPtr, kind: PtrStruct
        //PAR nat: PxConstraintPtr*, man: physx.PxConstraintPtr*, kind: Value
        //PAR nat: PxU32, man: uint, kind: Value
        //PAR nat: PxU32, man: uint, kind: Value
        public uint getConstraints(physx.PxConstraintPtr* userBuffer, uint bufferSize, uint startIndex=0) {
            physx.PxRigidActorPtr pvk_in_this = this;
            physx.PxConstraintPtr* pvk_in_userBuffer = userBuffer;
            uint pvk_in_bufferSize = bufferSize;
            uint pvk_in_startIndex = startIndex;
            return uint_const_PxRigidActorPtr_getConstraintsPtr_PxConstraintPtr_uint_uint_(pvk_in_this, pvk_in_userBuffer, pvk_in_bufferSize, pvk_in_startIndex);
        }

        //DBG: MethodNode physx::PxRigidActor::operator= L58
        //ERRORS in MethodNode: Skipping Implicit MethodNode physx::PxRigidActor::operator= L58

        //DBG: MethodNode physx::PxRigidActor::setGlobalPose L120
        //Value Converter setGlobalPose
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxRigidActorPtr, man: physx.PxRigidActorPtr, kind: PtrStruct
        //PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable
        public void setGlobalPose(physx.PxTransform pose) {
            setGlobalPose((physx.PxTransform*)&pose);
        }

        //DBG: MethodNode physx::PxRigidActor::setGlobalPose L120
        //Value Converter setGlobalPose
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxRigidActorPtr, man: physx.PxRigidActorPtr, kind: PtrStruct
        //PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable
        public void setGlobalPose(physx.PxTransform.Ref pose) {
            setGlobalPose((physx.PxTransform*)(*((IntPtr*)(&pose))));
        }

        //DBG: MethodNode physx::PxRigidActor::setGlobalPose L120
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxRigidActorPtr, man: physx.PxRigidActorPtr, kind: PtrStruct
        //PAR nat: physx::PxTransform*, man: physx.PxTransform*, kind: Value
        public void setGlobalPose(physx.PxTransform* pose) {
            physx.PxRigidActorPtr pvk_in_this = this;
            physx.PxTransform* pvk_in_pose = pose;
            void_PxRigidActorPtr_setGlobalPosePtr_PxTransform_(pvk_in_this, pvk_in_pose);
        }

        //DBG: MethodNode physx::PxRigidActor::setGlobalPose L120
        //Value Converter setGlobalPose
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxRigidActorPtr, man: physx.PxRigidActorPtr, kind: PtrStruct
        //PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable
        //PAR nat: bool, man: bool, kind: Value
        public void setGlobalPose(physx.PxTransform pose, bool autowake=true) {
            setGlobalPose((physx.PxTransform*)&pose, autowake);
        }

        //DBG: MethodNode physx::PxRigidActor::setGlobalPose L120
        //Value Converter setGlobalPose
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxRigidActorPtr, man: physx.PxRigidActorPtr, kind: PtrStruct
        //PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable
        //PAR nat: bool, man: bool, kind: Value
        public void setGlobalPose(physx.PxTransform.Ref pose, bool autowake=true) {
            setGlobalPose((physx.PxTransform*)(*((IntPtr*)(&pose))), autowake);
        }

        //DBG: MethodNode physx::PxRigidActor::detachShape L158
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxRigidActorPtr, man: physx.PxRigidActorPtr, kind: PtrStruct
        //PAR nat: PxShapePtr, man: physx.PxShapePtr, kind: PtrStruct
        public void detachShape(physx.PxShapePtr shape) {
            physx.PxRigidActorPtr pvk_in_this = this;
            physx.PxShapePtr pvk_in_shape = shape;
            void_PxRigidActorPtr_detachShapePtr_PxShapePtr_(pvk_in_this, pvk_in_shape);
        }

        //DBG: MethodNode physx::PxRigidActor::getShapes L189
        //RET nat: PxU32, man: uint, ret: True, kind: Value
        //PAR nat: PxRigidActorPtr, man: physx.PxRigidActorPtr, kind: PtrStruct
        //PAR nat: PxShapePtr*, man: physx.PxShapePtr*, kind: Value
        //PAR nat: PxU32, man: uint, kind: Value
        public uint getShapes(physx.PxShapePtr* userBuffer, uint bufferSize) {
            physx.PxRigidActorPtr pvk_in_this = this;
            physx.PxShapePtr* pvk_in_userBuffer = userBuffer;
            uint pvk_in_bufferSize = bufferSize;
            return uint_const_PxRigidActorPtr_getShapesPtr_PxShapePtr_uint_(pvk_in_this, pvk_in_userBuffer, pvk_in_bufferSize);
        }

        //DBG: MethodNode physx::PxRigidActor::getConstraints L222
        //RET nat: PxU32, man: uint, ret: True, kind: Value
        //PAR nat: PxRigidActorPtr, man: physx.PxRigidActorPtr, kind: PtrStruct
        //PAR nat: PxConstraintPtr*, man: physx.PxConstraintPtr*, kind: Value
        //PAR nat: PxU32, man: uint, kind: Value
        public uint getConstraints(physx.PxConstraintPtr* userBuffer, uint bufferSize) {
            physx.PxRigidActorPtr pvk_in_this = this;
            physx.PxConstraintPtr* pvk_in_userBuffer = userBuffer;
            uint pvk_in_bufferSize = bufferSize;
            return uint_const_PxRigidActorPtr_getConstraintsPtr_PxConstraintPtr_uint_(pvk_in_this, pvk_in_userBuffer, pvk_in_bufferSize);
        }
        public static implicit operator physx.PxActorPtr(PxRigidActorPtr obj) => *(physx.PxActorPtr*)&obj;
        public static explicit operator PxRigidActorPtr(physx.PxActorPtr obj) => *(PxRigidActorPtr*)&obj;
        public static implicit operator physx.PxBasePtr(PxRigidActorPtr obj) => *(physx.PxBasePtr*)&obj;
        public static explicit operator PxRigidActorPtr(physx.PxBasePtr obj) => *(PxRigidActorPtr*)&obj;

        //DBG: Field: userData - 314-314
        public IntPtr userData {
            get => PxActorPtr_GET_userData(this);
            set => PxActorPtr_SET_userData(this, value);
        }

        //PIPING
        public physx.PxActorTypeEnum getType(){return((physx.PxActorPtr)this).getType();}
        public physx.PxScenePtr getScene(){return((physx.PxActorPtr)this).getScene();}
        public void setName(string name){((physx.PxActorPtr)this).setName(name);}
        public string getName(){return((physx.PxActorPtr)this).getName();}
        public physx.PxBounds3 getWorldBounds(float inflation=1.01f){return((physx.PxActorPtr)this).getWorldBounds(inflation);}
        public void setActorFlag(physx.PxActorFlagEnum flag, bool value){((physx.PxActorPtr)this).setActorFlag(flag, value);}
        public void setActorFlags(physx.PxActorFlagsPtr inFlags){((physx.PxActorPtr)this).setActorFlags(inFlags);}
        public physx.PxActorFlagsPtr getActorFlags_New(){return((physx.PxActorPtr)this).getActorFlags_New();}
        public void setDominanceGroup(byte dominanceGroup){((physx.PxActorPtr)this).setDominanceGroup(dominanceGroup);}
        public byte getDominanceGroup(){return((physx.PxActorPtr)this).getDominanceGroup();}
        public void setOwnerClient(byte inClient){((physx.PxActorPtr)this).setOwnerClient(inClient);}
        public byte getOwnerClient(){return((physx.PxActorPtr)this).getOwnerClient();}
        public physx.PxAggregatePtr getAggregate(){return((physx.PxActorPtr)this).getAggregate();}
        public physx.PxBounds3 getWorldBounds(){return((physx.PxActorPtr)this).getWorldBounds();}
        public string getConcreteTypeName(){return((physx.PxBasePtr)this).getConcreteTypeName();}
        //Skipping: SKIPPING! MethodNode physx::PxBase::is L101 is | 
        //Skipping: SKIPPING! MethodNode physx::PxBase::is L111 isConst | 
        public ushort getConcreteType(){return((physx.PxBasePtr)this).getConcreteType();}
        public void setBaseFlag(physx.PxBaseFlagEnum flag, bool value){((physx.PxBasePtr)this).setBaseFlag(flag, value);}
        public void setBaseFlags(physx.PxBaseFlagsPtr inFlags){((physx.PxBasePtr)this).setBaseFlags(inFlags);}
        public physx.PxBaseFlagsPtr getBaseFlags_New(){return((physx.PxBasePtr)this).getBaseFlags_New();}
        public bool isReleasable(){return((physx.PxBasePtr)this).isReleasable();}

        //INTERFACES
        public unsafe interface IPxRigidActorPtr {
            void release();
            physx.PxTransform getGlobalPose();
            void setGlobalPose(physx.PxTransform* pose, bool autowake=true);
            bool attachShape(physx.PxShapePtr shape);
            void detachShape(physx.PxShapePtr shape, bool wakeOnLostTouch=true);
            uint getNbShapes();
            uint getShapes(physx.PxShapePtr* userBuffer, uint bufferSize, uint startIndex=0);
            uint getNbConstraints();
            uint getConstraints(physx.PxConstraintPtr* userBuffer, uint bufferSize, uint startIndex=0);
            void setGlobalPose(physx.PxTransform pose);
            void setGlobalPose(physx.PxTransform.Ref pose);
            void setGlobalPose(physx.PxTransform* pose);
            void setGlobalPose(physx.PxTransform pose, bool autowake=true);
            void setGlobalPose(physx.PxTransform.Ref pose, bool autowake=true);
            void detachShape(physx.PxShapePtr shape);
            uint getShapes(physx.PxShapePtr* userBuffer, uint bufferSize);
            uint getConstraints(physx.PxConstraintPtr* userBuffer, uint bufferSize);
        }

        //Operators
    }
}
