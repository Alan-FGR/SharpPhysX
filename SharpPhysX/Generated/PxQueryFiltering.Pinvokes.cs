// Generated by minBND 5.1.90.51 - Â© github.com/Alan-FGR
using System;
using System.Runtime.InteropServices;
public static unsafe partial class minBND_pinvokes {

//DBG: FunctionNode physx::operator| L86
//physx::operator| static physx.PxQueryFlagsPtr OpPipe_New(physx.PxQueryFlagEnum a, physx.PxQueryFlagEnum b) will also be bound as member operator
//RET nat: PxQueryFlagsPtr, man: physx.PxQueryFlagsPtr, ret: True, kind: PtrStruct
//PAR nat: physx::PxQueryFlag::Enum, man: physx.PxQueryFlagEnum, kind: Value
//PAR nat: physx::PxQueryFlag::Enum, man: physx.PxQueryFlagEnum, kind: Value
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxQueryFlagsPtr PxQueryFlagsPtr_operator_Ptr_Pipe_PxQueryFlagEnum_PxQueryFlagEnum_(physx.PxQueryFlagEnum pvk_a, physx.PxQueryFlagEnum pvk_b);

//DBG: FunctionNode physx::operator& L86
//physx::operator& static physx.PxQueryFlagsPtr OpAnd_New(physx.PxQueryFlagEnum a, physx.PxQueryFlagEnum b) will also be bound as member operator
//RET nat: PxQueryFlagsPtr, man: physx.PxQueryFlagsPtr, ret: True, kind: PtrStruct
//PAR nat: physx::PxQueryFlag::Enum, man: physx.PxQueryFlagEnum, kind: Value
//PAR nat: physx::PxQueryFlag::Enum, man: physx.PxQueryFlagEnum, kind: Value
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxQueryFlagsPtr PxQueryFlagsPtr_operator_Ptr_Amp_PxQueryFlagEnum_PxQueryFlagEnum_(physx.PxQueryFlagEnum pvk_a, physx.PxQueryFlagEnum pvk_b);

//DBG: FunctionNode physx::operator~ L86
//physx::operator~ static physx.PxQueryFlagsPtr OpTilde_New(physx.PxQueryFlagEnum a) will also be bound as member operator
//RET nat: PxQueryFlagsPtr, man: physx.PxQueryFlagsPtr, ret: True, kind: PtrStruct
//PAR nat: physx::PxQueryFlag::Enum, man: physx.PxQueryFlagEnum, kind: Value
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxQueryFlagsPtr PxQueryFlagsPtr_operator_Ptr_Tilde_PxQueryFlagEnum_(physx.PxQueryFlagEnum pvk_a);

//DBG: ClassNode PxQueryFlag physx::PxQueryFlag L57-77

//DBG: ClassNode PxQueryHitType physx::PxQueryHitType L108-116
//Subclasses using this: 0

//DBG: ClassNode PxQueryFilterData physx::PxQueryFilterData L132-145

//DBG: NewerFreerNode PxQueryFilterData physx::PxQueryFilterData L132-145
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void Freer_physx_PxQueryFilterDataPtr(physx.PxQueryFilterDataPtr ptr);

//DBG: PtrWrapperCtorNode physx::PxQueryFilterData::PxQueryFilterData L135
//RET nat: PxQueryFilterDataPtr, man: physx.PxQueryFilterDataPtr, ret: True, kind: PtrStruct
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxQueryFilterDataPtr Ctor_PxQueryFilterDataPtr_();

//DBG: PtrWrapperCtorNode physx::PxQueryFilterData::PxQueryFilterData L138
//RET nat: PxQueryFilterDataPtr, man: physx.PxQueryFilterDataPtr, ret: True, kind: PtrStruct
//PAR nat: PxFilterDataPtr, man: physx.PxFilterDataPtr, kind: PtrStruct
//PAR nat: PxQueryFlagsPtr, man: physx.PxQueryFlagsPtr, kind: PtrStruct
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxQueryFilterDataPtr Ctor_PxQueryFilterDataPtr_PxFilterDataPtr_PxQueryFlagsPtr(physx.PxFilterDataPtr pvk_fd, physx.PxQueryFlagsPtr pvk_f);

//DBG: PtrWrapperCtorNode physx::PxQueryFilterData::PxQueryFilterData L141
//RET nat: PxQueryFilterDataPtr, man: physx.PxQueryFilterDataPtr, ret: True, kind: PtrStruct
//PAR nat: PxQueryFlagsPtr, man: physx.PxQueryFlagsPtr, kind: PtrStruct
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxQueryFilterDataPtr Ctor_PxQueryFilterDataPtr_PxQueryFlagsPtr(physx.PxQueryFlagsPtr pvk_f);

//DBG: PtrWrapperCtorNode physx::PxQueryFilterData::PxQueryFilterData L132
//ERRORS in PtrWrapperCtorNode: Skipping Implicit PtrWrapperCtorNode physx::PxQueryFilterData::PxQueryFilterData L132

//DBG: PtrWrapperCtorNode physx::PxQueryFilterData::PxQueryFilterData L132
//ERRORS in PtrWrapperCtorNode: Skipping Implicit PtrWrapperCtorNode physx::PxQueryFilterData::PxQueryFilterData L132

//DBG: Field: data - 143-143
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxFilterDataPtr PxQueryFilterDataPtr_GET_data(physx.PxQueryFilterDataPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxQueryFilterDataPtr_SET_data(physx.PxQueryFilterDataPtr cls, physx.PxFilterDataPtr value);

//DBG: Field: flags - 144-144
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxQueryFlagsPtr PxQueryFilterDataPtr_GET_flags(physx.PxQueryFilterDataPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxQueryFilterDataPtr_SET_flags(physx.PxQueryFilterDataPtr cls, physx.PxQueryFlagsPtr value);

//DBG: MethodNode physx::PxQueryFilterData::operator= L132
//ERRORS in MethodNode: Skipping Implicit MethodNode physx::PxQueryFilterData::operator= L132

//DBG: MethodNode physx::PxQueryFilterData::~PxQueryFilterData L132
//ERRORS in MethodNode: Skipping Implicit MethodNode physx::PxQueryFilterData::~PxQueryFilterData L132, Destructor

//DBG: MethodNode physx::PxQueryFilterData::operator= L132
//ERRORS in MethodNode: Skipping Implicit MethodNode physx::PxQueryFilterData::operator= L132

//Operators
//Subclasses using this: 0

//DBG: ClassNode PxQueryFilterCallback physx::PxQueryFilterCallback L169-198

//DBG: MethodNode physx::PxQueryFilterCallback::preFilter L182-183
//RET nat: physx::PxQueryHitType::Enum, man: physx.PxQueryHitTypeEnum, ret: True, kind: Value
//PAR nat: PxQueryFilterCallbackPtr, man: physx.PxQueryFilterCallbackPtr, kind: PtrStruct
//PAR nat: PxFilterDataPtr, man: physx.PxFilterDataPtr, kind: PtrStruct
//PAR nat: PxShapePtr, man: physx.PxShapePtr, kind: PtrStruct
//PAR nat: PxRigidActorPtr, man: physx.PxRigidActorPtr, kind: PtrStruct
//PAR nat: PxHitFlagsPtr, man: physx.PxHitFlagsPtr, kind: PtrStruct
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxQueryHitTypeEnum PxQueryHitTypeEnum_PxQueryFilterCallbackPtr_preFilterPtr_PxFilterDataPtr_PxShapePtr_PxRigidActorPtr_PxHitFlagsPtr_(physx.PxQueryFilterCallbackPtr pvk_this, physx.PxFilterDataPtr pvk_filterData, physx.PxShapePtr pvk_shape, physx.PxRigidActorPtr pvk_actor, physx.PxHitFlagsPtr pvk_queryFlags);

//DBG: MethodNode physx::PxQueryFilterCallback::postFilter L192
//RET nat: physx::PxQueryHitType::Enum, man: physx.PxQueryHitTypeEnum, ret: True, kind: Value
//PAR nat: PxQueryFilterCallbackPtr, man: physx.PxQueryFilterCallbackPtr, kind: PtrStruct
//PAR nat: PxFilterDataPtr, man: physx.PxFilterDataPtr, kind: PtrStruct
//PAR nat: PxQueryHitPtr, man: physx.PxQueryHitPtr, kind: PtrStruct
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxQueryHitTypeEnum PxQueryHitTypeEnum_PxQueryFilterCallbackPtr_postFilterPtr_PxFilterDataPtr_PxQueryHitPtr_(physx.PxQueryFilterCallbackPtr pvk_this, physx.PxFilterDataPtr pvk_filterData, physx.PxQueryHitPtr pvk_hit);

//DBG: MethodNode physx::PxQueryFilterCallback::~PxQueryFilterCallback L197
//ERRORS in MethodNode: Destructor

//DBG: MethodNode physx::PxQueryFilterCallback::operator= L169
//ERRORS in MethodNode: Skipping Implicit MethodNode physx::PxQueryFilterCallback::operator= L169

//Operators

//DBG: DeclNode PxQueryFlags physx::PxQueryFlags L85

//DBG: DeclNode PxCompileTimeAssert_Dummy physx::PxCompileTimeAssert_Dummy L78

//DBG: DeclNode PxBatchQueryPreFilterShader physx::PxBatchQueryPreFilterShader L233-236

//DBG: DeclNode PxBatchQueryPostFilterShader physx::PxBatchQueryPostFilterShader L266-269
}
