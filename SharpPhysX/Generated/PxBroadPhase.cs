// Generated by minBND 5.1.81.43 - Â© github.com/Alan-FGR
//Unit PxBroadPhase
using System;
using System.Runtime.InteropServices;

public static unsafe partial class physx {
    public enum PxBroadPhaseTypeEnum : int {
        eSAP = 0,  // eSAP
        eMBP = 1,  // eMBP
        eABP = 2,  // eABP
        eGPU = 3,  // eGPU
        eLAST = 4, // eLAST
    }
    
    public unsafe partial struct PxBroadPhaseCallbackPtr {
        private System.IntPtr nativePtr_;
        
    [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxBroadPhaseCallback_onObjectOutOfBounds_physx_PxShapePtr_physx_PxActorPtr_(physx.PxBroadPhaseCallbackPtr pvk_this, physx.PxShapePtr pvk_shape, physx.PxActorPtr pvk_actor);
        
        public void onObjectOutOfBounds(physx.PxShapePtr shape, physx.PxActorPtr actor) {
            physx.PxBroadPhaseCallbackPtr pvk_in_this = this;
            physx.PxShapePtr pvk_in_shape = shape;
            physx.PxActorPtr pvk_in_actor = actor;
            void_physx_PxBroadPhaseCallback_onObjectOutOfBounds_physx_PxShapePtr_physx_PxActorPtr_(pvk_in_this, pvk_in_shape, pvk_in_actor);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxBroadPhaseCallback_onObjectOutOfBounds_physx_PxAggregatePtr_(physx.PxBroadPhaseCallbackPtr pvk_this, physx.PxAggregatePtr pvk_aggregate);
        
        public void onObjectOutOfBounds(physx.PxAggregatePtr aggregate) {
            physx.PxBroadPhaseCallbackPtr pvk_in_this = this;
            physx.PxAggregatePtr pvk_in_aggregate = aggregate;
            void_physx_PxBroadPhaseCallback_onObjectOutOfBounds_physx_PxAggregatePtr_(pvk_in_this, pvk_in_aggregate);
        }
    }
    
    public unsafe partial struct PxBroadPhaseRegionPtr {
        private System.IntPtr nativePtr_;
        
    [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern PxBroadPhaseRegionPtr Newer_physx_PxBroadPhaseRegionPtr();
        
        public static PxBroadPhaseRegionPtr New(){
            return Newer_physx_PxBroadPhaseRegionPtr();
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void Freer_physx_PxBroadPhaseRegionPtr(PxBroadPhaseRegionPtr ptr);
        
        public static void Free(PxBroadPhaseRegionPtr ptr){
            Freer_physx_PxBroadPhaseRegionPtr(ptr);
        }
        public void Free(){
            Freer_physx_PxBroadPhaseRegionPtr(this);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void PxBroadPhaseRegion_GET_bounds(PxBroadPhaseRegionPtr cls, physx.PxBounds3* GetRetRef);
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void PxBroadPhaseRegion_SET_bounds(PxBroadPhaseRegionPtr cls, physx.PxBounds3 value);
        
        public physx.PxBounds3 bounds {
            get { physx.PxBounds3 GetRetRef; PxBroadPhaseRegion_GET_bounds(this, &GetRetRef); return GetRetRef; }
            set => PxBroadPhaseRegion_SET_bounds(this, value);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern IntPtr PxBroadPhaseRegion_GET_userData(PxBroadPhaseRegionPtr cls);
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void PxBroadPhaseRegion_SET_userData(PxBroadPhaseRegionPtr cls, IntPtr value);
        
        public IntPtr userData {
            get => PxBroadPhaseRegion_GET_userData(this);
            set => PxBroadPhaseRegion_SET_userData(this, value);
        }
    }
    
    public unsafe partial struct PxBroadPhaseRegionInfoPtr {
        private System.IntPtr nativePtr_;
        
    [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern PxBroadPhaseRegionInfoPtr Newer_physx_PxBroadPhaseRegionInfoPtr();
        
        public static PxBroadPhaseRegionInfoPtr New(){
            return Newer_physx_PxBroadPhaseRegionInfoPtr();
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void Freer_physx_PxBroadPhaseRegionInfoPtr(PxBroadPhaseRegionInfoPtr ptr);
        
        public static void Free(PxBroadPhaseRegionInfoPtr ptr){
            Freer_physx_PxBroadPhaseRegionInfoPtr(ptr);
        }
        public void Free(){
            Freer_physx_PxBroadPhaseRegionInfoPtr(this);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxBroadPhaseRegionPtr PxBroadPhaseRegionInfo_GET_region(PxBroadPhaseRegionInfoPtr cls);
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void PxBroadPhaseRegionInfo_SET_region(PxBroadPhaseRegionInfoPtr cls, physx.PxBroadPhaseRegionPtr value);
        
        public physx.PxBroadPhaseRegionPtr region {
            get => PxBroadPhaseRegionInfo_GET_region(this);
            set => PxBroadPhaseRegionInfo_SET_region(this, value);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern uint PxBroadPhaseRegionInfo_GET_nbStaticObjects(PxBroadPhaseRegionInfoPtr cls);
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void PxBroadPhaseRegionInfo_SET_nbStaticObjects(PxBroadPhaseRegionInfoPtr cls, uint value);
        
        public uint nbStaticObjects {
            get => PxBroadPhaseRegionInfo_GET_nbStaticObjects(this);
            set => PxBroadPhaseRegionInfo_SET_nbStaticObjects(this, value);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern uint PxBroadPhaseRegionInfo_GET_nbDynamicObjects(PxBroadPhaseRegionInfoPtr cls);
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void PxBroadPhaseRegionInfo_SET_nbDynamicObjects(PxBroadPhaseRegionInfoPtr cls, uint value);
        
        public uint nbDynamicObjects {
            get => PxBroadPhaseRegionInfo_GET_nbDynamicObjects(this);
            set => PxBroadPhaseRegionInfo_SET_nbDynamicObjects(this, value);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern bool PxBroadPhaseRegionInfo_GET_active(PxBroadPhaseRegionInfoPtr cls);
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void PxBroadPhaseRegionInfo_SET_active(PxBroadPhaseRegionInfoPtr cls, bool value);
        
        public bool active {
            get => PxBroadPhaseRegionInfo_GET_active(this);
            set => PxBroadPhaseRegionInfo_SET_active(this, value);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern bool PxBroadPhaseRegionInfo_GET_overlap(PxBroadPhaseRegionInfoPtr cls);
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void PxBroadPhaseRegionInfo_SET_overlap(PxBroadPhaseRegionInfoPtr cls, bool value);
        
        public bool overlap {
            get => PxBroadPhaseRegionInfo_GET_overlap(this);
            set => PxBroadPhaseRegionInfo_SET_overlap(this, value);
        }
    }
    
    public unsafe partial struct PxBroadPhaseCapsPtr {
        private System.IntPtr nativePtr_;
        
    [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern PxBroadPhaseCapsPtr Newer_physx_PxBroadPhaseCapsPtr();
        
        public static PxBroadPhaseCapsPtr New(){
            return Newer_physx_PxBroadPhaseCapsPtr();
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void Freer_physx_PxBroadPhaseCapsPtr(PxBroadPhaseCapsPtr ptr);
        
        public static void Free(PxBroadPhaseCapsPtr ptr){
            Freer_physx_PxBroadPhaseCapsPtr(ptr);
        }
        public void Free(){
            Freer_physx_PxBroadPhaseCapsPtr(this);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern uint PxBroadPhaseCaps_GET_maxNbRegions(PxBroadPhaseCapsPtr cls);
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void PxBroadPhaseCaps_SET_maxNbRegions(PxBroadPhaseCapsPtr cls, uint value);
        
        public uint maxNbRegions {
            get => PxBroadPhaseCaps_GET_maxNbRegions(this);
            set => PxBroadPhaseCaps_SET_maxNbRegions(this, value);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern uint PxBroadPhaseCaps_GET_maxNbObjects(PxBroadPhaseCapsPtr cls);
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void PxBroadPhaseCaps_SET_maxNbObjects(PxBroadPhaseCapsPtr cls, uint value);
        
        public uint maxNbObjects {
            get => PxBroadPhaseCaps_GET_maxNbObjects(this);
            set => PxBroadPhaseCaps_SET_maxNbObjects(this, value);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern bool PxBroadPhaseCaps_GET_needsPredefinedBounds(PxBroadPhaseCapsPtr cls);
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void PxBroadPhaseCaps_SET_needsPredefinedBounds(PxBroadPhaseCapsPtr cls, bool value);
        
        public bool needsPredefinedBounds {
            get => PxBroadPhaseCaps_GET_needsPredefinedBounds(this);
            set => PxBroadPhaseCaps_SET_needsPredefinedBounds(this, value);
        }
    }
    
}
