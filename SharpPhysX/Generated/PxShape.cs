//Generated by MinBinder.
using System;
using System.Runtime.InteropServices;

public enum PxShapeFlag {
 eSIMULATION_SHAPE				= (1<<0),
 eSCENE_QUERY_SHAPE				= (1<<1),
 eTRIGGER_SHAPE					= (1<<2),
 eVISUALIZATION					= (1<<3),

}
public partial class PxShape {
    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern void C_PxShape_release(PxShape cls);
    public void release(){
        return C_PxShape_release(this);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern PxU32 C_CONST_PxShape_getReferenceCount(PxShape cls);
    public PxU32 getReferenceCount(){
        return C_CONST_PxShape_getReferenceCount(this);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern void C_PxShape_acquireReference(PxShape cls);
    public void acquireReference(){
        return C_PxShape_acquireReference(this);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern Enum C_CONST_PxShape_getGeometryType(PxShape cls);
    public Enum getGeometryType(){
        return C_CONST_PxShape_getGeometryType(this);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern void C_PxShape_setGeometry(PxShape cls,PxGeometryPtr geometry);
    public void setGeometry(PxGeometryPtr geometry){
        return C_PxShape_setGeometry(this,geometry);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern PxGeometryHolder C_CONST_PxShape_getGeometry(PxShape cls);
    public PxGeometryHolder getGeometry(){
        return C_CONST_PxShape_getGeometry(this);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern bool C_CONST_PxShape_getBoxGeometry(PxShape cls,PxBoxGeometryPtr geometry);
    public bool getBoxGeometry(PxBoxGeometryPtr geometry){
        return C_CONST_PxShape_getBoxGeometry(this,geometry);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern bool C_CONST_PxShape_getSphereGeometry(PxShape cls,PxSphereGeometryPtr geometry);
    public bool getSphereGeometry(PxSphereGeometryPtr geometry){
        return C_CONST_PxShape_getSphereGeometry(this,geometry);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern bool C_CONST_PxShape_getCapsuleGeometry(PxShape cls,PxCapsuleGeometryPtr geometry);
    public bool getCapsuleGeometry(PxCapsuleGeometryPtr geometry){
        return C_CONST_PxShape_getCapsuleGeometry(this,geometry);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern bool C_CONST_PxShape_getPlaneGeometry(PxShape cls,PxPlaneGeometryPtr geometry);
    public bool getPlaneGeometry(PxPlaneGeometryPtr geometry){
        return C_CONST_PxShape_getPlaneGeometry(this,geometry);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern bool C_CONST_PxShape_getConvexMeshGeometry(PxShape cls,PxConvexMeshGeometryPtr geometry);
    public bool getConvexMeshGeometry(PxConvexMeshGeometryPtr geometry){
        return C_CONST_PxShape_getConvexMeshGeometry(this,geometry);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern bool C_CONST_PxShape_getTriangleMeshGeometry(PxShape cls,PxTriangleMeshGeometryPtr geometry);
    public bool getTriangleMeshGeometry(PxTriangleMeshGeometryPtr geometry){
        return C_CONST_PxShape_getTriangleMeshGeometry(this,geometry);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern bool C_CONST_PxShape_getHeightFieldGeometry(PxShape cls,PxHeightFieldGeometryPtr geometry);
    public bool getHeightFieldGeometry(PxHeightFieldGeometryPtr geometry){
        return C_CONST_PxShape_getHeightFieldGeometry(this,geometry);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern PxRigidActor C_CONST_PxShape_getActor(PxShape cls);
    public PxRigidActor getActor(){
        return C_CONST_PxShape_getActor(this);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern void C_PxShape_setLocalPose(PxShape cls,PxTransformPtr pose);
    public void setLocalPose(PxTransformPtr pose){
        return C_PxShape_setLocalPose(this,pose);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern PxTransform C_CONST_PxShape_getLocalPose(PxShape cls);
    public PxTransform getLocalPose(){
        return C_CONST_PxShape_getLocalPose(this);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern void C_PxShape_setSimulationFilterData(PxShape cls,PxFilterData data);
    public void setSimulationFilterData(PxFilterData data){
        return C_PxShape_setSimulationFilterData(this,data);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern PxFilterData C_CONST_PxShape_getSimulationFilterData(PxShape cls);
    public PxFilterData getSimulationFilterData(){
        return C_CONST_PxShape_getSimulationFilterData(this);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern void C_PxShape_setQueryFilterData(PxShape cls,PxFilterData data);
    public void setQueryFilterData(PxFilterData data){
        return C_PxShape_setQueryFilterData(this,data);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern PxFilterData C_CONST_PxShape_getQueryFilterData(PxShape cls);
    public PxFilterData getQueryFilterData(){
        return C_CONST_PxShape_getQueryFilterData(this);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern void C_PxShape_setMaterials(PxShape cls,PxMaterialPtr materials,PxU16 materialCount);
    public void setMaterials(PxMaterialPtr materials,PxU16 materialCount){
        return C_PxShape_setMaterials(this,materials,materialCount);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern PxU16 C_CONST_PxShape_getNbMaterials(PxShape cls);
    public PxU16 getNbMaterials(){
        return C_CONST_PxShape_getNbMaterials(this);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern PxU32 C_CONST_PxShape_getMaterials(PxShape cls,PxMaterialPtr userBuffer,PxU32 bufferSize,PxU32 startIndex);
    public PxU32 getMaterials(PxMaterialPtr userBuffer,PxU32 bufferSize,PxU32 startIndex){
        return C_CONST_PxShape_getMaterials(this,userBuffer,bufferSize,startIndex);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern PxMaterial C_CONST_PxShape_getMaterialFromInternalFaceIndex(PxShape cls,PxU32 faceIndex);
    public PxMaterial getMaterialFromInternalFaceIndex(PxU32 faceIndex){
        return C_CONST_PxShape_getMaterialFromInternalFaceIndex(this,faceIndex);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern void C_PxShape_setContactOffset(PxShape cls,PxReal contactOffset);
    public void setContactOffset(PxReal contactOffset){
        return C_PxShape_setContactOffset(this,contactOffset);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern PxReal C_CONST_PxShape_getContactOffset(PxShape cls);
    public PxReal getContactOffset(){
        return C_CONST_PxShape_getContactOffset(this);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern void C_PxShape_setRestOffset(PxShape cls,PxReal restOffset);
    public void setRestOffset(PxReal restOffset){
        return C_PxShape_setRestOffset(this,restOffset);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern PxReal C_CONST_PxShape_getRestOffset(PxShape cls);
    public PxReal getRestOffset(){
        return C_CONST_PxShape_getRestOffset(this);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern void C_PxShape_setTorsionalPatchRadius(PxShape cls,PxReal radius);
    public void setTorsionalPatchRadius(PxReal radius){
        return C_PxShape_setTorsionalPatchRadius(this,radius);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern PxReal C_CONST_PxShape_getTorsionalPatchRadius(PxShape cls);
    public PxReal getTorsionalPatchRadius(){
        return C_CONST_PxShape_getTorsionalPatchRadius(this);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern void C_PxShape_setMinTorsionalPatchRadius(PxShape cls,PxReal radius);
    public void setMinTorsionalPatchRadius(PxReal radius){
        return C_PxShape_setMinTorsionalPatchRadius(this,radius);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern PxReal C_CONST_PxShape_getMinTorsionalPatchRadius(PxShape cls);
    public PxReal getMinTorsionalPatchRadius(){
        return C_CONST_PxShape_getMinTorsionalPatchRadius(this);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern void C_PxShape_setFlag(PxShape cls,Enum flag,bool value);
    public void setFlag(Enum flag,bool value){
        return C_PxShape_setFlag(this,flag,value);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern void C_PxShape_setFlags(PxShape cls,PxShapeFlags inFlags);
    public void setFlags(PxShapeFlags inFlags){
        return C_PxShape_setFlags(this,inFlags);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern PxShapeFlags C_CONST_PxShape_getFlags(PxShape cls);
    public PxShapeFlags getFlags(){
        return C_CONST_PxShape_getFlags(this);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern bool C_CONST_PxShape_isExclusive(PxShape cls);
    public bool isExclusive(){
        return C_CONST_PxShape_isExclusive(this);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern void C_PxShape_setName(PxShape cls,string name);
    public void setName(string name){
        return C_PxShape_setName(this,name);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern string C_CONST_PxShape_getName(PxShape cls);
    public string getName(){
        return C_CONST_PxShape_getName(this);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern string C_CONST_PxShape_getConcreteTypeName(PxShape cls);
    public string getConcreteTypeName(){
        return C_CONST_PxShape_getConcreteTypeName(this);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern PxShape C_PxShape_PxShape(PxBaseFlags baseFlags);
    public unsafe PxShape(PxBaseFlags baseFlags){
        var _new = C_PxShape_PxShape(baseFlags);        fixed (void* ptr = &this)
          Buffer.MemoryCopy(&_new, ptr, Marshal.SizeOf(this), Marshal.SizeOf(this));    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern PxShape C_PxShape_PxShape(PxType concreteType,PxBaseFlags baseFlags);
    public unsafe PxShape(PxType concreteType,PxBaseFlags baseFlags){
        var _new = C_PxShape_PxShape(concreteType,baseFlags);        fixed (void* ptr = &this)
          Buffer.MemoryCopy(&_new, ptr, Marshal.SizeOf(this), Marshal.SizeOf(this));    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern bool C_CONST_PxShape_isKindOf(PxShape cls,string name);
    public bool isKindOf(string name){
        return C_CONST_PxShape_isKindOf(this,name);    
    }


}
public partial struct PxRigidActor {


}
public partial struct PxFilterData {


}
public partial struct PxShapeFlag {


}
public partial struct PxRaycastHit {


}
public partial struct PxSweepHit {


}
