// Generated by minBND 5.1.90.51 - Â© github.com/Alan-FGR
using System;
using System.Runtime.InteropServices;
using static minBND_pinvokes;

public static unsafe partial class physx {

    //DBG: ClassNode PxGeometryType physx::PxGeometryType L51-65
    public enum PxGeometryTypeEnum : int {
        eSPHERE = 0,                     // eSPHERE
        ePLANE = 1,                      // ePLANE
        eCAPSULE = 2,                    // eCAPSULE
        eBOX = 3,                        // eBOX
        eCONVEXMESH = 4,                 // eCONVEXMESH
        eTRIANGLEMESH = 5,               // eTRIANGLEMESH
        eHEIGHTFIELD = 6,                // eHEIGHTFIELD
        eGEOMETRY_COUNT = 7,             // eGEOMETRY_COUNT
        eINVALID = -1,                   // eINVALID = -1
    }
    //Subclasses using this: 7

    [StructLayout(LayoutKind.Sequential, Size = 4)]
    public unsafe partial struct PxGeometry : physx.PxGeometry.IPxGeometry {
        internal physx.PxGeometryTypeEnum mType;

        //DBG: ClassNode PxGeometry physx::PxGeometry L75-87

        //DBG: MethodNode physx::PxGeometry::getType L82
        //RET nat: physx::PxGeometryType::Enum, man: physx.PxGeometryTypeEnum, ret: True, kind: Value
        //PAR nat: physx::PxGeometry, man: physx.PxGeometry, kind: Blittable
        public physx.PxGeometryTypeEnum getType() {

            fixed (PxGeometry* pvk_in_this = &this){
              return PxGeometryTypeEnum_const_PxGeometry_getTypePtr(pvk_in_this);
            }
        }

        //DBG: BlittableCtorNode physx::PxGeometry::PxGeometry L85
        //SKIPPING PROTECTED

        //DBG: BlittableCtorNode physx::PxGeometry::PxGeometry L75
        //ERRORS in BlittableCtorNode: Skipping Implicit BlittableCtorNode physx::PxGeometry::PxGeometry L75

        //DBG: BlittableCtorNode physx::PxGeometry::PxGeometry L75
        //ERRORS in BlittableCtorNode: Skipping Implicit BlittableCtorNode physx::PxGeometry::PxGeometry L75

        //DBG: MethodNode physx::PxGeometry::~PxGeometry L75
        //ERRORS in MethodNode: Skipping Implicit MethodNode physx::PxGeometry::~PxGeometry L75, Destructor

        //DBG: MethodNode physx::PxGeometry::operator= L75
        //ERRORS in MethodNode: Skipping Implicit MethodNode physx::PxGeometry::operator= L75

        //DBG: MethodNode physx::PxGeometry::operator= L75
        //ERRORS in MethodNode: Skipping Implicit MethodNode physx::PxGeometry::operator= L75

        //INTERFACES
        public unsafe interface IPxGeometry {
            physx.PxGeometryTypeEnum getType();
        }

        //REFERENCES
        public struct Ref {
            private IntPtr nativePtr_;
            public static implicit operator Ref(in physx.PxGeometry obj)
            {fixed (void* f = &obj) return new Ref {nativePtr_ = (IntPtr)f};}
            public static implicit operator Ref(in physx.PxBoxGeometry obj)
            {fixed (void* f = &obj) return new Ref {nativePtr_ = (IntPtr)f};}
            public static implicit operator Ref(in physx.PxSphereGeometry obj)
            {fixed (void* f = &obj) return new Ref {nativePtr_ = (IntPtr)f};}
            public static implicit operator Ref(in physx.PxCapsuleGeometry obj)
            {fixed (void* f = &obj) return new Ref {nativePtr_ = (IntPtr)f};}
            public static implicit operator Ref(in physx.PxPlaneGeometry obj)
            {fixed (void* f = &obj) return new Ref {nativePtr_ = (IntPtr)f};}
            public static implicit operator Ref(in physx.PxConvexMeshGeometry obj)
            {fixed (void* f = &obj) return new Ref {nativePtr_ = (IntPtr)f};}
            public static implicit operator Ref(in physx.PxTriangleMeshGeometry obj)
            {fixed (void* f = &obj) return new Ref {nativePtr_ = (IntPtr)f};}
            public static implicit operator Ref(in physx.PxHeightFieldGeometry obj)
            {fixed (void* f = &obj) return new Ref {nativePtr_ = (IntPtr)f};}
        }

        //Operators
    }
}
