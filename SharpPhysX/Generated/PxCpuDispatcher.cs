// Generated by minBND 5.1.78.26 - Â© github.com/Alan-FGR
//DEBUG: UnitNode  - 0
//Unit PxCpuDispatcher
using System;
using System.Runtime.InteropServices;

//DEBUG: NamespaceNode physx - 34-77
public static unsafe partial class physx {
    //DEBUG: ClassNode physx::PxCpuDispatcher - 49-75
    //Interface use count: 1
    public unsafe partial struct PxCpuDispatcherPtr{
        private System.IntPtr nativePtr_;
        
    //DEBUG: MethodNode physx::PxCpuDispatcher::submitTask - 63
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxCpuDispatcher_submitTask_physx_PxBaseTaskPtr_(physx.PxCpuDispatcherPtr pvk_this, physx.PxBaseTaskPtr pvk_task);
        
        public void submitTask(physx.PxBaseTaskPtr task) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: PxCpuDispatcherPtr, man: physx.PxCpuDispatcherPtr, stg: PtrStruct
            physx.PxCpuDispatcherPtr pvk_in_this = this;
            //PAR nat: PxBaseTaskPtr, man: physx.PxBaseTaskPtr, stg: PtrStruct
            physx.PxBaseTaskPtr pvk_in_task = task;
            void_physx_PxCpuDispatcher_submitTask_physx_PxBaseTaskPtr_(pvk_in_this, pvk_in_task);
        }
        
        //DEBUG: MethodNode physx::PxCpuDispatcher::getWorkerCount - 72
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern uint uint_const_physx_PxCpuDispatcher_getWorkerCount(physx.PxCpuDispatcherPtr pvk_this);
        
        public uint getWorkerCount() {
            //RET nat: uint, man: uint, stg: Value, ret: True
            //PAR nat: PxCpuDispatcherPtr, man: physx.PxCpuDispatcherPtr, stg: PtrStruct
            physx.PxCpuDispatcherPtr pvk_in_this = this;
            return uint_const_physx_PxCpuDispatcher_getWorkerCount(pvk_in_this);
        }
        
        //DEBUG: MethodNode physx::PxCpuDispatcher::~PxCpuDispatcher - 74
        //ERRORS OCCURED IN physx::PxCpuDispatcher::~PxCpuDispatcher
        //Destructor
        
        //DEBUG: MethodNode physx::PxCpuDispatcher::operator= - 49
        //ERRORS OCCURED IN physx::PxCpuDispatcher::operator=
        //Implicit Function/Method
        //Unbindable Operator: Equal
    
    
    
        public unsafe interface IPxCpuDispatcherPtr {
            void submitTask(physx.PxBaseTaskPtr task);
            uint getWorkerCount();
        }
    }
    
}
