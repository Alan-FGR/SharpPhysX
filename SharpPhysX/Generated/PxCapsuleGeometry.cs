//Generated by MinBinder.
using System;
using System.Runtime.InteropServices;
using PxBaseFlags = System.UInt32;
using PxActorFlags = System.UInt32;

public static partial class physx{
    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern PxTransform C_PxTransformFromSegment(PxVec3 p0,PxVec3 p1,float halfHeight);
    public static PxTransform PxTransformFromSegment(PxVec3 p0,PxVec3 p1,float halfHeight){
        return C_PxTransformFromSegment(p0,p1,halfHeight);    
    }


}

public partial struct PxCapsuleGeometry : IPxGeometry { // ptr holder

    public PxGeometryType getType() {// base call
        return ((PxGeometry)this).getType();
    }
    

    private IntPtr nativePtr_;
    
    public static unsafe implicit operator PxGeometry(PxCapsuleGeometry obj) {// upcast
        return *(PxGeometry*)&obj;
    }
    
    public static unsafe explicit operator PxCapsuleGeometry(PxGeometry obj) {// downcast
        return *(PxCapsuleGeometry*)&obj;
    }
    
    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern PxCapsuleGeometry C_PxCapsuleGeometry_PxCapsuleGeometry(float radius_,float halfHeight_);
    public unsafe PxCapsuleGeometry(float radius_,float halfHeight_){
        var _new = C_PxCapsuleGeometry_PxCapsuleGeometry(radius_,halfHeight_);        
        fixed (void* ptr = &this)
          Buffer.MemoryCopy(&_new, ptr, Marshal.SizeOf(this), Marshal.SizeOf(this));    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern bool C_CONST_PxCapsuleGeometry_isValid(PxCapsuleGeometry cls);
    public bool isValid(){
        return C_CONST_PxCapsuleGeometry_isValid(this);    
    }


}
