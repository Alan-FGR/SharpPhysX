// Generated by minBND 5.1.81.43 - Â© github.com/Alan-FGR
//Unit PxArticulationReducedCoordinate
using System;
using System.Runtime.InteropServices;

public static unsafe partial class physx {
    public static unsafe partial class Cm {
    
    }
    
    // physx::operator| [static PxArticulationFlagsPtr Pipe_New(physx.PxArticulationFlagEnum a, physx.PxArticulationFlagEnum b)] will be bound as member operator
    
    // physx::operator& [static PxArticulationFlagsPtr Amp_New(physx.PxArticulationFlagEnum a, physx.PxArticulationFlagEnum b)] will be bound as member operator
    
    // physx::operator~ [static PxArticulationFlagsPtr Tilde_New(physx.PxArticulationFlagEnum a)] will be bound as member operator
    
    // physx::operator| [static PxArticulationCacheFlagsPtr Pipe_New(physx.PxArticulationCachePtr.Enum a, physx.PxArticulationCachePtr.Enum b)] will be bound as member operator
    
    // physx::operator& [static PxArticulationCacheFlagsPtr Amp_New(physx.PxArticulationCachePtr.Enum a, physx.PxArticulationCachePtr.Enum b)] will be bound as member operator
    
    // physx::operator~ [static PxArticulationCacheFlagsPtr Tilde_New(physx.PxArticulationCachePtr.Enum a)] will be bound as member operator
    
    public enum PxArticulationFlagEnum : int {
        eFIX_BASE = 2, // eFIX_BASE = (1 << 1)
    }
    
    public unsafe partial struct PxKinematicJacobianPtr {
        private System.IntPtr nativePtr_;
        
    [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern PxKinematicJacobianPtr Newer_physx_PxKinematicJacobianPtr();
        
        public static PxKinematicJacobianPtr New(){
            return Newer_physx_PxKinematicJacobianPtr();
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void Freer_physx_PxKinematicJacobianPtr(PxKinematicJacobianPtr ptr);
        
        public static void Free(PxKinematicJacobianPtr ptr){
            Freer_physx_PxKinematicJacobianPtr(ptr);
        }
        public void Free(){
            Freer_physx_PxKinematicJacobianPtr(this);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern uint PxKinematicJacobian_GET_nbColumns(PxKinematicJacobianPtr cls);
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void PxKinematicJacobian_SET_nbColumns(PxKinematicJacobianPtr cls, uint value);
        
        public uint nbColumns {
            get => PxKinematicJacobian_GET_nbColumns(this);
            set => PxKinematicJacobian_SET_nbColumns(this, value);
        }
    }
    
    public unsafe partial struct PxArticulationRootLinkDataPtr {
        private System.IntPtr nativePtr_;
        
    [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern PxArticulationRootLinkDataPtr Newer_physx_PxArticulationRootLinkDataPtr();
        
        public static PxArticulationRootLinkDataPtr New(){
            return Newer_physx_PxArticulationRootLinkDataPtr();
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void Freer_physx_PxArticulationRootLinkDataPtr(PxArticulationRootLinkDataPtr ptr);
        
        public static void Free(PxArticulationRootLinkDataPtr ptr){
            Freer_physx_PxArticulationRootLinkDataPtr(ptr);
        }
        public void Free(){
            Freer_physx_PxArticulationRootLinkDataPtr(this);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void PxArticulationRootLinkData_GET_transform(PxArticulationRootLinkDataPtr cls, physx.PxTransform* GetRetRef);
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void PxArticulationRootLinkData_SET_transform(PxArticulationRootLinkDataPtr cls, physx.PxTransform value);
        
        public physx.PxTransform transform {
            get { physx.PxTransform GetRetRef; PxArticulationRootLinkData_GET_transform(this, &GetRetRef); return GetRetRef; }
            set => PxArticulationRootLinkData_SET_transform(this, value);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void PxArticulationRootLinkData_GET_linVel(PxArticulationRootLinkDataPtr cls, physx.PxVec3* GetRetRef);
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void PxArticulationRootLinkData_SET_linVel(PxArticulationRootLinkDataPtr cls, physx.PxVec3 value);
        
        public physx.PxVec3 linVel {
            get { physx.PxVec3 GetRetRef; PxArticulationRootLinkData_GET_linVel(this, &GetRetRef); return GetRetRef; }
            set => PxArticulationRootLinkData_SET_linVel(this, value);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void PxArticulationRootLinkData_GET_angVel(PxArticulationRootLinkDataPtr cls, physx.PxVec3* GetRetRef);
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void PxArticulationRootLinkData_SET_angVel(PxArticulationRootLinkDataPtr cls, physx.PxVec3 value);
        
        public physx.PxVec3 angVel {
            get { physx.PxVec3 GetRetRef; PxArticulationRootLinkData_GET_angVel(this, &GetRetRef); return GetRetRef; }
            set => PxArticulationRootLinkData_SET_angVel(this, value);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void PxArticulationRootLinkData_GET_linAcel(PxArticulationRootLinkDataPtr cls, physx.PxVec3* GetRetRef);
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void PxArticulationRootLinkData_SET_linAcel(PxArticulationRootLinkDataPtr cls, physx.PxVec3 value);
        
        public physx.PxVec3 linAcel {
            get { physx.PxVec3 GetRetRef; PxArticulationRootLinkData_GET_linAcel(this, &GetRetRef); return GetRetRef; }
            set => PxArticulationRootLinkData_SET_linAcel(this, value);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void PxArticulationRootLinkData_GET_angAcel(PxArticulationRootLinkDataPtr cls, physx.PxVec3* GetRetRef);
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void PxArticulationRootLinkData_SET_angAcel(PxArticulationRootLinkDataPtr cls, physx.PxVec3 value);
        
        public physx.PxVec3 angAcel {
            get { physx.PxVec3 GetRetRef; PxArticulationRootLinkData_GET_angAcel(this, &GetRetRef); return GetRetRef; }
            set => PxArticulationRootLinkData_SET_angAcel(this, value);
        }
    }
    
    public unsafe partial struct PxArticulationCachePtr {
        private System.IntPtr nativePtr_;
        
    public enum Enum : int {
            eVELOCITY = 1,     // eVELOCITY = (1 << 0)
            eACCELERATION = 2, // eACCELERATION = (1 << 1)
            ePOSITION = 4,     // ePOSITION = (1 << 2)
            eFORCE = 8,        // eFORCE = (1 << 3)
            eROOT = 16,        // eROOT = (1 << 4)
            eALL = 23,         // eALL = (eVELOCITY | eACCELERATION | ePOSITION| eROOT)
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void Freer_physx_PxArticulationCachePtr(PxArticulationCachePtr ptr);
        
        public static void Free(PxArticulationCachePtr ptr){
            Freer_physx_PxArticulationCachePtr(ptr);
        }
        public void Free(){
            Freer_physx_PxArticulationCachePtr(this);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxArticulationCachePtr Ctor_physx_PxArticulationCachePtr_();
        
        public static physx.PxArticulationCachePtr New() {
            return Ctor_physx_PxArticulationCachePtr_();
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxKinematicJacobianPtr PxArticulationCache_GET_jacobian(PxArticulationCachePtr cls);
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void PxArticulationCache_SET_jacobian(PxArticulationCachePtr cls, physx.PxKinematicJacobianPtr value);
        
        public physx.PxKinematicJacobianPtr jacobian {
            get => PxArticulationCache_GET_jacobian(this);
            set => PxArticulationCache_SET_jacobian(this, value);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern float* PxArticulationCache_GET_massMatrix(PxArticulationCachePtr cls);
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void PxArticulationCache_SET_massMatrix(PxArticulationCachePtr cls, float* value);
        
        public float* massMatrix {
            get => PxArticulationCache_GET_massMatrix(this);
            set => PxArticulationCache_SET_massMatrix(this, value);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern float* PxArticulationCache_GET_jointVelocity(PxArticulationCachePtr cls);
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void PxArticulationCache_SET_jointVelocity(PxArticulationCachePtr cls, float* value);
        
        public float* jointVelocity {
            get => PxArticulationCache_GET_jointVelocity(this);
            set => PxArticulationCache_SET_jointVelocity(this, value);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern float* PxArticulationCache_GET_jointAcceleration(PxArticulationCachePtr cls);
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void PxArticulationCache_SET_jointAcceleration(PxArticulationCachePtr cls, float* value);
        
        public float* jointAcceleration {
            get => PxArticulationCache_GET_jointAcceleration(this);
            set => PxArticulationCache_SET_jointAcceleration(this, value);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern float* PxArticulationCache_GET_jointPosition(PxArticulationCachePtr cls);
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void PxArticulationCache_SET_jointPosition(PxArticulationCachePtr cls, float* value);
        
        public float* jointPosition {
            get => PxArticulationCache_GET_jointPosition(this);
            set => PxArticulationCache_SET_jointPosition(this, value);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern float* PxArticulationCache_GET_jointForce(PxArticulationCachePtr cls);
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void PxArticulationCache_SET_jointForce(PxArticulationCachePtr cls, float* value);
        
        public float* jointForce {
            get => PxArticulationCache_GET_jointForce(this);
            set => PxArticulationCache_SET_jointForce(this, value);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern float* PxArticulationCache_GET_coefficentMatrix(PxArticulationCachePtr cls);
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void PxArticulationCache_SET_coefficentMatrix(PxArticulationCachePtr cls, float* value);
        
        public float* coefficentMatrix {
            get => PxArticulationCache_GET_coefficentMatrix(this);
            set => PxArticulationCache_SET_coefficentMatrix(this, value);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern float* PxArticulationCache_GET_lambda(PxArticulationCachePtr cls);
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void PxArticulationCache_SET_lambda(PxArticulationCachePtr cls, float* value);
        
        public float* lambda {
            get => PxArticulationCache_GET_lambda(this);
            set => PxArticulationCache_SET_lambda(this, value);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxArticulationRootLinkDataPtr PxArticulationCache_GET_rootLinkData(PxArticulationCachePtr cls);
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void PxArticulationCache_SET_rootLinkData(PxArticulationCachePtr cls, physx.PxArticulationRootLinkDataPtr value);
        
        public physx.PxArticulationRootLinkDataPtr rootLinkData {
            get => PxArticulationCache_GET_rootLinkData(this);
            set => PxArticulationCache_SET_rootLinkData(this, value);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern IntPtr PxArticulationCache_GET_scratchMemory(PxArticulationCachePtr cls);
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void PxArticulationCache_SET_scratchMemory(PxArticulationCachePtr cls, IntPtr value);
        
        public IntPtr scratchMemory {
            get => PxArticulationCache_GET_scratchMemory(this);
            set => PxArticulationCache_SET_scratchMemory(this, value);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern IntPtr PxArticulationCache_GET_scratchAllocator(PxArticulationCachePtr cls);
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void PxArticulationCache_SET_scratchAllocator(PxArticulationCachePtr cls, IntPtr value);
        
        public IntPtr scratchAllocator {
            get => PxArticulationCache_GET_scratchAllocator(this);
            set => PxArticulationCache_SET_scratchAllocator(this, value);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern uint PxArticulationCache_GET_version(PxArticulationCachePtr cls);
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void PxArticulationCache_SET_version(PxArticulationCachePtr cls, uint value);
        
        public uint version {
            get => PxArticulationCache_GET_version(this);
            set => PxArticulationCache_SET_version(this, value);
        }
    }
    
    public unsafe partial struct PxArticulationReducedCoordinatePtr : physx.PxArticulationBasePtr.IPxArticulationBasePtr, physx.PxBasePtr.IPxBasePtr {
        private System.IntPtr nativePtr_;
        
    [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxArticulationReducedCoordinate_release(physx.PxArticulationReducedCoordinatePtr pvk_this);
        
        public void release() {
            physx.PxArticulationReducedCoordinatePtr pvk_in_this = this;
            void_physx_PxArticulationReducedCoordinate_release(pvk_in_this);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxArticulationReducedCoordinate_setArticulationFlags_PxArticulationFlagsPtr_(physx.PxArticulationReducedCoordinatePtr pvk_this, PxArticulationFlagsPtr pvk_flags);
        
        public void setArticulationFlags(PxArticulationFlagsPtr flags) {
            physx.PxArticulationReducedCoordinatePtr pvk_in_this = this;
            PxArticulationFlagsPtr pvk_in_flags = flags;
            void_physx_PxArticulationReducedCoordinate_setArticulationFlags_PxArticulationFlagsPtr_(pvk_in_this, pvk_in_flags);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxArticulationReducedCoordinate_setArticulationFlag_physx_PxArticulationFlagEnum_bool_(physx.PxArticulationReducedCoordinatePtr pvk_this, physx.PxArticulationFlagEnum pvk_flag, bool pvk_value);
        
        public void setArticulationFlag(physx.PxArticulationFlagEnum flag, bool value) {
            physx.PxArticulationReducedCoordinatePtr pvk_in_this = this;
            physx.PxArticulationFlagEnum pvk_in_flag = flag;
            bool pvk_in_value = value;
            void_physx_PxArticulationReducedCoordinate_setArticulationFlag_physx_PxArticulationFlagEnum_bool_(pvk_in_this, pvk_in_flag, pvk_in_value);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern PxArticulationFlagsPtr PxArticulationFlagsPtr_const_physx_PxArticulationReducedCoordinate_getArticulationFlags(physx.PxArticulationReducedCoordinatePtr pvk_this);
        
        public PxArticulationFlagsPtr getArticulationFlags_New() {
            physx.PxArticulationReducedCoordinatePtr pvk_in_this = this;
            return PxArticulationFlagsPtr_const_physx_PxArticulationReducedCoordinate_getArticulationFlags(pvk_in_this);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern uint uint_const_physx_PxArticulationReducedCoordinate_getDofs(physx.PxArticulationReducedCoordinatePtr pvk_this);
        
        public uint getDofs() {
            physx.PxArticulationReducedCoordinatePtr pvk_in_this = this;
            return uint_const_physx_PxArticulationReducedCoordinate_getDofs(pvk_in_this);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxArticulationCachePtr physx_PxArticulationCachePtr_const_physx_PxArticulationReducedCoordinate_createCache(physx.PxArticulationReducedCoordinatePtr pvk_this);
        
        public physx.PxArticulationCachePtr createCache() {
            physx.PxArticulationReducedCoordinatePtr pvk_in_this = this;
            return physx_PxArticulationCachePtr_const_physx_PxArticulationReducedCoordinate_createCache(pvk_in_this);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern uint uint_const_physx_PxArticulationReducedCoordinate_getCacheDataSize(physx.PxArticulationReducedCoordinatePtr pvk_this);
        
        public uint getCacheDataSize() {
            physx.PxArticulationReducedCoordinatePtr pvk_in_this = this;
            return uint_const_physx_PxArticulationReducedCoordinate_getCacheDataSize(pvk_in_this);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxArticulationReducedCoordinate_zeroCache_physx_PxArticulationCachePtr_(physx.PxArticulationReducedCoordinatePtr pvk_this, physx.PxArticulationCachePtr pvk_cache);
        
        public void zeroCache(physx.PxArticulationCachePtr cache) {
            physx.PxArticulationReducedCoordinatePtr pvk_in_this = this;
            physx.PxArticulationCachePtr pvk_in_cache = cache;
            void_physx_PxArticulationReducedCoordinate_zeroCache_physx_PxArticulationCachePtr_(pvk_in_this, pvk_in_cache);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxArticulationReducedCoordinate_applyCache_physx_PxArticulationCachePtr_PxArticulationCacheFlagsPtr_bool_C_(physx.PxArticulationReducedCoordinatePtr pvk_this, physx.PxArticulationCachePtr pvk_cache, PxArticulationCacheFlagsPtr pvk_flag, bool pvk_autowake);
        
        public void applyCache(physx.PxArticulationCachePtr cache, PxArticulationCacheFlagsPtr flag, bool autowake=true) {
            physx.PxArticulationReducedCoordinatePtr pvk_in_this = this;
            physx.PxArticulationCachePtr pvk_in_cache = cache;
            PxArticulationCacheFlagsPtr pvk_in_flag = flag;
            bool pvk_in_autowake = autowake;
            void_physx_PxArticulationReducedCoordinate_applyCache_physx_PxArticulationCachePtr_PxArticulationCacheFlagsPtr_bool_C_(pvk_in_this, pvk_in_cache, pvk_in_flag, pvk_in_autowake);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_const_physx_PxArticulationReducedCoordinate_copyInternalStateToCache_physx_PxArticulationCachePtr_PxArticulationCacheFlagsPtr_C(physx.PxArticulationReducedCoordinatePtr pvk_this, physx.PxArticulationCachePtr pvk_cache, PxArticulationCacheFlagsPtr pvk_flag);
        
        public void copyInternalStateToCache(physx.PxArticulationCachePtr cache, PxArticulationCacheFlagsPtr flag) {
            physx.PxArticulationReducedCoordinatePtr pvk_in_this = this;
            physx.PxArticulationCachePtr pvk_in_cache = cache;
            PxArticulationCacheFlagsPtr pvk_in_flag = flag;
            void_const_physx_PxArticulationReducedCoordinate_copyInternalStateToCache_physx_PxArticulationCachePtr_PxArticulationCacheFlagsPtr_C(pvk_in_this, pvk_in_cache, pvk_in_flag);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_const_physx_PxArticulationReducedCoordinate_releaseCache_physx_PxArticulationCachePtr_(physx.PxArticulationReducedCoordinatePtr pvk_this, physx.PxArticulationCachePtr pvk_cache);
        
        public void releaseCache(physx.PxArticulationCachePtr cache) {
            physx.PxArticulationReducedCoordinatePtr pvk_in_this = this;
            physx.PxArticulationCachePtr pvk_in_cache = cache;
            void_const_physx_PxArticulationReducedCoordinate_releaseCache_physx_PxArticulationCachePtr_(pvk_in_this, pvk_in_cache);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_const_physx_PxArticulationReducedCoordinate_packJointData_float_float_(physx.PxArticulationReducedCoordinatePtr pvk_this, float* pvk_maximum, float* pvk_reduced);
        
        public void packJointData(float* maximum, float* reduced) {
            physx.PxArticulationReducedCoordinatePtr pvk_in_this = this;
            float* pvk_in_maximum = maximum;
            float* pvk_in_reduced = reduced;
            void_const_physx_PxArticulationReducedCoordinate_packJointData_float_float_(pvk_in_this, pvk_in_maximum, pvk_in_reduced);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_const_physx_PxArticulationReducedCoordinate_unpackJointData_float_float_(physx.PxArticulationReducedCoordinatePtr pvk_this, float* pvk_reduced, float* pvk_maximum);
        
        public void unpackJointData(float* reduced, float* maximum) {
            physx.PxArticulationReducedCoordinatePtr pvk_in_this = this;
            float* pvk_in_reduced = reduced;
            float* pvk_in_maximum = maximum;
            void_const_physx_PxArticulationReducedCoordinate_unpackJointData_float_float_(pvk_in_this, pvk_in_reduced, pvk_in_maximum);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_const_physx_PxArticulationReducedCoordinate_commonInit(physx.PxArticulationReducedCoordinatePtr pvk_this);
        
        public void commonInit() {
            physx.PxArticulationReducedCoordinatePtr pvk_in_this = this;
            void_const_physx_PxArticulationReducedCoordinate_commonInit(pvk_in_this);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_const_physx_PxArticulationReducedCoordinate_computeGeneralizedGravityForce_physx_PxArticulationCachePtr_(physx.PxArticulationReducedCoordinatePtr pvk_this, physx.PxArticulationCachePtr pvk_cache);
        
        public void computeGeneralizedGravityForce(physx.PxArticulationCachePtr cache) {
            physx.PxArticulationReducedCoordinatePtr pvk_in_this = this;
            physx.PxArticulationCachePtr pvk_in_cache = cache;
            void_const_physx_PxArticulationReducedCoordinate_computeGeneralizedGravityForce_physx_PxArticulationCachePtr_(pvk_in_this, pvk_in_cache);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_const_physx_PxArticulationReducedCoordinate_computeCoriolisAndCentrifugalForce_physx_PxArticulationCachePtr_(physx.PxArticulationReducedCoordinatePtr pvk_this, physx.PxArticulationCachePtr pvk_cache);
        
        public void computeCoriolisAndCentrifugalForce(physx.PxArticulationCachePtr cache) {
            physx.PxArticulationReducedCoordinatePtr pvk_in_this = this;
            physx.PxArticulationCachePtr pvk_in_cache = cache;
            void_const_physx_PxArticulationReducedCoordinate_computeCoriolisAndCentrifugalForce_physx_PxArticulationCachePtr_(pvk_in_this, pvk_in_cache);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_const_physx_PxArticulationReducedCoordinate_computeGeneralizedExternalForce_physx_PxArticulationCachePtr_(physx.PxArticulationReducedCoordinatePtr pvk_this, physx.PxArticulationCachePtr pvk_cache);
        
        public void computeGeneralizedExternalForce(physx.PxArticulationCachePtr cache) {
            physx.PxArticulationReducedCoordinatePtr pvk_in_this = this;
            physx.PxArticulationCachePtr pvk_in_cache = cache;
            void_const_physx_PxArticulationReducedCoordinate_computeGeneralizedExternalForce_physx_PxArticulationCachePtr_(pvk_in_this, pvk_in_cache);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_const_physx_PxArticulationReducedCoordinate_computeJointAcceleration_physx_PxArticulationCachePtr_(physx.PxArticulationReducedCoordinatePtr pvk_this, physx.PxArticulationCachePtr pvk_cache);
        
        public void computeJointAcceleration(physx.PxArticulationCachePtr cache) {
            physx.PxArticulationReducedCoordinatePtr pvk_in_this = this;
            physx.PxArticulationCachePtr pvk_in_cache = cache;
            void_const_physx_PxArticulationReducedCoordinate_computeJointAcceleration_physx_PxArticulationCachePtr_(pvk_in_this, pvk_in_cache);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_const_physx_PxArticulationReducedCoordinate_computeJointForce_physx_PxArticulationCachePtr_(physx.PxArticulationReducedCoordinatePtr pvk_this, physx.PxArticulationCachePtr pvk_cache);
        
        public void computeJointForce(physx.PxArticulationCachePtr cache) {
            physx.PxArticulationReducedCoordinatePtr pvk_in_this = this;
            physx.PxArticulationCachePtr pvk_in_cache = cache;
            void_const_physx_PxArticulationReducedCoordinate_computeJointForce_physx_PxArticulationCachePtr_(pvk_in_this, pvk_in_cache);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_const_physx_PxArticulationReducedCoordinate_computeKinematicJacobian_uint_physx_PxArticulationCachePtrC_(physx.PxArticulationReducedCoordinatePtr pvk_this, uint pvk_linkID, physx.PxArticulationCachePtr pvk_cache);
        
        public void computeKinematicJacobian(uint linkID, physx.PxArticulationCachePtr cache) {
            physx.PxArticulationReducedCoordinatePtr pvk_in_this = this;
            uint pvk_in_linkID = linkID;
            physx.PxArticulationCachePtr pvk_in_cache = cache;
            void_const_physx_PxArticulationReducedCoordinate_computeKinematicJacobian_uint_physx_PxArticulationCachePtrC_(pvk_in_this, pvk_in_linkID, pvk_in_cache);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_const_physx_PxArticulationReducedCoordinate_computeCoefficentMatrix_physx_PxArticulationCachePtr_(physx.PxArticulationReducedCoordinatePtr pvk_this, physx.PxArticulationCachePtr pvk_cache);
        
        public void computeCoefficentMatrix(physx.PxArticulationCachePtr cache) {
            physx.PxArticulationReducedCoordinatePtr pvk_in_this = this;
            physx.PxArticulationCachePtr pvk_in_cache = cache;
            void_const_physx_PxArticulationReducedCoordinate_computeCoefficentMatrix_physx_PxArticulationCachePtr_(pvk_in_this, pvk_in_cache);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern bool bool_const_physx_PxArticulationReducedCoordinate_computeLambda_physx_PxArticulationCachePtr_physx_PxArticulationCachePtr_float_uint_CC(physx.PxArticulationReducedCoordinatePtr pvk_this, physx.PxArticulationCachePtr pvk_cache, physx.PxArticulationCachePtr pvk_initialState, float* pvk_jointTorque, uint pvk_maxIter);
        
        public bool computeLambda(physx.PxArticulationCachePtr cache, physx.PxArticulationCachePtr initialState, float* jointTorque, uint maxIter) {
            physx.PxArticulationReducedCoordinatePtr pvk_in_this = this;
            physx.PxArticulationCachePtr pvk_in_cache = cache;
            physx.PxArticulationCachePtr pvk_in_initialState = initialState;
            float* pvk_in_jointTorque = jointTorque;
            uint pvk_in_maxIter = maxIter;
            return bool_const_physx_PxArticulationReducedCoordinate_computeLambda_physx_PxArticulationCachePtr_physx_PxArticulationCachePtr_float_uint_CC(pvk_in_this, pvk_in_cache, pvk_in_initialState, pvk_in_jointTorque, pvk_in_maxIter);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_const_physx_PxArticulationReducedCoordinate_computeGeneralizedMassMatrix_physx_PxArticulationCachePtr_(physx.PxArticulationReducedCoordinatePtr pvk_this, physx.PxArticulationCachePtr pvk_cache);
        
        public void computeGeneralizedMassMatrix(physx.PxArticulationCachePtr cache) {
            physx.PxArticulationReducedCoordinatePtr pvk_in_this = this;
            physx.PxArticulationCachePtr pvk_in_cache = cache;
            void_const_physx_PxArticulationReducedCoordinate_computeGeneralizedMassMatrix_physx_PxArticulationCachePtr_(pvk_in_this, pvk_in_cache);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern uint uint_const_physx_PxArticulationReducedCoordinate_getNbLoopJoints(physx.PxArticulationReducedCoordinatePtr pvk_this);
        
        public uint getNbLoopJoints() {
            physx.PxArticulationReducedCoordinatePtr pvk_in_this = this;
            return uint_const_physx_PxArticulationReducedCoordinate_getNbLoopJoints(pvk_in_this);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern uint uint_const_physx_PxArticulationReducedCoordinate_getCoefficentMatrixSize(physx.PxArticulationReducedCoordinatePtr pvk_this);
        
        public uint getCoefficentMatrixSize() {
            physx.PxArticulationReducedCoordinatePtr pvk_in_this = this;
            return uint_const_physx_PxArticulationReducedCoordinate_getCoefficentMatrixSize(pvk_in_this);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxArticulationReducedCoordinate_teleportRootLink_physx_PxTransform_bool_(physx.PxArticulationReducedCoordinatePtr pvk_this, physx.PxTransform* pvk_pose, bool pvk_autowake);
        
        public void teleportRootLink(physx.PxTransform* pose, bool autowake) {
            physx.PxArticulationReducedCoordinatePtr pvk_in_this = this;
            physx.PxTransform* pvk_in_pose = pose;
            bool pvk_in_autowake = autowake;
            void_physx_PxArticulationReducedCoordinate_teleportRootLink_physx_PxTransform_bool_(pvk_in_this, pvk_in_pose, pvk_in_autowake);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxArticulationReducedCoordinate_applyCache_physx_PxArticulationCachePtr_PxArticulationCacheFlagsPtr_C(physx.PxArticulationReducedCoordinatePtr pvk_this, physx.PxArticulationCachePtr pvk_cache, PxArticulationCacheFlagsPtr pvk_flag);
        
        public void applyCache(physx.PxArticulationCachePtr cache, PxArticulationCacheFlagsPtr flag) {
            physx.PxArticulationReducedCoordinatePtr pvk_in_this = this;
            physx.PxArticulationCachePtr pvk_in_cache = cache;
            PxArticulationCacheFlagsPtr pvk_in_flag = flag;
            void_physx_PxArticulationReducedCoordinate_applyCache_physx_PxArticulationCachePtr_PxArticulationCacheFlagsPtr_C(pvk_in_this, pvk_in_cache, pvk_in_flag);
        }
        
        public void teleportRootLink(physx.PxTransform pose, bool autowake) {
            teleportRootLink(&pose, autowake);
        }
        public static implicit operator physx.PxArticulationBasePtr(PxArticulationReducedCoordinatePtr obj) => *(physx.PxArticulationBasePtr*)&obj;
        public static explicit operator PxArticulationReducedCoordinatePtr(physx.PxArticulationBasePtr obj) => *(PxArticulationReducedCoordinatePtr*)&obj;
        public static implicit operator physx.PxBasePtr(PxArticulationReducedCoordinatePtr obj) => *(physx.PxBasePtr*)&obj;
        public static explicit operator PxArticulationReducedCoordinatePtr(physx.PxBasePtr obj) => *(PxArticulationReducedCoordinatePtr*)&obj;
    
        // PIPING
        public physx.PxScenePtr getScene(){return((physx.PxArticulationBasePtr)this).getScene();}
        public void setSolverIterationCounts(uint minPositionIters, uint minVelocityIters=1){((physx.PxArticulationBasePtr)this).setSolverIterationCounts(minPositionIters, minVelocityIters);}
        public void getSolverIterationCounts(uint* minPositionIters, uint* minVelocityIters){((physx.PxArticulationBasePtr)this).getSolverIterationCounts(minPositionIters, minVelocityIters);}
        public bool isSleeping(){return((physx.PxArticulationBasePtr)this).isSleeping();}
        public void setSleepThreshold(float threshold){((physx.PxArticulationBasePtr)this).setSleepThreshold(threshold);}
        public float getSleepThreshold(){return((physx.PxArticulationBasePtr)this).getSleepThreshold();}
        public void setStabilizationThreshold(float threshold){((physx.PxArticulationBasePtr)this).setStabilizationThreshold(threshold);}
        public float getStabilizationThreshold(){return((physx.PxArticulationBasePtr)this).getStabilizationThreshold();}
        public void setWakeCounter(float wakeCounterValue){((physx.PxArticulationBasePtr)this).setWakeCounter(wakeCounterValue);}
        public float getWakeCounter(){return((physx.PxArticulationBasePtr)this).getWakeCounter();}
        public void wakeUp(){((physx.PxArticulationBasePtr)this).wakeUp();}
        public void putToSleep(){((physx.PxArticulationBasePtr)this).putToSleep();}
        public physx.PxArticulationLinkPtr createLink(physx.PxArticulationLinkPtr parent, physx.PxTransform* pose){return((physx.PxArticulationBasePtr)this).createLink(parent, pose);}
        public uint getNbLinks(){return((physx.PxArticulationBasePtr)this).getNbLinks();}
        public uint getLinks(physx.PxArticulationLinkPtr* userBuffer, uint bufferSize, uint startIndex=0){return((physx.PxArticulationBasePtr)this).getLinks(userBuffer, bufferSize, startIndex);}
        public void setName(string name){((physx.PxArticulationBasePtr)this).setName(name);}
        public string getName(){return((physx.PxArticulationBasePtr)this).getName();}
        public physx.PxBounds3 getWorldBounds(float inflation=1.01f){return((physx.PxArticulationBasePtr)this).getWorldBounds(inflation);}
        public physx.PxAggregatePtr getAggregate(){return((physx.PxArticulationBasePtr)this).getAggregate();}
        public physx.PxArticulationBasePtr.Enum getType(){return((physx.PxArticulationBasePtr)this).getType();}
        public physx.PxArticulationJointBasePtr createArticulationJoint(physx.PxArticulationLinkPtr parent, physx.PxTransform* parentFrame, physx.PxArticulationLinkPtr child, physx.PxTransform* childFrame){return((physx.PxArticulationBasePtr)this).createArticulationJoint(parent, parentFrame, child, childFrame);}
        public void releaseArticulationJoint(physx.PxArticulationJointBasePtr joint){((physx.PxArticulationBasePtr)this).releaseArticulationJoint(joint);}
        public void setSolverIterationCounts(uint minPositionIters){((physx.PxArticulationBasePtr)this).setSolverIterationCounts(minPositionIters);}
        public physx.PxArticulationLinkPtr createLink(physx.PxArticulationLinkPtr parent, physx.PxTransform pose){return((physx.PxArticulationBasePtr)this).createLink(parent, &pose);}
        public uint getLinks(physx.PxArticulationLinkPtr* userBuffer, uint bufferSize){return((physx.PxArticulationBasePtr)this).getLinks(userBuffer, bufferSize);}
        public physx.PxBounds3 getWorldBounds(){return((physx.PxArticulationBasePtr)this).getWorldBounds();}
        public physx.PxArticulationJointBasePtr createArticulationJoint(physx.PxArticulationLinkPtr parent, physx.PxTransform parentFrame, physx.PxArticulationLinkPtr child, physx.PxTransform childFrame){return((physx.PxArticulationBasePtr)this).createArticulationJoint(parent, &parentFrame, child, &childFrame);}
        public string getConcreteTypeName(){return((physx.PxBasePtr)this).getConcreteTypeName();}
        public ushort getConcreteType(){return((physx.PxBasePtr)this).getConcreteType();}
        public void setBaseFlag(physx.PxBaseFlagEnum flag, bool value){((physx.PxBasePtr)this).setBaseFlag(flag, value);}
        public void setBaseFlags(PxBaseFlagsPtr inFlags){((physx.PxBasePtr)this).setBaseFlags(inFlags);}
        public PxBaseFlagsPtr getBaseFlags_New(){return((physx.PxBasePtr)this).getBaseFlags_New();}
        public bool isReleasable(){return((physx.PxBasePtr)this).isReleasable();}
    }
    
}
