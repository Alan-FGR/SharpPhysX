// Generated by minBND 5.1.94.90 - Â© github.com/Alan-FGR
using System;
using System.Runtime.InteropServices;
using static minBND_pinvokes;

public static unsafe partial class physx {

    public static physx.PxBaseFlagsPtr OpAnd_New(physx.PxBaseFlag a, physx.PxBaseFlagsPtr b) {
        physx.PxBaseFlag pvk_in_a = a;
        physx.PxBaseFlagsPtr pvk_in_b = b;
        return PxBaseFlagsPtr_operator_Ptr_Amp_PxBaseFlag_PxBaseFlagsPtr_(pvk_in_a, pvk_in_b);
    }

    public static physx.PxHeightFieldFlagsPtr OpAnd_New(physx.PxHeightFieldFlag a, physx.PxHeightFieldFlagsPtr b) {
        physx.PxHeightFieldFlag pvk_in_a = a;
        physx.PxHeightFieldFlagsPtr pvk_in_b = b;
        return PxHeightFieldFlagsPtr_operator_Ptr_Amp_PxHeightFieldFlag_PxHeightFieldFlagsPtr_(pvk_in_a, pvk_in_b);
    }

    public static physx.PxTriangleMeshFlagsPtr OpAnd_New(physx.PxTriangleMeshFlag a, physx.PxTriangleMeshFlagsPtr b) {
        physx.PxTriangleMeshFlag pvk_in_a = a;
        physx.PxTriangleMeshFlagsPtr pvk_in_b = b;
        return PxTriangleMeshFlagsPtr_operator_Ptr_Amp_PxTriangleMeshFlag_PxTriangleMeshFlagsPtr_(pvk_in_a, pvk_in_b);
    }

    public static physx.PxSceneFlagsPtr OpAnd_New(physx.PxSceneFlag a, physx.PxSceneFlagsPtr b) {
        physx.PxSceneFlag pvk_in_a = a;
        physx.PxSceneFlagsPtr pvk_in_b = b;
        return PxSceneFlagsPtr_operator_Ptr_Amp_PxSceneFlag_PxSceneFlagsPtr_(pvk_in_a, pvk_in_b);
    }

    public static physx.PxConvexMeshGeometryFlagsPtr OpAnd_New(physx.PxConvexMeshGeometryFlag a, physx.PxConvexMeshGeometryFlagsPtr b) {
        physx.PxConvexMeshGeometryFlag pvk_in_a = a;
        physx.PxConvexMeshGeometryFlagsPtr pvk_in_b = b;
        return PxConvexMeshGeometryFlagsPtr_operator_Ptr_Amp_PxConvexMeshGeometryFlag_PxConvexMeshGeometryFlagsPtr_(pvk_in_a, pvk_in_b);
    }

    public static physx.PxMeshGeometryFlagsPtr OpAnd_New(physx.PxMeshGeometryFlag a, physx.PxMeshGeometryFlagsPtr b) {
        physx.PxMeshGeometryFlag pvk_in_a = a;
        physx.PxMeshGeometryFlagsPtr pvk_in_b = b;
        return PxMeshGeometryFlagsPtr_operator_Ptr_Amp_PxMeshGeometryFlag_PxMeshGeometryFlagsPtr_(pvk_in_a, pvk_in_b);
    }

    public static physx.PxMaterialFlagsPtr OpAnd_New(physx.PxMaterialFlag a, physx.PxMaterialFlagsPtr b) {
        physx.PxMaterialFlag pvk_in_a = a;
        physx.PxMaterialFlagsPtr pvk_in_b = b;
        return PxMaterialFlagsPtr_operator_Ptr_Amp_PxMaterialFlag_PxMaterialFlagsPtr_(pvk_in_a, pvk_in_b);
    }

    public static physx.PxShapeFlagsPtr OpAnd_New(physx.PxShapeFlag a, physx.PxShapeFlagsPtr b) {
        physx.PxShapeFlag pvk_in_a = a;
        physx.PxShapeFlagsPtr pvk_in_b = b;
        return PxShapeFlagsPtr_operator_Ptr_Amp_PxShapeFlag_PxShapeFlagsPtr_(pvk_in_a, pvk_in_b);
    }

    public static physx.PxConstraintFlagsPtr OpAnd_New(physx.PxConstraintFlag a, physx.PxConstraintFlagsPtr b) {
        physx.PxConstraintFlag pvk_in_a = a;
        physx.PxConstraintFlagsPtr pvk_in_b = b;
        return PxConstraintFlagsPtr_operator_Ptr_Amp_PxConstraintFlag_PxConstraintFlagsPtr_(pvk_in_a, pvk_in_b);
    }

    public static physx.PxActorFlagsPtr OpAnd_New(physx.PxActorFlag a, physx.PxActorFlagsPtr b) {
        physx.PxActorFlag pvk_in_a = a;
        physx.PxActorFlagsPtr pvk_in_b = b;
        return PxActorFlagsPtr_operator_Ptr_Amp_PxActorFlag_PxActorFlagsPtr_(pvk_in_a, pvk_in_b);
    }

    public static physx.PxRigidBodyFlagsPtr OpAnd_New(physx.PxRigidBodyFlag a, physx.PxRigidBodyFlagsPtr b) {
        physx.PxRigidBodyFlag pvk_in_a = a;
        physx.PxRigidBodyFlagsPtr pvk_in_b = b;
        return PxRigidBodyFlagsPtr_operator_Ptr_Amp_PxRigidBodyFlag_PxRigidBodyFlagsPtr_(pvk_in_a, pvk_in_b);
    }

    public static physx.PxActorTypeFlagsPtr OpAnd_New(physx.PxActorTypeFlag a, physx.PxActorTypeFlagsPtr b) {
        physx.PxActorTypeFlag pvk_in_a = a;
        physx.PxActorTypeFlagsPtr pvk_in_b = b;
        return PxActorTypeFlagsPtr_operator_Ptr_Amp_PxActorTypeFlag_PxActorTypeFlagsPtr_(pvk_in_a, pvk_in_b);
    }

    public static physx.PxFilterFlagsPtr OpAnd_New(physx.PxFilterFlag a, physx.PxFilterFlagsPtr b) {
        physx.PxFilterFlag pvk_in_a = a;
        physx.PxFilterFlagsPtr pvk_in_b = b;
        return PxFilterFlagsPtr_operator_Ptr_Amp_PxFilterFlag_PxFilterFlagsPtr_(pvk_in_a, pvk_in_b);
    }

    public static physx.PxPairFlagsPtr OpAnd_New(physx.PxPairFlag a, physx.PxPairFlagsPtr b) {
        physx.PxPairFlag pvk_in_a = a;
        physx.PxPairFlagsPtr pvk_in_b = b;
        return PxPairFlagsPtr_operator_Ptr_Amp_PxPairFlag_PxPairFlagsPtr_(pvk_in_a, pvk_in_b);
    }

    public static physx.PxHitFlags OpAnd(physx.PxHitFlag a, physx.PxHitFlags* b) {
        physx.PxHitFlags RetRef;
        physx.PxHitFlag pvk_in_a = a;
        physx.PxHitFlags* pvk_in_b = b;
        PxHitFlags_operator_Ptr_Amp_PxHitFlag_PxHitFlags_(&RetRef, pvk_in_a, pvk_in_b);
        return RetRef;
    }

    public static physx.PxQueryFlagsPtr OpAnd_New(physx.PxQueryFlag a, physx.PxQueryFlagsPtr b) {
        physx.PxQueryFlag pvk_in_a = a;
        physx.PxQueryFlagsPtr pvk_in_b = b;
        return PxQueryFlagsPtr_operator_Ptr_Amp_PxQueryFlag_PxQueryFlagsPtr_(pvk_in_a, pvk_in_b);
    }

    public static physx.PxPvdSceneFlagsPtr OpAnd_New(physx.PxPvdSceneFlag a, physx.PxPvdSceneFlagsPtr b) {
        physx.PxPvdSceneFlag pvk_in_a = a;
        physx.PxPvdSceneFlagsPtr pvk_in_b = b;
        return PxPvdSceneFlagsPtr_operator_Ptr_Amp_PxPvdSceneFlag_PxPvdSceneFlagsPtr_(pvk_in_a, pvk_in_b);
    }

    public static physx.PxRigidDynamicLockFlagsPtr OpAnd_New(physx.PxRigidDynamicLockFlag a, physx.PxRigidDynamicLockFlagsPtr b) {
        physx.PxRigidDynamicLockFlag pvk_in_a = a;
        physx.PxRigidDynamicLockFlagsPtr pvk_in_b = b;
        return PxRigidDynamicLockFlagsPtr_operator_Ptr_Amp_PxRigidDynamicLockFlag_PxRigidDynamicLockFlagsPtr_(pvk_in_a, pvk_in_b);
    }

    public static physx.PxArticulationFlagsPtr OpAnd_New(physx.PxArticulationFlag a, physx.PxArticulationFlagsPtr b) {
        physx.PxArticulationFlag pvk_in_a = a;
        physx.PxArticulationFlagsPtr pvk_in_b = b;
        return PxArticulationFlagsPtr_operator_Ptr_Amp_PxArticulationFlag_PxArticulationFlagsPtr_(pvk_in_a, pvk_in_b);
    }

    public static physx.PxArticulationCacheFlagsPtr OpAnd_New(physx.PxArticulationCachePtr.Enum a, physx.PxArticulationCacheFlagsPtr b) {
        physx.PxArticulationCachePtr.Enum pvk_in_a = a;
        physx.PxArticulationCacheFlagsPtr pvk_in_b = b;
        return PxArticulationCacheFlagsPtr_operator_Ptr_Amp_PxArticulationCachePtr_Enum_PxArticulationCacheFlagsPtr_(pvk_in_a, pvk_in_b);
    }

    public static physx.PxDeletionEventFlagsPtr OpAnd_New(physx.PxDeletionEventFlag a, physx.PxDeletionEventFlagsPtr b) {
        physx.PxDeletionEventFlag pvk_in_a = a;
        physx.PxDeletionEventFlagsPtr pvk_in_b = b;
        return PxDeletionEventFlagsPtr_operator_Ptr_Amp_PxDeletionEventFlag_PxDeletionEventFlagsPtr_(pvk_in_a, pvk_in_b);
    }

    public static physx.Px1DConstraintFlagsPtr OpAnd_New(physx.Px1DConstraintFlagPtr.Type a, physx.Px1DConstraintFlagsPtr b) {
        physx.Px1DConstraintFlagPtr.Type pvk_in_a = a;
        physx.Px1DConstraintFlagsPtr pvk_in_b = b;
        return Px1DConstraintFlagsPtr_operator_Ptr_Amp_Px1DConstraintFlagPtr_Type_Px1DConstraintFlagsPtr_(pvk_in_a, pvk_in_b);
    }

    public static physx.PxFlags_PxArticulationAxis_bytePtr OpAnd_New(physx.PxArticulationAxis a, physx.PxFlags_PxArticulationAxis_bytePtr b) {
        physx.PxArticulationAxis pvk_in_a = a;
        physx.PxFlags_PxArticulationAxis_bytePtr pvk_in_b = b;
        return PxFlags_PxArticulationAxis_bytePtr_operator_Ptr_Amp_PxArticulationAxis_PxFlags_PxArticulationAxis_bytePtr_(pvk_in_a, pvk_in_b);
    }

    public static physx.PxArticulationMotionsPtr OpAnd_New(physx.PxArticulationMotion a, physx.PxArticulationMotionsPtr b) {
        physx.PxArticulationMotion pvk_in_a = a;
        physx.PxArticulationMotionsPtr pvk_in_b = b;
        return PxArticulationMotionsPtr_operator_Ptr_Amp_PxArticulationMotion_PxArticulationMotionsPtr_(pvk_in_a, pvk_in_b);
    }

    public unsafe partial struct PxBaseFlagsPtr {
        private System.IntPtr nativePtr_;

        public static void Free(physx.PxBaseFlagsPtr ptr){
            Freer_physx_PxBaseFlagsPtr(ptr);
        }
        public void Free(){
            Freer_physx_PxBaseFlagsPtr(this);
        }

        public static physx.PxBaseFlagsPtr New(physx.PxEMPTY _) {
            physx.PxEMPTY pvk_in__ = _;
            return Ctor_PxBaseFlagsPtr_PxEMPTY(pvk_in__);
        }

        public static physx.PxBaseFlagsPtr New() {
            return Ctor_PxBaseFlagsPtr_();
        }

        public static physx.PxBaseFlagsPtr New(physx.PxBaseFlag e) {
            physx.PxBaseFlag pvk_in_e = e;
            return Ctor_PxBaseFlagsPtr_PxBaseFlag(pvk_in_e);
        }

        public static physx.PxBaseFlagsPtr New(physx.PxBaseFlagsPtr f) {
            physx.PxBaseFlagsPtr pvk_in_f = f;
            return Ctor_PxBaseFlagsPtr_PxBaseFlagsPtr(pvk_in_f);
        }

        public static physx.PxBaseFlagsPtr New(ushort b) {
            ushort pvk_in_b = b;
            return Ctor_PxBaseFlagsPtr_ushort(pvk_in_b);
        }

        public bool isSet(physx.PxBaseFlag e) {
            physx.PxBaseFlagsPtr pvk_in_this = this;
            physx.PxBaseFlag pvk_in_e = e;
            return bool_const_PxBaseFlagsPtr_isSetPtr_PxBaseFlag_(pvk_in_this, pvk_in_e);
        }

        public physx.PxBaseFlagsPtr set(physx.PxBaseFlag e) {
            physx.PxBaseFlagsPtr pvk_in_this = this;
            physx.PxBaseFlag pvk_in_e = e;
            return PxBaseFlagsPtr_PxBaseFlagsPtr_setPtr_PxBaseFlag_(pvk_in_this, pvk_in_e);
        }

        public static bool OpEquals(physx.PxBaseFlagsPtr lhs, physx.PxBaseFlag e) {
            physx.PxBaseFlagsPtr pvk_in_lhs = lhs;
            physx.PxBaseFlag pvk_in_e = e;
            return bool_const_PxBaseFlagsPtr_operator_Ptr_EqualEqual_PxBaseFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static bool OpEquals(physx.PxBaseFlagsPtr lhs, physx.PxBaseFlagsPtr f) {
            physx.PxBaseFlagsPtr pvk_in_lhs = lhs;
            physx.PxBaseFlagsPtr pvk_in_f = f;
            return bool_const_PxBaseFlagsPtr_operator_Ptr_EqualEqual_PxBaseFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static bool OpEquals(physx.PxBaseFlagsPtr lhs, bool b) {
            physx.PxBaseFlagsPtr pvk_in_lhs = lhs;
            bool pvk_in_b = b;
            return bool_const_PxBaseFlagsPtr_operator_Ptr_EqualEqual_bool_(pvk_in_lhs, pvk_in_b);
        }

        public static bool OpExclaimEqual(physx.PxBaseFlagsPtr lhs, physx.PxBaseFlag e) {
            physx.PxBaseFlagsPtr pvk_in_lhs = lhs;
            physx.PxBaseFlag pvk_in_e = e;
            return bool_const_PxBaseFlagsPtr_operator_Ptr_ExclaimEqual_PxBaseFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static bool OpExclaimEqual(physx.PxBaseFlagsPtr lhs, physx.PxBaseFlagsPtr f) {
            physx.PxBaseFlagsPtr pvk_in_lhs = lhs;
            physx.PxBaseFlagsPtr pvk_in_f = f;
            return bool_const_PxBaseFlagsPtr_operator_Ptr_ExclaimEqual_PxBaseFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxBaseFlagsPtr OpEqual(physx.PxBaseFlagsPtr lhs, physx.PxBaseFlagsPtr f) {
            physx.PxBaseFlagsPtr pvk_in_lhs = lhs;
            physx.PxBaseFlagsPtr pvk_in_f = f;
            return PxBaseFlagsPtr_PxBaseFlagsPtr_operator_Ptr_Equal_PxBaseFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxBaseFlagsPtr OpEqual(physx.PxBaseFlagsPtr lhs, physx.PxBaseFlag e) {
            physx.PxBaseFlagsPtr pvk_in_lhs = lhs;
            physx.PxBaseFlag pvk_in_e = e;
            return PxBaseFlagsPtr_PxBaseFlagsPtr_operator_Ptr_Equal_PxBaseFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxBaseFlagsPtr OpPipeEqual(physx.PxBaseFlagsPtr lhs, physx.PxBaseFlag e) {
            physx.PxBaseFlagsPtr pvk_in_lhs = lhs;
            physx.PxBaseFlag pvk_in_e = e;
            return PxBaseFlagsPtr_PxBaseFlagsPtr_operator_Ptr_PipeEqual_PxBaseFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxBaseFlagsPtr OpPipeEqual(physx.PxBaseFlagsPtr lhs, physx.PxBaseFlagsPtr f) {
            physx.PxBaseFlagsPtr pvk_in_lhs = lhs;
            physx.PxBaseFlagsPtr pvk_in_f = f;
            return PxBaseFlagsPtr_PxBaseFlagsPtr_operator_Ptr_PipeEqual_PxBaseFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxBaseFlagsPtr OpPipe_New(physx.PxBaseFlagsPtr lhs, physx.PxBaseFlag e) {
            physx.PxBaseFlagsPtr pvk_in_lhs = lhs;
            physx.PxBaseFlag pvk_in_e = e;
            return PxBaseFlagsPtr_const_PxBaseFlagsPtr_operator_Ptr_Pipe_PxBaseFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxBaseFlagsPtr OpPipe_New(physx.PxBaseFlagsPtr lhs, physx.PxBaseFlagsPtr f) {
            physx.PxBaseFlagsPtr pvk_in_lhs = lhs;
            physx.PxBaseFlagsPtr pvk_in_f = f;
            return PxBaseFlagsPtr_const_PxBaseFlagsPtr_operator_Ptr_Pipe_PxBaseFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxBaseFlagsPtr OpAndEqual(physx.PxBaseFlagsPtr lhs, physx.PxBaseFlag e) {
            physx.PxBaseFlagsPtr pvk_in_lhs = lhs;
            physx.PxBaseFlag pvk_in_e = e;
            return PxBaseFlagsPtr_PxBaseFlagsPtr_operator_Ptr_AmpEqual_PxBaseFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxBaseFlagsPtr OpAndEqual(physx.PxBaseFlagsPtr lhs, physx.PxBaseFlagsPtr f) {
            physx.PxBaseFlagsPtr pvk_in_lhs = lhs;
            physx.PxBaseFlagsPtr pvk_in_f = f;
            return PxBaseFlagsPtr_PxBaseFlagsPtr_operator_Ptr_AmpEqual_PxBaseFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxBaseFlagsPtr OpAnd_New(physx.PxBaseFlagsPtr lhs, physx.PxBaseFlag e) {
            physx.PxBaseFlagsPtr pvk_in_lhs = lhs;
            physx.PxBaseFlag pvk_in_e = e;
            return PxBaseFlagsPtr_const_PxBaseFlagsPtr_operator_Ptr_Amp_PxBaseFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxBaseFlagsPtr OpAnd_New(physx.PxBaseFlagsPtr lhs, physx.PxBaseFlagsPtr f) {
            physx.PxBaseFlagsPtr pvk_in_lhs = lhs;
            physx.PxBaseFlagsPtr pvk_in_f = f;
            return PxBaseFlagsPtr_const_PxBaseFlagsPtr_operator_Ptr_Amp_PxBaseFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxBaseFlagsPtr OpCaretEqual(physx.PxBaseFlagsPtr lhs, physx.PxBaseFlag e) {
            physx.PxBaseFlagsPtr pvk_in_lhs = lhs;
            physx.PxBaseFlag pvk_in_e = e;
            return PxBaseFlagsPtr_PxBaseFlagsPtr_operator_Ptr_CaretEqual_PxBaseFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxBaseFlagsPtr OpCaretEqual(physx.PxBaseFlagsPtr lhs, physx.PxBaseFlagsPtr f) {
            physx.PxBaseFlagsPtr pvk_in_lhs = lhs;
            physx.PxBaseFlagsPtr pvk_in_f = f;
            return PxBaseFlagsPtr_PxBaseFlagsPtr_operator_Ptr_CaretEqual_PxBaseFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxBaseFlagsPtr OpCaret_New(physx.PxBaseFlagsPtr lhs, physx.PxBaseFlag e) {
            physx.PxBaseFlagsPtr pvk_in_lhs = lhs;
            physx.PxBaseFlag pvk_in_e = e;
            return PxBaseFlagsPtr_const_PxBaseFlagsPtr_operator_Ptr_Caret_PxBaseFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxBaseFlagsPtr OpCaret_New(physx.PxBaseFlagsPtr lhs, physx.PxBaseFlagsPtr f) {
            physx.PxBaseFlagsPtr pvk_in_lhs = lhs;
            physx.PxBaseFlagsPtr pvk_in_f = f;
            return PxBaseFlagsPtr_const_PxBaseFlagsPtr_operator_Ptr_Caret_PxBaseFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxBaseFlagsPtr OpTilde_New(physx.PxBaseFlagsPtr lhs) {
            physx.PxBaseFlagsPtr pvk_in_lhs = lhs;
            return PxBaseFlagsPtr_const_PxBaseFlagsPtr_operator_Ptr_Tilde(pvk_in_lhs);
        }

        public static bool ToBool(physx.PxBaseFlagsPtr lhs) {
            physx.PxBaseFlagsPtr pvk_in_lhs = lhs;
            return bool_const_PxBaseFlagsPtr_operator_boolPtr_Conversion(pvk_in_lhs);
        }

        public static byte ToByte(physx.PxBaseFlagsPtr lhs) {
            physx.PxBaseFlagsPtr pvk_in_lhs = lhs;
            return byte_const_PxBaseFlagsPtr_operator_unsigned_charPtr_Conversion(pvk_in_lhs);
        }

        public static ushort ToUShort(physx.PxBaseFlagsPtr lhs) {
            physx.PxBaseFlagsPtr pvk_in_lhs = lhs;
            return ushort_const_PxBaseFlagsPtr_operator_unsigned_shortPtr_Conversion(pvk_in_lhs);
        }

        public static uint ToUInt(physx.PxBaseFlagsPtr lhs) {
            physx.PxBaseFlagsPtr pvk_in_lhs = lhs;
            return uint_const_PxBaseFlagsPtr_operator_unsigned_intPtr_Conversion(pvk_in_lhs);
        }

        public void clear(physx.PxBaseFlag e) {
            physx.PxBaseFlagsPtr pvk_in_this = this;
            physx.PxBaseFlag pvk_in_e = e;
            void_PxBaseFlagsPtr_clearPtr_PxBaseFlag_(pvk_in_this, pvk_in_e);
        }

        public static bool operator==(physx.PxBaseFlagsPtr lhs, physx.PxBaseFlag e) {
            return physx.PxBaseFlagsPtr.OpEquals(lhs, e);
        }
        public static bool operator==(physx.PxBaseFlagsPtr lhs, physx.PxBaseFlagsPtr f) {
            return physx.PxBaseFlagsPtr.OpEquals(lhs, f);
        }
        public static bool operator==(physx.PxBaseFlagsPtr lhs, bool b) {
            return physx.PxBaseFlagsPtr.OpEquals(lhs, b);
        }
        public static bool operator!=(physx.PxBaseFlagsPtr lhs, bool b) {
            return !(physx.PxBaseFlagsPtr.OpEquals(lhs, b)); // Matching Operator
        }
        public static bool operator!=(physx.PxBaseFlagsPtr lhs, physx.PxBaseFlag e) {
            return physx.PxBaseFlagsPtr.OpExclaimEqual(lhs, e);
        }
        public static bool operator!=(physx.PxBaseFlagsPtr lhs, physx.PxBaseFlagsPtr f) {
            return physx.PxBaseFlagsPtr.OpExclaimEqual(lhs, f);
        }
    }

    public unsafe partial struct PxHeightFieldFlagsPtr {
        private System.IntPtr nativePtr_;

        public static void Free(physx.PxHeightFieldFlagsPtr ptr){
            Freer_physx_PxHeightFieldFlagsPtr(ptr);
        }
        public void Free(){
            Freer_physx_PxHeightFieldFlagsPtr(this);
        }

        public static physx.PxHeightFieldFlagsPtr New(physx.PxEMPTY _) {
            physx.PxEMPTY pvk_in__ = _;
            return Ctor_PxHeightFieldFlagsPtr_PxEMPTY(pvk_in__);
        }

        public static physx.PxHeightFieldFlagsPtr New() {
            return Ctor_PxHeightFieldFlagsPtr_();
        }

        public static physx.PxHeightFieldFlagsPtr New(physx.PxHeightFieldFlag e) {
            physx.PxHeightFieldFlag pvk_in_e = e;
            return Ctor_PxHeightFieldFlagsPtr_PxHeightFieldFlag(pvk_in_e);
        }

        public static physx.PxHeightFieldFlagsPtr New(physx.PxHeightFieldFlagsPtr f) {
            physx.PxHeightFieldFlagsPtr pvk_in_f = f;
            return Ctor_PxHeightFieldFlagsPtr_PxHeightFieldFlagsPtr(pvk_in_f);
        }

        public static physx.PxHeightFieldFlagsPtr New(ushort b) {
            ushort pvk_in_b = b;
            return Ctor_PxHeightFieldFlagsPtr_ushort(pvk_in_b);
        }

        public bool isSet(physx.PxHeightFieldFlag e) {
            physx.PxHeightFieldFlagsPtr pvk_in_this = this;
            physx.PxHeightFieldFlag pvk_in_e = e;
            return bool_const_PxHeightFieldFlagsPtr_isSetPtr_PxHeightFieldFlag_(pvk_in_this, pvk_in_e);
        }

        public physx.PxHeightFieldFlagsPtr set(physx.PxHeightFieldFlag e) {
            physx.PxHeightFieldFlagsPtr pvk_in_this = this;
            physx.PxHeightFieldFlag pvk_in_e = e;
            return PxHeightFieldFlagsPtr_PxHeightFieldFlagsPtr_setPtr_PxHeightFieldFlag_(pvk_in_this, pvk_in_e);
        }

        public static bool OpEquals(physx.PxHeightFieldFlagsPtr lhs, physx.PxHeightFieldFlag e) {
            physx.PxHeightFieldFlagsPtr pvk_in_lhs = lhs;
            physx.PxHeightFieldFlag pvk_in_e = e;
            return bool_const_PxHeightFieldFlagsPtr_operator_Ptr_EqualEqual_PxHeightFieldFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static bool OpEquals(physx.PxHeightFieldFlagsPtr lhs, physx.PxHeightFieldFlagsPtr f) {
            physx.PxHeightFieldFlagsPtr pvk_in_lhs = lhs;
            physx.PxHeightFieldFlagsPtr pvk_in_f = f;
            return bool_const_PxHeightFieldFlagsPtr_operator_Ptr_EqualEqual_PxHeightFieldFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static bool OpEquals(physx.PxHeightFieldFlagsPtr lhs, bool b) {
            physx.PxHeightFieldFlagsPtr pvk_in_lhs = lhs;
            bool pvk_in_b = b;
            return bool_const_PxHeightFieldFlagsPtr_operator_Ptr_EqualEqual_bool_(pvk_in_lhs, pvk_in_b);
        }

        public static bool OpExclaimEqual(physx.PxHeightFieldFlagsPtr lhs, physx.PxHeightFieldFlag e) {
            physx.PxHeightFieldFlagsPtr pvk_in_lhs = lhs;
            physx.PxHeightFieldFlag pvk_in_e = e;
            return bool_const_PxHeightFieldFlagsPtr_operator_Ptr_ExclaimEqual_PxHeightFieldFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static bool OpExclaimEqual(physx.PxHeightFieldFlagsPtr lhs, physx.PxHeightFieldFlagsPtr f) {
            physx.PxHeightFieldFlagsPtr pvk_in_lhs = lhs;
            physx.PxHeightFieldFlagsPtr pvk_in_f = f;
            return bool_const_PxHeightFieldFlagsPtr_operator_Ptr_ExclaimEqual_PxHeightFieldFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxHeightFieldFlagsPtr OpEqual(physx.PxHeightFieldFlagsPtr lhs, physx.PxHeightFieldFlagsPtr f) {
            physx.PxHeightFieldFlagsPtr pvk_in_lhs = lhs;
            physx.PxHeightFieldFlagsPtr pvk_in_f = f;
            return PxHeightFieldFlagsPtr_PxHeightFieldFlagsPtr_operator_Ptr_Equal_PxHeightFieldFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxHeightFieldFlagsPtr OpEqual(physx.PxHeightFieldFlagsPtr lhs, physx.PxHeightFieldFlag e) {
            physx.PxHeightFieldFlagsPtr pvk_in_lhs = lhs;
            physx.PxHeightFieldFlag pvk_in_e = e;
            return PxHeightFieldFlagsPtr_PxHeightFieldFlagsPtr_operator_Ptr_Equal_PxHeightFieldFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxHeightFieldFlagsPtr OpPipeEqual(physx.PxHeightFieldFlagsPtr lhs, physx.PxHeightFieldFlag e) {
            physx.PxHeightFieldFlagsPtr pvk_in_lhs = lhs;
            physx.PxHeightFieldFlag pvk_in_e = e;
            return PxHeightFieldFlagsPtr_PxHeightFieldFlagsPtr_operator_Ptr_PipeEqual_PxHeightFieldFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxHeightFieldFlagsPtr OpPipeEqual(physx.PxHeightFieldFlagsPtr lhs, physx.PxHeightFieldFlagsPtr f) {
            physx.PxHeightFieldFlagsPtr pvk_in_lhs = lhs;
            physx.PxHeightFieldFlagsPtr pvk_in_f = f;
            return PxHeightFieldFlagsPtr_PxHeightFieldFlagsPtr_operator_Ptr_PipeEqual_PxHeightFieldFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxHeightFieldFlagsPtr OpPipe_New(physx.PxHeightFieldFlagsPtr lhs, physx.PxHeightFieldFlag e) {
            physx.PxHeightFieldFlagsPtr pvk_in_lhs = lhs;
            physx.PxHeightFieldFlag pvk_in_e = e;
            return PxHeightFieldFlagsPtr_const_PxHeightFieldFlagsPtr_operator_Ptr_Pipe_PxHeightFieldFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxHeightFieldFlagsPtr OpPipe_New(physx.PxHeightFieldFlagsPtr lhs, physx.PxHeightFieldFlagsPtr f) {
            physx.PxHeightFieldFlagsPtr pvk_in_lhs = lhs;
            physx.PxHeightFieldFlagsPtr pvk_in_f = f;
            return PxHeightFieldFlagsPtr_const_PxHeightFieldFlagsPtr_operator_Ptr_Pipe_PxHeightFieldFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxHeightFieldFlagsPtr OpAndEqual(physx.PxHeightFieldFlagsPtr lhs, physx.PxHeightFieldFlag e) {
            physx.PxHeightFieldFlagsPtr pvk_in_lhs = lhs;
            physx.PxHeightFieldFlag pvk_in_e = e;
            return PxHeightFieldFlagsPtr_PxHeightFieldFlagsPtr_operator_Ptr_AmpEqual_PxHeightFieldFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxHeightFieldFlagsPtr OpAndEqual(physx.PxHeightFieldFlagsPtr lhs, physx.PxHeightFieldFlagsPtr f) {
            physx.PxHeightFieldFlagsPtr pvk_in_lhs = lhs;
            physx.PxHeightFieldFlagsPtr pvk_in_f = f;
            return PxHeightFieldFlagsPtr_PxHeightFieldFlagsPtr_operator_Ptr_AmpEqual_PxHeightFieldFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxHeightFieldFlagsPtr OpAnd_New(physx.PxHeightFieldFlagsPtr lhs, physx.PxHeightFieldFlag e) {
            physx.PxHeightFieldFlagsPtr pvk_in_lhs = lhs;
            physx.PxHeightFieldFlag pvk_in_e = e;
            return PxHeightFieldFlagsPtr_const_PxHeightFieldFlagsPtr_operator_Ptr_Amp_PxHeightFieldFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxHeightFieldFlagsPtr OpAnd_New(physx.PxHeightFieldFlagsPtr lhs, physx.PxHeightFieldFlagsPtr f) {
            physx.PxHeightFieldFlagsPtr pvk_in_lhs = lhs;
            physx.PxHeightFieldFlagsPtr pvk_in_f = f;
            return PxHeightFieldFlagsPtr_const_PxHeightFieldFlagsPtr_operator_Ptr_Amp_PxHeightFieldFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxHeightFieldFlagsPtr OpCaretEqual(physx.PxHeightFieldFlagsPtr lhs, physx.PxHeightFieldFlag e) {
            physx.PxHeightFieldFlagsPtr pvk_in_lhs = lhs;
            physx.PxHeightFieldFlag pvk_in_e = e;
            return PxHeightFieldFlagsPtr_PxHeightFieldFlagsPtr_operator_Ptr_CaretEqual_PxHeightFieldFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxHeightFieldFlagsPtr OpCaretEqual(physx.PxHeightFieldFlagsPtr lhs, physx.PxHeightFieldFlagsPtr f) {
            physx.PxHeightFieldFlagsPtr pvk_in_lhs = lhs;
            physx.PxHeightFieldFlagsPtr pvk_in_f = f;
            return PxHeightFieldFlagsPtr_PxHeightFieldFlagsPtr_operator_Ptr_CaretEqual_PxHeightFieldFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxHeightFieldFlagsPtr OpCaret_New(physx.PxHeightFieldFlagsPtr lhs, physx.PxHeightFieldFlag e) {
            physx.PxHeightFieldFlagsPtr pvk_in_lhs = lhs;
            physx.PxHeightFieldFlag pvk_in_e = e;
            return PxHeightFieldFlagsPtr_const_PxHeightFieldFlagsPtr_operator_Ptr_Caret_PxHeightFieldFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxHeightFieldFlagsPtr OpCaret_New(physx.PxHeightFieldFlagsPtr lhs, physx.PxHeightFieldFlagsPtr f) {
            physx.PxHeightFieldFlagsPtr pvk_in_lhs = lhs;
            physx.PxHeightFieldFlagsPtr pvk_in_f = f;
            return PxHeightFieldFlagsPtr_const_PxHeightFieldFlagsPtr_operator_Ptr_Caret_PxHeightFieldFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxHeightFieldFlagsPtr OpTilde_New(physx.PxHeightFieldFlagsPtr lhs) {
            physx.PxHeightFieldFlagsPtr pvk_in_lhs = lhs;
            return PxHeightFieldFlagsPtr_const_PxHeightFieldFlagsPtr_operator_Ptr_Tilde(pvk_in_lhs);
        }

        public static bool ToBool(physx.PxHeightFieldFlagsPtr lhs) {
            physx.PxHeightFieldFlagsPtr pvk_in_lhs = lhs;
            return bool_const_PxHeightFieldFlagsPtr_operator_boolPtr_Conversion(pvk_in_lhs);
        }

        public static byte ToByte(physx.PxHeightFieldFlagsPtr lhs) {
            physx.PxHeightFieldFlagsPtr pvk_in_lhs = lhs;
            return byte_const_PxHeightFieldFlagsPtr_operator_unsigned_charPtr_Conversion(pvk_in_lhs);
        }

        public static ushort ToUShort(physx.PxHeightFieldFlagsPtr lhs) {
            physx.PxHeightFieldFlagsPtr pvk_in_lhs = lhs;
            return ushort_const_PxHeightFieldFlagsPtr_operator_unsigned_shortPtr_Conversion(pvk_in_lhs);
        }

        public static uint ToUInt(physx.PxHeightFieldFlagsPtr lhs) {
            physx.PxHeightFieldFlagsPtr pvk_in_lhs = lhs;
            return uint_const_PxHeightFieldFlagsPtr_operator_unsigned_intPtr_Conversion(pvk_in_lhs);
        }

        public void clear(physx.PxHeightFieldFlag e) {
            physx.PxHeightFieldFlagsPtr pvk_in_this = this;
            physx.PxHeightFieldFlag pvk_in_e = e;
            void_PxHeightFieldFlagsPtr_clearPtr_PxHeightFieldFlag_(pvk_in_this, pvk_in_e);
        }

        public static bool operator==(physx.PxHeightFieldFlagsPtr lhs, physx.PxHeightFieldFlag e) {
            return physx.PxHeightFieldFlagsPtr.OpEquals(lhs, e);
        }
        public static bool operator==(physx.PxHeightFieldFlagsPtr lhs, physx.PxHeightFieldFlagsPtr f) {
            return physx.PxHeightFieldFlagsPtr.OpEquals(lhs, f);
        }
        public static bool operator==(physx.PxHeightFieldFlagsPtr lhs, bool b) {
            return physx.PxHeightFieldFlagsPtr.OpEquals(lhs, b);
        }
        public static bool operator!=(physx.PxHeightFieldFlagsPtr lhs, bool b) {
            return !(physx.PxHeightFieldFlagsPtr.OpEquals(lhs, b)); // Matching Operator
        }
        public static bool operator!=(physx.PxHeightFieldFlagsPtr lhs, physx.PxHeightFieldFlag e) {
            return physx.PxHeightFieldFlagsPtr.OpExclaimEqual(lhs, e);
        }
        public static bool operator!=(physx.PxHeightFieldFlagsPtr lhs, physx.PxHeightFieldFlagsPtr f) {
            return physx.PxHeightFieldFlagsPtr.OpExclaimEqual(lhs, f);
        }
    }

    public unsafe partial struct PxTriangleMeshFlagsPtr {
        private System.IntPtr nativePtr_;

        public static void Free(physx.PxTriangleMeshFlagsPtr ptr){
            Freer_physx_PxTriangleMeshFlagsPtr(ptr);
        }
        public void Free(){
            Freer_physx_PxTriangleMeshFlagsPtr(this);
        }

        public static physx.PxTriangleMeshFlagsPtr New(physx.PxEMPTY _) {
            physx.PxEMPTY pvk_in__ = _;
            return Ctor_PxTriangleMeshFlagsPtr_PxEMPTY(pvk_in__);
        }

        public static physx.PxTriangleMeshFlagsPtr New() {
            return Ctor_PxTriangleMeshFlagsPtr_();
        }

        public static physx.PxTriangleMeshFlagsPtr New(physx.PxTriangleMeshFlag e) {
            physx.PxTriangleMeshFlag pvk_in_e = e;
            return Ctor_PxTriangleMeshFlagsPtr_PxTriangleMeshFlag(pvk_in_e);
        }

        public static physx.PxTriangleMeshFlagsPtr New(physx.PxTriangleMeshFlagsPtr f) {
            physx.PxTriangleMeshFlagsPtr pvk_in_f = f;
            return Ctor_PxTriangleMeshFlagsPtr_PxTriangleMeshFlagsPtr(pvk_in_f);
        }

        public static physx.PxTriangleMeshFlagsPtr New(byte b) {
            byte pvk_in_b = b;
            return Ctor_PxTriangleMeshFlagsPtr_byte(pvk_in_b);
        }

        public bool isSet(physx.PxTriangleMeshFlag e) {
            physx.PxTriangleMeshFlagsPtr pvk_in_this = this;
            physx.PxTriangleMeshFlag pvk_in_e = e;
            return bool_const_PxTriangleMeshFlagsPtr_isSetPtr_PxTriangleMeshFlag_(pvk_in_this, pvk_in_e);
        }

        public physx.PxTriangleMeshFlagsPtr set(physx.PxTriangleMeshFlag e) {
            physx.PxTriangleMeshFlagsPtr pvk_in_this = this;
            physx.PxTriangleMeshFlag pvk_in_e = e;
            return PxTriangleMeshFlagsPtr_PxTriangleMeshFlagsPtr_setPtr_PxTriangleMeshFlag_(pvk_in_this, pvk_in_e);
        }

        public static bool OpEquals(physx.PxTriangleMeshFlagsPtr lhs, physx.PxTriangleMeshFlag e) {
            physx.PxTriangleMeshFlagsPtr pvk_in_lhs = lhs;
            physx.PxTriangleMeshFlag pvk_in_e = e;
            return bool_const_PxTriangleMeshFlagsPtr_operator_Ptr_EqualEqual_PxTriangleMeshFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static bool OpEquals(physx.PxTriangleMeshFlagsPtr lhs, physx.PxTriangleMeshFlagsPtr f) {
            physx.PxTriangleMeshFlagsPtr pvk_in_lhs = lhs;
            physx.PxTriangleMeshFlagsPtr pvk_in_f = f;
            return bool_const_PxTriangleMeshFlagsPtr_operator_Ptr_EqualEqual_PxTriangleMeshFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static bool OpEquals(physx.PxTriangleMeshFlagsPtr lhs, bool b) {
            physx.PxTriangleMeshFlagsPtr pvk_in_lhs = lhs;
            bool pvk_in_b = b;
            return bool_const_PxTriangleMeshFlagsPtr_operator_Ptr_EqualEqual_bool_(pvk_in_lhs, pvk_in_b);
        }

        public static bool OpExclaimEqual(physx.PxTriangleMeshFlagsPtr lhs, physx.PxTriangleMeshFlag e) {
            physx.PxTriangleMeshFlagsPtr pvk_in_lhs = lhs;
            physx.PxTriangleMeshFlag pvk_in_e = e;
            return bool_const_PxTriangleMeshFlagsPtr_operator_Ptr_ExclaimEqual_PxTriangleMeshFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static bool OpExclaimEqual(physx.PxTriangleMeshFlagsPtr lhs, physx.PxTriangleMeshFlagsPtr f) {
            physx.PxTriangleMeshFlagsPtr pvk_in_lhs = lhs;
            physx.PxTriangleMeshFlagsPtr pvk_in_f = f;
            return bool_const_PxTriangleMeshFlagsPtr_operator_Ptr_ExclaimEqual_PxTriangleMeshFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxTriangleMeshFlagsPtr OpEqual(physx.PxTriangleMeshFlagsPtr lhs, physx.PxTriangleMeshFlagsPtr f) {
            physx.PxTriangleMeshFlagsPtr pvk_in_lhs = lhs;
            physx.PxTriangleMeshFlagsPtr pvk_in_f = f;
            return PxTriangleMeshFlagsPtr_PxTriangleMeshFlagsPtr_operator_Ptr_Equal_PxTriangleMeshFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxTriangleMeshFlagsPtr OpEqual(physx.PxTriangleMeshFlagsPtr lhs, physx.PxTriangleMeshFlag e) {
            physx.PxTriangleMeshFlagsPtr pvk_in_lhs = lhs;
            physx.PxTriangleMeshFlag pvk_in_e = e;
            return PxTriangleMeshFlagsPtr_PxTriangleMeshFlagsPtr_operator_Ptr_Equal_PxTriangleMeshFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxTriangleMeshFlagsPtr OpPipeEqual(physx.PxTriangleMeshFlagsPtr lhs, physx.PxTriangleMeshFlag e) {
            physx.PxTriangleMeshFlagsPtr pvk_in_lhs = lhs;
            physx.PxTriangleMeshFlag pvk_in_e = e;
            return PxTriangleMeshFlagsPtr_PxTriangleMeshFlagsPtr_operator_Ptr_PipeEqual_PxTriangleMeshFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxTriangleMeshFlagsPtr OpPipeEqual(physx.PxTriangleMeshFlagsPtr lhs, physx.PxTriangleMeshFlagsPtr f) {
            physx.PxTriangleMeshFlagsPtr pvk_in_lhs = lhs;
            physx.PxTriangleMeshFlagsPtr pvk_in_f = f;
            return PxTriangleMeshFlagsPtr_PxTriangleMeshFlagsPtr_operator_Ptr_PipeEqual_PxTriangleMeshFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxTriangleMeshFlagsPtr OpPipe_New(physx.PxTriangleMeshFlagsPtr lhs, physx.PxTriangleMeshFlag e) {
            physx.PxTriangleMeshFlagsPtr pvk_in_lhs = lhs;
            physx.PxTriangleMeshFlag pvk_in_e = e;
            return PxTriangleMeshFlagsPtr_const_PxTriangleMeshFlagsPtr_operator_Ptr_Pipe_PxTriangleMeshFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxTriangleMeshFlagsPtr OpPipe_New(physx.PxTriangleMeshFlagsPtr lhs, physx.PxTriangleMeshFlagsPtr f) {
            physx.PxTriangleMeshFlagsPtr pvk_in_lhs = lhs;
            physx.PxTriangleMeshFlagsPtr pvk_in_f = f;
            return PxTriangleMeshFlagsPtr_const_PxTriangleMeshFlagsPtr_operator_Ptr_Pipe_PxTriangleMeshFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxTriangleMeshFlagsPtr OpAndEqual(physx.PxTriangleMeshFlagsPtr lhs, physx.PxTriangleMeshFlag e) {
            physx.PxTriangleMeshFlagsPtr pvk_in_lhs = lhs;
            physx.PxTriangleMeshFlag pvk_in_e = e;
            return PxTriangleMeshFlagsPtr_PxTriangleMeshFlagsPtr_operator_Ptr_AmpEqual_PxTriangleMeshFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxTriangleMeshFlagsPtr OpAndEqual(physx.PxTriangleMeshFlagsPtr lhs, physx.PxTriangleMeshFlagsPtr f) {
            physx.PxTriangleMeshFlagsPtr pvk_in_lhs = lhs;
            physx.PxTriangleMeshFlagsPtr pvk_in_f = f;
            return PxTriangleMeshFlagsPtr_PxTriangleMeshFlagsPtr_operator_Ptr_AmpEqual_PxTriangleMeshFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxTriangleMeshFlagsPtr OpAnd_New(physx.PxTriangleMeshFlagsPtr lhs, physx.PxTriangleMeshFlag e) {
            physx.PxTriangleMeshFlagsPtr pvk_in_lhs = lhs;
            physx.PxTriangleMeshFlag pvk_in_e = e;
            return PxTriangleMeshFlagsPtr_const_PxTriangleMeshFlagsPtr_operator_Ptr_Amp_PxTriangleMeshFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxTriangleMeshFlagsPtr OpAnd_New(physx.PxTriangleMeshFlagsPtr lhs, physx.PxTriangleMeshFlagsPtr f) {
            physx.PxTriangleMeshFlagsPtr pvk_in_lhs = lhs;
            physx.PxTriangleMeshFlagsPtr pvk_in_f = f;
            return PxTriangleMeshFlagsPtr_const_PxTriangleMeshFlagsPtr_operator_Ptr_Amp_PxTriangleMeshFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxTriangleMeshFlagsPtr OpCaretEqual(physx.PxTriangleMeshFlagsPtr lhs, physx.PxTriangleMeshFlag e) {
            physx.PxTriangleMeshFlagsPtr pvk_in_lhs = lhs;
            physx.PxTriangleMeshFlag pvk_in_e = e;
            return PxTriangleMeshFlagsPtr_PxTriangleMeshFlagsPtr_operator_Ptr_CaretEqual_PxTriangleMeshFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxTriangleMeshFlagsPtr OpCaretEqual(physx.PxTriangleMeshFlagsPtr lhs, physx.PxTriangleMeshFlagsPtr f) {
            physx.PxTriangleMeshFlagsPtr pvk_in_lhs = lhs;
            physx.PxTriangleMeshFlagsPtr pvk_in_f = f;
            return PxTriangleMeshFlagsPtr_PxTriangleMeshFlagsPtr_operator_Ptr_CaretEqual_PxTriangleMeshFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxTriangleMeshFlagsPtr OpCaret_New(physx.PxTriangleMeshFlagsPtr lhs, physx.PxTriangleMeshFlag e) {
            physx.PxTriangleMeshFlagsPtr pvk_in_lhs = lhs;
            physx.PxTriangleMeshFlag pvk_in_e = e;
            return PxTriangleMeshFlagsPtr_const_PxTriangleMeshFlagsPtr_operator_Ptr_Caret_PxTriangleMeshFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxTriangleMeshFlagsPtr OpCaret_New(physx.PxTriangleMeshFlagsPtr lhs, physx.PxTriangleMeshFlagsPtr f) {
            physx.PxTriangleMeshFlagsPtr pvk_in_lhs = lhs;
            physx.PxTriangleMeshFlagsPtr pvk_in_f = f;
            return PxTriangleMeshFlagsPtr_const_PxTriangleMeshFlagsPtr_operator_Ptr_Caret_PxTriangleMeshFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxTriangleMeshFlagsPtr OpTilde_New(physx.PxTriangleMeshFlagsPtr lhs) {
            physx.PxTriangleMeshFlagsPtr pvk_in_lhs = lhs;
            return PxTriangleMeshFlagsPtr_const_PxTriangleMeshFlagsPtr_operator_Ptr_Tilde(pvk_in_lhs);
        }

        public static bool ToBool(physx.PxTriangleMeshFlagsPtr lhs) {
            physx.PxTriangleMeshFlagsPtr pvk_in_lhs = lhs;
            return bool_const_PxTriangleMeshFlagsPtr_operator_boolPtr_Conversion(pvk_in_lhs);
        }

        public static byte ToByte(physx.PxTriangleMeshFlagsPtr lhs) {
            physx.PxTriangleMeshFlagsPtr pvk_in_lhs = lhs;
            return byte_const_PxTriangleMeshFlagsPtr_operator_unsigned_charPtr_Conversion(pvk_in_lhs);
        }

        public static ushort ToUShort(physx.PxTriangleMeshFlagsPtr lhs) {
            physx.PxTriangleMeshFlagsPtr pvk_in_lhs = lhs;
            return ushort_const_PxTriangleMeshFlagsPtr_operator_unsigned_shortPtr_Conversion(pvk_in_lhs);
        }

        public static uint ToUInt(physx.PxTriangleMeshFlagsPtr lhs) {
            physx.PxTriangleMeshFlagsPtr pvk_in_lhs = lhs;
            return uint_const_PxTriangleMeshFlagsPtr_operator_unsigned_intPtr_Conversion(pvk_in_lhs);
        }

        public void clear(physx.PxTriangleMeshFlag e) {
            physx.PxTriangleMeshFlagsPtr pvk_in_this = this;
            physx.PxTriangleMeshFlag pvk_in_e = e;
            void_PxTriangleMeshFlagsPtr_clearPtr_PxTriangleMeshFlag_(pvk_in_this, pvk_in_e);
        }

        public static bool operator==(physx.PxTriangleMeshFlagsPtr lhs, physx.PxTriangleMeshFlag e) {
            return physx.PxTriangleMeshFlagsPtr.OpEquals(lhs, e);
        }
        public static bool operator==(physx.PxTriangleMeshFlagsPtr lhs, physx.PxTriangleMeshFlagsPtr f) {
            return physx.PxTriangleMeshFlagsPtr.OpEquals(lhs, f);
        }
        public static bool operator==(physx.PxTriangleMeshFlagsPtr lhs, bool b) {
            return physx.PxTriangleMeshFlagsPtr.OpEquals(lhs, b);
        }
        public static bool operator!=(physx.PxTriangleMeshFlagsPtr lhs, bool b) {
            return !(physx.PxTriangleMeshFlagsPtr.OpEquals(lhs, b)); // Matching Operator
        }
        public static bool operator!=(physx.PxTriangleMeshFlagsPtr lhs, physx.PxTriangleMeshFlag e) {
            return physx.PxTriangleMeshFlagsPtr.OpExclaimEqual(lhs, e);
        }
        public static bool operator!=(physx.PxTriangleMeshFlagsPtr lhs, physx.PxTriangleMeshFlagsPtr f) {
            return physx.PxTriangleMeshFlagsPtr.OpExclaimEqual(lhs, f);
        }
    }

    public unsafe partial struct PxSceneFlagsPtr {
        private System.IntPtr nativePtr_;

        public static void Free(physx.PxSceneFlagsPtr ptr){
            Freer_physx_PxSceneFlagsPtr(ptr);
        }
        public void Free(){
            Freer_physx_PxSceneFlagsPtr(this);
        }

        public static physx.PxSceneFlagsPtr New(physx.PxEMPTY _) {
            physx.PxEMPTY pvk_in__ = _;
            return Ctor_PxSceneFlagsPtr_PxEMPTY(pvk_in__);
        }

        public static physx.PxSceneFlagsPtr New() {
            return Ctor_PxSceneFlagsPtr_();
        }

        public static physx.PxSceneFlagsPtr New(physx.PxSceneFlag e) {
            physx.PxSceneFlag pvk_in_e = e;
            return Ctor_PxSceneFlagsPtr_PxSceneFlag(pvk_in_e);
        }

        public static physx.PxSceneFlagsPtr New(physx.PxSceneFlagsPtr f) {
            physx.PxSceneFlagsPtr pvk_in_f = f;
            return Ctor_PxSceneFlagsPtr_PxSceneFlagsPtr(pvk_in_f);
        }

        public static physx.PxSceneFlagsPtr New(uint b) {
            uint pvk_in_b = b;
            return Ctor_PxSceneFlagsPtr_uint(pvk_in_b);
        }

        public bool isSet(physx.PxSceneFlag e) {
            physx.PxSceneFlagsPtr pvk_in_this = this;
            physx.PxSceneFlag pvk_in_e = e;
            return bool_const_PxSceneFlagsPtr_isSetPtr_PxSceneFlag_(pvk_in_this, pvk_in_e);
        }

        public physx.PxSceneFlagsPtr set(physx.PxSceneFlag e) {
            physx.PxSceneFlagsPtr pvk_in_this = this;
            physx.PxSceneFlag pvk_in_e = e;
            return PxSceneFlagsPtr_PxSceneFlagsPtr_setPtr_PxSceneFlag_(pvk_in_this, pvk_in_e);
        }

        public static bool OpEquals(physx.PxSceneFlagsPtr lhs, physx.PxSceneFlag e) {
            physx.PxSceneFlagsPtr pvk_in_lhs = lhs;
            physx.PxSceneFlag pvk_in_e = e;
            return bool_const_PxSceneFlagsPtr_operator_Ptr_EqualEqual_PxSceneFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static bool OpEquals(physx.PxSceneFlagsPtr lhs, physx.PxSceneFlagsPtr f) {
            physx.PxSceneFlagsPtr pvk_in_lhs = lhs;
            physx.PxSceneFlagsPtr pvk_in_f = f;
            return bool_const_PxSceneFlagsPtr_operator_Ptr_EqualEqual_PxSceneFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static bool OpEquals(physx.PxSceneFlagsPtr lhs, bool b) {
            physx.PxSceneFlagsPtr pvk_in_lhs = lhs;
            bool pvk_in_b = b;
            return bool_const_PxSceneFlagsPtr_operator_Ptr_EqualEqual_bool_(pvk_in_lhs, pvk_in_b);
        }

        public static bool OpExclaimEqual(physx.PxSceneFlagsPtr lhs, physx.PxSceneFlag e) {
            physx.PxSceneFlagsPtr pvk_in_lhs = lhs;
            physx.PxSceneFlag pvk_in_e = e;
            return bool_const_PxSceneFlagsPtr_operator_Ptr_ExclaimEqual_PxSceneFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static bool OpExclaimEqual(physx.PxSceneFlagsPtr lhs, physx.PxSceneFlagsPtr f) {
            physx.PxSceneFlagsPtr pvk_in_lhs = lhs;
            physx.PxSceneFlagsPtr pvk_in_f = f;
            return bool_const_PxSceneFlagsPtr_operator_Ptr_ExclaimEqual_PxSceneFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxSceneFlagsPtr OpEqual(physx.PxSceneFlagsPtr lhs, physx.PxSceneFlagsPtr f) {
            physx.PxSceneFlagsPtr pvk_in_lhs = lhs;
            physx.PxSceneFlagsPtr pvk_in_f = f;
            return PxSceneFlagsPtr_PxSceneFlagsPtr_operator_Ptr_Equal_PxSceneFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxSceneFlagsPtr OpEqual(physx.PxSceneFlagsPtr lhs, physx.PxSceneFlag e) {
            physx.PxSceneFlagsPtr pvk_in_lhs = lhs;
            physx.PxSceneFlag pvk_in_e = e;
            return PxSceneFlagsPtr_PxSceneFlagsPtr_operator_Ptr_Equal_PxSceneFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxSceneFlagsPtr OpPipeEqual(physx.PxSceneFlagsPtr lhs, physx.PxSceneFlag e) {
            physx.PxSceneFlagsPtr pvk_in_lhs = lhs;
            physx.PxSceneFlag pvk_in_e = e;
            return PxSceneFlagsPtr_PxSceneFlagsPtr_operator_Ptr_PipeEqual_PxSceneFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxSceneFlagsPtr OpPipeEqual(physx.PxSceneFlagsPtr lhs, physx.PxSceneFlagsPtr f) {
            physx.PxSceneFlagsPtr pvk_in_lhs = lhs;
            physx.PxSceneFlagsPtr pvk_in_f = f;
            return PxSceneFlagsPtr_PxSceneFlagsPtr_operator_Ptr_PipeEqual_PxSceneFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxSceneFlagsPtr OpPipe_New(physx.PxSceneFlagsPtr lhs, physx.PxSceneFlag e) {
            physx.PxSceneFlagsPtr pvk_in_lhs = lhs;
            physx.PxSceneFlag pvk_in_e = e;
            return PxSceneFlagsPtr_const_PxSceneFlagsPtr_operator_Ptr_Pipe_PxSceneFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxSceneFlagsPtr OpPipe_New(physx.PxSceneFlagsPtr lhs, physx.PxSceneFlagsPtr f) {
            physx.PxSceneFlagsPtr pvk_in_lhs = lhs;
            physx.PxSceneFlagsPtr pvk_in_f = f;
            return PxSceneFlagsPtr_const_PxSceneFlagsPtr_operator_Ptr_Pipe_PxSceneFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxSceneFlagsPtr OpAndEqual(physx.PxSceneFlagsPtr lhs, physx.PxSceneFlag e) {
            physx.PxSceneFlagsPtr pvk_in_lhs = lhs;
            physx.PxSceneFlag pvk_in_e = e;
            return PxSceneFlagsPtr_PxSceneFlagsPtr_operator_Ptr_AmpEqual_PxSceneFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxSceneFlagsPtr OpAndEqual(physx.PxSceneFlagsPtr lhs, physx.PxSceneFlagsPtr f) {
            physx.PxSceneFlagsPtr pvk_in_lhs = lhs;
            physx.PxSceneFlagsPtr pvk_in_f = f;
            return PxSceneFlagsPtr_PxSceneFlagsPtr_operator_Ptr_AmpEqual_PxSceneFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxSceneFlagsPtr OpAnd_New(physx.PxSceneFlagsPtr lhs, physx.PxSceneFlag e) {
            physx.PxSceneFlagsPtr pvk_in_lhs = lhs;
            physx.PxSceneFlag pvk_in_e = e;
            return PxSceneFlagsPtr_const_PxSceneFlagsPtr_operator_Ptr_Amp_PxSceneFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxSceneFlagsPtr OpAnd_New(physx.PxSceneFlagsPtr lhs, physx.PxSceneFlagsPtr f) {
            physx.PxSceneFlagsPtr pvk_in_lhs = lhs;
            physx.PxSceneFlagsPtr pvk_in_f = f;
            return PxSceneFlagsPtr_const_PxSceneFlagsPtr_operator_Ptr_Amp_PxSceneFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxSceneFlagsPtr OpCaretEqual(physx.PxSceneFlagsPtr lhs, physx.PxSceneFlag e) {
            physx.PxSceneFlagsPtr pvk_in_lhs = lhs;
            physx.PxSceneFlag pvk_in_e = e;
            return PxSceneFlagsPtr_PxSceneFlagsPtr_operator_Ptr_CaretEqual_PxSceneFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxSceneFlagsPtr OpCaretEqual(physx.PxSceneFlagsPtr lhs, physx.PxSceneFlagsPtr f) {
            physx.PxSceneFlagsPtr pvk_in_lhs = lhs;
            physx.PxSceneFlagsPtr pvk_in_f = f;
            return PxSceneFlagsPtr_PxSceneFlagsPtr_operator_Ptr_CaretEqual_PxSceneFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxSceneFlagsPtr OpCaret_New(physx.PxSceneFlagsPtr lhs, physx.PxSceneFlag e) {
            physx.PxSceneFlagsPtr pvk_in_lhs = lhs;
            physx.PxSceneFlag pvk_in_e = e;
            return PxSceneFlagsPtr_const_PxSceneFlagsPtr_operator_Ptr_Caret_PxSceneFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxSceneFlagsPtr OpCaret_New(physx.PxSceneFlagsPtr lhs, physx.PxSceneFlagsPtr f) {
            physx.PxSceneFlagsPtr pvk_in_lhs = lhs;
            physx.PxSceneFlagsPtr pvk_in_f = f;
            return PxSceneFlagsPtr_const_PxSceneFlagsPtr_operator_Ptr_Caret_PxSceneFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxSceneFlagsPtr OpTilde_New(physx.PxSceneFlagsPtr lhs) {
            physx.PxSceneFlagsPtr pvk_in_lhs = lhs;
            return PxSceneFlagsPtr_const_PxSceneFlagsPtr_operator_Ptr_Tilde(pvk_in_lhs);
        }

        public static bool ToBool(physx.PxSceneFlagsPtr lhs) {
            physx.PxSceneFlagsPtr pvk_in_lhs = lhs;
            return bool_const_PxSceneFlagsPtr_operator_boolPtr_Conversion(pvk_in_lhs);
        }

        public static byte ToByte(physx.PxSceneFlagsPtr lhs) {
            physx.PxSceneFlagsPtr pvk_in_lhs = lhs;
            return byte_const_PxSceneFlagsPtr_operator_unsigned_charPtr_Conversion(pvk_in_lhs);
        }

        public static ushort ToUShort(physx.PxSceneFlagsPtr lhs) {
            physx.PxSceneFlagsPtr pvk_in_lhs = lhs;
            return ushort_const_PxSceneFlagsPtr_operator_unsigned_shortPtr_Conversion(pvk_in_lhs);
        }

        public static uint ToUInt(physx.PxSceneFlagsPtr lhs) {
            physx.PxSceneFlagsPtr pvk_in_lhs = lhs;
            return uint_const_PxSceneFlagsPtr_operator_unsigned_intPtr_Conversion(pvk_in_lhs);
        }

        public void clear(physx.PxSceneFlag e) {
            physx.PxSceneFlagsPtr pvk_in_this = this;
            physx.PxSceneFlag pvk_in_e = e;
            void_PxSceneFlagsPtr_clearPtr_PxSceneFlag_(pvk_in_this, pvk_in_e);
        }

        public static bool operator==(physx.PxSceneFlagsPtr lhs, physx.PxSceneFlag e) {
            return physx.PxSceneFlagsPtr.OpEquals(lhs, e);
        }
        public static bool operator==(physx.PxSceneFlagsPtr lhs, physx.PxSceneFlagsPtr f) {
            return physx.PxSceneFlagsPtr.OpEquals(lhs, f);
        }
        public static bool operator==(physx.PxSceneFlagsPtr lhs, bool b) {
            return physx.PxSceneFlagsPtr.OpEquals(lhs, b);
        }
        public static bool operator!=(physx.PxSceneFlagsPtr lhs, bool b) {
            return !(physx.PxSceneFlagsPtr.OpEquals(lhs, b)); // Matching Operator
        }
        public static bool operator!=(physx.PxSceneFlagsPtr lhs, physx.PxSceneFlag e) {
            return physx.PxSceneFlagsPtr.OpExclaimEqual(lhs, e);
        }
        public static bool operator!=(physx.PxSceneFlagsPtr lhs, physx.PxSceneFlagsPtr f) {
            return physx.PxSceneFlagsPtr.OpExclaimEqual(lhs, f);
        }
    }

    public unsafe partial struct PxConvexMeshGeometryFlagsPtr {
        private System.IntPtr nativePtr_;

        public static void Free(physx.PxConvexMeshGeometryFlagsPtr ptr){
            Freer_physx_PxConvexMeshGeometryFlagsPtr(ptr);
        }
        public void Free(){
            Freer_physx_PxConvexMeshGeometryFlagsPtr(this);
        }

        public static physx.PxConvexMeshGeometryFlagsPtr New(physx.PxEMPTY _) {
            physx.PxEMPTY pvk_in__ = _;
            return Ctor_PxConvexMeshGeometryFlagsPtr_PxEMPTY(pvk_in__);
        }

        public static physx.PxConvexMeshGeometryFlagsPtr New() {
            return Ctor_PxConvexMeshGeometryFlagsPtr_();
        }

        public static physx.PxConvexMeshGeometryFlagsPtr New(physx.PxConvexMeshGeometryFlag e) {
            physx.PxConvexMeshGeometryFlag pvk_in_e = e;
            return Ctor_PxConvexMeshGeometryFlagsPtr_PxConvexMeshGeometryFlag(pvk_in_e);
        }

        public static physx.PxConvexMeshGeometryFlagsPtr New(physx.PxConvexMeshGeometryFlagsPtr f) {
            physx.PxConvexMeshGeometryFlagsPtr pvk_in_f = f;
            return Ctor_PxConvexMeshGeometryFlagsPtr_PxConvexMeshGeometryFlagsPtr(pvk_in_f);
        }

        public static physx.PxConvexMeshGeometryFlagsPtr New(byte b) {
            byte pvk_in_b = b;
            return Ctor_PxConvexMeshGeometryFlagsPtr_byte(pvk_in_b);
        }

        public bool isSet(physx.PxConvexMeshGeometryFlag e) {
            physx.PxConvexMeshGeometryFlagsPtr pvk_in_this = this;
            physx.PxConvexMeshGeometryFlag pvk_in_e = e;
            return bool_const_PxConvexMeshGeometryFlagsPtr_isSetPtr_PxConvexMeshGeometryFlag_(pvk_in_this, pvk_in_e);
        }

        public physx.PxConvexMeshGeometryFlagsPtr set(physx.PxConvexMeshGeometryFlag e) {
            physx.PxConvexMeshGeometryFlagsPtr pvk_in_this = this;
            physx.PxConvexMeshGeometryFlag pvk_in_e = e;
            return PxConvexMeshGeometryFlagsPtr_PxConvexMeshGeometryFlagsPtr_setPtr_PxConvexMeshGeometryFlag_(pvk_in_this, pvk_in_e);
        }

        public static bool OpEquals(physx.PxConvexMeshGeometryFlagsPtr lhs, physx.PxConvexMeshGeometryFlag e) {
            physx.PxConvexMeshGeometryFlagsPtr pvk_in_lhs = lhs;
            physx.PxConvexMeshGeometryFlag pvk_in_e = e;
            return bool_const_PxConvexMeshGeometryFlagsPtr_operator_Ptr_EqualEqual_PxConvexMeshGeometryFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static bool OpEquals(physx.PxConvexMeshGeometryFlagsPtr lhs, physx.PxConvexMeshGeometryFlagsPtr f) {
            physx.PxConvexMeshGeometryFlagsPtr pvk_in_lhs = lhs;
            physx.PxConvexMeshGeometryFlagsPtr pvk_in_f = f;
            return bool_const_PxConvexMeshGeometryFlagsPtr_operator_Ptr_EqualEqual_PxConvexMeshGeometryFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static bool OpEquals(physx.PxConvexMeshGeometryFlagsPtr lhs, bool b) {
            physx.PxConvexMeshGeometryFlagsPtr pvk_in_lhs = lhs;
            bool pvk_in_b = b;
            return bool_const_PxConvexMeshGeometryFlagsPtr_operator_Ptr_EqualEqual_bool_(pvk_in_lhs, pvk_in_b);
        }

        public static bool OpExclaimEqual(physx.PxConvexMeshGeometryFlagsPtr lhs, physx.PxConvexMeshGeometryFlag e) {
            physx.PxConvexMeshGeometryFlagsPtr pvk_in_lhs = lhs;
            physx.PxConvexMeshGeometryFlag pvk_in_e = e;
            return bool_const_PxConvexMeshGeometryFlagsPtr_operator_Ptr_ExclaimEqual_PxConvexMeshGeometryFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static bool OpExclaimEqual(physx.PxConvexMeshGeometryFlagsPtr lhs, physx.PxConvexMeshGeometryFlagsPtr f) {
            physx.PxConvexMeshGeometryFlagsPtr pvk_in_lhs = lhs;
            physx.PxConvexMeshGeometryFlagsPtr pvk_in_f = f;
            return bool_const_PxConvexMeshGeometryFlagsPtr_operator_Ptr_ExclaimEqual_PxConvexMeshGeometryFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxConvexMeshGeometryFlagsPtr OpEqual(physx.PxConvexMeshGeometryFlagsPtr lhs, physx.PxConvexMeshGeometryFlagsPtr f) {
            physx.PxConvexMeshGeometryFlagsPtr pvk_in_lhs = lhs;
            physx.PxConvexMeshGeometryFlagsPtr pvk_in_f = f;
            return PxConvexMeshGeometryFlagsPtr_PxConvexMeshGeometryFlagsPtr_operator_Ptr_Equal_PxConvexMeshGeometryFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxConvexMeshGeometryFlagsPtr OpEqual(physx.PxConvexMeshGeometryFlagsPtr lhs, physx.PxConvexMeshGeometryFlag e) {
            physx.PxConvexMeshGeometryFlagsPtr pvk_in_lhs = lhs;
            physx.PxConvexMeshGeometryFlag pvk_in_e = e;
            return PxConvexMeshGeometryFlagsPtr_PxConvexMeshGeometryFlagsPtr_operator_Ptr_Equal_PxConvexMeshGeometryFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxConvexMeshGeometryFlagsPtr OpPipeEqual(physx.PxConvexMeshGeometryFlagsPtr lhs, physx.PxConvexMeshGeometryFlag e) {
            physx.PxConvexMeshGeometryFlagsPtr pvk_in_lhs = lhs;
            physx.PxConvexMeshGeometryFlag pvk_in_e = e;
            return PxConvexMeshGeometryFlagsPtr_PxConvexMeshGeometryFlagsPtr_operator_Ptr_PipeEqual_PxConvexMeshGeometryFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxConvexMeshGeometryFlagsPtr OpPipeEqual(physx.PxConvexMeshGeometryFlagsPtr lhs, physx.PxConvexMeshGeometryFlagsPtr f) {
            physx.PxConvexMeshGeometryFlagsPtr pvk_in_lhs = lhs;
            physx.PxConvexMeshGeometryFlagsPtr pvk_in_f = f;
            return PxConvexMeshGeometryFlagsPtr_PxConvexMeshGeometryFlagsPtr_operator_Ptr_PipeEqual_PxConvexMeshGeometryFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxConvexMeshGeometryFlagsPtr OpPipe_New(physx.PxConvexMeshGeometryFlagsPtr lhs, physx.PxConvexMeshGeometryFlag e) {
            physx.PxConvexMeshGeometryFlagsPtr pvk_in_lhs = lhs;
            physx.PxConvexMeshGeometryFlag pvk_in_e = e;
            return PxConvexMeshGeometryFlagsPtr_const_PxConvexMeshGeometryFlagsPtr_operator_Ptr_Pipe_PxConvexMeshGeometryFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxConvexMeshGeometryFlagsPtr OpPipe_New(physx.PxConvexMeshGeometryFlagsPtr lhs, physx.PxConvexMeshGeometryFlagsPtr f) {
            physx.PxConvexMeshGeometryFlagsPtr pvk_in_lhs = lhs;
            physx.PxConvexMeshGeometryFlagsPtr pvk_in_f = f;
            return PxConvexMeshGeometryFlagsPtr_const_PxConvexMeshGeometryFlagsPtr_operator_Ptr_Pipe_PxConvexMeshGeometryFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxConvexMeshGeometryFlagsPtr OpAndEqual(physx.PxConvexMeshGeometryFlagsPtr lhs, physx.PxConvexMeshGeometryFlag e) {
            physx.PxConvexMeshGeometryFlagsPtr pvk_in_lhs = lhs;
            physx.PxConvexMeshGeometryFlag pvk_in_e = e;
            return PxConvexMeshGeometryFlagsPtr_PxConvexMeshGeometryFlagsPtr_operator_Ptr_AmpEqual_PxConvexMeshGeometryFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxConvexMeshGeometryFlagsPtr OpAndEqual(physx.PxConvexMeshGeometryFlagsPtr lhs, physx.PxConvexMeshGeometryFlagsPtr f) {
            physx.PxConvexMeshGeometryFlagsPtr pvk_in_lhs = lhs;
            physx.PxConvexMeshGeometryFlagsPtr pvk_in_f = f;
            return PxConvexMeshGeometryFlagsPtr_PxConvexMeshGeometryFlagsPtr_operator_Ptr_AmpEqual_PxConvexMeshGeometryFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxConvexMeshGeometryFlagsPtr OpAnd_New(physx.PxConvexMeshGeometryFlagsPtr lhs, physx.PxConvexMeshGeometryFlag e) {
            physx.PxConvexMeshGeometryFlagsPtr pvk_in_lhs = lhs;
            physx.PxConvexMeshGeometryFlag pvk_in_e = e;
            return PxConvexMeshGeometryFlagsPtr_const_PxConvexMeshGeometryFlagsPtr_operator_Ptr_Amp_PxConvexMeshGeometryFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxConvexMeshGeometryFlagsPtr OpAnd_New(physx.PxConvexMeshGeometryFlagsPtr lhs, physx.PxConvexMeshGeometryFlagsPtr f) {
            physx.PxConvexMeshGeometryFlagsPtr pvk_in_lhs = lhs;
            physx.PxConvexMeshGeometryFlagsPtr pvk_in_f = f;
            return PxConvexMeshGeometryFlagsPtr_const_PxConvexMeshGeometryFlagsPtr_operator_Ptr_Amp_PxConvexMeshGeometryFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxConvexMeshGeometryFlagsPtr OpCaretEqual(physx.PxConvexMeshGeometryFlagsPtr lhs, physx.PxConvexMeshGeometryFlag e) {
            physx.PxConvexMeshGeometryFlagsPtr pvk_in_lhs = lhs;
            physx.PxConvexMeshGeometryFlag pvk_in_e = e;
            return PxConvexMeshGeometryFlagsPtr_PxConvexMeshGeometryFlagsPtr_operator_Ptr_CaretEqual_PxConvexMeshGeometryFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxConvexMeshGeometryFlagsPtr OpCaretEqual(physx.PxConvexMeshGeometryFlagsPtr lhs, physx.PxConvexMeshGeometryFlagsPtr f) {
            physx.PxConvexMeshGeometryFlagsPtr pvk_in_lhs = lhs;
            physx.PxConvexMeshGeometryFlagsPtr pvk_in_f = f;
            return PxConvexMeshGeometryFlagsPtr_PxConvexMeshGeometryFlagsPtr_operator_Ptr_CaretEqual_PxConvexMeshGeometryFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxConvexMeshGeometryFlagsPtr OpCaret_New(physx.PxConvexMeshGeometryFlagsPtr lhs, physx.PxConvexMeshGeometryFlag e) {
            physx.PxConvexMeshGeometryFlagsPtr pvk_in_lhs = lhs;
            physx.PxConvexMeshGeometryFlag pvk_in_e = e;
            return PxConvexMeshGeometryFlagsPtr_const_PxConvexMeshGeometryFlagsPtr_operator_Ptr_Caret_PxConvexMeshGeometryFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxConvexMeshGeometryFlagsPtr OpCaret_New(physx.PxConvexMeshGeometryFlagsPtr lhs, physx.PxConvexMeshGeometryFlagsPtr f) {
            physx.PxConvexMeshGeometryFlagsPtr pvk_in_lhs = lhs;
            physx.PxConvexMeshGeometryFlagsPtr pvk_in_f = f;
            return PxConvexMeshGeometryFlagsPtr_const_PxConvexMeshGeometryFlagsPtr_operator_Ptr_Caret_PxConvexMeshGeometryFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxConvexMeshGeometryFlagsPtr OpTilde_New(physx.PxConvexMeshGeometryFlagsPtr lhs) {
            physx.PxConvexMeshGeometryFlagsPtr pvk_in_lhs = lhs;
            return PxConvexMeshGeometryFlagsPtr_const_PxConvexMeshGeometryFlagsPtr_operator_Ptr_Tilde(pvk_in_lhs);
        }

        public static bool ToBool(physx.PxConvexMeshGeometryFlagsPtr lhs) {
            physx.PxConvexMeshGeometryFlagsPtr pvk_in_lhs = lhs;
            return bool_const_PxConvexMeshGeometryFlagsPtr_operator_boolPtr_Conversion(pvk_in_lhs);
        }

        public static byte ToByte(physx.PxConvexMeshGeometryFlagsPtr lhs) {
            physx.PxConvexMeshGeometryFlagsPtr pvk_in_lhs = lhs;
            return byte_const_PxConvexMeshGeometryFlagsPtr_operator_unsigned_charPtr_Conversion(pvk_in_lhs);
        }

        public static ushort ToUShort(physx.PxConvexMeshGeometryFlagsPtr lhs) {
            physx.PxConvexMeshGeometryFlagsPtr pvk_in_lhs = lhs;
            return ushort_const_PxConvexMeshGeometryFlagsPtr_operator_unsigned_shortPtr_Conversion(pvk_in_lhs);
        }

        public static uint ToUInt(physx.PxConvexMeshGeometryFlagsPtr lhs) {
            physx.PxConvexMeshGeometryFlagsPtr pvk_in_lhs = lhs;
            return uint_const_PxConvexMeshGeometryFlagsPtr_operator_unsigned_intPtr_Conversion(pvk_in_lhs);
        }

        public void clear(physx.PxConvexMeshGeometryFlag e) {
            physx.PxConvexMeshGeometryFlagsPtr pvk_in_this = this;
            physx.PxConvexMeshGeometryFlag pvk_in_e = e;
            void_PxConvexMeshGeometryFlagsPtr_clearPtr_PxConvexMeshGeometryFlag_(pvk_in_this, pvk_in_e);
        }

        public static bool operator==(physx.PxConvexMeshGeometryFlagsPtr lhs, physx.PxConvexMeshGeometryFlag e) {
            return physx.PxConvexMeshGeometryFlagsPtr.OpEquals(lhs, e);
        }
        public static bool operator==(physx.PxConvexMeshGeometryFlagsPtr lhs, physx.PxConvexMeshGeometryFlagsPtr f) {
            return physx.PxConvexMeshGeometryFlagsPtr.OpEquals(lhs, f);
        }
        public static bool operator==(physx.PxConvexMeshGeometryFlagsPtr lhs, bool b) {
            return physx.PxConvexMeshGeometryFlagsPtr.OpEquals(lhs, b);
        }
        public static bool operator!=(physx.PxConvexMeshGeometryFlagsPtr lhs, bool b) {
            return !(physx.PxConvexMeshGeometryFlagsPtr.OpEquals(lhs, b)); // Matching Operator
        }
        public static bool operator!=(physx.PxConvexMeshGeometryFlagsPtr lhs, physx.PxConvexMeshGeometryFlag e) {
            return physx.PxConvexMeshGeometryFlagsPtr.OpExclaimEqual(lhs, e);
        }
        public static bool operator!=(physx.PxConvexMeshGeometryFlagsPtr lhs, physx.PxConvexMeshGeometryFlagsPtr f) {
            return physx.PxConvexMeshGeometryFlagsPtr.OpExclaimEqual(lhs, f);
        }
    }

    public unsafe partial struct PxMeshGeometryFlagsPtr {
        private System.IntPtr nativePtr_;

        public static void Free(physx.PxMeshGeometryFlagsPtr ptr){
            Freer_physx_PxMeshGeometryFlagsPtr(ptr);
        }
        public void Free(){
            Freer_physx_PxMeshGeometryFlagsPtr(this);
        }

        public static physx.PxMeshGeometryFlagsPtr New(physx.PxEMPTY _) {
            physx.PxEMPTY pvk_in__ = _;
            return Ctor_PxMeshGeometryFlagsPtr_PxEMPTY(pvk_in__);
        }

        public static physx.PxMeshGeometryFlagsPtr New() {
            return Ctor_PxMeshGeometryFlagsPtr_();
        }

        public static physx.PxMeshGeometryFlagsPtr New(physx.PxMeshGeometryFlag e) {
            physx.PxMeshGeometryFlag pvk_in_e = e;
            return Ctor_PxMeshGeometryFlagsPtr_PxMeshGeometryFlag(pvk_in_e);
        }

        public static physx.PxMeshGeometryFlagsPtr New(physx.PxMeshGeometryFlagsPtr f) {
            physx.PxMeshGeometryFlagsPtr pvk_in_f = f;
            return Ctor_PxMeshGeometryFlagsPtr_PxMeshGeometryFlagsPtr(pvk_in_f);
        }

        public static physx.PxMeshGeometryFlagsPtr New(byte b) {
            byte pvk_in_b = b;
            return Ctor_PxMeshGeometryFlagsPtr_byte(pvk_in_b);
        }

        public bool isSet(physx.PxMeshGeometryFlag e) {
            physx.PxMeshGeometryFlagsPtr pvk_in_this = this;
            physx.PxMeshGeometryFlag pvk_in_e = e;
            return bool_const_PxMeshGeometryFlagsPtr_isSetPtr_PxMeshGeometryFlag_(pvk_in_this, pvk_in_e);
        }

        public physx.PxMeshGeometryFlagsPtr set(physx.PxMeshGeometryFlag e) {
            physx.PxMeshGeometryFlagsPtr pvk_in_this = this;
            physx.PxMeshGeometryFlag pvk_in_e = e;
            return PxMeshGeometryFlagsPtr_PxMeshGeometryFlagsPtr_setPtr_PxMeshGeometryFlag_(pvk_in_this, pvk_in_e);
        }

        public static bool OpEquals(physx.PxMeshGeometryFlagsPtr lhs, physx.PxMeshGeometryFlag e) {
            physx.PxMeshGeometryFlagsPtr pvk_in_lhs = lhs;
            physx.PxMeshGeometryFlag pvk_in_e = e;
            return bool_const_PxMeshGeometryFlagsPtr_operator_Ptr_EqualEqual_PxMeshGeometryFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static bool OpEquals(physx.PxMeshGeometryFlagsPtr lhs, physx.PxMeshGeometryFlagsPtr f) {
            physx.PxMeshGeometryFlagsPtr pvk_in_lhs = lhs;
            physx.PxMeshGeometryFlagsPtr pvk_in_f = f;
            return bool_const_PxMeshGeometryFlagsPtr_operator_Ptr_EqualEqual_PxMeshGeometryFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static bool OpEquals(physx.PxMeshGeometryFlagsPtr lhs, bool b) {
            physx.PxMeshGeometryFlagsPtr pvk_in_lhs = lhs;
            bool pvk_in_b = b;
            return bool_const_PxMeshGeometryFlagsPtr_operator_Ptr_EqualEqual_bool_(pvk_in_lhs, pvk_in_b);
        }

        public static bool OpExclaimEqual(physx.PxMeshGeometryFlagsPtr lhs, physx.PxMeshGeometryFlag e) {
            physx.PxMeshGeometryFlagsPtr pvk_in_lhs = lhs;
            physx.PxMeshGeometryFlag pvk_in_e = e;
            return bool_const_PxMeshGeometryFlagsPtr_operator_Ptr_ExclaimEqual_PxMeshGeometryFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static bool OpExclaimEqual(physx.PxMeshGeometryFlagsPtr lhs, physx.PxMeshGeometryFlagsPtr f) {
            physx.PxMeshGeometryFlagsPtr pvk_in_lhs = lhs;
            physx.PxMeshGeometryFlagsPtr pvk_in_f = f;
            return bool_const_PxMeshGeometryFlagsPtr_operator_Ptr_ExclaimEqual_PxMeshGeometryFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxMeshGeometryFlagsPtr OpEqual(physx.PxMeshGeometryFlagsPtr lhs, physx.PxMeshGeometryFlagsPtr f) {
            physx.PxMeshGeometryFlagsPtr pvk_in_lhs = lhs;
            physx.PxMeshGeometryFlagsPtr pvk_in_f = f;
            return PxMeshGeometryFlagsPtr_PxMeshGeometryFlagsPtr_operator_Ptr_Equal_PxMeshGeometryFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxMeshGeometryFlagsPtr OpEqual(physx.PxMeshGeometryFlagsPtr lhs, physx.PxMeshGeometryFlag e) {
            physx.PxMeshGeometryFlagsPtr pvk_in_lhs = lhs;
            physx.PxMeshGeometryFlag pvk_in_e = e;
            return PxMeshGeometryFlagsPtr_PxMeshGeometryFlagsPtr_operator_Ptr_Equal_PxMeshGeometryFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxMeshGeometryFlagsPtr OpPipeEqual(physx.PxMeshGeometryFlagsPtr lhs, physx.PxMeshGeometryFlag e) {
            physx.PxMeshGeometryFlagsPtr pvk_in_lhs = lhs;
            physx.PxMeshGeometryFlag pvk_in_e = e;
            return PxMeshGeometryFlagsPtr_PxMeshGeometryFlagsPtr_operator_Ptr_PipeEqual_PxMeshGeometryFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxMeshGeometryFlagsPtr OpPipeEqual(physx.PxMeshGeometryFlagsPtr lhs, physx.PxMeshGeometryFlagsPtr f) {
            physx.PxMeshGeometryFlagsPtr pvk_in_lhs = lhs;
            physx.PxMeshGeometryFlagsPtr pvk_in_f = f;
            return PxMeshGeometryFlagsPtr_PxMeshGeometryFlagsPtr_operator_Ptr_PipeEqual_PxMeshGeometryFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxMeshGeometryFlagsPtr OpPipe_New(physx.PxMeshGeometryFlagsPtr lhs, physx.PxMeshGeometryFlag e) {
            physx.PxMeshGeometryFlagsPtr pvk_in_lhs = lhs;
            physx.PxMeshGeometryFlag pvk_in_e = e;
            return PxMeshGeometryFlagsPtr_const_PxMeshGeometryFlagsPtr_operator_Ptr_Pipe_PxMeshGeometryFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxMeshGeometryFlagsPtr OpPipe_New(physx.PxMeshGeometryFlagsPtr lhs, physx.PxMeshGeometryFlagsPtr f) {
            physx.PxMeshGeometryFlagsPtr pvk_in_lhs = lhs;
            physx.PxMeshGeometryFlagsPtr pvk_in_f = f;
            return PxMeshGeometryFlagsPtr_const_PxMeshGeometryFlagsPtr_operator_Ptr_Pipe_PxMeshGeometryFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxMeshGeometryFlagsPtr OpAndEqual(physx.PxMeshGeometryFlagsPtr lhs, physx.PxMeshGeometryFlag e) {
            physx.PxMeshGeometryFlagsPtr pvk_in_lhs = lhs;
            physx.PxMeshGeometryFlag pvk_in_e = e;
            return PxMeshGeometryFlagsPtr_PxMeshGeometryFlagsPtr_operator_Ptr_AmpEqual_PxMeshGeometryFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxMeshGeometryFlagsPtr OpAndEqual(physx.PxMeshGeometryFlagsPtr lhs, physx.PxMeshGeometryFlagsPtr f) {
            physx.PxMeshGeometryFlagsPtr pvk_in_lhs = lhs;
            physx.PxMeshGeometryFlagsPtr pvk_in_f = f;
            return PxMeshGeometryFlagsPtr_PxMeshGeometryFlagsPtr_operator_Ptr_AmpEqual_PxMeshGeometryFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxMeshGeometryFlagsPtr OpAnd_New(physx.PxMeshGeometryFlagsPtr lhs, physx.PxMeshGeometryFlag e) {
            physx.PxMeshGeometryFlagsPtr pvk_in_lhs = lhs;
            physx.PxMeshGeometryFlag pvk_in_e = e;
            return PxMeshGeometryFlagsPtr_const_PxMeshGeometryFlagsPtr_operator_Ptr_Amp_PxMeshGeometryFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxMeshGeometryFlagsPtr OpAnd_New(physx.PxMeshGeometryFlagsPtr lhs, physx.PxMeshGeometryFlagsPtr f) {
            physx.PxMeshGeometryFlagsPtr pvk_in_lhs = lhs;
            physx.PxMeshGeometryFlagsPtr pvk_in_f = f;
            return PxMeshGeometryFlagsPtr_const_PxMeshGeometryFlagsPtr_operator_Ptr_Amp_PxMeshGeometryFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxMeshGeometryFlagsPtr OpCaretEqual(physx.PxMeshGeometryFlagsPtr lhs, physx.PxMeshGeometryFlag e) {
            physx.PxMeshGeometryFlagsPtr pvk_in_lhs = lhs;
            physx.PxMeshGeometryFlag pvk_in_e = e;
            return PxMeshGeometryFlagsPtr_PxMeshGeometryFlagsPtr_operator_Ptr_CaretEqual_PxMeshGeometryFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxMeshGeometryFlagsPtr OpCaretEqual(physx.PxMeshGeometryFlagsPtr lhs, physx.PxMeshGeometryFlagsPtr f) {
            physx.PxMeshGeometryFlagsPtr pvk_in_lhs = lhs;
            physx.PxMeshGeometryFlagsPtr pvk_in_f = f;
            return PxMeshGeometryFlagsPtr_PxMeshGeometryFlagsPtr_operator_Ptr_CaretEqual_PxMeshGeometryFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxMeshGeometryFlagsPtr OpCaret_New(physx.PxMeshGeometryFlagsPtr lhs, physx.PxMeshGeometryFlag e) {
            physx.PxMeshGeometryFlagsPtr pvk_in_lhs = lhs;
            physx.PxMeshGeometryFlag pvk_in_e = e;
            return PxMeshGeometryFlagsPtr_const_PxMeshGeometryFlagsPtr_operator_Ptr_Caret_PxMeshGeometryFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxMeshGeometryFlagsPtr OpCaret_New(physx.PxMeshGeometryFlagsPtr lhs, physx.PxMeshGeometryFlagsPtr f) {
            physx.PxMeshGeometryFlagsPtr pvk_in_lhs = lhs;
            physx.PxMeshGeometryFlagsPtr pvk_in_f = f;
            return PxMeshGeometryFlagsPtr_const_PxMeshGeometryFlagsPtr_operator_Ptr_Caret_PxMeshGeometryFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxMeshGeometryFlagsPtr OpTilde_New(physx.PxMeshGeometryFlagsPtr lhs) {
            physx.PxMeshGeometryFlagsPtr pvk_in_lhs = lhs;
            return PxMeshGeometryFlagsPtr_const_PxMeshGeometryFlagsPtr_operator_Ptr_Tilde(pvk_in_lhs);
        }

        public static bool ToBool(physx.PxMeshGeometryFlagsPtr lhs) {
            physx.PxMeshGeometryFlagsPtr pvk_in_lhs = lhs;
            return bool_const_PxMeshGeometryFlagsPtr_operator_boolPtr_Conversion(pvk_in_lhs);
        }

        public static byte ToByte(physx.PxMeshGeometryFlagsPtr lhs) {
            physx.PxMeshGeometryFlagsPtr pvk_in_lhs = lhs;
            return byte_const_PxMeshGeometryFlagsPtr_operator_unsigned_charPtr_Conversion(pvk_in_lhs);
        }

        public static ushort ToUShort(physx.PxMeshGeometryFlagsPtr lhs) {
            physx.PxMeshGeometryFlagsPtr pvk_in_lhs = lhs;
            return ushort_const_PxMeshGeometryFlagsPtr_operator_unsigned_shortPtr_Conversion(pvk_in_lhs);
        }

        public static uint ToUInt(physx.PxMeshGeometryFlagsPtr lhs) {
            physx.PxMeshGeometryFlagsPtr pvk_in_lhs = lhs;
            return uint_const_PxMeshGeometryFlagsPtr_operator_unsigned_intPtr_Conversion(pvk_in_lhs);
        }

        public void clear(physx.PxMeshGeometryFlag e) {
            physx.PxMeshGeometryFlagsPtr pvk_in_this = this;
            physx.PxMeshGeometryFlag pvk_in_e = e;
            void_PxMeshGeometryFlagsPtr_clearPtr_PxMeshGeometryFlag_(pvk_in_this, pvk_in_e);
        }

        public static bool operator==(physx.PxMeshGeometryFlagsPtr lhs, physx.PxMeshGeometryFlag e) {
            return physx.PxMeshGeometryFlagsPtr.OpEquals(lhs, e);
        }
        public static bool operator==(physx.PxMeshGeometryFlagsPtr lhs, physx.PxMeshGeometryFlagsPtr f) {
            return physx.PxMeshGeometryFlagsPtr.OpEquals(lhs, f);
        }
        public static bool operator==(physx.PxMeshGeometryFlagsPtr lhs, bool b) {
            return physx.PxMeshGeometryFlagsPtr.OpEquals(lhs, b);
        }
        public static bool operator!=(physx.PxMeshGeometryFlagsPtr lhs, bool b) {
            return !(physx.PxMeshGeometryFlagsPtr.OpEquals(lhs, b)); // Matching Operator
        }
        public static bool operator!=(physx.PxMeshGeometryFlagsPtr lhs, physx.PxMeshGeometryFlag e) {
            return physx.PxMeshGeometryFlagsPtr.OpExclaimEqual(lhs, e);
        }
        public static bool operator!=(physx.PxMeshGeometryFlagsPtr lhs, physx.PxMeshGeometryFlagsPtr f) {
            return physx.PxMeshGeometryFlagsPtr.OpExclaimEqual(lhs, f);
        }
    }

    public unsafe partial struct PxMaterialFlagsPtr {
        private System.IntPtr nativePtr_;

        public static void Free(physx.PxMaterialFlagsPtr ptr){
            Freer_physx_PxMaterialFlagsPtr(ptr);
        }
        public void Free(){
            Freer_physx_PxMaterialFlagsPtr(this);
        }

        public static physx.PxMaterialFlagsPtr New(physx.PxEMPTY _) {
            physx.PxEMPTY pvk_in__ = _;
            return Ctor_PxMaterialFlagsPtr_PxEMPTY(pvk_in__);
        }

        public static physx.PxMaterialFlagsPtr New() {
            return Ctor_PxMaterialFlagsPtr_();
        }

        public static physx.PxMaterialFlagsPtr New(physx.PxMaterialFlag e) {
            physx.PxMaterialFlag pvk_in_e = e;
            return Ctor_PxMaterialFlagsPtr_PxMaterialFlag(pvk_in_e);
        }

        public static physx.PxMaterialFlagsPtr New(physx.PxMaterialFlagsPtr f) {
            physx.PxMaterialFlagsPtr pvk_in_f = f;
            return Ctor_PxMaterialFlagsPtr_PxMaterialFlagsPtr(pvk_in_f);
        }

        public static physx.PxMaterialFlagsPtr New(ushort b) {
            ushort pvk_in_b = b;
            return Ctor_PxMaterialFlagsPtr_ushort(pvk_in_b);
        }

        public bool isSet(physx.PxMaterialFlag e) {
            physx.PxMaterialFlagsPtr pvk_in_this = this;
            physx.PxMaterialFlag pvk_in_e = e;
            return bool_const_PxMaterialFlagsPtr_isSetPtr_PxMaterialFlag_(pvk_in_this, pvk_in_e);
        }

        public physx.PxMaterialFlagsPtr set(physx.PxMaterialFlag e) {
            physx.PxMaterialFlagsPtr pvk_in_this = this;
            physx.PxMaterialFlag pvk_in_e = e;
            return PxMaterialFlagsPtr_PxMaterialFlagsPtr_setPtr_PxMaterialFlag_(pvk_in_this, pvk_in_e);
        }

        public static bool OpEquals(physx.PxMaterialFlagsPtr lhs, physx.PxMaterialFlag e) {
            physx.PxMaterialFlagsPtr pvk_in_lhs = lhs;
            physx.PxMaterialFlag pvk_in_e = e;
            return bool_const_PxMaterialFlagsPtr_operator_Ptr_EqualEqual_PxMaterialFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static bool OpEquals(physx.PxMaterialFlagsPtr lhs, physx.PxMaterialFlagsPtr f) {
            physx.PxMaterialFlagsPtr pvk_in_lhs = lhs;
            physx.PxMaterialFlagsPtr pvk_in_f = f;
            return bool_const_PxMaterialFlagsPtr_operator_Ptr_EqualEqual_PxMaterialFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static bool OpEquals(physx.PxMaterialFlagsPtr lhs, bool b) {
            physx.PxMaterialFlagsPtr pvk_in_lhs = lhs;
            bool pvk_in_b = b;
            return bool_const_PxMaterialFlagsPtr_operator_Ptr_EqualEqual_bool_(pvk_in_lhs, pvk_in_b);
        }

        public static bool OpExclaimEqual(physx.PxMaterialFlagsPtr lhs, physx.PxMaterialFlag e) {
            physx.PxMaterialFlagsPtr pvk_in_lhs = lhs;
            physx.PxMaterialFlag pvk_in_e = e;
            return bool_const_PxMaterialFlagsPtr_operator_Ptr_ExclaimEqual_PxMaterialFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static bool OpExclaimEqual(physx.PxMaterialFlagsPtr lhs, physx.PxMaterialFlagsPtr f) {
            physx.PxMaterialFlagsPtr pvk_in_lhs = lhs;
            physx.PxMaterialFlagsPtr pvk_in_f = f;
            return bool_const_PxMaterialFlagsPtr_operator_Ptr_ExclaimEqual_PxMaterialFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxMaterialFlagsPtr OpEqual(physx.PxMaterialFlagsPtr lhs, physx.PxMaterialFlagsPtr f) {
            physx.PxMaterialFlagsPtr pvk_in_lhs = lhs;
            physx.PxMaterialFlagsPtr pvk_in_f = f;
            return PxMaterialFlagsPtr_PxMaterialFlagsPtr_operator_Ptr_Equal_PxMaterialFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxMaterialFlagsPtr OpEqual(physx.PxMaterialFlagsPtr lhs, physx.PxMaterialFlag e) {
            physx.PxMaterialFlagsPtr pvk_in_lhs = lhs;
            physx.PxMaterialFlag pvk_in_e = e;
            return PxMaterialFlagsPtr_PxMaterialFlagsPtr_operator_Ptr_Equal_PxMaterialFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxMaterialFlagsPtr OpPipeEqual(physx.PxMaterialFlagsPtr lhs, physx.PxMaterialFlag e) {
            physx.PxMaterialFlagsPtr pvk_in_lhs = lhs;
            physx.PxMaterialFlag pvk_in_e = e;
            return PxMaterialFlagsPtr_PxMaterialFlagsPtr_operator_Ptr_PipeEqual_PxMaterialFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxMaterialFlagsPtr OpPipeEqual(physx.PxMaterialFlagsPtr lhs, physx.PxMaterialFlagsPtr f) {
            physx.PxMaterialFlagsPtr pvk_in_lhs = lhs;
            physx.PxMaterialFlagsPtr pvk_in_f = f;
            return PxMaterialFlagsPtr_PxMaterialFlagsPtr_operator_Ptr_PipeEqual_PxMaterialFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxMaterialFlagsPtr OpPipe_New(physx.PxMaterialFlagsPtr lhs, physx.PxMaterialFlag e) {
            physx.PxMaterialFlagsPtr pvk_in_lhs = lhs;
            physx.PxMaterialFlag pvk_in_e = e;
            return PxMaterialFlagsPtr_const_PxMaterialFlagsPtr_operator_Ptr_Pipe_PxMaterialFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxMaterialFlagsPtr OpPipe_New(physx.PxMaterialFlagsPtr lhs, physx.PxMaterialFlagsPtr f) {
            physx.PxMaterialFlagsPtr pvk_in_lhs = lhs;
            physx.PxMaterialFlagsPtr pvk_in_f = f;
            return PxMaterialFlagsPtr_const_PxMaterialFlagsPtr_operator_Ptr_Pipe_PxMaterialFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxMaterialFlagsPtr OpAndEqual(physx.PxMaterialFlagsPtr lhs, physx.PxMaterialFlag e) {
            physx.PxMaterialFlagsPtr pvk_in_lhs = lhs;
            physx.PxMaterialFlag pvk_in_e = e;
            return PxMaterialFlagsPtr_PxMaterialFlagsPtr_operator_Ptr_AmpEqual_PxMaterialFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxMaterialFlagsPtr OpAndEqual(physx.PxMaterialFlagsPtr lhs, physx.PxMaterialFlagsPtr f) {
            physx.PxMaterialFlagsPtr pvk_in_lhs = lhs;
            physx.PxMaterialFlagsPtr pvk_in_f = f;
            return PxMaterialFlagsPtr_PxMaterialFlagsPtr_operator_Ptr_AmpEqual_PxMaterialFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxMaterialFlagsPtr OpAnd_New(physx.PxMaterialFlagsPtr lhs, physx.PxMaterialFlag e) {
            physx.PxMaterialFlagsPtr pvk_in_lhs = lhs;
            physx.PxMaterialFlag pvk_in_e = e;
            return PxMaterialFlagsPtr_const_PxMaterialFlagsPtr_operator_Ptr_Amp_PxMaterialFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxMaterialFlagsPtr OpAnd_New(physx.PxMaterialFlagsPtr lhs, physx.PxMaterialFlagsPtr f) {
            physx.PxMaterialFlagsPtr pvk_in_lhs = lhs;
            physx.PxMaterialFlagsPtr pvk_in_f = f;
            return PxMaterialFlagsPtr_const_PxMaterialFlagsPtr_operator_Ptr_Amp_PxMaterialFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxMaterialFlagsPtr OpCaretEqual(physx.PxMaterialFlagsPtr lhs, physx.PxMaterialFlag e) {
            physx.PxMaterialFlagsPtr pvk_in_lhs = lhs;
            physx.PxMaterialFlag pvk_in_e = e;
            return PxMaterialFlagsPtr_PxMaterialFlagsPtr_operator_Ptr_CaretEqual_PxMaterialFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxMaterialFlagsPtr OpCaretEqual(physx.PxMaterialFlagsPtr lhs, physx.PxMaterialFlagsPtr f) {
            physx.PxMaterialFlagsPtr pvk_in_lhs = lhs;
            physx.PxMaterialFlagsPtr pvk_in_f = f;
            return PxMaterialFlagsPtr_PxMaterialFlagsPtr_operator_Ptr_CaretEqual_PxMaterialFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxMaterialFlagsPtr OpCaret_New(physx.PxMaterialFlagsPtr lhs, physx.PxMaterialFlag e) {
            physx.PxMaterialFlagsPtr pvk_in_lhs = lhs;
            physx.PxMaterialFlag pvk_in_e = e;
            return PxMaterialFlagsPtr_const_PxMaterialFlagsPtr_operator_Ptr_Caret_PxMaterialFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxMaterialFlagsPtr OpCaret_New(physx.PxMaterialFlagsPtr lhs, physx.PxMaterialFlagsPtr f) {
            physx.PxMaterialFlagsPtr pvk_in_lhs = lhs;
            physx.PxMaterialFlagsPtr pvk_in_f = f;
            return PxMaterialFlagsPtr_const_PxMaterialFlagsPtr_operator_Ptr_Caret_PxMaterialFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxMaterialFlagsPtr OpTilde_New(physx.PxMaterialFlagsPtr lhs) {
            physx.PxMaterialFlagsPtr pvk_in_lhs = lhs;
            return PxMaterialFlagsPtr_const_PxMaterialFlagsPtr_operator_Ptr_Tilde(pvk_in_lhs);
        }

        public static bool ToBool(physx.PxMaterialFlagsPtr lhs) {
            physx.PxMaterialFlagsPtr pvk_in_lhs = lhs;
            return bool_const_PxMaterialFlagsPtr_operator_boolPtr_Conversion(pvk_in_lhs);
        }

        public static byte ToByte(physx.PxMaterialFlagsPtr lhs) {
            physx.PxMaterialFlagsPtr pvk_in_lhs = lhs;
            return byte_const_PxMaterialFlagsPtr_operator_unsigned_charPtr_Conversion(pvk_in_lhs);
        }

        public static ushort ToUShort(physx.PxMaterialFlagsPtr lhs) {
            physx.PxMaterialFlagsPtr pvk_in_lhs = lhs;
            return ushort_const_PxMaterialFlagsPtr_operator_unsigned_shortPtr_Conversion(pvk_in_lhs);
        }

        public static uint ToUInt(physx.PxMaterialFlagsPtr lhs) {
            physx.PxMaterialFlagsPtr pvk_in_lhs = lhs;
            return uint_const_PxMaterialFlagsPtr_operator_unsigned_intPtr_Conversion(pvk_in_lhs);
        }

        public void clear(physx.PxMaterialFlag e) {
            physx.PxMaterialFlagsPtr pvk_in_this = this;
            physx.PxMaterialFlag pvk_in_e = e;
            void_PxMaterialFlagsPtr_clearPtr_PxMaterialFlag_(pvk_in_this, pvk_in_e);
        }

        public static bool operator==(physx.PxMaterialFlagsPtr lhs, physx.PxMaterialFlag e) {
            return physx.PxMaterialFlagsPtr.OpEquals(lhs, e);
        }
        public static bool operator==(physx.PxMaterialFlagsPtr lhs, physx.PxMaterialFlagsPtr f) {
            return physx.PxMaterialFlagsPtr.OpEquals(lhs, f);
        }
        public static bool operator==(physx.PxMaterialFlagsPtr lhs, bool b) {
            return physx.PxMaterialFlagsPtr.OpEquals(lhs, b);
        }
        public static bool operator!=(physx.PxMaterialFlagsPtr lhs, bool b) {
            return !(physx.PxMaterialFlagsPtr.OpEquals(lhs, b)); // Matching Operator
        }
        public static bool operator!=(physx.PxMaterialFlagsPtr lhs, physx.PxMaterialFlag e) {
            return physx.PxMaterialFlagsPtr.OpExclaimEqual(lhs, e);
        }
        public static bool operator!=(physx.PxMaterialFlagsPtr lhs, physx.PxMaterialFlagsPtr f) {
            return physx.PxMaterialFlagsPtr.OpExclaimEqual(lhs, f);
        }
    }

    public unsafe partial struct PxShapeFlagsPtr {
        private System.IntPtr nativePtr_;

        public static void Free(physx.PxShapeFlagsPtr ptr){
            Freer_physx_PxShapeFlagsPtr(ptr);
        }
        public void Free(){
            Freer_physx_PxShapeFlagsPtr(this);
        }

        public static physx.PxShapeFlagsPtr New(physx.PxEMPTY _) {
            physx.PxEMPTY pvk_in__ = _;
            return Ctor_PxShapeFlagsPtr_PxEMPTY(pvk_in__);
        }

        public static physx.PxShapeFlagsPtr New() {
            return Ctor_PxShapeFlagsPtr_();
        }

        public static physx.PxShapeFlagsPtr New(physx.PxShapeFlag e) {
            physx.PxShapeFlag pvk_in_e = e;
            return Ctor_PxShapeFlagsPtr_PxShapeFlag(pvk_in_e);
        }

        public static physx.PxShapeFlagsPtr New(physx.PxShapeFlagsPtr f) {
            physx.PxShapeFlagsPtr pvk_in_f = f;
            return Ctor_PxShapeFlagsPtr_PxShapeFlagsPtr(pvk_in_f);
        }

        public static physx.PxShapeFlagsPtr New(byte b) {
            byte pvk_in_b = b;
            return Ctor_PxShapeFlagsPtr_byte(pvk_in_b);
        }

        public bool isSet(physx.PxShapeFlag e) {
            physx.PxShapeFlagsPtr pvk_in_this = this;
            physx.PxShapeFlag pvk_in_e = e;
            return bool_const_PxShapeFlagsPtr_isSetPtr_PxShapeFlag_(pvk_in_this, pvk_in_e);
        }

        public physx.PxShapeFlagsPtr set(physx.PxShapeFlag e) {
            physx.PxShapeFlagsPtr pvk_in_this = this;
            physx.PxShapeFlag pvk_in_e = e;
            return PxShapeFlagsPtr_PxShapeFlagsPtr_setPtr_PxShapeFlag_(pvk_in_this, pvk_in_e);
        }

        public static bool OpEquals(physx.PxShapeFlagsPtr lhs, physx.PxShapeFlag e) {
            physx.PxShapeFlagsPtr pvk_in_lhs = lhs;
            physx.PxShapeFlag pvk_in_e = e;
            return bool_const_PxShapeFlagsPtr_operator_Ptr_EqualEqual_PxShapeFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static bool OpEquals(physx.PxShapeFlagsPtr lhs, physx.PxShapeFlagsPtr f) {
            physx.PxShapeFlagsPtr pvk_in_lhs = lhs;
            physx.PxShapeFlagsPtr pvk_in_f = f;
            return bool_const_PxShapeFlagsPtr_operator_Ptr_EqualEqual_PxShapeFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static bool OpEquals(physx.PxShapeFlagsPtr lhs, bool b) {
            physx.PxShapeFlagsPtr pvk_in_lhs = lhs;
            bool pvk_in_b = b;
            return bool_const_PxShapeFlagsPtr_operator_Ptr_EqualEqual_bool_(pvk_in_lhs, pvk_in_b);
        }

        public static bool OpExclaimEqual(physx.PxShapeFlagsPtr lhs, physx.PxShapeFlag e) {
            physx.PxShapeFlagsPtr pvk_in_lhs = lhs;
            physx.PxShapeFlag pvk_in_e = e;
            return bool_const_PxShapeFlagsPtr_operator_Ptr_ExclaimEqual_PxShapeFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static bool OpExclaimEqual(physx.PxShapeFlagsPtr lhs, physx.PxShapeFlagsPtr f) {
            physx.PxShapeFlagsPtr pvk_in_lhs = lhs;
            physx.PxShapeFlagsPtr pvk_in_f = f;
            return bool_const_PxShapeFlagsPtr_operator_Ptr_ExclaimEqual_PxShapeFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxShapeFlagsPtr OpEqual(physx.PxShapeFlagsPtr lhs, physx.PxShapeFlagsPtr f) {
            physx.PxShapeFlagsPtr pvk_in_lhs = lhs;
            physx.PxShapeFlagsPtr pvk_in_f = f;
            return PxShapeFlagsPtr_PxShapeFlagsPtr_operator_Ptr_Equal_PxShapeFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxShapeFlagsPtr OpEqual(physx.PxShapeFlagsPtr lhs, physx.PxShapeFlag e) {
            physx.PxShapeFlagsPtr pvk_in_lhs = lhs;
            physx.PxShapeFlag pvk_in_e = e;
            return PxShapeFlagsPtr_PxShapeFlagsPtr_operator_Ptr_Equal_PxShapeFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxShapeFlagsPtr OpPipeEqual(physx.PxShapeFlagsPtr lhs, physx.PxShapeFlag e) {
            physx.PxShapeFlagsPtr pvk_in_lhs = lhs;
            physx.PxShapeFlag pvk_in_e = e;
            return PxShapeFlagsPtr_PxShapeFlagsPtr_operator_Ptr_PipeEqual_PxShapeFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxShapeFlagsPtr OpPipeEqual(physx.PxShapeFlagsPtr lhs, physx.PxShapeFlagsPtr f) {
            physx.PxShapeFlagsPtr pvk_in_lhs = lhs;
            physx.PxShapeFlagsPtr pvk_in_f = f;
            return PxShapeFlagsPtr_PxShapeFlagsPtr_operator_Ptr_PipeEqual_PxShapeFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxShapeFlagsPtr OpPipe_New(physx.PxShapeFlagsPtr lhs, physx.PxShapeFlag e) {
            physx.PxShapeFlagsPtr pvk_in_lhs = lhs;
            physx.PxShapeFlag pvk_in_e = e;
            return PxShapeFlagsPtr_const_PxShapeFlagsPtr_operator_Ptr_Pipe_PxShapeFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxShapeFlagsPtr OpPipe_New(physx.PxShapeFlagsPtr lhs, physx.PxShapeFlagsPtr f) {
            physx.PxShapeFlagsPtr pvk_in_lhs = lhs;
            physx.PxShapeFlagsPtr pvk_in_f = f;
            return PxShapeFlagsPtr_const_PxShapeFlagsPtr_operator_Ptr_Pipe_PxShapeFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxShapeFlagsPtr OpAndEqual(physx.PxShapeFlagsPtr lhs, physx.PxShapeFlag e) {
            physx.PxShapeFlagsPtr pvk_in_lhs = lhs;
            physx.PxShapeFlag pvk_in_e = e;
            return PxShapeFlagsPtr_PxShapeFlagsPtr_operator_Ptr_AmpEqual_PxShapeFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxShapeFlagsPtr OpAndEqual(physx.PxShapeFlagsPtr lhs, physx.PxShapeFlagsPtr f) {
            physx.PxShapeFlagsPtr pvk_in_lhs = lhs;
            physx.PxShapeFlagsPtr pvk_in_f = f;
            return PxShapeFlagsPtr_PxShapeFlagsPtr_operator_Ptr_AmpEqual_PxShapeFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxShapeFlagsPtr OpAnd_New(physx.PxShapeFlagsPtr lhs, physx.PxShapeFlag e) {
            physx.PxShapeFlagsPtr pvk_in_lhs = lhs;
            physx.PxShapeFlag pvk_in_e = e;
            return PxShapeFlagsPtr_const_PxShapeFlagsPtr_operator_Ptr_Amp_PxShapeFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxShapeFlagsPtr OpAnd_New(physx.PxShapeFlagsPtr lhs, physx.PxShapeFlagsPtr f) {
            physx.PxShapeFlagsPtr pvk_in_lhs = lhs;
            physx.PxShapeFlagsPtr pvk_in_f = f;
            return PxShapeFlagsPtr_const_PxShapeFlagsPtr_operator_Ptr_Amp_PxShapeFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxShapeFlagsPtr OpCaretEqual(physx.PxShapeFlagsPtr lhs, physx.PxShapeFlag e) {
            physx.PxShapeFlagsPtr pvk_in_lhs = lhs;
            physx.PxShapeFlag pvk_in_e = e;
            return PxShapeFlagsPtr_PxShapeFlagsPtr_operator_Ptr_CaretEqual_PxShapeFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxShapeFlagsPtr OpCaretEqual(physx.PxShapeFlagsPtr lhs, physx.PxShapeFlagsPtr f) {
            physx.PxShapeFlagsPtr pvk_in_lhs = lhs;
            physx.PxShapeFlagsPtr pvk_in_f = f;
            return PxShapeFlagsPtr_PxShapeFlagsPtr_operator_Ptr_CaretEqual_PxShapeFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxShapeFlagsPtr OpCaret_New(physx.PxShapeFlagsPtr lhs, physx.PxShapeFlag e) {
            physx.PxShapeFlagsPtr pvk_in_lhs = lhs;
            physx.PxShapeFlag pvk_in_e = e;
            return PxShapeFlagsPtr_const_PxShapeFlagsPtr_operator_Ptr_Caret_PxShapeFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxShapeFlagsPtr OpCaret_New(physx.PxShapeFlagsPtr lhs, physx.PxShapeFlagsPtr f) {
            physx.PxShapeFlagsPtr pvk_in_lhs = lhs;
            physx.PxShapeFlagsPtr pvk_in_f = f;
            return PxShapeFlagsPtr_const_PxShapeFlagsPtr_operator_Ptr_Caret_PxShapeFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxShapeFlagsPtr OpTilde_New(physx.PxShapeFlagsPtr lhs) {
            physx.PxShapeFlagsPtr pvk_in_lhs = lhs;
            return PxShapeFlagsPtr_const_PxShapeFlagsPtr_operator_Ptr_Tilde(pvk_in_lhs);
        }

        public static bool ToBool(physx.PxShapeFlagsPtr lhs) {
            physx.PxShapeFlagsPtr pvk_in_lhs = lhs;
            return bool_const_PxShapeFlagsPtr_operator_boolPtr_Conversion(pvk_in_lhs);
        }

        public static byte ToByte(physx.PxShapeFlagsPtr lhs) {
            physx.PxShapeFlagsPtr pvk_in_lhs = lhs;
            return byte_const_PxShapeFlagsPtr_operator_unsigned_charPtr_Conversion(pvk_in_lhs);
        }

        public static ushort ToUShort(physx.PxShapeFlagsPtr lhs) {
            physx.PxShapeFlagsPtr pvk_in_lhs = lhs;
            return ushort_const_PxShapeFlagsPtr_operator_unsigned_shortPtr_Conversion(pvk_in_lhs);
        }

        public static uint ToUInt(physx.PxShapeFlagsPtr lhs) {
            physx.PxShapeFlagsPtr pvk_in_lhs = lhs;
            return uint_const_PxShapeFlagsPtr_operator_unsigned_intPtr_Conversion(pvk_in_lhs);
        }

        public void clear(physx.PxShapeFlag e) {
            physx.PxShapeFlagsPtr pvk_in_this = this;
            physx.PxShapeFlag pvk_in_e = e;
            void_PxShapeFlagsPtr_clearPtr_PxShapeFlag_(pvk_in_this, pvk_in_e);
        }

        public static bool operator==(physx.PxShapeFlagsPtr lhs, physx.PxShapeFlag e) {
            return physx.PxShapeFlagsPtr.OpEquals(lhs, e);
        }
        public static bool operator==(physx.PxShapeFlagsPtr lhs, physx.PxShapeFlagsPtr f) {
            return physx.PxShapeFlagsPtr.OpEquals(lhs, f);
        }
        public static bool operator==(physx.PxShapeFlagsPtr lhs, bool b) {
            return physx.PxShapeFlagsPtr.OpEquals(lhs, b);
        }
        public static bool operator!=(physx.PxShapeFlagsPtr lhs, bool b) {
            return !(physx.PxShapeFlagsPtr.OpEquals(lhs, b)); // Matching Operator
        }
        public static bool operator!=(physx.PxShapeFlagsPtr lhs, physx.PxShapeFlag e) {
            return physx.PxShapeFlagsPtr.OpExclaimEqual(lhs, e);
        }
        public static bool operator!=(physx.PxShapeFlagsPtr lhs, physx.PxShapeFlagsPtr f) {
            return physx.PxShapeFlagsPtr.OpExclaimEqual(lhs, f);
        }
    }

    public unsafe partial struct PxConstraintFlagsPtr {
        private System.IntPtr nativePtr_;

        public static void Free(physx.PxConstraintFlagsPtr ptr){
            Freer_physx_PxConstraintFlagsPtr(ptr);
        }
        public void Free(){
            Freer_physx_PxConstraintFlagsPtr(this);
        }

        public static physx.PxConstraintFlagsPtr New(physx.PxEMPTY _) {
            physx.PxEMPTY pvk_in__ = _;
            return Ctor_PxConstraintFlagsPtr_PxEMPTY(pvk_in__);
        }

        public static physx.PxConstraintFlagsPtr New() {
            return Ctor_PxConstraintFlagsPtr_();
        }

        public static physx.PxConstraintFlagsPtr New(physx.PxConstraintFlag e) {
            physx.PxConstraintFlag pvk_in_e = e;
            return Ctor_PxConstraintFlagsPtr_PxConstraintFlag(pvk_in_e);
        }

        public static physx.PxConstraintFlagsPtr New(physx.PxConstraintFlagsPtr f) {
            physx.PxConstraintFlagsPtr pvk_in_f = f;
            return Ctor_PxConstraintFlagsPtr_PxConstraintFlagsPtr(pvk_in_f);
        }

        public static physx.PxConstraintFlagsPtr New(ushort b) {
            ushort pvk_in_b = b;
            return Ctor_PxConstraintFlagsPtr_ushort(pvk_in_b);
        }

        public bool isSet(physx.PxConstraintFlag e) {
            physx.PxConstraintFlagsPtr pvk_in_this = this;
            physx.PxConstraintFlag pvk_in_e = e;
            return bool_const_PxConstraintFlagsPtr_isSetPtr_PxConstraintFlag_(pvk_in_this, pvk_in_e);
        }

        public physx.PxConstraintFlagsPtr set(physx.PxConstraintFlag e) {
            physx.PxConstraintFlagsPtr pvk_in_this = this;
            physx.PxConstraintFlag pvk_in_e = e;
            return PxConstraintFlagsPtr_PxConstraintFlagsPtr_setPtr_PxConstraintFlag_(pvk_in_this, pvk_in_e);
        }

        public static bool OpEquals(physx.PxConstraintFlagsPtr lhs, physx.PxConstraintFlag e) {
            physx.PxConstraintFlagsPtr pvk_in_lhs = lhs;
            physx.PxConstraintFlag pvk_in_e = e;
            return bool_const_PxConstraintFlagsPtr_operator_Ptr_EqualEqual_PxConstraintFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static bool OpEquals(physx.PxConstraintFlagsPtr lhs, physx.PxConstraintFlagsPtr f) {
            physx.PxConstraintFlagsPtr pvk_in_lhs = lhs;
            physx.PxConstraintFlagsPtr pvk_in_f = f;
            return bool_const_PxConstraintFlagsPtr_operator_Ptr_EqualEqual_PxConstraintFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static bool OpEquals(physx.PxConstraintFlagsPtr lhs, bool b) {
            physx.PxConstraintFlagsPtr pvk_in_lhs = lhs;
            bool pvk_in_b = b;
            return bool_const_PxConstraintFlagsPtr_operator_Ptr_EqualEqual_bool_(pvk_in_lhs, pvk_in_b);
        }

        public static bool OpExclaimEqual(physx.PxConstraintFlagsPtr lhs, physx.PxConstraintFlag e) {
            physx.PxConstraintFlagsPtr pvk_in_lhs = lhs;
            physx.PxConstraintFlag pvk_in_e = e;
            return bool_const_PxConstraintFlagsPtr_operator_Ptr_ExclaimEqual_PxConstraintFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static bool OpExclaimEqual(physx.PxConstraintFlagsPtr lhs, physx.PxConstraintFlagsPtr f) {
            physx.PxConstraintFlagsPtr pvk_in_lhs = lhs;
            physx.PxConstraintFlagsPtr pvk_in_f = f;
            return bool_const_PxConstraintFlagsPtr_operator_Ptr_ExclaimEqual_PxConstraintFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxConstraintFlagsPtr OpEqual(physx.PxConstraintFlagsPtr lhs, physx.PxConstraintFlagsPtr f) {
            physx.PxConstraintFlagsPtr pvk_in_lhs = lhs;
            physx.PxConstraintFlagsPtr pvk_in_f = f;
            return PxConstraintFlagsPtr_PxConstraintFlagsPtr_operator_Ptr_Equal_PxConstraintFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxConstraintFlagsPtr OpEqual(physx.PxConstraintFlagsPtr lhs, physx.PxConstraintFlag e) {
            physx.PxConstraintFlagsPtr pvk_in_lhs = lhs;
            physx.PxConstraintFlag pvk_in_e = e;
            return PxConstraintFlagsPtr_PxConstraintFlagsPtr_operator_Ptr_Equal_PxConstraintFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxConstraintFlagsPtr OpPipeEqual(physx.PxConstraintFlagsPtr lhs, physx.PxConstraintFlag e) {
            physx.PxConstraintFlagsPtr pvk_in_lhs = lhs;
            physx.PxConstraintFlag pvk_in_e = e;
            return PxConstraintFlagsPtr_PxConstraintFlagsPtr_operator_Ptr_PipeEqual_PxConstraintFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxConstraintFlagsPtr OpPipeEqual(physx.PxConstraintFlagsPtr lhs, physx.PxConstraintFlagsPtr f) {
            physx.PxConstraintFlagsPtr pvk_in_lhs = lhs;
            physx.PxConstraintFlagsPtr pvk_in_f = f;
            return PxConstraintFlagsPtr_PxConstraintFlagsPtr_operator_Ptr_PipeEqual_PxConstraintFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxConstraintFlagsPtr OpPipe_New(physx.PxConstraintFlagsPtr lhs, physx.PxConstraintFlag e) {
            physx.PxConstraintFlagsPtr pvk_in_lhs = lhs;
            physx.PxConstraintFlag pvk_in_e = e;
            return PxConstraintFlagsPtr_const_PxConstraintFlagsPtr_operator_Ptr_Pipe_PxConstraintFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxConstraintFlagsPtr OpPipe_New(physx.PxConstraintFlagsPtr lhs, physx.PxConstraintFlagsPtr f) {
            physx.PxConstraintFlagsPtr pvk_in_lhs = lhs;
            physx.PxConstraintFlagsPtr pvk_in_f = f;
            return PxConstraintFlagsPtr_const_PxConstraintFlagsPtr_operator_Ptr_Pipe_PxConstraintFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxConstraintFlagsPtr OpAndEqual(physx.PxConstraintFlagsPtr lhs, physx.PxConstraintFlag e) {
            physx.PxConstraintFlagsPtr pvk_in_lhs = lhs;
            physx.PxConstraintFlag pvk_in_e = e;
            return PxConstraintFlagsPtr_PxConstraintFlagsPtr_operator_Ptr_AmpEqual_PxConstraintFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxConstraintFlagsPtr OpAndEqual(physx.PxConstraintFlagsPtr lhs, physx.PxConstraintFlagsPtr f) {
            physx.PxConstraintFlagsPtr pvk_in_lhs = lhs;
            physx.PxConstraintFlagsPtr pvk_in_f = f;
            return PxConstraintFlagsPtr_PxConstraintFlagsPtr_operator_Ptr_AmpEqual_PxConstraintFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxConstraintFlagsPtr OpAnd_New(physx.PxConstraintFlagsPtr lhs, physx.PxConstraintFlag e) {
            physx.PxConstraintFlagsPtr pvk_in_lhs = lhs;
            physx.PxConstraintFlag pvk_in_e = e;
            return PxConstraintFlagsPtr_const_PxConstraintFlagsPtr_operator_Ptr_Amp_PxConstraintFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxConstraintFlagsPtr OpAnd_New(physx.PxConstraintFlagsPtr lhs, physx.PxConstraintFlagsPtr f) {
            physx.PxConstraintFlagsPtr pvk_in_lhs = lhs;
            physx.PxConstraintFlagsPtr pvk_in_f = f;
            return PxConstraintFlagsPtr_const_PxConstraintFlagsPtr_operator_Ptr_Amp_PxConstraintFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxConstraintFlagsPtr OpCaretEqual(physx.PxConstraintFlagsPtr lhs, physx.PxConstraintFlag e) {
            physx.PxConstraintFlagsPtr pvk_in_lhs = lhs;
            physx.PxConstraintFlag pvk_in_e = e;
            return PxConstraintFlagsPtr_PxConstraintFlagsPtr_operator_Ptr_CaretEqual_PxConstraintFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxConstraintFlagsPtr OpCaretEqual(physx.PxConstraintFlagsPtr lhs, physx.PxConstraintFlagsPtr f) {
            physx.PxConstraintFlagsPtr pvk_in_lhs = lhs;
            physx.PxConstraintFlagsPtr pvk_in_f = f;
            return PxConstraintFlagsPtr_PxConstraintFlagsPtr_operator_Ptr_CaretEqual_PxConstraintFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxConstraintFlagsPtr OpCaret_New(physx.PxConstraintFlagsPtr lhs, physx.PxConstraintFlag e) {
            physx.PxConstraintFlagsPtr pvk_in_lhs = lhs;
            physx.PxConstraintFlag pvk_in_e = e;
            return PxConstraintFlagsPtr_const_PxConstraintFlagsPtr_operator_Ptr_Caret_PxConstraintFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxConstraintFlagsPtr OpCaret_New(physx.PxConstraintFlagsPtr lhs, physx.PxConstraintFlagsPtr f) {
            physx.PxConstraintFlagsPtr pvk_in_lhs = lhs;
            physx.PxConstraintFlagsPtr pvk_in_f = f;
            return PxConstraintFlagsPtr_const_PxConstraintFlagsPtr_operator_Ptr_Caret_PxConstraintFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxConstraintFlagsPtr OpTilde_New(physx.PxConstraintFlagsPtr lhs) {
            physx.PxConstraintFlagsPtr pvk_in_lhs = lhs;
            return PxConstraintFlagsPtr_const_PxConstraintFlagsPtr_operator_Ptr_Tilde(pvk_in_lhs);
        }

        public static bool ToBool(physx.PxConstraintFlagsPtr lhs) {
            physx.PxConstraintFlagsPtr pvk_in_lhs = lhs;
            return bool_const_PxConstraintFlagsPtr_operator_boolPtr_Conversion(pvk_in_lhs);
        }

        public static byte ToByte(physx.PxConstraintFlagsPtr lhs) {
            physx.PxConstraintFlagsPtr pvk_in_lhs = lhs;
            return byte_const_PxConstraintFlagsPtr_operator_unsigned_charPtr_Conversion(pvk_in_lhs);
        }

        public static ushort ToUShort(physx.PxConstraintFlagsPtr lhs) {
            physx.PxConstraintFlagsPtr pvk_in_lhs = lhs;
            return ushort_const_PxConstraintFlagsPtr_operator_unsigned_shortPtr_Conversion(pvk_in_lhs);
        }

        public static uint ToUInt(physx.PxConstraintFlagsPtr lhs) {
            physx.PxConstraintFlagsPtr pvk_in_lhs = lhs;
            return uint_const_PxConstraintFlagsPtr_operator_unsigned_intPtr_Conversion(pvk_in_lhs);
        }

        public void clear(physx.PxConstraintFlag e) {
            physx.PxConstraintFlagsPtr pvk_in_this = this;
            physx.PxConstraintFlag pvk_in_e = e;
            void_PxConstraintFlagsPtr_clearPtr_PxConstraintFlag_(pvk_in_this, pvk_in_e);
        }

        public static bool operator==(physx.PxConstraintFlagsPtr lhs, physx.PxConstraintFlag e) {
            return physx.PxConstraintFlagsPtr.OpEquals(lhs, e);
        }
        public static bool operator==(physx.PxConstraintFlagsPtr lhs, physx.PxConstraintFlagsPtr f) {
            return physx.PxConstraintFlagsPtr.OpEquals(lhs, f);
        }
        public static bool operator==(physx.PxConstraintFlagsPtr lhs, bool b) {
            return physx.PxConstraintFlagsPtr.OpEquals(lhs, b);
        }
        public static bool operator!=(physx.PxConstraintFlagsPtr lhs, bool b) {
            return !(physx.PxConstraintFlagsPtr.OpEquals(lhs, b)); // Matching Operator
        }
        public static bool operator!=(physx.PxConstraintFlagsPtr lhs, physx.PxConstraintFlag e) {
            return physx.PxConstraintFlagsPtr.OpExclaimEqual(lhs, e);
        }
        public static bool operator!=(physx.PxConstraintFlagsPtr lhs, physx.PxConstraintFlagsPtr f) {
            return physx.PxConstraintFlagsPtr.OpExclaimEqual(lhs, f);
        }
    }

    public unsafe partial struct PxActorFlagsPtr {
        private System.IntPtr nativePtr_;

        public static void Free(physx.PxActorFlagsPtr ptr){
            Freer_physx_PxActorFlagsPtr(ptr);
        }
        public void Free(){
            Freer_physx_PxActorFlagsPtr(this);
        }

        public static physx.PxActorFlagsPtr New(physx.PxEMPTY _) {
            physx.PxEMPTY pvk_in__ = _;
            return Ctor_PxActorFlagsPtr_PxEMPTY(pvk_in__);
        }

        public static physx.PxActorFlagsPtr New() {
            return Ctor_PxActorFlagsPtr_();
        }

        public static physx.PxActorFlagsPtr New(physx.PxActorFlag e) {
            physx.PxActorFlag pvk_in_e = e;
            return Ctor_PxActorFlagsPtr_PxActorFlag(pvk_in_e);
        }

        public static physx.PxActorFlagsPtr New(physx.PxActorFlagsPtr f) {
            physx.PxActorFlagsPtr pvk_in_f = f;
            return Ctor_PxActorFlagsPtr_PxActorFlagsPtr(pvk_in_f);
        }

        public static physx.PxActorFlagsPtr New(byte b) {
            byte pvk_in_b = b;
            return Ctor_PxActorFlagsPtr_byte(pvk_in_b);
        }

        public bool isSet(physx.PxActorFlag e) {
            physx.PxActorFlagsPtr pvk_in_this = this;
            physx.PxActorFlag pvk_in_e = e;
            return bool_const_PxActorFlagsPtr_isSetPtr_PxActorFlag_(pvk_in_this, pvk_in_e);
        }

        public physx.PxActorFlagsPtr set(physx.PxActorFlag e) {
            physx.PxActorFlagsPtr pvk_in_this = this;
            physx.PxActorFlag pvk_in_e = e;
            return PxActorFlagsPtr_PxActorFlagsPtr_setPtr_PxActorFlag_(pvk_in_this, pvk_in_e);
        }

        public static bool OpEquals(physx.PxActorFlagsPtr lhs, physx.PxActorFlag e) {
            physx.PxActorFlagsPtr pvk_in_lhs = lhs;
            physx.PxActorFlag pvk_in_e = e;
            return bool_const_PxActorFlagsPtr_operator_Ptr_EqualEqual_PxActorFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static bool OpEquals(physx.PxActorFlagsPtr lhs, physx.PxActorFlagsPtr f) {
            physx.PxActorFlagsPtr pvk_in_lhs = lhs;
            physx.PxActorFlagsPtr pvk_in_f = f;
            return bool_const_PxActorFlagsPtr_operator_Ptr_EqualEqual_PxActorFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static bool OpEquals(physx.PxActorFlagsPtr lhs, bool b) {
            physx.PxActorFlagsPtr pvk_in_lhs = lhs;
            bool pvk_in_b = b;
            return bool_const_PxActorFlagsPtr_operator_Ptr_EqualEqual_bool_(pvk_in_lhs, pvk_in_b);
        }

        public static bool OpExclaimEqual(physx.PxActorFlagsPtr lhs, physx.PxActorFlag e) {
            physx.PxActorFlagsPtr pvk_in_lhs = lhs;
            physx.PxActorFlag pvk_in_e = e;
            return bool_const_PxActorFlagsPtr_operator_Ptr_ExclaimEqual_PxActorFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static bool OpExclaimEqual(physx.PxActorFlagsPtr lhs, physx.PxActorFlagsPtr f) {
            physx.PxActorFlagsPtr pvk_in_lhs = lhs;
            physx.PxActorFlagsPtr pvk_in_f = f;
            return bool_const_PxActorFlagsPtr_operator_Ptr_ExclaimEqual_PxActorFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxActorFlagsPtr OpEqual(physx.PxActorFlagsPtr lhs, physx.PxActorFlagsPtr f) {
            physx.PxActorFlagsPtr pvk_in_lhs = lhs;
            physx.PxActorFlagsPtr pvk_in_f = f;
            return PxActorFlagsPtr_PxActorFlagsPtr_operator_Ptr_Equal_PxActorFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxActorFlagsPtr OpEqual(physx.PxActorFlagsPtr lhs, physx.PxActorFlag e) {
            physx.PxActorFlagsPtr pvk_in_lhs = lhs;
            physx.PxActorFlag pvk_in_e = e;
            return PxActorFlagsPtr_PxActorFlagsPtr_operator_Ptr_Equal_PxActorFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxActorFlagsPtr OpPipeEqual(physx.PxActorFlagsPtr lhs, physx.PxActorFlag e) {
            physx.PxActorFlagsPtr pvk_in_lhs = lhs;
            physx.PxActorFlag pvk_in_e = e;
            return PxActorFlagsPtr_PxActorFlagsPtr_operator_Ptr_PipeEqual_PxActorFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxActorFlagsPtr OpPipeEqual(physx.PxActorFlagsPtr lhs, physx.PxActorFlagsPtr f) {
            physx.PxActorFlagsPtr pvk_in_lhs = lhs;
            physx.PxActorFlagsPtr pvk_in_f = f;
            return PxActorFlagsPtr_PxActorFlagsPtr_operator_Ptr_PipeEqual_PxActorFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxActorFlagsPtr OpPipe_New(physx.PxActorFlagsPtr lhs, physx.PxActorFlag e) {
            physx.PxActorFlagsPtr pvk_in_lhs = lhs;
            physx.PxActorFlag pvk_in_e = e;
            return PxActorFlagsPtr_const_PxActorFlagsPtr_operator_Ptr_Pipe_PxActorFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxActorFlagsPtr OpPipe_New(physx.PxActorFlagsPtr lhs, physx.PxActorFlagsPtr f) {
            physx.PxActorFlagsPtr pvk_in_lhs = lhs;
            physx.PxActorFlagsPtr pvk_in_f = f;
            return PxActorFlagsPtr_const_PxActorFlagsPtr_operator_Ptr_Pipe_PxActorFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxActorFlagsPtr OpAndEqual(physx.PxActorFlagsPtr lhs, physx.PxActorFlag e) {
            physx.PxActorFlagsPtr pvk_in_lhs = lhs;
            physx.PxActorFlag pvk_in_e = e;
            return PxActorFlagsPtr_PxActorFlagsPtr_operator_Ptr_AmpEqual_PxActorFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxActorFlagsPtr OpAndEqual(physx.PxActorFlagsPtr lhs, physx.PxActorFlagsPtr f) {
            physx.PxActorFlagsPtr pvk_in_lhs = lhs;
            physx.PxActorFlagsPtr pvk_in_f = f;
            return PxActorFlagsPtr_PxActorFlagsPtr_operator_Ptr_AmpEqual_PxActorFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxActorFlagsPtr OpAnd_New(physx.PxActorFlagsPtr lhs, physx.PxActorFlag e) {
            physx.PxActorFlagsPtr pvk_in_lhs = lhs;
            physx.PxActorFlag pvk_in_e = e;
            return PxActorFlagsPtr_const_PxActorFlagsPtr_operator_Ptr_Amp_PxActorFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxActorFlagsPtr OpAnd_New(physx.PxActorFlagsPtr lhs, physx.PxActorFlagsPtr f) {
            physx.PxActorFlagsPtr pvk_in_lhs = lhs;
            physx.PxActorFlagsPtr pvk_in_f = f;
            return PxActorFlagsPtr_const_PxActorFlagsPtr_operator_Ptr_Amp_PxActorFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxActorFlagsPtr OpCaretEqual(physx.PxActorFlagsPtr lhs, physx.PxActorFlag e) {
            physx.PxActorFlagsPtr pvk_in_lhs = lhs;
            physx.PxActorFlag pvk_in_e = e;
            return PxActorFlagsPtr_PxActorFlagsPtr_operator_Ptr_CaretEqual_PxActorFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxActorFlagsPtr OpCaretEqual(physx.PxActorFlagsPtr lhs, physx.PxActorFlagsPtr f) {
            physx.PxActorFlagsPtr pvk_in_lhs = lhs;
            physx.PxActorFlagsPtr pvk_in_f = f;
            return PxActorFlagsPtr_PxActorFlagsPtr_operator_Ptr_CaretEqual_PxActorFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxActorFlagsPtr OpCaret_New(physx.PxActorFlagsPtr lhs, physx.PxActorFlag e) {
            physx.PxActorFlagsPtr pvk_in_lhs = lhs;
            physx.PxActorFlag pvk_in_e = e;
            return PxActorFlagsPtr_const_PxActorFlagsPtr_operator_Ptr_Caret_PxActorFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxActorFlagsPtr OpCaret_New(physx.PxActorFlagsPtr lhs, physx.PxActorFlagsPtr f) {
            physx.PxActorFlagsPtr pvk_in_lhs = lhs;
            physx.PxActorFlagsPtr pvk_in_f = f;
            return PxActorFlagsPtr_const_PxActorFlagsPtr_operator_Ptr_Caret_PxActorFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxActorFlagsPtr OpTilde_New(physx.PxActorFlagsPtr lhs) {
            physx.PxActorFlagsPtr pvk_in_lhs = lhs;
            return PxActorFlagsPtr_const_PxActorFlagsPtr_operator_Ptr_Tilde(pvk_in_lhs);
        }

        public static bool ToBool(physx.PxActorFlagsPtr lhs) {
            physx.PxActorFlagsPtr pvk_in_lhs = lhs;
            return bool_const_PxActorFlagsPtr_operator_boolPtr_Conversion(pvk_in_lhs);
        }

        public static byte ToByte(physx.PxActorFlagsPtr lhs) {
            physx.PxActorFlagsPtr pvk_in_lhs = lhs;
            return byte_const_PxActorFlagsPtr_operator_unsigned_charPtr_Conversion(pvk_in_lhs);
        }

        public static ushort ToUShort(physx.PxActorFlagsPtr lhs) {
            physx.PxActorFlagsPtr pvk_in_lhs = lhs;
            return ushort_const_PxActorFlagsPtr_operator_unsigned_shortPtr_Conversion(pvk_in_lhs);
        }

        public static uint ToUInt(physx.PxActorFlagsPtr lhs) {
            physx.PxActorFlagsPtr pvk_in_lhs = lhs;
            return uint_const_PxActorFlagsPtr_operator_unsigned_intPtr_Conversion(pvk_in_lhs);
        }

        public void clear(physx.PxActorFlag e) {
            physx.PxActorFlagsPtr pvk_in_this = this;
            physx.PxActorFlag pvk_in_e = e;
            void_PxActorFlagsPtr_clearPtr_PxActorFlag_(pvk_in_this, pvk_in_e);
        }

        public static bool operator==(physx.PxActorFlagsPtr lhs, physx.PxActorFlag e) {
            return physx.PxActorFlagsPtr.OpEquals(lhs, e);
        }
        public static bool operator==(physx.PxActorFlagsPtr lhs, physx.PxActorFlagsPtr f) {
            return physx.PxActorFlagsPtr.OpEquals(lhs, f);
        }
        public static bool operator==(physx.PxActorFlagsPtr lhs, bool b) {
            return physx.PxActorFlagsPtr.OpEquals(lhs, b);
        }
        public static bool operator!=(physx.PxActorFlagsPtr lhs, bool b) {
            return !(physx.PxActorFlagsPtr.OpEquals(lhs, b)); // Matching Operator
        }
        public static bool operator!=(physx.PxActorFlagsPtr lhs, physx.PxActorFlag e) {
            return physx.PxActorFlagsPtr.OpExclaimEqual(lhs, e);
        }
        public static bool operator!=(physx.PxActorFlagsPtr lhs, physx.PxActorFlagsPtr f) {
            return physx.PxActorFlagsPtr.OpExclaimEqual(lhs, f);
        }
    }

    public unsafe partial struct PxRigidBodyFlagsPtr {
        private System.IntPtr nativePtr_;

        public static void Free(physx.PxRigidBodyFlagsPtr ptr){
            Freer_physx_PxRigidBodyFlagsPtr(ptr);
        }
        public void Free(){
            Freer_physx_PxRigidBodyFlagsPtr(this);
        }

        public static physx.PxRigidBodyFlagsPtr New(physx.PxEMPTY _) {
            physx.PxEMPTY pvk_in__ = _;
            return Ctor_PxRigidBodyFlagsPtr_PxEMPTY(pvk_in__);
        }

        public static physx.PxRigidBodyFlagsPtr New() {
            return Ctor_PxRigidBodyFlagsPtr_();
        }

        public static physx.PxRigidBodyFlagsPtr New(physx.PxRigidBodyFlag e) {
            physx.PxRigidBodyFlag pvk_in_e = e;
            return Ctor_PxRigidBodyFlagsPtr_PxRigidBodyFlag(pvk_in_e);
        }

        public static physx.PxRigidBodyFlagsPtr New(physx.PxRigidBodyFlagsPtr f) {
            physx.PxRigidBodyFlagsPtr pvk_in_f = f;
            return Ctor_PxRigidBodyFlagsPtr_PxRigidBodyFlagsPtr(pvk_in_f);
        }

        public static physx.PxRigidBodyFlagsPtr New(byte b) {
            byte pvk_in_b = b;
            return Ctor_PxRigidBodyFlagsPtr_byte(pvk_in_b);
        }

        public bool isSet(physx.PxRigidBodyFlag e) {
            physx.PxRigidBodyFlagsPtr pvk_in_this = this;
            physx.PxRigidBodyFlag pvk_in_e = e;
            return bool_const_PxRigidBodyFlagsPtr_isSetPtr_PxRigidBodyFlag_(pvk_in_this, pvk_in_e);
        }

        public physx.PxRigidBodyFlagsPtr set(physx.PxRigidBodyFlag e) {
            physx.PxRigidBodyFlagsPtr pvk_in_this = this;
            physx.PxRigidBodyFlag pvk_in_e = e;
            return PxRigidBodyFlagsPtr_PxRigidBodyFlagsPtr_setPtr_PxRigidBodyFlag_(pvk_in_this, pvk_in_e);
        }

        public static bool OpEquals(physx.PxRigidBodyFlagsPtr lhs, physx.PxRigidBodyFlag e) {
            physx.PxRigidBodyFlagsPtr pvk_in_lhs = lhs;
            physx.PxRigidBodyFlag pvk_in_e = e;
            return bool_const_PxRigidBodyFlagsPtr_operator_Ptr_EqualEqual_PxRigidBodyFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static bool OpEquals(physx.PxRigidBodyFlagsPtr lhs, physx.PxRigidBodyFlagsPtr f) {
            physx.PxRigidBodyFlagsPtr pvk_in_lhs = lhs;
            physx.PxRigidBodyFlagsPtr pvk_in_f = f;
            return bool_const_PxRigidBodyFlagsPtr_operator_Ptr_EqualEqual_PxRigidBodyFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static bool OpEquals(physx.PxRigidBodyFlagsPtr lhs, bool b) {
            physx.PxRigidBodyFlagsPtr pvk_in_lhs = lhs;
            bool pvk_in_b = b;
            return bool_const_PxRigidBodyFlagsPtr_operator_Ptr_EqualEqual_bool_(pvk_in_lhs, pvk_in_b);
        }

        public static bool OpExclaimEqual(physx.PxRigidBodyFlagsPtr lhs, physx.PxRigidBodyFlag e) {
            physx.PxRigidBodyFlagsPtr pvk_in_lhs = lhs;
            physx.PxRigidBodyFlag pvk_in_e = e;
            return bool_const_PxRigidBodyFlagsPtr_operator_Ptr_ExclaimEqual_PxRigidBodyFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static bool OpExclaimEqual(physx.PxRigidBodyFlagsPtr lhs, physx.PxRigidBodyFlagsPtr f) {
            physx.PxRigidBodyFlagsPtr pvk_in_lhs = lhs;
            physx.PxRigidBodyFlagsPtr pvk_in_f = f;
            return bool_const_PxRigidBodyFlagsPtr_operator_Ptr_ExclaimEqual_PxRigidBodyFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxRigidBodyFlagsPtr OpEqual(physx.PxRigidBodyFlagsPtr lhs, physx.PxRigidBodyFlagsPtr f) {
            physx.PxRigidBodyFlagsPtr pvk_in_lhs = lhs;
            physx.PxRigidBodyFlagsPtr pvk_in_f = f;
            return PxRigidBodyFlagsPtr_PxRigidBodyFlagsPtr_operator_Ptr_Equal_PxRigidBodyFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxRigidBodyFlagsPtr OpEqual(physx.PxRigidBodyFlagsPtr lhs, physx.PxRigidBodyFlag e) {
            physx.PxRigidBodyFlagsPtr pvk_in_lhs = lhs;
            physx.PxRigidBodyFlag pvk_in_e = e;
            return PxRigidBodyFlagsPtr_PxRigidBodyFlagsPtr_operator_Ptr_Equal_PxRigidBodyFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxRigidBodyFlagsPtr OpPipeEqual(physx.PxRigidBodyFlagsPtr lhs, physx.PxRigidBodyFlag e) {
            physx.PxRigidBodyFlagsPtr pvk_in_lhs = lhs;
            physx.PxRigidBodyFlag pvk_in_e = e;
            return PxRigidBodyFlagsPtr_PxRigidBodyFlagsPtr_operator_Ptr_PipeEqual_PxRigidBodyFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxRigidBodyFlagsPtr OpPipeEqual(physx.PxRigidBodyFlagsPtr lhs, physx.PxRigidBodyFlagsPtr f) {
            physx.PxRigidBodyFlagsPtr pvk_in_lhs = lhs;
            physx.PxRigidBodyFlagsPtr pvk_in_f = f;
            return PxRigidBodyFlagsPtr_PxRigidBodyFlagsPtr_operator_Ptr_PipeEqual_PxRigidBodyFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxRigidBodyFlagsPtr OpPipe_New(physx.PxRigidBodyFlagsPtr lhs, physx.PxRigidBodyFlag e) {
            physx.PxRigidBodyFlagsPtr pvk_in_lhs = lhs;
            physx.PxRigidBodyFlag pvk_in_e = e;
            return PxRigidBodyFlagsPtr_const_PxRigidBodyFlagsPtr_operator_Ptr_Pipe_PxRigidBodyFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxRigidBodyFlagsPtr OpPipe_New(physx.PxRigidBodyFlagsPtr lhs, physx.PxRigidBodyFlagsPtr f) {
            physx.PxRigidBodyFlagsPtr pvk_in_lhs = lhs;
            physx.PxRigidBodyFlagsPtr pvk_in_f = f;
            return PxRigidBodyFlagsPtr_const_PxRigidBodyFlagsPtr_operator_Ptr_Pipe_PxRigidBodyFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxRigidBodyFlagsPtr OpAndEqual(physx.PxRigidBodyFlagsPtr lhs, physx.PxRigidBodyFlag e) {
            physx.PxRigidBodyFlagsPtr pvk_in_lhs = lhs;
            physx.PxRigidBodyFlag pvk_in_e = e;
            return PxRigidBodyFlagsPtr_PxRigidBodyFlagsPtr_operator_Ptr_AmpEqual_PxRigidBodyFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxRigidBodyFlagsPtr OpAndEqual(physx.PxRigidBodyFlagsPtr lhs, physx.PxRigidBodyFlagsPtr f) {
            physx.PxRigidBodyFlagsPtr pvk_in_lhs = lhs;
            physx.PxRigidBodyFlagsPtr pvk_in_f = f;
            return PxRigidBodyFlagsPtr_PxRigidBodyFlagsPtr_operator_Ptr_AmpEqual_PxRigidBodyFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxRigidBodyFlagsPtr OpAnd_New(physx.PxRigidBodyFlagsPtr lhs, physx.PxRigidBodyFlag e) {
            physx.PxRigidBodyFlagsPtr pvk_in_lhs = lhs;
            physx.PxRigidBodyFlag pvk_in_e = e;
            return PxRigidBodyFlagsPtr_const_PxRigidBodyFlagsPtr_operator_Ptr_Amp_PxRigidBodyFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxRigidBodyFlagsPtr OpAnd_New(physx.PxRigidBodyFlagsPtr lhs, physx.PxRigidBodyFlagsPtr f) {
            physx.PxRigidBodyFlagsPtr pvk_in_lhs = lhs;
            physx.PxRigidBodyFlagsPtr pvk_in_f = f;
            return PxRigidBodyFlagsPtr_const_PxRigidBodyFlagsPtr_operator_Ptr_Amp_PxRigidBodyFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxRigidBodyFlagsPtr OpCaretEqual(physx.PxRigidBodyFlagsPtr lhs, physx.PxRigidBodyFlag e) {
            physx.PxRigidBodyFlagsPtr pvk_in_lhs = lhs;
            physx.PxRigidBodyFlag pvk_in_e = e;
            return PxRigidBodyFlagsPtr_PxRigidBodyFlagsPtr_operator_Ptr_CaretEqual_PxRigidBodyFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxRigidBodyFlagsPtr OpCaretEqual(physx.PxRigidBodyFlagsPtr lhs, physx.PxRigidBodyFlagsPtr f) {
            physx.PxRigidBodyFlagsPtr pvk_in_lhs = lhs;
            physx.PxRigidBodyFlagsPtr pvk_in_f = f;
            return PxRigidBodyFlagsPtr_PxRigidBodyFlagsPtr_operator_Ptr_CaretEqual_PxRigidBodyFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxRigidBodyFlagsPtr OpCaret_New(physx.PxRigidBodyFlagsPtr lhs, physx.PxRigidBodyFlag e) {
            physx.PxRigidBodyFlagsPtr pvk_in_lhs = lhs;
            physx.PxRigidBodyFlag pvk_in_e = e;
            return PxRigidBodyFlagsPtr_const_PxRigidBodyFlagsPtr_operator_Ptr_Caret_PxRigidBodyFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxRigidBodyFlagsPtr OpCaret_New(physx.PxRigidBodyFlagsPtr lhs, physx.PxRigidBodyFlagsPtr f) {
            physx.PxRigidBodyFlagsPtr pvk_in_lhs = lhs;
            physx.PxRigidBodyFlagsPtr pvk_in_f = f;
            return PxRigidBodyFlagsPtr_const_PxRigidBodyFlagsPtr_operator_Ptr_Caret_PxRigidBodyFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxRigidBodyFlagsPtr OpTilde_New(physx.PxRigidBodyFlagsPtr lhs) {
            physx.PxRigidBodyFlagsPtr pvk_in_lhs = lhs;
            return PxRigidBodyFlagsPtr_const_PxRigidBodyFlagsPtr_operator_Ptr_Tilde(pvk_in_lhs);
        }

        public static bool ToBool(physx.PxRigidBodyFlagsPtr lhs) {
            physx.PxRigidBodyFlagsPtr pvk_in_lhs = lhs;
            return bool_const_PxRigidBodyFlagsPtr_operator_boolPtr_Conversion(pvk_in_lhs);
        }

        public static byte ToByte(physx.PxRigidBodyFlagsPtr lhs) {
            physx.PxRigidBodyFlagsPtr pvk_in_lhs = lhs;
            return byte_const_PxRigidBodyFlagsPtr_operator_unsigned_charPtr_Conversion(pvk_in_lhs);
        }

        public static ushort ToUShort(physx.PxRigidBodyFlagsPtr lhs) {
            physx.PxRigidBodyFlagsPtr pvk_in_lhs = lhs;
            return ushort_const_PxRigidBodyFlagsPtr_operator_unsigned_shortPtr_Conversion(pvk_in_lhs);
        }

        public static uint ToUInt(physx.PxRigidBodyFlagsPtr lhs) {
            physx.PxRigidBodyFlagsPtr pvk_in_lhs = lhs;
            return uint_const_PxRigidBodyFlagsPtr_operator_unsigned_intPtr_Conversion(pvk_in_lhs);
        }

        public void clear(physx.PxRigidBodyFlag e) {
            physx.PxRigidBodyFlagsPtr pvk_in_this = this;
            physx.PxRigidBodyFlag pvk_in_e = e;
            void_PxRigidBodyFlagsPtr_clearPtr_PxRigidBodyFlag_(pvk_in_this, pvk_in_e);
        }

        public static bool operator==(physx.PxRigidBodyFlagsPtr lhs, physx.PxRigidBodyFlag e) {
            return physx.PxRigidBodyFlagsPtr.OpEquals(lhs, e);
        }
        public static bool operator==(physx.PxRigidBodyFlagsPtr lhs, physx.PxRigidBodyFlagsPtr f) {
            return physx.PxRigidBodyFlagsPtr.OpEquals(lhs, f);
        }
        public static bool operator==(physx.PxRigidBodyFlagsPtr lhs, bool b) {
            return physx.PxRigidBodyFlagsPtr.OpEquals(lhs, b);
        }
        public static bool operator!=(physx.PxRigidBodyFlagsPtr lhs, bool b) {
            return !(physx.PxRigidBodyFlagsPtr.OpEquals(lhs, b)); // Matching Operator
        }
        public static bool operator!=(physx.PxRigidBodyFlagsPtr lhs, physx.PxRigidBodyFlag e) {
            return physx.PxRigidBodyFlagsPtr.OpExclaimEqual(lhs, e);
        }
        public static bool operator!=(physx.PxRigidBodyFlagsPtr lhs, physx.PxRigidBodyFlagsPtr f) {
            return physx.PxRigidBodyFlagsPtr.OpExclaimEqual(lhs, f);
        }
    }

    public unsafe partial struct PxActorTypeFlagsPtr {
        private System.IntPtr nativePtr_;

        public static void Free(physx.PxActorTypeFlagsPtr ptr){
            Freer_physx_PxActorTypeFlagsPtr(ptr);
        }
        public void Free(){
            Freer_physx_PxActorTypeFlagsPtr(this);
        }

        public static physx.PxActorTypeFlagsPtr New(physx.PxEMPTY _) {
            physx.PxEMPTY pvk_in__ = _;
            return Ctor_PxActorTypeFlagsPtr_PxEMPTY(pvk_in__);
        }

        public static physx.PxActorTypeFlagsPtr New() {
            return Ctor_PxActorTypeFlagsPtr_();
        }

        public static physx.PxActorTypeFlagsPtr New(physx.PxActorTypeFlag e) {
            physx.PxActorTypeFlag pvk_in_e = e;
            return Ctor_PxActorTypeFlagsPtr_PxActorTypeFlag(pvk_in_e);
        }

        public static physx.PxActorTypeFlagsPtr New(physx.PxActorTypeFlagsPtr f) {
            physx.PxActorTypeFlagsPtr pvk_in_f = f;
            return Ctor_PxActorTypeFlagsPtr_PxActorTypeFlagsPtr(pvk_in_f);
        }

        public static physx.PxActorTypeFlagsPtr New(ushort b) {
            ushort pvk_in_b = b;
            return Ctor_PxActorTypeFlagsPtr_ushort(pvk_in_b);
        }

        public bool isSet(physx.PxActorTypeFlag e) {
            physx.PxActorTypeFlagsPtr pvk_in_this = this;
            physx.PxActorTypeFlag pvk_in_e = e;
            return bool_const_PxActorTypeFlagsPtr_isSetPtr_PxActorTypeFlag_(pvk_in_this, pvk_in_e);
        }

        public physx.PxActorTypeFlagsPtr set(physx.PxActorTypeFlag e) {
            physx.PxActorTypeFlagsPtr pvk_in_this = this;
            physx.PxActorTypeFlag pvk_in_e = e;
            return PxActorTypeFlagsPtr_PxActorTypeFlagsPtr_setPtr_PxActorTypeFlag_(pvk_in_this, pvk_in_e);
        }

        public static bool OpEquals(physx.PxActorTypeFlagsPtr lhs, physx.PxActorTypeFlag e) {
            physx.PxActorTypeFlagsPtr pvk_in_lhs = lhs;
            physx.PxActorTypeFlag pvk_in_e = e;
            return bool_const_PxActorTypeFlagsPtr_operator_Ptr_EqualEqual_PxActorTypeFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static bool OpEquals(physx.PxActorTypeFlagsPtr lhs, physx.PxActorTypeFlagsPtr f) {
            physx.PxActorTypeFlagsPtr pvk_in_lhs = lhs;
            physx.PxActorTypeFlagsPtr pvk_in_f = f;
            return bool_const_PxActorTypeFlagsPtr_operator_Ptr_EqualEqual_PxActorTypeFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static bool OpEquals(physx.PxActorTypeFlagsPtr lhs, bool b) {
            physx.PxActorTypeFlagsPtr pvk_in_lhs = lhs;
            bool pvk_in_b = b;
            return bool_const_PxActorTypeFlagsPtr_operator_Ptr_EqualEqual_bool_(pvk_in_lhs, pvk_in_b);
        }

        public static bool OpExclaimEqual(physx.PxActorTypeFlagsPtr lhs, physx.PxActorTypeFlag e) {
            physx.PxActorTypeFlagsPtr pvk_in_lhs = lhs;
            physx.PxActorTypeFlag pvk_in_e = e;
            return bool_const_PxActorTypeFlagsPtr_operator_Ptr_ExclaimEqual_PxActorTypeFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static bool OpExclaimEqual(physx.PxActorTypeFlagsPtr lhs, physx.PxActorTypeFlagsPtr f) {
            physx.PxActorTypeFlagsPtr pvk_in_lhs = lhs;
            physx.PxActorTypeFlagsPtr pvk_in_f = f;
            return bool_const_PxActorTypeFlagsPtr_operator_Ptr_ExclaimEqual_PxActorTypeFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxActorTypeFlagsPtr OpEqual(physx.PxActorTypeFlagsPtr lhs, physx.PxActorTypeFlagsPtr f) {
            physx.PxActorTypeFlagsPtr pvk_in_lhs = lhs;
            physx.PxActorTypeFlagsPtr pvk_in_f = f;
            return PxActorTypeFlagsPtr_PxActorTypeFlagsPtr_operator_Ptr_Equal_PxActorTypeFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxActorTypeFlagsPtr OpEqual(physx.PxActorTypeFlagsPtr lhs, physx.PxActorTypeFlag e) {
            physx.PxActorTypeFlagsPtr pvk_in_lhs = lhs;
            physx.PxActorTypeFlag pvk_in_e = e;
            return PxActorTypeFlagsPtr_PxActorTypeFlagsPtr_operator_Ptr_Equal_PxActorTypeFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxActorTypeFlagsPtr OpPipeEqual(physx.PxActorTypeFlagsPtr lhs, physx.PxActorTypeFlag e) {
            physx.PxActorTypeFlagsPtr pvk_in_lhs = lhs;
            physx.PxActorTypeFlag pvk_in_e = e;
            return PxActorTypeFlagsPtr_PxActorTypeFlagsPtr_operator_Ptr_PipeEqual_PxActorTypeFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxActorTypeFlagsPtr OpPipeEqual(physx.PxActorTypeFlagsPtr lhs, physx.PxActorTypeFlagsPtr f) {
            physx.PxActorTypeFlagsPtr pvk_in_lhs = lhs;
            physx.PxActorTypeFlagsPtr pvk_in_f = f;
            return PxActorTypeFlagsPtr_PxActorTypeFlagsPtr_operator_Ptr_PipeEqual_PxActorTypeFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxActorTypeFlagsPtr OpPipe_New(physx.PxActorTypeFlagsPtr lhs, physx.PxActorTypeFlag e) {
            physx.PxActorTypeFlagsPtr pvk_in_lhs = lhs;
            physx.PxActorTypeFlag pvk_in_e = e;
            return PxActorTypeFlagsPtr_const_PxActorTypeFlagsPtr_operator_Ptr_Pipe_PxActorTypeFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxActorTypeFlagsPtr OpPipe_New(physx.PxActorTypeFlagsPtr lhs, physx.PxActorTypeFlagsPtr f) {
            physx.PxActorTypeFlagsPtr pvk_in_lhs = lhs;
            physx.PxActorTypeFlagsPtr pvk_in_f = f;
            return PxActorTypeFlagsPtr_const_PxActorTypeFlagsPtr_operator_Ptr_Pipe_PxActorTypeFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxActorTypeFlagsPtr OpAndEqual(physx.PxActorTypeFlagsPtr lhs, physx.PxActorTypeFlag e) {
            physx.PxActorTypeFlagsPtr pvk_in_lhs = lhs;
            physx.PxActorTypeFlag pvk_in_e = e;
            return PxActorTypeFlagsPtr_PxActorTypeFlagsPtr_operator_Ptr_AmpEqual_PxActorTypeFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxActorTypeFlagsPtr OpAndEqual(physx.PxActorTypeFlagsPtr lhs, physx.PxActorTypeFlagsPtr f) {
            physx.PxActorTypeFlagsPtr pvk_in_lhs = lhs;
            physx.PxActorTypeFlagsPtr pvk_in_f = f;
            return PxActorTypeFlagsPtr_PxActorTypeFlagsPtr_operator_Ptr_AmpEqual_PxActorTypeFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxActorTypeFlagsPtr OpAnd_New(physx.PxActorTypeFlagsPtr lhs, physx.PxActorTypeFlag e) {
            physx.PxActorTypeFlagsPtr pvk_in_lhs = lhs;
            physx.PxActorTypeFlag pvk_in_e = e;
            return PxActorTypeFlagsPtr_const_PxActorTypeFlagsPtr_operator_Ptr_Amp_PxActorTypeFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxActorTypeFlagsPtr OpAnd_New(physx.PxActorTypeFlagsPtr lhs, physx.PxActorTypeFlagsPtr f) {
            physx.PxActorTypeFlagsPtr pvk_in_lhs = lhs;
            physx.PxActorTypeFlagsPtr pvk_in_f = f;
            return PxActorTypeFlagsPtr_const_PxActorTypeFlagsPtr_operator_Ptr_Amp_PxActorTypeFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxActorTypeFlagsPtr OpCaretEqual(physx.PxActorTypeFlagsPtr lhs, physx.PxActorTypeFlag e) {
            physx.PxActorTypeFlagsPtr pvk_in_lhs = lhs;
            physx.PxActorTypeFlag pvk_in_e = e;
            return PxActorTypeFlagsPtr_PxActorTypeFlagsPtr_operator_Ptr_CaretEqual_PxActorTypeFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxActorTypeFlagsPtr OpCaretEqual(physx.PxActorTypeFlagsPtr lhs, physx.PxActorTypeFlagsPtr f) {
            physx.PxActorTypeFlagsPtr pvk_in_lhs = lhs;
            physx.PxActorTypeFlagsPtr pvk_in_f = f;
            return PxActorTypeFlagsPtr_PxActorTypeFlagsPtr_operator_Ptr_CaretEqual_PxActorTypeFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxActorTypeFlagsPtr OpCaret_New(physx.PxActorTypeFlagsPtr lhs, physx.PxActorTypeFlag e) {
            physx.PxActorTypeFlagsPtr pvk_in_lhs = lhs;
            physx.PxActorTypeFlag pvk_in_e = e;
            return PxActorTypeFlagsPtr_const_PxActorTypeFlagsPtr_operator_Ptr_Caret_PxActorTypeFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxActorTypeFlagsPtr OpCaret_New(physx.PxActorTypeFlagsPtr lhs, physx.PxActorTypeFlagsPtr f) {
            physx.PxActorTypeFlagsPtr pvk_in_lhs = lhs;
            physx.PxActorTypeFlagsPtr pvk_in_f = f;
            return PxActorTypeFlagsPtr_const_PxActorTypeFlagsPtr_operator_Ptr_Caret_PxActorTypeFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxActorTypeFlagsPtr OpTilde_New(physx.PxActorTypeFlagsPtr lhs) {
            physx.PxActorTypeFlagsPtr pvk_in_lhs = lhs;
            return PxActorTypeFlagsPtr_const_PxActorTypeFlagsPtr_operator_Ptr_Tilde(pvk_in_lhs);
        }

        public static bool ToBool(physx.PxActorTypeFlagsPtr lhs) {
            physx.PxActorTypeFlagsPtr pvk_in_lhs = lhs;
            return bool_const_PxActorTypeFlagsPtr_operator_boolPtr_Conversion(pvk_in_lhs);
        }

        public static byte ToByte(physx.PxActorTypeFlagsPtr lhs) {
            physx.PxActorTypeFlagsPtr pvk_in_lhs = lhs;
            return byte_const_PxActorTypeFlagsPtr_operator_unsigned_charPtr_Conversion(pvk_in_lhs);
        }

        public static ushort ToUShort(physx.PxActorTypeFlagsPtr lhs) {
            physx.PxActorTypeFlagsPtr pvk_in_lhs = lhs;
            return ushort_const_PxActorTypeFlagsPtr_operator_unsigned_shortPtr_Conversion(pvk_in_lhs);
        }

        public static uint ToUInt(physx.PxActorTypeFlagsPtr lhs) {
            physx.PxActorTypeFlagsPtr pvk_in_lhs = lhs;
            return uint_const_PxActorTypeFlagsPtr_operator_unsigned_intPtr_Conversion(pvk_in_lhs);
        }

        public void clear(physx.PxActorTypeFlag e) {
            physx.PxActorTypeFlagsPtr pvk_in_this = this;
            physx.PxActorTypeFlag pvk_in_e = e;
            void_PxActorTypeFlagsPtr_clearPtr_PxActorTypeFlag_(pvk_in_this, pvk_in_e);
        }

        public static bool operator==(physx.PxActorTypeFlagsPtr lhs, physx.PxActorTypeFlag e) {
            return physx.PxActorTypeFlagsPtr.OpEquals(lhs, e);
        }
        public static bool operator==(physx.PxActorTypeFlagsPtr lhs, physx.PxActorTypeFlagsPtr f) {
            return physx.PxActorTypeFlagsPtr.OpEquals(lhs, f);
        }
        public static bool operator==(physx.PxActorTypeFlagsPtr lhs, bool b) {
            return physx.PxActorTypeFlagsPtr.OpEquals(lhs, b);
        }
        public static bool operator!=(physx.PxActorTypeFlagsPtr lhs, bool b) {
            return !(physx.PxActorTypeFlagsPtr.OpEquals(lhs, b)); // Matching Operator
        }
        public static bool operator!=(physx.PxActorTypeFlagsPtr lhs, physx.PxActorTypeFlag e) {
            return physx.PxActorTypeFlagsPtr.OpExclaimEqual(lhs, e);
        }
        public static bool operator!=(physx.PxActorTypeFlagsPtr lhs, physx.PxActorTypeFlagsPtr f) {
            return physx.PxActorTypeFlagsPtr.OpExclaimEqual(lhs, f);
        }
    }

    public unsafe partial struct PxFilterFlagsPtr {
        private System.IntPtr nativePtr_;

        public static void Free(physx.PxFilterFlagsPtr ptr){
            Freer_physx_PxFilterFlagsPtr(ptr);
        }
        public void Free(){
            Freer_physx_PxFilterFlagsPtr(this);
        }

        public static physx.PxFilterFlagsPtr New(physx.PxEMPTY _) {
            physx.PxEMPTY pvk_in__ = _;
            return Ctor_PxFilterFlagsPtr_PxEMPTY(pvk_in__);
        }

        public static physx.PxFilterFlagsPtr New() {
            return Ctor_PxFilterFlagsPtr_();
        }

        public static physx.PxFilterFlagsPtr New(physx.PxFilterFlag e) {
            physx.PxFilterFlag pvk_in_e = e;
            return Ctor_PxFilterFlagsPtr_PxFilterFlag(pvk_in_e);
        }

        public static physx.PxFilterFlagsPtr New(physx.PxFilterFlagsPtr f) {
            physx.PxFilterFlagsPtr pvk_in_f = f;
            return Ctor_PxFilterFlagsPtr_PxFilterFlagsPtr(pvk_in_f);
        }

        public static physx.PxFilterFlagsPtr New(ushort b) {
            ushort pvk_in_b = b;
            return Ctor_PxFilterFlagsPtr_ushort(pvk_in_b);
        }

        public bool isSet(physx.PxFilterFlag e) {
            physx.PxFilterFlagsPtr pvk_in_this = this;
            physx.PxFilterFlag pvk_in_e = e;
            return bool_const_PxFilterFlagsPtr_isSetPtr_PxFilterFlag_(pvk_in_this, pvk_in_e);
        }

        public physx.PxFilterFlagsPtr set(physx.PxFilterFlag e) {
            physx.PxFilterFlagsPtr pvk_in_this = this;
            physx.PxFilterFlag pvk_in_e = e;
            return PxFilterFlagsPtr_PxFilterFlagsPtr_setPtr_PxFilterFlag_(pvk_in_this, pvk_in_e);
        }

        public static bool OpEquals(physx.PxFilterFlagsPtr lhs, physx.PxFilterFlag e) {
            physx.PxFilterFlagsPtr pvk_in_lhs = lhs;
            physx.PxFilterFlag pvk_in_e = e;
            return bool_const_PxFilterFlagsPtr_operator_Ptr_EqualEqual_PxFilterFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static bool OpEquals(physx.PxFilterFlagsPtr lhs, physx.PxFilterFlagsPtr f) {
            physx.PxFilterFlagsPtr pvk_in_lhs = lhs;
            physx.PxFilterFlagsPtr pvk_in_f = f;
            return bool_const_PxFilterFlagsPtr_operator_Ptr_EqualEqual_PxFilterFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static bool OpEquals(physx.PxFilterFlagsPtr lhs, bool b) {
            physx.PxFilterFlagsPtr pvk_in_lhs = lhs;
            bool pvk_in_b = b;
            return bool_const_PxFilterFlagsPtr_operator_Ptr_EqualEqual_bool_(pvk_in_lhs, pvk_in_b);
        }

        public static bool OpExclaimEqual(physx.PxFilterFlagsPtr lhs, physx.PxFilterFlag e) {
            physx.PxFilterFlagsPtr pvk_in_lhs = lhs;
            physx.PxFilterFlag pvk_in_e = e;
            return bool_const_PxFilterFlagsPtr_operator_Ptr_ExclaimEqual_PxFilterFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static bool OpExclaimEqual(physx.PxFilterFlagsPtr lhs, physx.PxFilterFlagsPtr f) {
            physx.PxFilterFlagsPtr pvk_in_lhs = lhs;
            physx.PxFilterFlagsPtr pvk_in_f = f;
            return bool_const_PxFilterFlagsPtr_operator_Ptr_ExclaimEqual_PxFilterFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxFilterFlagsPtr OpEqual(physx.PxFilterFlagsPtr lhs, physx.PxFilterFlagsPtr f) {
            physx.PxFilterFlagsPtr pvk_in_lhs = lhs;
            physx.PxFilterFlagsPtr pvk_in_f = f;
            return PxFilterFlagsPtr_PxFilterFlagsPtr_operator_Ptr_Equal_PxFilterFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxFilterFlagsPtr OpEqual(physx.PxFilterFlagsPtr lhs, physx.PxFilterFlag e) {
            physx.PxFilterFlagsPtr pvk_in_lhs = lhs;
            physx.PxFilterFlag pvk_in_e = e;
            return PxFilterFlagsPtr_PxFilterFlagsPtr_operator_Ptr_Equal_PxFilterFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxFilterFlagsPtr OpPipeEqual(physx.PxFilterFlagsPtr lhs, physx.PxFilterFlag e) {
            physx.PxFilterFlagsPtr pvk_in_lhs = lhs;
            physx.PxFilterFlag pvk_in_e = e;
            return PxFilterFlagsPtr_PxFilterFlagsPtr_operator_Ptr_PipeEqual_PxFilterFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxFilterFlagsPtr OpPipeEqual(physx.PxFilterFlagsPtr lhs, physx.PxFilterFlagsPtr f) {
            physx.PxFilterFlagsPtr pvk_in_lhs = lhs;
            physx.PxFilterFlagsPtr pvk_in_f = f;
            return PxFilterFlagsPtr_PxFilterFlagsPtr_operator_Ptr_PipeEqual_PxFilterFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxFilterFlagsPtr OpPipe_New(physx.PxFilterFlagsPtr lhs, physx.PxFilterFlag e) {
            physx.PxFilterFlagsPtr pvk_in_lhs = lhs;
            physx.PxFilterFlag pvk_in_e = e;
            return PxFilterFlagsPtr_const_PxFilterFlagsPtr_operator_Ptr_Pipe_PxFilterFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxFilterFlagsPtr OpPipe_New(physx.PxFilterFlagsPtr lhs, physx.PxFilterFlagsPtr f) {
            physx.PxFilterFlagsPtr pvk_in_lhs = lhs;
            physx.PxFilterFlagsPtr pvk_in_f = f;
            return PxFilterFlagsPtr_const_PxFilterFlagsPtr_operator_Ptr_Pipe_PxFilterFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxFilterFlagsPtr OpAndEqual(physx.PxFilterFlagsPtr lhs, physx.PxFilterFlag e) {
            physx.PxFilterFlagsPtr pvk_in_lhs = lhs;
            physx.PxFilterFlag pvk_in_e = e;
            return PxFilterFlagsPtr_PxFilterFlagsPtr_operator_Ptr_AmpEqual_PxFilterFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxFilterFlagsPtr OpAndEqual(physx.PxFilterFlagsPtr lhs, physx.PxFilterFlagsPtr f) {
            physx.PxFilterFlagsPtr pvk_in_lhs = lhs;
            physx.PxFilterFlagsPtr pvk_in_f = f;
            return PxFilterFlagsPtr_PxFilterFlagsPtr_operator_Ptr_AmpEqual_PxFilterFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxFilterFlagsPtr OpAnd_New(physx.PxFilterFlagsPtr lhs, physx.PxFilterFlag e) {
            physx.PxFilterFlagsPtr pvk_in_lhs = lhs;
            physx.PxFilterFlag pvk_in_e = e;
            return PxFilterFlagsPtr_const_PxFilterFlagsPtr_operator_Ptr_Amp_PxFilterFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxFilterFlagsPtr OpAnd_New(physx.PxFilterFlagsPtr lhs, physx.PxFilterFlagsPtr f) {
            physx.PxFilterFlagsPtr pvk_in_lhs = lhs;
            physx.PxFilterFlagsPtr pvk_in_f = f;
            return PxFilterFlagsPtr_const_PxFilterFlagsPtr_operator_Ptr_Amp_PxFilterFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxFilterFlagsPtr OpCaretEqual(physx.PxFilterFlagsPtr lhs, physx.PxFilterFlag e) {
            physx.PxFilterFlagsPtr pvk_in_lhs = lhs;
            physx.PxFilterFlag pvk_in_e = e;
            return PxFilterFlagsPtr_PxFilterFlagsPtr_operator_Ptr_CaretEqual_PxFilterFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxFilterFlagsPtr OpCaretEqual(physx.PxFilterFlagsPtr lhs, physx.PxFilterFlagsPtr f) {
            physx.PxFilterFlagsPtr pvk_in_lhs = lhs;
            physx.PxFilterFlagsPtr pvk_in_f = f;
            return PxFilterFlagsPtr_PxFilterFlagsPtr_operator_Ptr_CaretEqual_PxFilterFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxFilterFlagsPtr OpCaret_New(physx.PxFilterFlagsPtr lhs, physx.PxFilterFlag e) {
            physx.PxFilterFlagsPtr pvk_in_lhs = lhs;
            physx.PxFilterFlag pvk_in_e = e;
            return PxFilterFlagsPtr_const_PxFilterFlagsPtr_operator_Ptr_Caret_PxFilterFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxFilterFlagsPtr OpCaret_New(physx.PxFilterFlagsPtr lhs, physx.PxFilterFlagsPtr f) {
            physx.PxFilterFlagsPtr pvk_in_lhs = lhs;
            physx.PxFilterFlagsPtr pvk_in_f = f;
            return PxFilterFlagsPtr_const_PxFilterFlagsPtr_operator_Ptr_Caret_PxFilterFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxFilterFlagsPtr OpTilde_New(physx.PxFilterFlagsPtr lhs) {
            physx.PxFilterFlagsPtr pvk_in_lhs = lhs;
            return PxFilterFlagsPtr_const_PxFilterFlagsPtr_operator_Ptr_Tilde(pvk_in_lhs);
        }

        public static bool ToBool(physx.PxFilterFlagsPtr lhs) {
            physx.PxFilterFlagsPtr pvk_in_lhs = lhs;
            return bool_const_PxFilterFlagsPtr_operator_boolPtr_Conversion(pvk_in_lhs);
        }

        public static byte ToByte(physx.PxFilterFlagsPtr lhs) {
            physx.PxFilterFlagsPtr pvk_in_lhs = lhs;
            return byte_const_PxFilterFlagsPtr_operator_unsigned_charPtr_Conversion(pvk_in_lhs);
        }

        public static ushort ToUShort(physx.PxFilterFlagsPtr lhs) {
            physx.PxFilterFlagsPtr pvk_in_lhs = lhs;
            return ushort_const_PxFilterFlagsPtr_operator_unsigned_shortPtr_Conversion(pvk_in_lhs);
        }

        public static uint ToUInt(physx.PxFilterFlagsPtr lhs) {
            physx.PxFilterFlagsPtr pvk_in_lhs = lhs;
            return uint_const_PxFilterFlagsPtr_operator_unsigned_intPtr_Conversion(pvk_in_lhs);
        }

        public void clear(physx.PxFilterFlag e) {
            physx.PxFilterFlagsPtr pvk_in_this = this;
            physx.PxFilterFlag pvk_in_e = e;
            void_PxFilterFlagsPtr_clearPtr_PxFilterFlag_(pvk_in_this, pvk_in_e);
        }

        public static bool operator==(physx.PxFilterFlagsPtr lhs, physx.PxFilterFlag e) {
            return physx.PxFilterFlagsPtr.OpEquals(lhs, e);
        }
        public static bool operator==(physx.PxFilterFlagsPtr lhs, physx.PxFilterFlagsPtr f) {
            return physx.PxFilterFlagsPtr.OpEquals(lhs, f);
        }
        public static bool operator==(physx.PxFilterFlagsPtr lhs, bool b) {
            return physx.PxFilterFlagsPtr.OpEquals(lhs, b);
        }
        public static bool operator!=(physx.PxFilterFlagsPtr lhs, bool b) {
            return !(physx.PxFilterFlagsPtr.OpEquals(lhs, b)); // Matching Operator
        }
        public static bool operator!=(physx.PxFilterFlagsPtr lhs, physx.PxFilterFlag e) {
            return physx.PxFilterFlagsPtr.OpExclaimEqual(lhs, e);
        }
        public static bool operator!=(physx.PxFilterFlagsPtr lhs, physx.PxFilterFlagsPtr f) {
            return physx.PxFilterFlagsPtr.OpExclaimEqual(lhs, f);
        }
    }

    public unsafe partial struct PxPairFlagsPtr {
        private System.IntPtr nativePtr_;

        public static void Free(physx.PxPairFlagsPtr ptr){
            Freer_physx_PxPairFlagsPtr(ptr);
        }
        public void Free(){
            Freer_physx_PxPairFlagsPtr(this);
        }

        public static physx.PxPairFlagsPtr New(physx.PxEMPTY _) {
            physx.PxEMPTY pvk_in__ = _;
            return Ctor_PxPairFlagsPtr_PxEMPTY(pvk_in__);
        }

        public static physx.PxPairFlagsPtr New() {
            return Ctor_PxPairFlagsPtr_();
        }

        public static physx.PxPairFlagsPtr New(physx.PxPairFlag e) {
            physx.PxPairFlag pvk_in_e = e;
            return Ctor_PxPairFlagsPtr_PxPairFlag(pvk_in_e);
        }

        public static physx.PxPairFlagsPtr New(physx.PxPairFlagsPtr f) {
            physx.PxPairFlagsPtr pvk_in_f = f;
            return Ctor_PxPairFlagsPtr_PxPairFlagsPtr(pvk_in_f);
        }

        public static physx.PxPairFlagsPtr New(ushort b) {
            ushort pvk_in_b = b;
            return Ctor_PxPairFlagsPtr_ushort(pvk_in_b);
        }

        public bool isSet(physx.PxPairFlag e) {
            physx.PxPairFlagsPtr pvk_in_this = this;
            physx.PxPairFlag pvk_in_e = e;
            return bool_const_PxPairFlagsPtr_isSetPtr_PxPairFlag_(pvk_in_this, pvk_in_e);
        }

        public physx.PxPairFlagsPtr set(physx.PxPairFlag e) {
            physx.PxPairFlagsPtr pvk_in_this = this;
            physx.PxPairFlag pvk_in_e = e;
            return PxPairFlagsPtr_PxPairFlagsPtr_setPtr_PxPairFlag_(pvk_in_this, pvk_in_e);
        }

        public static bool OpEquals(physx.PxPairFlagsPtr lhs, physx.PxPairFlag e) {
            physx.PxPairFlagsPtr pvk_in_lhs = lhs;
            physx.PxPairFlag pvk_in_e = e;
            return bool_const_PxPairFlagsPtr_operator_Ptr_EqualEqual_PxPairFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static bool OpEquals(physx.PxPairFlagsPtr lhs, physx.PxPairFlagsPtr f) {
            physx.PxPairFlagsPtr pvk_in_lhs = lhs;
            physx.PxPairFlagsPtr pvk_in_f = f;
            return bool_const_PxPairFlagsPtr_operator_Ptr_EqualEqual_PxPairFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static bool OpEquals(physx.PxPairFlagsPtr lhs, bool b) {
            physx.PxPairFlagsPtr pvk_in_lhs = lhs;
            bool pvk_in_b = b;
            return bool_const_PxPairFlagsPtr_operator_Ptr_EqualEqual_bool_(pvk_in_lhs, pvk_in_b);
        }

        public static bool OpExclaimEqual(physx.PxPairFlagsPtr lhs, physx.PxPairFlag e) {
            physx.PxPairFlagsPtr pvk_in_lhs = lhs;
            physx.PxPairFlag pvk_in_e = e;
            return bool_const_PxPairFlagsPtr_operator_Ptr_ExclaimEqual_PxPairFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static bool OpExclaimEqual(physx.PxPairFlagsPtr lhs, physx.PxPairFlagsPtr f) {
            physx.PxPairFlagsPtr pvk_in_lhs = lhs;
            physx.PxPairFlagsPtr pvk_in_f = f;
            return bool_const_PxPairFlagsPtr_operator_Ptr_ExclaimEqual_PxPairFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxPairFlagsPtr OpEqual(physx.PxPairFlagsPtr lhs, physx.PxPairFlagsPtr f) {
            physx.PxPairFlagsPtr pvk_in_lhs = lhs;
            physx.PxPairFlagsPtr pvk_in_f = f;
            return PxPairFlagsPtr_PxPairFlagsPtr_operator_Ptr_Equal_PxPairFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxPairFlagsPtr OpEqual(physx.PxPairFlagsPtr lhs, physx.PxPairFlag e) {
            physx.PxPairFlagsPtr pvk_in_lhs = lhs;
            physx.PxPairFlag pvk_in_e = e;
            return PxPairFlagsPtr_PxPairFlagsPtr_operator_Ptr_Equal_PxPairFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxPairFlagsPtr OpPipeEqual(physx.PxPairFlagsPtr lhs, physx.PxPairFlag e) {
            physx.PxPairFlagsPtr pvk_in_lhs = lhs;
            physx.PxPairFlag pvk_in_e = e;
            return PxPairFlagsPtr_PxPairFlagsPtr_operator_Ptr_PipeEqual_PxPairFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxPairFlagsPtr OpPipeEqual(physx.PxPairFlagsPtr lhs, physx.PxPairFlagsPtr f) {
            physx.PxPairFlagsPtr pvk_in_lhs = lhs;
            physx.PxPairFlagsPtr pvk_in_f = f;
            return PxPairFlagsPtr_PxPairFlagsPtr_operator_Ptr_PipeEqual_PxPairFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxPairFlagsPtr OpPipe_New(physx.PxPairFlagsPtr lhs, physx.PxPairFlag e) {
            physx.PxPairFlagsPtr pvk_in_lhs = lhs;
            physx.PxPairFlag pvk_in_e = e;
            return PxPairFlagsPtr_const_PxPairFlagsPtr_operator_Ptr_Pipe_PxPairFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxPairFlagsPtr OpPipe_New(physx.PxPairFlagsPtr lhs, physx.PxPairFlagsPtr f) {
            physx.PxPairFlagsPtr pvk_in_lhs = lhs;
            physx.PxPairFlagsPtr pvk_in_f = f;
            return PxPairFlagsPtr_const_PxPairFlagsPtr_operator_Ptr_Pipe_PxPairFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxPairFlagsPtr OpAndEqual(physx.PxPairFlagsPtr lhs, physx.PxPairFlag e) {
            physx.PxPairFlagsPtr pvk_in_lhs = lhs;
            physx.PxPairFlag pvk_in_e = e;
            return PxPairFlagsPtr_PxPairFlagsPtr_operator_Ptr_AmpEqual_PxPairFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxPairFlagsPtr OpAndEqual(physx.PxPairFlagsPtr lhs, physx.PxPairFlagsPtr f) {
            physx.PxPairFlagsPtr pvk_in_lhs = lhs;
            physx.PxPairFlagsPtr pvk_in_f = f;
            return PxPairFlagsPtr_PxPairFlagsPtr_operator_Ptr_AmpEqual_PxPairFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxPairFlagsPtr OpAnd_New(physx.PxPairFlagsPtr lhs, physx.PxPairFlag e) {
            physx.PxPairFlagsPtr pvk_in_lhs = lhs;
            physx.PxPairFlag pvk_in_e = e;
            return PxPairFlagsPtr_const_PxPairFlagsPtr_operator_Ptr_Amp_PxPairFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxPairFlagsPtr OpAnd_New(physx.PxPairFlagsPtr lhs, physx.PxPairFlagsPtr f) {
            physx.PxPairFlagsPtr pvk_in_lhs = lhs;
            physx.PxPairFlagsPtr pvk_in_f = f;
            return PxPairFlagsPtr_const_PxPairFlagsPtr_operator_Ptr_Amp_PxPairFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxPairFlagsPtr OpCaretEqual(physx.PxPairFlagsPtr lhs, physx.PxPairFlag e) {
            physx.PxPairFlagsPtr pvk_in_lhs = lhs;
            physx.PxPairFlag pvk_in_e = e;
            return PxPairFlagsPtr_PxPairFlagsPtr_operator_Ptr_CaretEqual_PxPairFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxPairFlagsPtr OpCaretEqual(physx.PxPairFlagsPtr lhs, physx.PxPairFlagsPtr f) {
            physx.PxPairFlagsPtr pvk_in_lhs = lhs;
            physx.PxPairFlagsPtr pvk_in_f = f;
            return PxPairFlagsPtr_PxPairFlagsPtr_operator_Ptr_CaretEqual_PxPairFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxPairFlagsPtr OpCaret_New(physx.PxPairFlagsPtr lhs, physx.PxPairFlag e) {
            physx.PxPairFlagsPtr pvk_in_lhs = lhs;
            physx.PxPairFlag pvk_in_e = e;
            return PxPairFlagsPtr_const_PxPairFlagsPtr_operator_Ptr_Caret_PxPairFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxPairFlagsPtr OpCaret_New(physx.PxPairFlagsPtr lhs, physx.PxPairFlagsPtr f) {
            physx.PxPairFlagsPtr pvk_in_lhs = lhs;
            physx.PxPairFlagsPtr pvk_in_f = f;
            return PxPairFlagsPtr_const_PxPairFlagsPtr_operator_Ptr_Caret_PxPairFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxPairFlagsPtr OpTilde_New(physx.PxPairFlagsPtr lhs) {
            physx.PxPairFlagsPtr pvk_in_lhs = lhs;
            return PxPairFlagsPtr_const_PxPairFlagsPtr_operator_Ptr_Tilde(pvk_in_lhs);
        }

        public static bool ToBool(physx.PxPairFlagsPtr lhs) {
            physx.PxPairFlagsPtr pvk_in_lhs = lhs;
            return bool_const_PxPairFlagsPtr_operator_boolPtr_Conversion(pvk_in_lhs);
        }

        public static byte ToByte(physx.PxPairFlagsPtr lhs) {
            physx.PxPairFlagsPtr pvk_in_lhs = lhs;
            return byte_const_PxPairFlagsPtr_operator_unsigned_charPtr_Conversion(pvk_in_lhs);
        }

        public static ushort ToUShort(physx.PxPairFlagsPtr lhs) {
            physx.PxPairFlagsPtr pvk_in_lhs = lhs;
            return ushort_const_PxPairFlagsPtr_operator_unsigned_shortPtr_Conversion(pvk_in_lhs);
        }

        public static uint ToUInt(physx.PxPairFlagsPtr lhs) {
            physx.PxPairFlagsPtr pvk_in_lhs = lhs;
            return uint_const_PxPairFlagsPtr_operator_unsigned_intPtr_Conversion(pvk_in_lhs);
        }

        public void clear(physx.PxPairFlag e) {
            physx.PxPairFlagsPtr pvk_in_this = this;
            physx.PxPairFlag pvk_in_e = e;
            void_PxPairFlagsPtr_clearPtr_PxPairFlag_(pvk_in_this, pvk_in_e);
        }

        public static bool operator==(physx.PxPairFlagsPtr lhs, physx.PxPairFlag e) {
            return physx.PxPairFlagsPtr.OpEquals(lhs, e);
        }
        public static bool operator==(physx.PxPairFlagsPtr lhs, physx.PxPairFlagsPtr f) {
            return physx.PxPairFlagsPtr.OpEquals(lhs, f);
        }
        public static bool operator==(physx.PxPairFlagsPtr lhs, bool b) {
            return physx.PxPairFlagsPtr.OpEquals(lhs, b);
        }
        public static bool operator!=(physx.PxPairFlagsPtr lhs, bool b) {
            return !(physx.PxPairFlagsPtr.OpEquals(lhs, b)); // Matching Operator
        }
        public static bool operator!=(physx.PxPairFlagsPtr lhs, physx.PxPairFlag e) {
            return physx.PxPairFlagsPtr.OpExclaimEqual(lhs, e);
        }
        public static bool operator!=(physx.PxPairFlagsPtr lhs, physx.PxPairFlagsPtr f) {
            return physx.PxPairFlagsPtr.OpExclaimEqual(lhs, f);
        }
    }

    public unsafe partial struct PxQueryFlagsPtr {
        private System.IntPtr nativePtr_;

        public static void Free(physx.PxQueryFlagsPtr ptr){
            Freer_physx_PxQueryFlagsPtr(ptr);
        }
        public void Free(){
            Freer_physx_PxQueryFlagsPtr(this);
        }

        public static physx.PxQueryFlagsPtr New(physx.PxEMPTY _) {
            physx.PxEMPTY pvk_in__ = _;
            return Ctor_PxQueryFlagsPtr_PxEMPTY(pvk_in__);
        }

        public static physx.PxQueryFlagsPtr New() {
            return Ctor_PxQueryFlagsPtr_();
        }

        public static physx.PxQueryFlagsPtr New(physx.PxQueryFlag e) {
            physx.PxQueryFlag pvk_in_e = e;
            return Ctor_PxQueryFlagsPtr_PxQueryFlag(pvk_in_e);
        }

        public static physx.PxQueryFlagsPtr New(physx.PxQueryFlagsPtr f) {
            physx.PxQueryFlagsPtr pvk_in_f = f;
            return Ctor_PxQueryFlagsPtr_PxQueryFlagsPtr(pvk_in_f);
        }

        public static physx.PxQueryFlagsPtr New(ushort b) {
            ushort pvk_in_b = b;
            return Ctor_PxQueryFlagsPtr_ushort(pvk_in_b);
        }

        public bool isSet(physx.PxQueryFlag e) {
            physx.PxQueryFlagsPtr pvk_in_this = this;
            physx.PxQueryFlag pvk_in_e = e;
            return bool_const_PxQueryFlagsPtr_isSetPtr_PxQueryFlag_(pvk_in_this, pvk_in_e);
        }

        public physx.PxQueryFlagsPtr set(physx.PxQueryFlag e) {
            physx.PxQueryFlagsPtr pvk_in_this = this;
            physx.PxQueryFlag pvk_in_e = e;
            return PxQueryFlagsPtr_PxQueryFlagsPtr_setPtr_PxQueryFlag_(pvk_in_this, pvk_in_e);
        }

        public static bool OpEquals(physx.PxQueryFlagsPtr lhs, physx.PxQueryFlag e) {
            physx.PxQueryFlagsPtr pvk_in_lhs = lhs;
            physx.PxQueryFlag pvk_in_e = e;
            return bool_const_PxQueryFlagsPtr_operator_Ptr_EqualEqual_PxQueryFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static bool OpEquals(physx.PxQueryFlagsPtr lhs, physx.PxQueryFlagsPtr f) {
            physx.PxQueryFlagsPtr pvk_in_lhs = lhs;
            physx.PxQueryFlagsPtr pvk_in_f = f;
            return bool_const_PxQueryFlagsPtr_operator_Ptr_EqualEqual_PxQueryFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static bool OpEquals(physx.PxQueryFlagsPtr lhs, bool b) {
            physx.PxQueryFlagsPtr pvk_in_lhs = lhs;
            bool pvk_in_b = b;
            return bool_const_PxQueryFlagsPtr_operator_Ptr_EqualEqual_bool_(pvk_in_lhs, pvk_in_b);
        }

        public static bool OpExclaimEqual(physx.PxQueryFlagsPtr lhs, physx.PxQueryFlag e) {
            physx.PxQueryFlagsPtr pvk_in_lhs = lhs;
            physx.PxQueryFlag pvk_in_e = e;
            return bool_const_PxQueryFlagsPtr_operator_Ptr_ExclaimEqual_PxQueryFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static bool OpExclaimEqual(physx.PxQueryFlagsPtr lhs, physx.PxQueryFlagsPtr f) {
            physx.PxQueryFlagsPtr pvk_in_lhs = lhs;
            physx.PxQueryFlagsPtr pvk_in_f = f;
            return bool_const_PxQueryFlagsPtr_operator_Ptr_ExclaimEqual_PxQueryFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxQueryFlagsPtr OpEqual(physx.PxQueryFlagsPtr lhs, physx.PxQueryFlagsPtr f) {
            physx.PxQueryFlagsPtr pvk_in_lhs = lhs;
            physx.PxQueryFlagsPtr pvk_in_f = f;
            return PxQueryFlagsPtr_PxQueryFlagsPtr_operator_Ptr_Equal_PxQueryFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxQueryFlagsPtr OpEqual(physx.PxQueryFlagsPtr lhs, physx.PxQueryFlag e) {
            physx.PxQueryFlagsPtr pvk_in_lhs = lhs;
            physx.PxQueryFlag pvk_in_e = e;
            return PxQueryFlagsPtr_PxQueryFlagsPtr_operator_Ptr_Equal_PxQueryFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxQueryFlagsPtr OpPipeEqual(physx.PxQueryFlagsPtr lhs, physx.PxQueryFlag e) {
            physx.PxQueryFlagsPtr pvk_in_lhs = lhs;
            physx.PxQueryFlag pvk_in_e = e;
            return PxQueryFlagsPtr_PxQueryFlagsPtr_operator_Ptr_PipeEqual_PxQueryFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxQueryFlagsPtr OpPipeEqual(physx.PxQueryFlagsPtr lhs, physx.PxQueryFlagsPtr f) {
            physx.PxQueryFlagsPtr pvk_in_lhs = lhs;
            physx.PxQueryFlagsPtr pvk_in_f = f;
            return PxQueryFlagsPtr_PxQueryFlagsPtr_operator_Ptr_PipeEqual_PxQueryFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxQueryFlagsPtr OpPipe_New(physx.PxQueryFlagsPtr lhs, physx.PxQueryFlag e) {
            physx.PxQueryFlagsPtr pvk_in_lhs = lhs;
            physx.PxQueryFlag pvk_in_e = e;
            return PxQueryFlagsPtr_const_PxQueryFlagsPtr_operator_Ptr_Pipe_PxQueryFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxQueryFlagsPtr OpPipe_New(physx.PxQueryFlagsPtr lhs, physx.PxQueryFlagsPtr f) {
            physx.PxQueryFlagsPtr pvk_in_lhs = lhs;
            physx.PxQueryFlagsPtr pvk_in_f = f;
            return PxQueryFlagsPtr_const_PxQueryFlagsPtr_operator_Ptr_Pipe_PxQueryFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxQueryFlagsPtr OpAndEqual(physx.PxQueryFlagsPtr lhs, physx.PxQueryFlag e) {
            physx.PxQueryFlagsPtr pvk_in_lhs = lhs;
            physx.PxQueryFlag pvk_in_e = e;
            return PxQueryFlagsPtr_PxQueryFlagsPtr_operator_Ptr_AmpEqual_PxQueryFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxQueryFlagsPtr OpAndEqual(physx.PxQueryFlagsPtr lhs, physx.PxQueryFlagsPtr f) {
            physx.PxQueryFlagsPtr pvk_in_lhs = lhs;
            physx.PxQueryFlagsPtr pvk_in_f = f;
            return PxQueryFlagsPtr_PxQueryFlagsPtr_operator_Ptr_AmpEqual_PxQueryFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxQueryFlagsPtr OpAnd_New(physx.PxQueryFlagsPtr lhs, physx.PxQueryFlag e) {
            physx.PxQueryFlagsPtr pvk_in_lhs = lhs;
            physx.PxQueryFlag pvk_in_e = e;
            return PxQueryFlagsPtr_const_PxQueryFlagsPtr_operator_Ptr_Amp_PxQueryFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxQueryFlagsPtr OpAnd_New(physx.PxQueryFlagsPtr lhs, physx.PxQueryFlagsPtr f) {
            physx.PxQueryFlagsPtr pvk_in_lhs = lhs;
            physx.PxQueryFlagsPtr pvk_in_f = f;
            return PxQueryFlagsPtr_const_PxQueryFlagsPtr_operator_Ptr_Amp_PxQueryFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxQueryFlagsPtr OpCaretEqual(physx.PxQueryFlagsPtr lhs, physx.PxQueryFlag e) {
            physx.PxQueryFlagsPtr pvk_in_lhs = lhs;
            physx.PxQueryFlag pvk_in_e = e;
            return PxQueryFlagsPtr_PxQueryFlagsPtr_operator_Ptr_CaretEqual_PxQueryFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxQueryFlagsPtr OpCaretEqual(physx.PxQueryFlagsPtr lhs, physx.PxQueryFlagsPtr f) {
            physx.PxQueryFlagsPtr pvk_in_lhs = lhs;
            physx.PxQueryFlagsPtr pvk_in_f = f;
            return PxQueryFlagsPtr_PxQueryFlagsPtr_operator_Ptr_CaretEqual_PxQueryFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxQueryFlagsPtr OpCaret_New(physx.PxQueryFlagsPtr lhs, physx.PxQueryFlag e) {
            physx.PxQueryFlagsPtr pvk_in_lhs = lhs;
            physx.PxQueryFlag pvk_in_e = e;
            return PxQueryFlagsPtr_const_PxQueryFlagsPtr_operator_Ptr_Caret_PxQueryFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxQueryFlagsPtr OpCaret_New(physx.PxQueryFlagsPtr lhs, physx.PxQueryFlagsPtr f) {
            physx.PxQueryFlagsPtr pvk_in_lhs = lhs;
            physx.PxQueryFlagsPtr pvk_in_f = f;
            return PxQueryFlagsPtr_const_PxQueryFlagsPtr_operator_Ptr_Caret_PxQueryFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxQueryFlagsPtr OpTilde_New(physx.PxQueryFlagsPtr lhs) {
            physx.PxQueryFlagsPtr pvk_in_lhs = lhs;
            return PxQueryFlagsPtr_const_PxQueryFlagsPtr_operator_Ptr_Tilde(pvk_in_lhs);
        }

        public static bool ToBool(physx.PxQueryFlagsPtr lhs) {
            physx.PxQueryFlagsPtr pvk_in_lhs = lhs;
            return bool_const_PxQueryFlagsPtr_operator_boolPtr_Conversion(pvk_in_lhs);
        }

        public static byte ToByte(physx.PxQueryFlagsPtr lhs) {
            physx.PxQueryFlagsPtr pvk_in_lhs = lhs;
            return byte_const_PxQueryFlagsPtr_operator_unsigned_charPtr_Conversion(pvk_in_lhs);
        }

        public static ushort ToUShort(physx.PxQueryFlagsPtr lhs) {
            physx.PxQueryFlagsPtr pvk_in_lhs = lhs;
            return ushort_const_PxQueryFlagsPtr_operator_unsigned_shortPtr_Conversion(pvk_in_lhs);
        }

        public static uint ToUInt(physx.PxQueryFlagsPtr lhs) {
            physx.PxQueryFlagsPtr pvk_in_lhs = lhs;
            return uint_const_PxQueryFlagsPtr_operator_unsigned_intPtr_Conversion(pvk_in_lhs);
        }

        public void clear(physx.PxQueryFlag e) {
            physx.PxQueryFlagsPtr pvk_in_this = this;
            physx.PxQueryFlag pvk_in_e = e;
            void_PxQueryFlagsPtr_clearPtr_PxQueryFlag_(pvk_in_this, pvk_in_e);
        }

        public static bool operator==(physx.PxQueryFlagsPtr lhs, physx.PxQueryFlag e) {
            return physx.PxQueryFlagsPtr.OpEquals(lhs, e);
        }
        public static bool operator==(physx.PxQueryFlagsPtr lhs, physx.PxQueryFlagsPtr f) {
            return physx.PxQueryFlagsPtr.OpEquals(lhs, f);
        }
        public static bool operator==(physx.PxQueryFlagsPtr lhs, bool b) {
            return physx.PxQueryFlagsPtr.OpEquals(lhs, b);
        }
        public static bool operator!=(physx.PxQueryFlagsPtr lhs, bool b) {
            return !(physx.PxQueryFlagsPtr.OpEquals(lhs, b)); // Matching Operator
        }
        public static bool operator!=(physx.PxQueryFlagsPtr lhs, physx.PxQueryFlag e) {
            return physx.PxQueryFlagsPtr.OpExclaimEqual(lhs, e);
        }
        public static bool operator!=(physx.PxQueryFlagsPtr lhs, physx.PxQueryFlagsPtr f) {
            return physx.PxQueryFlagsPtr.OpExclaimEqual(lhs, f);
        }
    }

    public unsafe partial struct PxPvdSceneFlagsPtr {
        private System.IntPtr nativePtr_;

        public static void Free(physx.PxPvdSceneFlagsPtr ptr){
            Freer_physx_PxPvdSceneFlagsPtr(ptr);
        }
        public void Free(){
            Freer_physx_PxPvdSceneFlagsPtr(this);
        }

        public static physx.PxPvdSceneFlagsPtr New(physx.PxEMPTY _) {
            physx.PxEMPTY pvk_in__ = _;
            return Ctor_PxPvdSceneFlagsPtr_PxEMPTY(pvk_in__);
        }

        public static physx.PxPvdSceneFlagsPtr New() {
            return Ctor_PxPvdSceneFlagsPtr_();
        }

        public static physx.PxPvdSceneFlagsPtr New(physx.PxPvdSceneFlag e) {
            physx.PxPvdSceneFlag pvk_in_e = e;
            return Ctor_PxPvdSceneFlagsPtr_PxPvdSceneFlag(pvk_in_e);
        }

        public static physx.PxPvdSceneFlagsPtr New(physx.PxPvdSceneFlagsPtr f) {
            physx.PxPvdSceneFlagsPtr pvk_in_f = f;
            return Ctor_PxPvdSceneFlagsPtr_PxPvdSceneFlagsPtr(pvk_in_f);
        }

        public static physx.PxPvdSceneFlagsPtr New(byte b) {
            byte pvk_in_b = b;
            return Ctor_PxPvdSceneFlagsPtr_byte(pvk_in_b);
        }

        public bool isSet(physx.PxPvdSceneFlag e) {
            physx.PxPvdSceneFlagsPtr pvk_in_this = this;
            physx.PxPvdSceneFlag pvk_in_e = e;
            return bool_const_PxPvdSceneFlagsPtr_isSetPtr_PxPvdSceneFlag_(pvk_in_this, pvk_in_e);
        }

        public physx.PxPvdSceneFlagsPtr set(physx.PxPvdSceneFlag e) {
            physx.PxPvdSceneFlagsPtr pvk_in_this = this;
            physx.PxPvdSceneFlag pvk_in_e = e;
            return PxPvdSceneFlagsPtr_PxPvdSceneFlagsPtr_setPtr_PxPvdSceneFlag_(pvk_in_this, pvk_in_e);
        }

        public static bool OpEquals(physx.PxPvdSceneFlagsPtr lhs, physx.PxPvdSceneFlag e) {
            physx.PxPvdSceneFlagsPtr pvk_in_lhs = lhs;
            physx.PxPvdSceneFlag pvk_in_e = e;
            return bool_const_PxPvdSceneFlagsPtr_operator_Ptr_EqualEqual_PxPvdSceneFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static bool OpEquals(physx.PxPvdSceneFlagsPtr lhs, physx.PxPvdSceneFlagsPtr f) {
            physx.PxPvdSceneFlagsPtr pvk_in_lhs = lhs;
            physx.PxPvdSceneFlagsPtr pvk_in_f = f;
            return bool_const_PxPvdSceneFlagsPtr_operator_Ptr_EqualEqual_PxPvdSceneFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static bool OpEquals(physx.PxPvdSceneFlagsPtr lhs, bool b) {
            physx.PxPvdSceneFlagsPtr pvk_in_lhs = lhs;
            bool pvk_in_b = b;
            return bool_const_PxPvdSceneFlagsPtr_operator_Ptr_EqualEqual_bool_(pvk_in_lhs, pvk_in_b);
        }

        public static bool OpExclaimEqual(physx.PxPvdSceneFlagsPtr lhs, physx.PxPvdSceneFlag e) {
            physx.PxPvdSceneFlagsPtr pvk_in_lhs = lhs;
            physx.PxPvdSceneFlag pvk_in_e = e;
            return bool_const_PxPvdSceneFlagsPtr_operator_Ptr_ExclaimEqual_PxPvdSceneFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static bool OpExclaimEqual(physx.PxPvdSceneFlagsPtr lhs, physx.PxPvdSceneFlagsPtr f) {
            physx.PxPvdSceneFlagsPtr pvk_in_lhs = lhs;
            physx.PxPvdSceneFlagsPtr pvk_in_f = f;
            return bool_const_PxPvdSceneFlagsPtr_operator_Ptr_ExclaimEqual_PxPvdSceneFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxPvdSceneFlagsPtr OpEqual(physx.PxPvdSceneFlagsPtr lhs, physx.PxPvdSceneFlagsPtr f) {
            physx.PxPvdSceneFlagsPtr pvk_in_lhs = lhs;
            physx.PxPvdSceneFlagsPtr pvk_in_f = f;
            return PxPvdSceneFlagsPtr_PxPvdSceneFlagsPtr_operator_Ptr_Equal_PxPvdSceneFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxPvdSceneFlagsPtr OpEqual(physx.PxPvdSceneFlagsPtr lhs, physx.PxPvdSceneFlag e) {
            physx.PxPvdSceneFlagsPtr pvk_in_lhs = lhs;
            physx.PxPvdSceneFlag pvk_in_e = e;
            return PxPvdSceneFlagsPtr_PxPvdSceneFlagsPtr_operator_Ptr_Equal_PxPvdSceneFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxPvdSceneFlagsPtr OpPipeEqual(physx.PxPvdSceneFlagsPtr lhs, physx.PxPvdSceneFlag e) {
            physx.PxPvdSceneFlagsPtr pvk_in_lhs = lhs;
            physx.PxPvdSceneFlag pvk_in_e = e;
            return PxPvdSceneFlagsPtr_PxPvdSceneFlagsPtr_operator_Ptr_PipeEqual_PxPvdSceneFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxPvdSceneFlagsPtr OpPipeEqual(physx.PxPvdSceneFlagsPtr lhs, physx.PxPvdSceneFlagsPtr f) {
            physx.PxPvdSceneFlagsPtr pvk_in_lhs = lhs;
            physx.PxPvdSceneFlagsPtr pvk_in_f = f;
            return PxPvdSceneFlagsPtr_PxPvdSceneFlagsPtr_operator_Ptr_PipeEqual_PxPvdSceneFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxPvdSceneFlagsPtr OpPipe_New(physx.PxPvdSceneFlagsPtr lhs, physx.PxPvdSceneFlag e) {
            physx.PxPvdSceneFlagsPtr pvk_in_lhs = lhs;
            physx.PxPvdSceneFlag pvk_in_e = e;
            return PxPvdSceneFlagsPtr_const_PxPvdSceneFlagsPtr_operator_Ptr_Pipe_PxPvdSceneFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxPvdSceneFlagsPtr OpPipe_New(physx.PxPvdSceneFlagsPtr lhs, physx.PxPvdSceneFlagsPtr f) {
            physx.PxPvdSceneFlagsPtr pvk_in_lhs = lhs;
            physx.PxPvdSceneFlagsPtr pvk_in_f = f;
            return PxPvdSceneFlagsPtr_const_PxPvdSceneFlagsPtr_operator_Ptr_Pipe_PxPvdSceneFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxPvdSceneFlagsPtr OpAndEqual(physx.PxPvdSceneFlagsPtr lhs, physx.PxPvdSceneFlag e) {
            physx.PxPvdSceneFlagsPtr pvk_in_lhs = lhs;
            physx.PxPvdSceneFlag pvk_in_e = e;
            return PxPvdSceneFlagsPtr_PxPvdSceneFlagsPtr_operator_Ptr_AmpEqual_PxPvdSceneFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxPvdSceneFlagsPtr OpAndEqual(physx.PxPvdSceneFlagsPtr lhs, physx.PxPvdSceneFlagsPtr f) {
            physx.PxPvdSceneFlagsPtr pvk_in_lhs = lhs;
            physx.PxPvdSceneFlagsPtr pvk_in_f = f;
            return PxPvdSceneFlagsPtr_PxPvdSceneFlagsPtr_operator_Ptr_AmpEqual_PxPvdSceneFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxPvdSceneFlagsPtr OpAnd_New(physx.PxPvdSceneFlagsPtr lhs, physx.PxPvdSceneFlag e) {
            physx.PxPvdSceneFlagsPtr pvk_in_lhs = lhs;
            physx.PxPvdSceneFlag pvk_in_e = e;
            return PxPvdSceneFlagsPtr_const_PxPvdSceneFlagsPtr_operator_Ptr_Amp_PxPvdSceneFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxPvdSceneFlagsPtr OpAnd_New(physx.PxPvdSceneFlagsPtr lhs, physx.PxPvdSceneFlagsPtr f) {
            physx.PxPvdSceneFlagsPtr pvk_in_lhs = lhs;
            physx.PxPvdSceneFlagsPtr pvk_in_f = f;
            return PxPvdSceneFlagsPtr_const_PxPvdSceneFlagsPtr_operator_Ptr_Amp_PxPvdSceneFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxPvdSceneFlagsPtr OpCaretEqual(physx.PxPvdSceneFlagsPtr lhs, physx.PxPvdSceneFlag e) {
            physx.PxPvdSceneFlagsPtr pvk_in_lhs = lhs;
            physx.PxPvdSceneFlag pvk_in_e = e;
            return PxPvdSceneFlagsPtr_PxPvdSceneFlagsPtr_operator_Ptr_CaretEqual_PxPvdSceneFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxPvdSceneFlagsPtr OpCaretEqual(physx.PxPvdSceneFlagsPtr lhs, physx.PxPvdSceneFlagsPtr f) {
            physx.PxPvdSceneFlagsPtr pvk_in_lhs = lhs;
            physx.PxPvdSceneFlagsPtr pvk_in_f = f;
            return PxPvdSceneFlagsPtr_PxPvdSceneFlagsPtr_operator_Ptr_CaretEqual_PxPvdSceneFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxPvdSceneFlagsPtr OpCaret_New(physx.PxPvdSceneFlagsPtr lhs, physx.PxPvdSceneFlag e) {
            physx.PxPvdSceneFlagsPtr pvk_in_lhs = lhs;
            physx.PxPvdSceneFlag pvk_in_e = e;
            return PxPvdSceneFlagsPtr_const_PxPvdSceneFlagsPtr_operator_Ptr_Caret_PxPvdSceneFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxPvdSceneFlagsPtr OpCaret_New(physx.PxPvdSceneFlagsPtr lhs, physx.PxPvdSceneFlagsPtr f) {
            physx.PxPvdSceneFlagsPtr pvk_in_lhs = lhs;
            physx.PxPvdSceneFlagsPtr pvk_in_f = f;
            return PxPvdSceneFlagsPtr_const_PxPvdSceneFlagsPtr_operator_Ptr_Caret_PxPvdSceneFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxPvdSceneFlagsPtr OpTilde_New(physx.PxPvdSceneFlagsPtr lhs) {
            physx.PxPvdSceneFlagsPtr pvk_in_lhs = lhs;
            return PxPvdSceneFlagsPtr_const_PxPvdSceneFlagsPtr_operator_Ptr_Tilde(pvk_in_lhs);
        }

        public static bool ToBool(physx.PxPvdSceneFlagsPtr lhs) {
            physx.PxPvdSceneFlagsPtr pvk_in_lhs = lhs;
            return bool_const_PxPvdSceneFlagsPtr_operator_boolPtr_Conversion(pvk_in_lhs);
        }

        public static byte ToByte(physx.PxPvdSceneFlagsPtr lhs) {
            physx.PxPvdSceneFlagsPtr pvk_in_lhs = lhs;
            return byte_const_PxPvdSceneFlagsPtr_operator_unsigned_charPtr_Conversion(pvk_in_lhs);
        }

        public static ushort ToUShort(physx.PxPvdSceneFlagsPtr lhs) {
            physx.PxPvdSceneFlagsPtr pvk_in_lhs = lhs;
            return ushort_const_PxPvdSceneFlagsPtr_operator_unsigned_shortPtr_Conversion(pvk_in_lhs);
        }

        public static uint ToUInt(physx.PxPvdSceneFlagsPtr lhs) {
            physx.PxPvdSceneFlagsPtr pvk_in_lhs = lhs;
            return uint_const_PxPvdSceneFlagsPtr_operator_unsigned_intPtr_Conversion(pvk_in_lhs);
        }

        public void clear(physx.PxPvdSceneFlag e) {
            physx.PxPvdSceneFlagsPtr pvk_in_this = this;
            physx.PxPvdSceneFlag pvk_in_e = e;
            void_PxPvdSceneFlagsPtr_clearPtr_PxPvdSceneFlag_(pvk_in_this, pvk_in_e);
        }

        public static bool operator==(physx.PxPvdSceneFlagsPtr lhs, physx.PxPvdSceneFlag e) {
            return physx.PxPvdSceneFlagsPtr.OpEquals(lhs, e);
        }
        public static bool operator==(physx.PxPvdSceneFlagsPtr lhs, physx.PxPvdSceneFlagsPtr f) {
            return physx.PxPvdSceneFlagsPtr.OpEquals(lhs, f);
        }
        public static bool operator==(physx.PxPvdSceneFlagsPtr lhs, bool b) {
            return physx.PxPvdSceneFlagsPtr.OpEquals(lhs, b);
        }
        public static bool operator!=(physx.PxPvdSceneFlagsPtr lhs, bool b) {
            return !(physx.PxPvdSceneFlagsPtr.OpEquals(lhs, b)); // Matching Operator
        }
        public static bool operator!=(physx.PxPvdSceneFlagsPtr lhs, physx.PxPvdSceneFlag e) {
            return physx.PxPvdSceneFlagsPtr.OpExclaimEqual(lhs, e);
        }
        public static bool operator!=(physx.PxPvdSceneFlagsPtr lhs, physx.PxPvdSceneFlagsPtr f) {
            return physx.PxPvdSceneFlagsPtr.OpExclaimEqual(lhs, f);
        }
    }

    public unsafe partial struct PxRigidDynamicLockFlagsPtr {
        private System.IntPtr nativePtr_;

        public static void Free(physx.PxRigidDynamicLockFlagsPtr ptr){
            Freer_physx_PxRigidDynamicLockFlagsPtr(ptr);
        }
        public void Free(){
            Freer_physx_PxRigidDynamicLockFlagsPtr(this);
        }

        public static physx.PxRigidDynamicLockFlagsPtr New(physx.PxEMPTY _) {
            physx.PxEMPTY pvk_in__ = _;
            return Ctor_PxRigidDynamicLockFlagsPtr_PxEMPTY(pvk_in__);
        }

        public static physx.PxRigidDynamicLockFlagsPtr New() {
            return Ctor_PxRigidDynamicLockFlagsPtr_();
        }

        public static physx.PxRigidDynamicLockFlagsPtr New(physx.PxRigidDynamicLockFlag e) {
            physx.PxRigidDynamicLockFlag pvk_in_e = e;
            return Ctor_PxRigidDynamicLockFlagsPtr_PxRigidDynamicLockFlag(pvk_in_e);
        }

        public static physx.PxRigidDynamicLockFlagsPtr New(physx.PxRigidDynamicLockFlagsPtr f) {
            physx.PxRigidDynamicLockFlagsPtr pvk_in_f = f;
            return Ctor_PxRigidDynamicLockFlagsPtr_PxRigidDynamicLockFlagsPtr(pvk_in_f);
        }

        public static physx.PxRigidDynamicLockFlagsPtr New(ushort b) {
            ushort pvk_in_b = b;
            return Ctor_PxRigidDynamicLockFlagsPtr_ushort(pvk_in_b);
        }

        public bool isSet(physx.PxRigidDynamicLockFlag e) {
            physx.PxRigidDynamicLockFlagsPtr pvk_in_this = this;
            physx.PxRigidDynamicLockFlag pvk_in_e = e;
            return bool_const_PxRigidDynamicLockFlagsPtr_isSetPtr_PxRigidDynamicLockFlag_(pvk_in_this, pvk_in_e);
        }

        public physx.PxRigidDynamicLockFlagsPtr set(physx.PxRigidDynamicLockFlag e) {
            physx.PxRigidDynamicLockFlagsPtr pvk_in_this = this;
            physx.PxRigidDynamicLockFlag pvk_in_e = e;
            return PxRigidDynamicLockFlagsPtr_PxRigidDynamicLockFlagsPtr_setPtr_PxRigidDynamicLockFlag_(pvk_in_this, pvk_in_e);
        }

        public static bool OpEquals(physx.PxRigidDynamicLockFlagsPtr lhs, physx.PxRigidDynamicLockFlag e) {
            physx.PxRigidDynamicLockFlagsPtr pvk_in_lhs = lhs;
            physx.PxRigidDynamicLockFlag pvk_in_e = e;
            return bool_const_PxRigidDynamicLockFlagsPtr_operator_Ptr_EqualEqual_PxRigidDynamicLockFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static bool OpEquals(physx.PxRigidDynamicLockFlagsPtr lhs, physx.PxRigidDynamicLockFlagsPtr f) {
            physx.PxRigidDynamicLockFlagsPtr pvk_in_lhs = lhs;
            physx.PxRigidDynamicLockFlagsPtr pvk_in_f = f;
            return bool_const_PxRigidDynamicLockFlagsPtr_operator_Ptr_EqualEqual_PxRigidDynamicLockFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static bool OpEquals(physx.PxRigidDynamicLockFlagsPtr lhs, bool b) {
            physx.PxRigidDynamicLockFlagsPtr pvk_in_lhs = lhs;
            bool pvk_in_b = b;
            return bool_const_PxRigidDynamicLockFlagsPtr_operator_Ptr_EqualEqual_bool_(pvk_in_lhs, pvk_in_b);
        }

        public static bool OpExclaimEqual(physx.PxRigidDynamicLockFlagsPtr lhs, physx.PxRigidDynamicLockFlag e) {
            physx.PxRigidDynamicLockFlagsPtr pvk_in_lhs = lhs;
            physx.PxRigidDynamicLockFlag pvk_in_e = e;
            return bool_const_PxRigidDynamicLockFlagsPtr_operator_Ptr_ExclaimEqual_PxRigidDynamicLockFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static bool OpExclaimEqual(physx.PxRigidDynamicLockFlagsPtr lhs, physx.PxRigidDynamicLockFlagsPtr f) {
            physx.PxRigidDynamicLockFlagsPtr pvk_in_lhs = lhs;
            physx.PxRigidDynamicLockFlagsPtr pvk_in_f = f;
            return bool_const_PxRigidDynamicLockFlagsPtr_operator_Ptr_ExclaimEqual_PxRigidDynamicLockFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxRigidDynamicLockFlagsPtr OpEqual(physx.PxRigidDynamicLockFlagsPtr lhs, physx.PxRigidDynamicLockFlagsPtr f) {
            physx.PxRigidDynamicLockFlagsPtr pvk_in_lhs = lhs;
            physx.PxRigidDynamicLockFlagsPtr pvk_in_f = f;
            return PxRigidDynamicLockFlagsPtr_PxRigidDynamicLockFlagsPtr_operator_Ptr_Equal_PxRigidDynamicLockFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxRigidDynamicLockFlagsPtr OpEqual(physx.PxRigidDynamicLockFlagsPtr lhs, physx.PxRigidDynamicLockFlag e) {
            physx.PxRigidDynamicLockFlagsPtr pvk_in_lhs = lhs;
            physx.PxRigidDynamicLockFlag pvk_in_e = e;
            return PxRigidDynamicLockFlagsPtr_PxRigidDynamicLockFlagsPtr_operator_Ptr_Equal_PxRigidDynamicLockFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxRigidDynamicLockFlagsPtr OpPipeEqual(physx.PxRigidDynamicLockFlagsPtr lhs, physx.PxRigidDynamicLockFlag e) {
            physx.PxRigidDynamicLockFlagsPtr pvk_in_lhs = lhs;
            physx.PxRigidDynamicLockFlag pvk_in_e = e;
            return PxRigidDynamicLockFlagsPtr_PxRigidDynamicLockFlagsPtr_operator_Ptr_PipeEqual_PxRigidDynamicLockFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxRigidDynamicLockFlagsPtr OpPipeEqual(physx.PxRigidDynamicLockFlagsPtr lhs, physx.PxRigidDynamicLockFlagsPtr f) {
            physx.PxRigidDynamicLockFlagsPtr pvk_in_lhs = lhs;
            physx.PxRigidDynamicLockFlagsPtr pvk_in_f = f;
            return PxRigidDynamicLockFlagsPtr_PxRigidDynamicLockFlagsPtr_operator_Ptr_PipeEqual_PxRigidDynamicLockFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxRigidDynamicLockFlagsPtr OpPipe_New(physx.PxRigidDynamicLockFlagsPtr lhs, physx.PxRigidDynamicLockFlag e) {
            physx.PxRigidDynamicLockFlagsPtr pvk_in_lhs = lhs;
            physx.PxRigidDynamicLockFlag pvk_in_e = e;
            return PxRigidDynamicLockFlagsPtr_const_PxRigidDynamicLockFlagsPtr_operator_Ptr_Pipe_PxRigidDynamicLockFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxRigidDynamicLockFlagsPtr OpPipe_New(physx.PxRigidDynamicLockFlagsPtr lhs, physx.PxRigidDynamicLockFlagsPtr f) {
            physx.PxRigidDynamicLockFlagsPtr pvk_in_lhs = lhs;
            physx.PxRigidDynamicLockFlagsPtr pvk_in_f = f;
            return PxRigidDynamicLockFlagsPtr_const_PxRigidDynamicLockFlagsPtr_operator_Ptr_Pipe_PxRigidDynamicLockFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxRigidDynamicLockFlagsPtr OpAndEqual(physx.PxRigidDynamicLockFlagsPtr lhs, physx.PxRigidDynamicLockFlag e) {
            physx.PxRigidDynamicLockFlagsPtr pvk_in_lhs = lhs;
            physx.PxRigidDynamicLockFlag pvk_in_e = e;
            return PxRigidDynamicLockFlagsPtr_PxRigidDynamicLockFlagsPtr_operator_Ptr_AmpEqual_PxRigidDynamicLockFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxRigidDynamicLockFlagsPtr OpAndEqual(physx.PxRigidDynamicLockFlagsPtr lhs, physx.PxRigidDynamicLockFlagsPtr f) {
            physx.PxRigidDynamicLockFlagsPtr pvk_in_lhs = lhs;
            physx.PxRigidDynamicLockFlagsPtr pvk_in_f = f;
            return PxRigidDynamicLockFlagsPtr_PxRigidDynamicLockFlagsPtr_operator_Ptr_AmpEqual_PxRigidDynamicLockFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxRigidDynamicLockFlagsPtr OpAnd_New(physx.PxRigidDynamicLockFlagsPtr lhs, physx.PxRigidDynamicLockFlag e) {
            physx.PxRigidDynamicLockFlagsPtr pvk_in_lhs = lhs;
            physx.PxRigidDynamicLockFlag pvk_in_e = e;
            return PxRigidDynamicLockFlagsPtr_const_PxRigidDynamicLockFlagsPtr_operator_Ptr_Amp_PxRigidDynamicLockFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxRigidDynamicLockFlagsPtr OpAnd_New(physx.PxRigidDynamicLockFlagsPtr lhs, physx.PxRigidDynamicLockFlagsPtr f) {
            physx.PxRigidDynamicLockFlagsPtr pvk_in_lhs = lhs;
            physx.PxRigidDynamicLockFlagsPtr pvk_in_f = f;
            return PxRigidDynamicLockFlagsPtr_const_PxRigidDynamicLockFlagsPtr_operator_Ptr_Amp_PxRigidDynamicLockFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxRigidDynamicLockFlagsPtr OpCaretEqual(physx.PxRigidDynamicLockFlagsPtr lhs, physx.PxRigidDynamicLockFlag e) {
            physx.PxRigidDynamicLockFlagsPtr pvk_in_lhs = lhs;
            physx.PxRigidDynamicLockFlag pvk_in_e = e;
            return PxRigidDynamicLockFlagsPtr_PxRigidDynamicLockFlagsPtr_operator_Ptr_CaretEqual_PxRigidDynamicLockFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxRigidDynamicLockFlagsPtr OpCaretEqual(physx.PxRigidDynamicLockFlagsPtr lhs, physx.PxRigidDynamicLockFlagsPtr f) {
            physx.PxRigidDynamicLockFlagsPtr pvk_in_lhs = lhs;
            physx.PxRigidDynamicLockFlagsPtr pvk_in_f = f;
            return PxRigidDynamicLockFlagsPtr_PxRigidDynamicLockFlagsPtr_operator_Ptr_CaretEqual_PxRigidDynamicLockFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxRigidDynamicLockFlagsPtr OpCaret_New(physx.PxRigidDynamicLockFlagsPtr lhs, physx.PxRigidDynamicLockFlag e) {
            physx.PxRigidDynamicLockFlagsPtr pvk_in_lhs = lhs;
            physx.PxRigidDynamicLockFlag pvk_in_e = e;
            return PxRigidDynamicLockFlagsPtr_const_PxRigidDynamicLockFlagsPtr_operator_Ptr_Caret_PxRigidDynamicLockFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxRigidDynamicLockFlagsPtr OpCaret_New(physx.PxRigidDynamicLockFlagsPtr lhs, physx.PxRigidDynamicLockFlagsPtr f) {
            physx.PxRigidDynamicLockFlagsPtr pvk_in_lhs = lhs;
            physx.PxRigidDynamicLockFlagsPtr pvk_in_f = f;
            return PxRigidDynamicLockFlagsPtr_const_PxRigidDynamicLockFlagsPtr_operator_Ptr_Caret_PxRigidDynamicLockFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxRigidDynamicLockFlagsPtr OpTilde_New(physx.PxRigidDynamicLockFlagsPtr lhs) {
            physx.PxRigidDynamicLockFlagsPtr pvk_in_lhs = lhs;
            return PxRigidDynamicLockFlagsPtr_const_PxRigidDynamicLockFlagsPtr_operator_Ptr_Tilde(pvk_in_lhs);
        }

        public static bool ToBool(physx.PxRigidDynamicLockFlagsPtr lhs) {
            physx.PxRigidDynamicLockFlagsPtr pvk_in_lhs = lhs;
            return bool_const_PxRigidDynamicLockFlagsPtr_operator_boolPtr_Conversion(pvk_in_lhs);
        }

        public static byte ToByte(physx.PxRigidDynamicLockFlagsPtr lhs) {
            physx.PxRigidDynamicLockFlagsPtr pvk_in_lhs = lhs;
            return byte_const_PxRigidDynamicLockFlagsPtr_operator_unsigned_charPtr_Conversion(pvk_in_lhs);
        }

        public static ushort ToUShort(physx.PxRigidDynamicLockFlagsPtr lhs) {
            physx.PxRigidDynamicLockFlagsPtr pvk_in_lhs = lhs;
            return ushort_const_PxRigidDynamicLockFlagsPtr_operator_unsigned_shortPtr_Conversion(pvk_in_lhs);
        }

        public static uint ToUInt(physx.PxRigidDynamicLockFlagsPtr lhs) {
            physx.PxRigidDynamicLockFlagsPtr pvk_in_lhs = lhs;
            return uint_const_PxRigidDynamicLockFlagsPtr_operator_unsigned_intPtr_Conversion(pvk_in_lhs);
        }

        public void clear(physx.PxRigidDynamicLockFlag e) {
            physx.PxRigidDynamicLockFlagsPtr pvk_in_this = this;
            physx.PxRigidDynamicLockFlag pvk_in_e = e;
            void_PxRigidDynamicLockFlagsPtr_clearPtr_PxRigidDynamicLockFlag_(pvk_in_this, pvk_in_e);
        }

        public static bool operator==(physx.PxRigidDynamicLockFlagsPtr lhs, physx.PxRigidDynamicLockFlag e) {
            return physx.PxRigidDynamicLockFlagsPtr.OpEquals(lhs, e);
        }
        public static bool operator==(physx.PxRigidDynamicLockFlagsPtr lhs, physx.PxRigidDynamicLockFlagsPtr f) {
            return physx.PxRigidDynamicLockFlagsPtr.OpEquals(lhs, f);
        }
        public static bool operator==(physx.PxRigidDynamicLockFlagsPtr lhs, bool b) {
            return physx.PxRigidDynamicLockFlagsPtr.OpEquals(lhs, b);
        }
        public static bool operator!=(physx.PxRigidDynamicLockFlagsPtr lhs, bool b) {
            return !(physx.PxRigidDynamicLockFlagsPtr.OpEquals(lhs, b)); // Matching Operator
        }
        public static bool operator!=(physx.PxRigidDynamicLockFlagsPtr lhs, physx.PxRigidDynamicLockFlag e) {
            return physx.PxRigidDynamicLockFlagsPtr.OpExclaimEqual(lhs, e);
        }
        public static bool operator!=(physx.PxRigidDynamicLockFlagsPtr lhs, physx.PxRigidDynamicLockFlagsPtr f) {
            return physx.PxRigidDynamicLockFlagsPtr.OpExclaimEqual(lhs, f);
        }
    }

    public unsafe partial struct PxArticulationFlagsPtr {
        private System.IntPtr nativePtr_;

        public static void Free(physx.PxArticulationFlagsPtr ptr){
            Freer_physx_PxArticulationFlagsPtr(ptr);
        }
        public void Free(){
            Freer_physx_PxArticulationFlagsPtr(this);
        }

        public static physx.PxArticulationFlagsPtr New(physx.PxEMPTY _) {
            physx.PxEMPTY pvk_in__ = _;
            return Ctor_PxArticulationFlagsPtr_PxEMPTY(pvk_in__);
        }

        public static physx.PxArticulationFlagsPtr New() {
            return Ctor_PxArticulationFlagsPtr_();
        }

        public static physx.PxArticulationFlagsPtr New(physx.PxArticulationFlag e) {
            physx.PxArticulationFlag pvk_in_e = e;
            return Ctor_PxArticulationFlagsPtr_PxArticulationFlag(pvk_in_e);
        }

        public static physx.PxArticulationFlagsPtr New(physx.PxArticulationFlagsPtr f) {
            physx.PxArticulationFlagsPtr pvk_in_f = f;
            return Ctor_PxArticulationFlagsPtr_PxArticulationFlagsPtr(pvk_in_f);
        }

        public static physx.PxArticulationFlagsPtr New(byte b) {
            byte pvk_in_b = b;
            return Ctor_PxArticulationFlagsPtr_byte(pvk_in_b);
        }

        public bool isSet(physx.PxArticulationFlag e) {
            physx.PxArticulationFlagsPtr pvk_in_this = this;
            physx.PxArticulationFlag pvk_in_e = e;
            return bool_const_PxArticulationFlagsPtr_isSetPtr_PxArticulationFlag_(pvk_in_this, pvk_in_e);
        }

        public physx.PxArticulationFlagsPtr set(physx.PxArticulationFlag e) {
            physx.PxArticulationFlagsPtr pvk_in_this = this;
            physx.PxArticulationFlag pvk_in_e = e;
            return PxArticulationFlagsPtr_PxArticulationFlagsPtr_setPtr_PxArticulationFlag_(pvk_in_this, pvk_in_e);
        }

        public static bool OpEquals(physx.PxArticulationFlagsPtr lhs, physx.PxArticulationFlag e) {
            physx.PxArticulationFlagsPtr pvk_in_lhs = lhs;
            physx.PxArticulationFlag pvk_in_e = e;
            return bool_const_PxArticulationFlagsPtr_operator_Ptr_EqualEqual_PxArticulationFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static bool OpEquals(physx.PxArticulationFlagsPtr lhs, physx.PxArticulationFlagsPtr f) {
            physx.PxArticulationFlagsPtr pvk_in_lhs = lhs;
            physx.PxArticulationFlagsPtr pvk_in_f = f;
            return bool_const_PxArticulationFlagsPtr_operator_Ptr_EqualEqual_PxArticulationFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static bool OpEquals(physx.PxArticulationFlagsPtr lhs, bool b) {
            physx.PxArticulationFlagsPtr pvk_in_lhs = lhs;
            bool pvk_in_b = b;
            return bool_const_PxArticulationFlagsPtr_operator_Ptr_EqualEqual_bool_(pvk_in_lhs, pvk_in_b);
        }

        public static bool OpExclaimEqual(physx.PxArticulationFlagsPtr lhs, physx.PxArticulationFlag e) {
            physx.PxArticulationFlagsPtr pvk_in_lhs = lhs;
            physx.PxArticulationFlag pvk_in_e = e;
            return bool_const_PxArticulationFlagsPtr_operator_Ptr_ExclaimEqual_PxArticulationFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static bool OpExclaimEqual(physx.PxArticulationFlagsPtr lhs, physx.PxArticulationFlagsPtr f) {
            physx.PxArticulationFlagsPtr pvk_in_lhs = lhs;
            physx.PxArticulationFlagsPtr pvk_in_f = f;
            return bool_const_PxArticulationFlagsPtr_operator_Ptr_ExclaimEqual_PxArticulationFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxArticulationFlagsPtr OpEqual(physx.PxArticulationFlagsPtr lhs, physx.PxArticulationFlagsPtr f) {
            physx.PxArticulationFlagsPtr pvk_in_lhs = lhs;
            physx.PxArticulationFlagsPtr pvk_in_f = f;
            return PxArticulationFlagsPtr_PxArticulationFlagsPtr_operator_Ptr_Equal_PxArticulationFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxArticulationFlagsPtr OpEqual(physx.PxArticulationFlagsPtr lhs, physx.PxArticulationFlag e) {
            physx.PxArticulationFlagsPtr pvk_in_lhs = lhs;
            physx.PxArticulationFlag pvk_in_e = e;
            return PxArticulationFlagsPtr_PxArticulationFlagsPtr_operator_Ptr_Equal_PxArticulationFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxArticulationFlagsPtr OpPipeEqual(physx.PxArticulationFlagsPtr lhs, physx.PxArticulationFlag e) {
            physx.PxArticulationFlagsPtr pvk_in_lhs = lhs;
            physx.PxArticulationFlag pvk_in_e = e;
            return PxArticulationFlagsPtr_PxArticulationFlagsPtr_operator_Ptr_PipeEqual_PxArticulationFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxArticulationFlagsPtr OpPipeEqual(physx.PxArticulationFlagsPtr lhs, physx.PxArticulationFlagsPtr f) {
            physx.PxArticulationFlagsPtr pvk_in_lhs = lhs;
            physx.PxArticulationFlagsPtr pvk_in_f = f;
            return PxArticulationFlagsPtr_PxArticulationFlagsPtr_operator_Ptr_PipeEqual_PxArticulationFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxArticulationFlagsPtr OpPipe_New(physx.PxArticulationFlagsPtr lhs, physx.PxArticulationFlag e) {
            physx.PxArticulationFlagsPtr pvk_in_lhs = lhs;
            physx.PxArticulationFlag pvk_in_e = e;
            return PxArticulationFlagsPtr_const_PxArticulationFlagsPtr_operator_Ptr_Pipe_PxArticulationFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxArticulationFlagsPtr OpPipe_New(physx.PxArticulationFlagsPtr lhs, physx.PxArticulationFlagsPtr f) {
            physx.PxArticulationFlagsPtr pvk_in_lhs = lhs;
            physx.PxArticulationFlagsPtr pvk_in_f = f;
            return PxArticulationFlagsPtr_const_PxArticulationFlagsPtr_operator_Ptr_Pipe_PxArticulationFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxArticulationFlagsPtr OpAndEqual(physx.PxArticulationFlagsPtr lhs, physx.PxArticulationFlag e) {
            physx.PxArticulationFlagsPtr pvk_in_lhs = lhs;
            physx.PxArticulationFlag pvk_in_e = e;
            return PxArticulationFlagsPtr_PxArticulationFlagsPtr_operator_Ptr_AmpEqual_PxArticulationFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxArticulationFlagsPtr OpAndEqual(physx.PxArticulationFlagsPtr lhs, physx.PxArticulationFlagsPtr f) {
            physx.PxArticulationFlagsPtr pvk_in_lhs = lhs;
            physx.PxArticulationFlagsPtr pvk_in_f = f;
            return PxArticulationFlagsPtr_PxArticulationFlagsPtr_operator_Ptr_AmpEqual_PxArticulationFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxArticulationFlagsPtr OpAnd_New(physx.PxArticulationFlagsPtr lhs, physx.PxArticulationFlag e) {
            physx.PxArticulationFlagsPtr pvk_in_lhs = lhs;
            physx.PxArticulationFlag pvk_in_e = e;
            return PxArticulationFlagsPtr_const_PxArticulationFlagsPtr_operator_Ptr_Amp_PxArticulationFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxArticulationFlagsPtr OpAnd_New(physx.PxArticulationFlagsPtr lhs, physx.PxArticulationFlagsPtr f) {
            physx.PxArticulationFlagsPtr pvk_in_lhs = lhs;
            physx.PxArticulationFlagsPtr pvk_in_f = f;
            return PxArticulationFlagsPtr_const_PxArticulationFlagsPtr_operator_Ptr_Amp_PxArticulationFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxArticulationFlagsPtr OpCaretEqual(physx.PxArticulationFlagsPtr lhs, physx.PxArticulationFlag e) {
            physx.PxArticulationFlagsPtr pvk_in_lhs = lhs;
            physx.PxArticulationFlag pvk_in_e = e;
            return PxArticulationFlagsPtr_PxArticulationFlagsPtr_operator_Ptr_CaretEqual_PxArticulationFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxArticulationFlagsPtr OpCaretEqual(physx.PxArticulationFlagsPtr lhs, physx.PxArticulationFlagsPtr f) {
            physx.PxArticulationFlagsPtr pvk_in_lhs = lhs;
            physx.PxArticulationFlagsPtr pvk_in_f = f;
            return PxArticulationFlagsPtr_PxArticulationFlagsPtr_operator_Ptr_CaretEqual_PxArticulationFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxArticulationFlagsPtr OpCaret_New(physx.PxArticulationFlagsPtr lhs, physx.PxArticulationFlag e) {
            physx.PxArticulationFlagsPtr pvk_in_lhs = lhs;
            physx.PxArticulationFlag pvk_in_e = e;
            return PxArticulationFlagsPtr_const_PxArticulationFlagsPtr_operator_Ptr_Caret_PxArticulationFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxArticulationFlagsPtr OpCaret_New(physx.PxArticulationFlagsPtr lhs, physx.PxArticulationFlagsPtr f) {
            physx.PxArticulationFlagsPtr pvk_in_lhs = lhs;
            physx.PxArticulationFlagsPtr pvk_in_f = f;
            return PxArticulationFlagsPtr_const_PxArticulationFlagsPtr_operator_Ptr_Caret_PxArticulationFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxArticulationFlagsPtr OpTilde_New(physx.PxArticulationFlagsPtr lhs) {
            physx.PxArticulationFlagsPtr pvk_in_lhs = lhs;
            return PxArticulationFlagsPtr_const_PxArticulationFlagsPtr_operator_Ptr_Tilde(pvk_in_lhs);
        }

        public static bool ToBool(physx.PxArticulationFlagsPtr lhs) {
            physx.PxArticulationFlagsPtr pvk_in_lhs = lhs;
            return bool_const_PxArticulationFlagsPtr_operator_boolPtr_Conversion(pvk_in_lhs);
        }

        public static byte ToByte(physx.PxArticulationFlagsPtr lhs) {
            physx.PxArticulationFlagsPtr pvk_in_lhs = lhs;
            return byte_const_PxArticulationFlagsPtr_operator_unsigned_charPtr_Conversion(pvk_in_lhs);
        }

        public static ushort ToUShort(physx.PxArticulationFlagsPtr lhs) {
            physx.PxArticulationFlagsPtr pvk_in_lhs = lhs;
            return ushort_const_PxArticulationFlagsPtr_operator_unsigned_shortPtr_Conversion(pvk_in_lhs);
        }

        public static uint ToUInt(physx.PxArticulationFlagsPtr lhs) {
            physx.PxArticulationFlagsPtr pvk_in_lhs = lhs;
            return uint_const_PxArticulationFlagsPtr_operator_unsigned_intPtr_Conversion(pvk_in_lhs);
        }

        public void clear(physx.PxArticulationFlag e) {
            physx.PxArticulationFlagsPtr pvk_in_this = this;
            physx.PxArticulationFlag pvk_in_e = e;
            void_PxArticulationFlagsPtr_clearPtr_PxArticulationFlag_(pvk_in_this, pvk_in_e);
        }

        public static bool operator==(physx.PxArticulationFlagsPtr lhs, physx.PxArticulationFlag e) {
            return physx.PxArticulationFlagsPtr.OpEquals(lhs, e);
        }
        public static bool operator==(physx.PxArticulationFlagsPtr lhs, physx.PxArticulationFlagsPtr f) {
            return physx.PxArticulationFlagsPtr.OpEquals(lhs, f);
        }
        public static bool operator==(physx.PxArticulationFlagsPtr lhs, bool b) {
            return physx.PxArticulationFlagsPtr.OpEquals(lhs, b);
        }
        public static bool operator!=(physx.PxArticulationFlagsPtr lhs, bool b) {
            return !(physx.PxArticulationFlagsPtr.OpEquals(lhs, b)); // Matching Operator
        }
        public static bool operator!=(physx.PxArticulationFlagsPtr lhs, physx.PxArticulationFlag e) {
            return physx.PxArticulationFlagsPtr.OpExclaimEqual(lhs, e);
        }
        public static bool operator!=(physx.PxArticulationFlagsPtr lhs, physx.PxArticulationFlagsPtr f) {
            return physx.PxArticulationFlagsPtr.OpExclaimEqual(lhs, f);
        }
    }

    public unsafe partial struct PxArticulationCacheFlagsPtr {
        private System.IntPtr nativePtr_;

        public static void Free(physx.PxArticulationCacheFlagsPtr ptr){
            Freer_physx_PxArticulationCacheFlagsPtr(ptr);
        }
        public void Free(){
            Freer_physx_PxArticulationCacheFlagsPtr(this);
        }

        public static physx.PxArticulationCacheFlagsPtr New(physx.PxEMPTY _) {
            physx.PxEMPTY pvk_in__ = _;
            return Ctor_PxArticulationCacheFlagsPtr_PxEMPTY(pvk_in__);
        }

        public static physx.PxArticulationCacheFlagsPtr New() {
            return Ctor_PxArticulationCacheFlagsPtr_();
        }

        public static physx.PxArticulationCacheFlagsPtr New(physx.PxArticulationCachePtr.Enum e) {
            physx.PxArticulationCachePtr.Enum pvk_in_e = e;
            return Ctor_PxArticulationCacheFlagsPtr_PxArticulationCachePtr_Enum(pvk_in_e);
        }

        public static physx.PxArticulationCacheFlagsPtr New(physx.PxArticulationCacheFlagsPtr f) {
            physx.PxArticulationCacheFlagsPtr pvk_in_f = f;
            return Ctor_PxArticulationCacheFlagsPtr_PxArticulationCacheFlagsPtr(pvk_in_f);
        }

        public static physx.PxArticulationCacheFlagsPtr New(byte b) {
            byte pvk_in_b = b;
            return Ctor_PxArticulationCacheFlagsPtr_byte(pvk_in_b);
        }

        public bool isSet(physx.PxArticulationCachePtr.Enum e) {
            physx.PxArticulationCacheFlagsPtr pvk_in_this = this;
            physx.PxArticulationCachePtr.Enum pvk_in_e = e;
            return bool_const_PxArticulationCacheFlagsPtr_isSetPtr_PxArticulationCachePtr_Enum_(pvk_in_this, pvk_in_e);
        }

        public physx.PxArticulationCacheFlagsPtr set(physx.PxArticulationCachePtr.Enum e) {
            physx.PxArticulationCacheFlagsPtr pvk_in_this = this;
            physx.PxArticulationCachePtr.Enum pvk_in_e = e;
            return PxArticulationCacheFlagsPtr_PxArticulationCacheFlagsPtr_setPtr_PxArticulationCachePtr_Enum_(pvk_in_this, pvk_in_e);
        }

        public static bool OpEquals(physx.PxArticulationCacheFlagsPtr lhs, physx.PxArticulationCachePtr.Enum e) {
            physx.PxArticulationCacheFlagsPtr pvk_in_lhs = lhs;
            physx.PxArticulationCachePtr.Enum pvk_in_e = e;
            return bool_const_PxArticulationCacheFlagsPtr_operator_Ptr_EqualEqual_PxArticulationCachePtr_Enum_(pvk_in_lhs, pvk_in_e);
        }

        public static bool OpEquals(physx.PxArticulationCacheFlagsPtr lhs, physx.PxArticulationCacheFlagsPtr f) {
            physx.PxArticulationCacheFlagsPtr pvk_in_lhs = lhs;
            physx.PxArticulationCacheFlagsPtr pvk_in_f = f;
            return bool_const_PxArticulationCacheFlagsPtr_operator_Ptr_EqualEqual_PxArticulationCacheFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static bool OpEquals(physx.PxArticulationCacheFlagsPtr lhs, bool b) {
            physx.PxArticulationCacheFlagsPtr pvk_in_lhs = lhs;
            bool pvk_in_b = b;
            return bool_const_PxArticulationCacheFlagsPtr_operator_Ptr_EqualEqual_bool_(pvk_in_lhs, pvk_in_b);
        }

        public static bool OpExclaimEqual(physx.PxArticulationCacheFlagsPtr lhs, physx.PxArticulationCachePtr.Enum e) {
            physx.PxArticulationCacheFlagsPtr pvk_in_lhs = lhs;
            physx.PxArticulationCachePtr.Enum pvk_in_e = e;
            return bool_const_PxArticulationCacheFlagsPtr_operator_Ptr_ExclaimEqual_PxArticulationCachePtr_Enum_(pvk_in_lhs, pvk_in_e);
        }

        public static bool OpExclaimEqual(physx.PxArticulationCacheFlagsPtr lhs, physx.PxArticulationCacheFlagsPtr f) {
            physx.PxArticulationCacheFlagsPtr pvk_in_lhs = lhs;
            physx.PxArticulationCacheFlagsPtr pvk_in_f = f;
            return bool_const_PxArticulationCacheFlagsPtr_operator_Ptr_ExclaimEqual_PxArticulationCacheFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxArticulationCacheFlagsPtr OpEqual(physx.PxArticulationCacheFlagsPtr lhs, physx.PxArticulationCacheFlagsPtr f) {
            physx.PxArticulationCacheFlagsPtr pvk_in_lhs = lhs;
            physx.PxArticulationCacheFlagsPtr pvk_in_f = f;
            return PxArticulationCacheFlagsPtr_PxArticulationCacheFlagsPtr_operator_Ptr_Equal_PxArticulationCacheFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxArticulationCacheFlagsPtr OpEqual(physx.PxArticulationCacheFlagsPtr lhs, physx.PxArticulationCachePtr.Enum e) {
            physx.PxArticulationCacheFlagsPtr pvk_in_lhs = lhs;
            physx.PxArticulationCachePtr.Enum pvk_in_e = e;
            return PxArticulationCacheFlagsPtr_PxArticulationCacheFlagsPtr_operator_Ptr_Equal_PxArticulationCachePtr_Enum_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxArticulationCacheFlagsPtr OpPipeEqual(physx.PxArticulationCacheFlagsPtr lhs, physx.PxArticulationCachePtr.Enum e) {
            physx.PxArticulationCacheFlagsPtr pvk_in_lhs = lhs;
            physx.PxArticulationCachePtr.Enum pvk_in_e = e;
            return PxArticulationCacheFlagsPtr_PxArticulationCacheFlagsPtr_operator_Ptr_PipeEqual_PxArticulationCachePtr_Enum_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxArticulationCacheFlagsPtr OpPipeEqual(physx.PxArticulationCacheFlagsPtr lhs, physx.PxArticulationCacheFlagsPtr f) {
            physx.PxArticulationCacheFlagsPtr pvk_in_lhs = lhs;
            physx.PxArticulationCacheFlagsPtr pvk_in_f = f;
            return PxArticulationCacheFlagsPtr_PxArticulationCacheFlagsPtr_operator_Ptr_PipeEqual_PxArticulationCacheFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxArticulationCacheFlagsPtr OpPipe_New(physx.PxArticulationCacheFlagsPtr lhs, physx.PxArticulationCachePtr.Enum e) {
            physx.PxArticulationCacheFlagsPtr pvk_in_lhs = lhs;
            physx.PxArticulationCachePtr.Enum pvk_in_e = e;
            return PxArticulationCacheFlagsPtr_const_PxArticulationCacheFlagsPtr_operator_Ptr_Pipe_PxArticulationCachePtr_Enum_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxArticulationCacheFlagsPtr OpPipe_New(physx.PxArticulationCacheFlagsPtr lhs, physx.PxArticulationCacheFlagsPtr f) {
            physx.PxArticulationCacheFlagsPtr pvk_in_lhs = lhs;
            physx.PxArticulationCacheFlagsPtr pvk_in_f = f;
            return PxArticulationCacheFlagsPtr_const_PxArticulationCacheFlagsPtr_operator_Ptr_Pipe_PxArticulationCacheFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxArticulationCacheFlagsPtr OpAndEqual(physx.PxArticulationCacheFlagsPtr lhs, physx.PxArticulationCachePtr.Enum e) {
            physx.PxArticulationCacheFlagsPtr pvk_in_lhs = lhs;
            physx.PxArticulationCachePtr.Enum pvk_in_e = e;
            return PxArticulationCacheFlagsPtr_PxArticulationCacheFlagsPtr_operator_Ptr_AmpEqual_PxArticulationCachePtr_Enum_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxArticulationCacheFlagsPtr OpAndEqual(physx.PxArticulationCacheFlagsPtr lhs, physx.PxArticulationCacheFlagsPtr f) {
            physx.PxArticulationCacheFlagsPtr pvk_in_lhs = lhs;
            physx.PxArticulationCacheFlagsPtr pvk_in_f = f;
            return PxArticulationCacheFlagsPtr_PxArticulationCacheFlagsPtr_operator_Ptr_AmpEqual_PxArticulationCacheFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxArticulationCacheFlagsPtr OpAnd_New(physx.PxArticulationCacheFlagsPtr lhs, physx.PxArticulationCachePtr.Enum e) {
            physx.PxArticulationCacheFlagsPtr pvk_in_lhs = lhs;
            physx.PxArticulationCachePtr.Enum pvk_in_e = e;
            return PxArticulationCacheFlagsPtr_const_PxArticulationCacheFlagsPtr_operator_Ptr_Amp_PxArticulationCachePtr_Enum_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxArticulationCacheFlagsPtr OpAnd_New(physx.PxArticulationCacheFlagsPtr lhs, physx.PxArticulationCacheFlagsPtr f) {
            physx.PxArticulationCacheFlagsPtr pvk_in_lhs = lhs;
            physx.PxArticulationCacheFlagsPtr pvk_in_f = f;
            return PxArticulationCacheFlagsPtr_const_PxArticulationCacheFlagsPtr_operator_Ptr_Amp_PxArticulationCacheFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxArticulationCacheFlagsPtr OpCaretEqual(physx.PxArticulationCacheFlagsPtr lhs, physx.PxArticulationCachePtr.Enum e) {
            physx.PxArticulationCacheFlagsPtr pvk_in_lhs = lhs;
            physx.PxArticulationCachePtr.Enum pvk_in_e = e;
            return PxArticulationCacheFlagsPtr_PxArticulationCacheFlagsPtr_operator_Ptr_CaretEqual_PxArticulationCachePtr_Enum_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxArticulationCacheFlagsPtr OpCaretEqual(physx.PxArticulationCacheFlagsPtr lhs, physx.PxArticulationCacheFlagsPtr f) {
            physx.PxArticulationCacheFlagsPtr pvk_in_lhs = lhs;
            physx.PxArticulationCacheFlagsPtr pvk_in_f = f;
            return PxArticulationCacheFlagsPtr_PxArticulationCacheFlagsPtr_operator_Ptr_CaretEqual_PxArticulationCacheFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxArticulationCacheFlagsPtr OpCaret_New(physx.PxArticulationCacheFlagsPtr lhs, physx.PxArticulationCachePtr.Enum e) {
            physx.PxArticulationCacheFlagsPtr pvk_in_lhs = lhs;
            physx.PxArticulationCachePtr.Enum pvk_in_e = e;
            return PxArticulationCacheFlagsPtr_const_PxArticulationCacheFlagsPtr_operator_Ptr_Caret_PxArticulationCachePtr_Enum_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxArticulationCacheFlagsPtr OpCaret_New(physx.PxArticulationCacheFlagsPtr lhs, physx.PxArticulationCacheFlagsPtr f) {
            physx.PxArticulationCacheFlagsPtr pvk_in_lhs = lhs;
            physx.PxArticulationCacheFlagsPtr pvk_in_f = f;
            return PxArticulationCacheFlagsPtr_const_PxArticulationCacheFlagsPtr_operator_Ptr_Caret_PxArticulationCacheFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxArticulationCacheFlagsPtr OpTilde_New(physx.PxArticulationCacheFlagsPtr lhs) {
            physx.PxArticulationCacheFlagsPtr pvk_in_lhs = lhs;
            return PxArticulationCacheFlagsPtr_const_PxArticulationCacheFlagsPtr_operator_Ptr_Tilde(pvk_in_lhs);
        }

        public static bool ToBool(physx.PxArticulationCacheFlagsPtr lhs) {
            physx.PxArticulationCacheFlagsPtr pvk_in_lhs = lhs;
            return bool_const_PxArticulationCacheFlagsPtr_operator_boolPtr_Conversion(pvk_in_lhs);
        }

        public static byte ToByte(physx.PxArticulationCacheFlagsPtr lhs) {
            physx.PxArticulationCacheFlagsPtr pvk_in_lhs = lhs;
            return byte_const_PxArticulationCacheFlagsPtr_operator_unsigned_charPtr_Conversion(pvk_in_lhs);
        }

        public static ushort ToUShort(physx.PxArticulationCacheFlagsPtr lhs) {
            physx.PxArticulationCacheFlagsPtr pvk_in_lhs = lhs;
            return ushort_const_PxArticulationCacheFlagsPtr_operator_unsigned_shortPtr_Conversion(pvk_in_lhs);
        }

        public static uint ToUInt(physx.PxArticulationCacheFlagsPtr lhs) {
            physx.PxArticulationCacheFlagsPtr pvk_in_lhs = lhs;
            return uint_const_PxArticulationCacheFlagsPtr_operator_unsigned_intPtr_Conversion(pvk_in_lhs);
        }

        public void clear(physx.PxArticulationCachePtr.Enum e) {
            physx.PxArticulationCacheFlagsPtr pvk_in_this = this;
            physx.PxArticulationCachePtr.Enum pvk_in_e = e;
            void_PxArticulationCacheFlagsPtr_clearPtr_PxArticulationCachePtr_Enum_(pvk_in_this, pvk_in_e);
        }

        public static bool operator==(physx.PxArticulationCacheFlagsPtr lhs, physx.PxArticulationCachePtr.Enum e) {
            return physx.PxArticulationCacheFlagsPtr.OpEquals(lhs, e);
        }
        public static bool operator==(physx.PxArticulationCacheFlagsPtr lhs, physx.PxArticulationCacheFlagsPtr f) {
            return physx.PxArticulationCacheFlagsPtr.OpEquals(lhs, f);
        }
        public static bool operator==(physx.PxArticulationCacheFlagsPtr lhs, bool b) {
            return physx.PxArticulationCacheFlagsPtr.OpEquals(lhs, b);
        }
        public static bool operator!=(physx.PxArticulationCacheFlagsPtr lhs, bool b) {
            return !(physx.PxArticulationCacheFlagsPtr.OpEquals(lhs, b)); // Matching Operator
        }
        public static bool operator!=(physx.PxArticulationCacheFlagsPtr lhs, physx.PxArticulationCachePtr.Enum e) {
            return physx.PxArticulationCacheFlagsPtr.OpExclaimEqual(lhs, e);
        }
        public static bool operator!=(physx.PxArticulationCacheFlagsPtr lhs, physx.PxArticulationCacheFlagsPtr f) {
            return physx.PxArticulationCacheFlagsPtr.OpExclaimEqual(lhs, f);
        }
    }

    public unsafe partial struct PxDeletionEventFlagsPtr {
        private System.IntPtr nativePtr_;

        public static void Free(physx.PxDeletionEventFlagsPtr ptr){
            Freer_physx_PxDeletionEventFlagsPtr(ptr);
        }
        public void Free(){
            Freer_physx_PxDeletionEventFlagsPtr(this);
        }

        public static physx.PxDeletionEventFlagsPtr New(physx.PxEMPTY _) {
            physx.PxEMPTY pvk_in__ = _;
            return Ctor_PxDeletionEventFlagsPtr_PxEMPTY(pvk_in__);
        }

        public static physx.PxDeletionEventFlagsPtr New() {
            return Ctor_PxDeletionEventFlagsPtr_();
        }

        public static physx.PxDeletionEventFlagsPtr New(physx.PxDeletionEventFlag e) {
            physx.PxDeletionEventFlag pvk_in_e = e;
            return Ctor_PxDeletionEventFlagsPtr_PxDeletionEventFlag(pvk_in_e);
        }

        public static physx.PxDeletionEventFlagsPtr New(physx.PxDeletionEventFlagsPtr f) {
            physx.PxDeletionEventFlagsPtr pvk_in_f = f;
            return Ctor_PxDeletionEventFlagsPtr_PxDeletionEventFlagsPtr(pvk_in_f);
        }

        public static physx.PxDeletionEventFlagsPtr New(byte b) {
            byte pvk_in_b = b;
            return Ctor_PxDeletionEventFlagsPtr_byte(pvk_in_b);
        }

        public bool isSet(physx.PxDeletionEventFlag e) {
            physx.PxDeletionEventFlagsPtr pvk_in_this = this;
            physx.PxDeletionEventFlag pvk_in_e = e;
            return bool_const_PxDeletionEventFlagsPtr_isSetPtr_PxDeletionEventFlag_(pvk_in_this, pvk_in_e);
        }

        public physx.PxDeletionEventFlagsPtr set(physx.PxDeletionEventFlag e) {
            physx.PxDeletionEventFlagsPtr pvk_in_this = this;
            physx.PxDeletionEventFlag pvk_in_e = e;
            return PxDeletionEventFlagsPtr_PxDeletionEventFlagsPtr_setPtr_PxDeletionEventFlag_(pvk_in_this, pvk_in_e);
        }

        public static bool OpEquals(physx.PxDeletionEventFlagsPtr lhs, physx.PxDeletionEventFlag e) {
            physx.PxDeletionEventFlagsPtr pvk_in_lhs = lhs;
            physx.PxDeletionEventFlag pvk_in_e = e;
            return bool_const_PxDeletionEventFlagsPtr_operator_Ptr_EqualEqual_PxDeletionEventFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static bool OpEquals(physx.PxDeletionEventFlagsPtr lhs, physx.PxDeletionEventFlagsPtr f) {
            physx.PxDeletionEventFlagsPtr pvk_in_lhs = lhs;
            physx.PxDeletionEventFlagsPtr pvk_in_f = f;
            return bool_const_PxDeletionEventFlagsPtr_operator_Ptr_EqualEqual_PxDeletionEventFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static bool OpEquals(physx.PxDeletionEventFlagsPtr lhs, bool b) {
            physx.PxDeletionEventFlagsPtr pvk_in_lhs = lhs;
            bool pvk_in_b = b;
            return bool_const_PxDeletionEventFlagsPtr_operator_Ptr_EqualEqual_bool_(pvk_in_lhs, pvk_in_b);
        }

        public static bool OpExclaimEqual(physx.PxDeletionEventFlagsPtr lhs, physx.PxDeletionEventFlag e) {
            physx.PxDeletionEventFlagsPtr pvk_in_lhs = lhs;
            physx.PxDeletionEventFlag pvk_in_e = e;
            return bool_const_PxDeletionEventFlagsPtr_operator_Ptr_ExclaimEqual_PxDeletionEventFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static bool OpExclaimEqual(physx.PxDeletionEventFlagsPtr lhs, physx.PxDeletionEventFlagsPtr f) {
            physx.PxDeletionEventFlagsPtr pvk_in_lhs = lhs;
            physx.PxDeletionEventFlagsPtr pvk_in_f = f;
            return bool_const_PxDeletionEventFlagsPtr_operator_Ptr_ExclaimEqual_PxDeletionEventFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxDeletionEventFlagsPtr OpEqual(physx.PxDeletionEventFlagsPtr lhs, physx.PxDeletionEventFlagsPtr f) {
            physx.PxDeletionEventFlagsPtr pvk_in_lhs = lhs;
            physx.PxDeletionEventFlagsPtr pvk_in_f = f;
            return PxDeletionEventFlagsPtr_PxDeletionEventFlagsPtr_operator_Ptr_Equal_PxDeletionEventFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxDeletionEventFlagsPtr OpEqual(physx.PxDeletionEventFlagsPtr lhs, physx.PxDeletionEventFlag e) {
            physx.PxDeletionEventFlagsPtr pvk_in_lhs = lhs;
            physx.PxDeletionEventFlag pvk_in_e = e;
            return PxDeletionEventFlagsPtr_PxDeletionEventFlagsPtr_operator_Ptr_Equal_PxDeletionEventFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxDeletionEventFlagsPtr OpPipeEqual(physx.PxDeletionEventFlagsPtr lhs, physx.PxDeletionEventFlag e) {
            physx.PxDeletionEventFlagsPtr pvk_in_lhs = lhs;
            physx.PxDeletionEventFlag pvk_in_e = e;
            return PxDeletionEventFlagsPtr_PxDeletionEventFlagsPtr_operator_Ptr_PipeEqual_PxDeletionEventFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxDeletionEventFlagsPtr OpPipeEqual(physx.PxDeletionEventFlagsPtr lhs, physx.PxDeletionEventFlagsPtr f) {
            physx.PxDeletionEventFlagsPtr pvk_in_lhs = lhs;
            physx.PxDeletionEventFlagsPtr pvk_in_f = f;
            return PxDeletionEventFlagsPtr_PxDeletionEventFlagsPtr_operator_Ptr_PipeEqual_PxDeletionEventFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxDeletionEventFlagsPtr OpPipe_New(physx.PxDeletionEventFlagsPtr lhs, physx.PxDeletionEventFlag e) {
            physx.PxDeletionEventFlagsPtr pvk_in_lhs = lhs;
            physx.PxDeletionEventFlag pvk_in_e = e;
            return PxDeletionEventFlagsPtr_const_PxDeletionEventFlagsPtr_operator_Ptr_Pipe_PxDeletionEventFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxDeletionEventFlagsPtr OpPipe_New(physx.PxDeletionEventFlagsPtr lhs, physx.PxDeletionEventFlagsPtr f) {
            physx.PxDeletionEventFlagsPtr pvk_in_lhs = lhs;
            physx.PxDeletionEventFlagsPtr pvk_in_f = f;
            return PxDeletionEventFlagsPtr_const_PxDeletionEventFlagsPtr_operator_Ptr_Pipe_PxDeletionEventFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxDeletionEventFlagsPtr OpAndEqual(physx.PxDeletionEventFlagsPtr lhs, physx.PxDeletionEventFlag e) {
            physx.PxDeletionEventFlagsPtr pvk_in_lhs = lhs;
            physx.PxDeletionEventFlag pvk_in_e = e;
            return PxDeletionEventFlagsPtr_PxDeletionEventFlagsPtr_operator_Ptr_AmpEqual_PxDeletionEventFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxDeletionEventFlagsPtr OpAndEqual(physx.PxDeletionEventFlagsPtr lhs, physx.PxDeletionEventFlagsPtr f) {
            physx.PxDeletionEventFlagsPtr pvk_in_lhs = lhs;
            physx.PxDeletionEventFlagsPtr pvk_in_f = f;
            return PxDeletionEventFlagsPtr_PxDeletionEventFlagsPtr_operator_Ptr_AmpEqual_PxDeletionEventFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxDeletionEventFlagsPtr OpAnd_New(physx.PxDeletionEventFlagsPtr lhs, physx.PxDeletionEventFlag e) {
            physx.PxDeletionEventFlagsPtr pvk_in_lhs = lhs;
            physx.PxDeletionEventFlag pvk_in_e = e;
            return PxDeletionEventFlagsPtr_const_PxDeletionEventFlagsPtr_operator_Ptr_Amp_PxDeletionEventFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxDeletionEventFlagsPtr OpAnd_New(physx.PxDeletionEventFlagsPtr lhs, physx.PxDeletionEventFlagsPtr f) {
            physx.PxDeletionEventFlagsPtr pvk_in_lhs = lhs;
            physx.PxDeletionEventFlagsPtr pvk_in_f = f;
            return PxDeletionEventFlagsPtr_const_PxDeletionEventFlagsPtr_operator_Ptr_Amp_PxDeletionEventFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxDeletionEventFlagsPtr OpCaretEqual(physx.PxDeletionEventFlagsPtr lhs, physx.PxDeletionEventFlag e) {
            physx.PxDeletionEventFlagsPtr pvk_in_lhs = lhs;
            physx.PxDeletionEventFlag pvk_in_e = e;
            return PxDeletionEventFlagsPtr_PxDeletionEventFlagsPtr_operator_Ptr_CaretEqual_PxDeletionEventFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxDeletionEventFlagsPtr OpCaretEqual(physx.PxDeletionEventFlagsPtr lhs, physx.PxDeletionEventFlagsPtr f) {
            physx.PxDeletionEventFlagsPtr pvk_in_lhs = lhs;
            physx.PxDeletionEventFlagsPtr pvk_in_f = f;
            return PxDeletionEventFlagsPtr_PxDeletionEventFlagsPtr_operator_Ptr_CaretEqual_PxDeletionEventFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxDeletionEventFlagsPtr OpCaret_New(physx.PxDeletionEventFlagsPtr lhs, physx.PxDeletionEventFlag e) {
            physx.PxDeletionEventFlagsPtr pvk_in_lhs = lhs;
            physx.PxDeletionEventFlag pvk_in_e = e;
            return PxDeletionEventFlagsPtr_const_PxDeletionEventFlagsPtr_operator_Ptr_Caret_PxDeletionEventFlag_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxDeletionEventFlagsPtr OpCaret_New(physx.PxDeletionEventFlagsPtr lhs, physx.PxDeletionEventFlagsPtr f) {
            physx.PxDeletionEventFlagsPtr pvk_in_lhs = lhs;
            physx.PxDeletionEventFlagsPtr pvk_in_f = f;
            return PxDeletionEventFlagsPtr_const_PxDeletionEventFlagsPtr_operator_Ptr_Caret_PxDeletionEventFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxDeletionEventFlagsPtr OpTilde_New(physx.PxDeletionEventFlagsPtr lhs) {
            physx.PxDeletionEventFlagsPtr pvk_in_lhs = lhs;
            return PxDeletionEventFlagsPtr_const_PxDeletionEventFlagsPtr_operator_Ptr_Tilde(pvk_in_lhs);
        }

        public static bool ToBool(physx.PxDeletionEventFlagsPtr lhs) {
            physx.PxDeletionEventFlagsPtr pvk_in_lhs = lhs;
            return bool_const_PxDeletionEventFlagsPtr_operator_boolPtr_Conversion(pvk_in_lhs);
        }

        public static byte ToByte(physx.PxDeletionEventFlagsPtr lhs) {
            physx.PxDeletionEventFlagsPtr pvk_in_lhs = lhs;
            return byte_const_PxDeletionEventFlagsPtr_operator_unsigned_charPtr_Conversion(pvk_in_lhs);
        }

        public static ushort ToUShort(physx.PxDeletionEventFlagsPtr lhs) {
            physx.PxDeletionEventFlagsPtr pvk_in_lhs = lhs;
            return ushort_const_PxDeletionEventFlagsPtr_operator_unsigned_shortPtr_Conversion(pvk_in_lhs);
        }

        public static uint ToUInt(physx.PxDeletionEventFlagsPtr lhs) {
            physx.PxDeletionEventFlagsPtr pvk_in_lhs = lhs;
            return uint_const_PxDeletionEventFlagsPtr_operator_unsigned_intPtr_Conversion(pvk_in_lhs);
        }

        public void clear(physx.PxDeletionEventFlag e) {
            physx.PxDeletionEventFlagsPtr pvk_in_this = this;
            physx.PxDeletionEventFlag pvk_in_e = e;
            void_PxDeletionEventFlagsPtr_clearPtr_PxDeletionEventFlag_(pvk_in_this, pvk_in_e);
        }

        public static bool operator==(physx.PxDeletionEventFlagsPtr lhs, physx.PxDeletionEventFlag e) {
            return physx.PxDeletionEventFlagsPtr.OpEquals(lhs, e);
        }
        public static bool operator==(physx.PxDeletionEventFlagsPtr lhs, physx.PxDeletionEventFlagsPtr f) {
            return physx.PxDeletionEventFlagsPtr.OpEquals(lhs, f);
        }
        public static bool operator==(physx.PxDeletionEventFlagsPtr lhs, bool b) {
            return physx.PxDeletionEventFlagsPtr.OpEquals(lhs, b);
        }
        public static bool operator!=(physx.PxDeletionEventFlagsPtr lhs, bool b) {
            return !(physx.PxDeletionEventFlagsPtr.OpEquals(lhs, b)); // Matching Operator
        }
        public static bool operator!=(physx.PxDeletionEventFlagsPtr lhs, physx.PxDeletionEventFlag e) {
            return physx.PxDeletionEventFlagsPtr.OpExclaimEqual(lhs, e);
        }
        public static bool operator!=(physx.PxDeletionEventFlagsPtr lhs, physx.PxDeletionEventFlagsPtr f) {
            return physx.PxDeletionEventFlagsPtr.OpExclaimEqual(lhs, f);
        }
    }

    public unsafe partial struct Px1DConstraintFlagsPtr {
        private System.IntPtr nativePtr_;

        public static void Free(physx.Px1DConstraintFlagsPtr ptr){
            Freer_physx_Px1DConstraintFlagsPtr(ptr);
        }
        public void Free(){
            Freer_physx_Px1DConstraintFlagsPtr(this);
        }

        public static physx.Px1DConstraintFlagsPtr New(physx.PxEMPTY _) {
            physx.PxEMPTY pvk_in__ = _;
            return Ctor_Px1DConstraintFlagsPtr_PxEMPTY(pvk_in__);
        }

        public static physx.Px1DConstraintFlagsPtr New() {
            return Ctor_Px1DConstraintFlagsPtr_();
        }

        public static physx.Px1DConstraintFlagsPtr New(physx.Px1DConstraintFlagPtr.Type e) {
            physx.Px1DConstraintFlagPtr.Type pvk_in_e = e;
            return Ctor_Px1DConstraintFlagsPtr_Px1DConstraintFlagPtr_Type(pvk_in_e);
        }

        public static physx.Px1DConstraintFlagsPtr New(physx.Px1DConstraintFlagsPtr f) {
            physx.Px1DConstraintFlagsPtr pvk_in_f = f;
            return Ctor_Px1DConstraintFlagsPtr_Px1DConstraintFlagsPtr(pvk_in_f);
        }

        public static physx.Px1DConstraintFlagsPtr New(ushort b) {
            ushort pvk_in_b = b;
            return Ctor_Px1DConstraintFlagsPtr_ushort(pvk_in_b);
        }

        public bool isSet(physx.Px1DConstraintFlagPtr.Type e) {
            physx.Px1DConstraintFlagsPtr pvk_in_this = this;
            physx.Px1DConstraintFlagPtr.Type pvk_in_e = e;
            return bool_const_Px1DConstraintFlagsPtr_isSetPtr_Px1DConstraintFlagPtr_Type_(pvk_in_this, pvk_in_e);
        }

        public physx.Px1DConstraintFlagsPtr set(physx.Px1DConstraintFlagPtr.Type e) {
            physx.Px1DConstraintFlagsPtr pvk_in_this = this;
            physx.Px1DConstraintFlagPtr.Type pvk_in_e = e;
            return Px1DConstraintFlagsPtr_Px1DConstraintFlagsPtr_setPtr_Px1DConstraintFlagPtr_Type_(pvk_in_this, pvk_in_e);
        }

        public static bool OpEquals(physx.Px1DConstraintFlagsPtr lhs, physx.Px1DConstraintFlagPtr.Type e) {
            physx.Px1DConstraintFlagsPtr pvk_in_lhs = lhs;
            physx.Px1DConstraintFlagPtr.Type pvk_in_e = e;
            return bool_const_Px1DConstraintFlagsPtr_operator_Ptr_EqualEqual_Px1DConstraintFlagPtr_Type_(pvk_in_lhs, pvk_in_e);
        }

        public static bool OpEquals(physx.Px1DConstraintFlagsPtr lhs, physx.Px1DConstraintFlagsPtr f) {
            physx.Px1DConstraintFlagsPtr pvk_in_lhs = lhs;
            physx.Px1DConstraintFlagsPtr pvk_in_f = f;
            return bool_const_Px1DConstraintFlagsPtr_operator_Ptr_EqualEqual_Px1DConstraintFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static bool OpEquals(physx.Px1DConstraintFlagsPtr lhs, bool b) {
            physx.Px1DConstraintFlagsPtr pvk_in_lhs = lhs;
            bool pvk_in_b = b;
            return bool_const_Px1DConstraintFlagsPtr_operator_Ptr_EqualEqual_bool_(pvk_in_lhs, pvk_in_b);
        }

        public static bool OpExclaimEqual(physx.Px1DConstraintFlagsPtr lhs, physx.Px1DConstraintFlagPtr.Type e) {
            physx.Px1DConstraintFlagsPtr pvk_in_lhs = lhs;
            physx.Px1DConstraintFlagPtr.Type pvk_in_e = e;
            return bool_const_Px1DConstraintFlagsPtr_operator_Ptr_ExclaimEqual_Px1DConstraintFlagPtr_Type_(pvk_in_lhs, pvk_in_e);
        }

        public static bool OpExclaimEqual(physx.Px1DConstraintFlagsPtr lhs, physx.Px1DConstraintFlagsPtr f) {
            physx.Px1DConstraintFlagsPtr pvk_in_lhs = lhs;
            physx.Px1DConstraintFlagsPtr pvk_in_f = f;
            return bool_const_Px1DConstraintFlagsPtr_operator_Ptr_ExclaimEqual_Px1DConstraintFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.Px1DConstraintFlagsPtr OpEqual(physx.Px1DConstraintFlagsPtr lhs, physx.Px1DConstraintFlagsPtr f) {
            physx.Px1DConstraintFlagsPtr pvk_in_lhs = lhs;
            physx.Px1DConstraintFlagsPtr pvk_in_f = f;
            return Px1DConstraintFlagsPtr_Px1DConstraintFlagsPtr_operator_Ptr_Equal_Px1DConstraintFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.Px1DConstraintFlagsPtr OpEqual(physx.Px1DConstraintFlagsPtr lhs, physx.Px1DConstraintFlagPtr.Type e) {
            physx.Px1DConstraintFlagsPtr pvk_in_lhs = lhs;
            physx.Px1DConstraintFlagPtr.Type pvk_in_e = e;
            return Px1DConstraintFlagsPtr_Px1DConstraintFlagsPtr_operator_Ptr_Equal_Px1DConstraintFlagPtr_Type_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.Px1DConstraintFlagsPtr OpPipeEqual(physx.Px1DConstraintFlagsPtr lhs, physx.Px1DConstraintFlagPtr.Type e) {
            physx.Px1DConstraintFlagsPtr pvk_in_lhs = lhs;
            physx.Px1DConstraintFlagPtr.Type pvk_in_e = e;
            return Px1DConstraintFlagsPtr_Px1DConstraintFlagsPtr_operator_Ptr_PipeEqual_Px1DConstraintFlagPtr_Type_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.Px1DConstraintFlagsPtr OpPipeEqual(physx.Px1DConstraintFlagsPtr lhs, physx.Px1DConstraintFlagsPtr f) {
            physx.Px1DConstraintFlagsPtr pvk_in_lhs = lhs;
            physx.Px1DConstraintFlagsPtr pvk_in_f = f;
            return Px1DConstraintFlagsPtr_Px1DConstraintFlagsPtr_operator_Ptr_PipeEqual_Px1DConstraintFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.Px1DConstraintFlagsPtr OpPipe_New(physx.Px1DConstraintFlagsPtr lhs, physx.Px1DConstraintFlagPtr.Type e) {
            physx.Px1DConstraintFlagsPtr pvk_in_lhs = lhs;
            physx.Px1DConstraintFlagPtr.Type pvk_in_e = e;
            return Px1DConstraintFlagsPtr_const_Px1DConstraintFlagsPtr_operator_Ptr_Pipe_Px1DConstraintFlagPtr_Type_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.Px1DConstraintFlagsPtr OpPipe_New(physx.Px1DConstraintFlagsPtr lhs, physx.Px1DConstraintFlagsPtr f) {
            physx.Px1DConstraintFlagsPtr pvk_in_lhs = lhs;
            physx.Px1DConstraintFlagsPtr pvk_in_f = f;
            return Px1DConstraintFlagsPtr_const_Px1DConstraintFlagsPtr_operator_Ptr_Pipe_Px1DConstraintFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.Px1DConstraintFlagsPtr OpAndEqual(physx.Px1DConstraintFlagsPtr lhs, physx.Px1DConstraintFlagPtr.Type e) {
            physx.Px1DConstraintFlagsPtr pvk_in_lhs = lhs;
            physx.Px1DConstraintFlagPtr.Type pvk_in_e = e;
            return Px1DConstraintFlagsPtr_Px1DConstraintFlagsPtr_operator_Ptr_AmpEqual_Px1DConstraintFlagPtr_Type_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.Px1DConstraintFlagsPtr OpAndEqual(physx.Px1DConstraintFlagsPtr lhs, physx.Px1DConstraintFlagsPtr f) {
            physx.Px1DConstraintFlagsPtr pvk_in_lhs = lhs;
            physx.Px1DConstraintFlagsPtr pvk_in_f = f;
            return Px1DConstraintFlagsPtr_Px1DConstraintFlagsPtr_operator_Ptr_AmpEqual_Px1DConstraintFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.Px1DConstraintFlagsPtr OpAnd_New(physx.Px1DConstraintFlagsPtr lhs, physx.Px1DConstraintFlagPtr.Type e) {
            physx.Px1DConstraintFlagsPtr pvk_in_lhs = lhs;
            physx.Px1DConstraintFlagPtr.Type pvk_in_e = e;
            return Px1DConstraintFlagsPtr_const_Px1DConstraintFlagsPtr_operator_Ptr_Amp_Px1DConstraintFlagPtr_Type_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.Px1DConstraintFlagsPtr OpAnd_New(physx.Px1DConstraintFlagsPtr lhs, physx.Px1DConstraintFlagsPtr f) {
            physx.Px1DConstraintFlagsPtr pvk_in_lhs = lhs;
            physx.Px1DConstraintFlagsPtr pvk_in_f = f;
            return Px1DConstraintFlagsPtr_const_Px1DConstraintFlagsPtr_operator_Ptr_Amp_Px1DConstraintFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.Px1DConstraintFlagsPtr OpCaretEqual(physx.Px1DConstraintFlagsPtr lhs, physx.Px1DConstraintFlagPtr.Type e) {
            physx.Px1DConstraintFlagsPtr pvk_in_lhs = lhs;
            physx.Px1DConstraintFlagPtr.Type pvk_in_e = e;
            return Px1DConstraintFlagsPtr_Px1DConstraintFlagsPtr_operator_Ptr_CaretEqual_Px1DConstraintFlagPtr_Type_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.Px1DConstraintFlagsPtr OpCaretEqual(physx.Px1DConstraintFlagsPtr lhs, physx.Px1DConstraintFlagsPtr f) {
            physx.Px1DConstraintFlagsPtr pvk_in_lhs = lhs;
            physx.Px1DConstraintFlagsPtr pvk_in_f = f;
            return Px1DConstraintFlagsPtr_Px1DConstraintFlagsPtr_operator_Ptr_CaretEqual_Px1DConstraintFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.Px1DConstraintFlagsPtr OpCaret_New(physx.Px1DConstraintFlagsPtr lhs, physx.Px1DConstraintFlagPtr.Type e) {
            physx.Px1DConstraintFlagsPtr pvk_in_lhs = lhs;
            physx.Px1DConstraintFlagPtr.Type pvk_in_e = e;
            return Px1DConstraintFlagsPtr_const_Px1DConstraintFlagsPtr_operator_Ptr_Caret_Px1DConstraintFlagPtr_Type_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.Px1DConstraintFlagsPtr OpCaret_New(physx.Px1DConstraintFlagsPtr lhs, physx.Px1DConstraintFlagsPtr f) {
            physx.Px1DConstraintFlagsPtr pvk_in_lhs = lhs;
            physx.Px1DConstraintFlagsPtr pvk_in_f = f;
            return Px1DConstraintFlagsPtr_const_Px1DConstraintFlagsPtr_operator_Ptr_Caret_Px1DConstraintFlagsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.Px1DConstraintFlagsPtr OpTilde_New(physx.Px1DConstraintFlagsPtr lhs) {
            physx.Px1DConstraintFlagsPtr pvk_in_lhs = lhs;
            return Px1DConstraintFlagsPtr_const_Px1DConstraintFlagsPtr_operator_Ptr_Tilde(pvk_in_lhs);
        }

        public static bool ToBool(physx.Px1DConstraintFlagsPtr lhs) {
            physx.Px1DConstraintFlagsPtr pvk_in_lhs = lhs;
            return bool_const_Px1DConstraintFlagsPtr_operator_boolPtr_Conversion(pvk_in_lhs);
        }

        public static byte ToByte(physx.Px1DConstraintFlagsPtr lhs) {
            physx.Px1DConstraintFlagsPtr pvk_in_lhs = lhs;
            return byte_const_Px1DConstraintFlagsPtr_operator_unsigned_charPtr_Conversion(pvk_in_lhs);
        }

        public static ushort ToUShort(physx.Px1DConstraintFlagsPtr lhs) {
            physx.Px1DConstraintFlagsPtr pvk_in_lhs = lhs;
            return ushort_const_Px1DConstraintFlagsPtr_operator_unsigned_shortPtr_Conversion(pvk_in_lhs);
        }

        public static uint ToUInt(physx.Px1DConstraintFlagsPtr lhs) {
            physx.Px1DConstraintFlagsPtr pvk_in_lhs = lhs;
            return uint_const_Px1DConstraintFlagsPtr_operator_unsigned_intPtr_Conversion(pvk_in_lhs);
        }

        public void clear(physx.Px1DConstraintFlagPtr.Type e) {
            physx.Px1DConstraintFlagsPtr pvk_in_this = this;
            physx.Px1DConstraintFlagPtr.Type pvk_in_e = e;
            void_Px1DConstraintFlagsPtr_clearPtr_Px1DConstraintFlagPtr_Type_(pvk_in_this, pvk_in_e);
        }

        public static bool operator==(physx.Px1DConstraintFlagsPtr lhs, physx.Px1DConstraintFlagPtr.Type e) {
            return physx.Px1DConstraintFlagsPtr.OpEquals(lhs, e);
        }
        public static bool operator==(physx.Px1DConstraintFlagsPtr lhs, physx.Px1DConstraintFlagsPtr f) {
            return physx.Px1DConstraintFlagsPtr.OpEquals(lhs, f);
        }
        public static bool operator==(physx.Px1DConstraintFlagsPtr lhs, bool b) {
            return physx.Px1DConstraintFlagsPtr.OpEquals(lhs, b);
        }
        public static bool operator!=(physx.Px1DConstraintFlagsPtr lhs, bool b) {
            return !(physx.Px1DConstraintFlagsPtr.OpEquals(lhs, b)); // Matching Operator
        }
        public static bool operator!=(physx.Px1DConstraintFlagsPtr lhs, physx.Px1DConstraintFlagPtr.Type e) {
            return physx.Px1DConstraintFlagsPtr.OpExclaimEqual(lhs, e);
        }
        public static bool operator!=(physx.Px1DConstraintFlagsPtr lhs, physx.Px1DConstraintFlagsPtr f) {
            return physx.Px1DConstraintFlagsPtr.OpExclaimEqual(lhs, f);
        }
    }

    public unsafe partial struct PxFlags_PxArticulationAxis_bytePtr {
        private System.IntPtr nativePtr_;

        public static void Free(physx.PxFlags_PxArticulationAxis_bytePtr ptr){
            Freer_physx_PxFlags_PxArticulationAxis_bytePtr(ptr);
        }
        public void Free(){
            Freer_physx_PxFlags_PxArticulationAxis_bytePtr(this);
        }

        public static physx.PxFlags_PxArticulationAxis_bytePtr New(physx.PxEMPTY _) {
            physx.PxEMPTY pvk_in__ = _;
            return Ctor_PxFlags_PxArticulationAxis_bytePtr_PxEMPTY(pvk_in__);
        }

        public static physx.PxFlags_PxArticulationAxis_bytePtr New() {
            return Ctor_PxFlags_PxArticulationAxis_bytePtr_();
        }

        public static physx.PxFlags_PxArticulationAxis_bytePtr New(physx.PxArticulationAxis e) {
            physx.PxArticulationAxis pvk_in_e = e;
            return Ctor_PxFlags_PxArticulationAxis_bytePtr_PxArticulationAxis(pvk_in_e);
        }

        public static physx.PxFlags_PxArticulationAxis_bytePtr New(physx.PxFlags_PxArticulationAxis_bytePtr f) {
            physx.PxFlags_PxArticulationAxis_bytePtr pvk_in_f = f;
            return Ctor_PxFlags_PxArticulationAxis_bytePtr_PxFlags_PxArticulationAxis_bytePtr(pvk_in_f);
        }

        public static physx.PxFlags_PxArticulationAxis_bytePtr New(byte b) {
            byte pvk_in_b = b;
            return Ctor_PxFlags_PxArticulationAxis_bytePtr_byte(pvk_in_b);
        }

        public bool isSet(physx.PxArticulationAxis e) {
            physx.PxFlags_PxArticulationAxis_bytePtr pvk_in_this = this;
            physx.PxArticulationAxis pvk_in_e = e;
            return bool_const_PxFlags_PxArticulationAxis_bytePtr_isSetPtr_PxArticulationAxis_(pvk_in_this, pvk_in_e);
        }

        public physx.PxFlags_PxArticulationAxis_bytePtr set(physx.PxArticulationAxis e) {
            physx.PxFlags_PxArticulationAxis_bytePtr pvk_in_this = this;
            physx.PxArticulationAxis pvk_in_e = e;
            return PxFlags_PxArticulationAxis_bytePtr_PxFlags_PxArticulationAxis_bytePtr_setPtr_PxArticulationAxis_(pvk_in_this, pvk_in_e);
        }

        public static bool OpEquals(physx.PxFlags_PxArticulationAxis_bytePtr lhs, physx.PxArticulationAxis e) {
            physx.PxFlags_PxArticulationAxis_bytePtr pvk_in_lhs = lhs;
            physx.PxArticulationAxis pvk_in_e = e;
            return bool_const_PxFlags_PxArticulationAxis_bytePtr_operator_Ptr_EqualEqual_PxArticulationAxis_(pvk_in_lhs, pvk_in_e);
        }

        public static bool OpEquals(physx.PxFlags_PxArticulationAxis_bytePtr lhs, physx.PxFlags_PxArticulationAxis_bytePtr f) {
            physx.PxFlags_PxArticulationAxis_bytePtr pvk_in_lhs = lhs;
            physx.PxFlags_PxArticulationAxis_bytePtr pvk_in_f = f;
            return bool_const_PxFlags_PxArticulationAxis_bytePtr_operator_Ptr_EqualEqual_PxFlags_PxArticulationAxis_bytePtr_(pvk_in_lhs, pvk_in_f);
        }

        public static bool OpEquals(physx.PxFlags_PxArticulationAxis_bytePtr lhs, bool b) {
            physx.PxFlags_PxArticulationAxis_bytePtr pvk_in_lhs = lhs;
            bool pvk_in_b = b;
            return bool_const_PxFlags_PxArticulationAxis_bytePtr_operator_Ptr_EqualEqual_bool_(pvk_in_lhs, pvk_in_b);
        }

        public static bool OpExclaimEqual(physx.PxFlags_PxArticulationAxis_bytePtr lhs, physx.PxArticulationAxis e) {
            physx.PxFlags_PxArticulationAxis_bytePtr pvk_in_lhs = lhs;
            physx.PxArticulationAxis pvk_in_e = e;
            return bool_const_PxFlags_PxArticulationAxis_bytePtr_operator_Ptr_ExclaimEqual_PxArticulationAxis_(pvk_in_lhs, pvk_in_e);
        }

        public static bool OpExclaimEqual(physx.PxFlags_PxArticulationAxis_bytePtr lhs, physx.PxFlags_PxArticulationAxis_bytePtr f) {
            physx.PxFlags_PxArticulationAxis_bytePtr pvk_in_lhs = lhs;
            physx.PxFlags_PxArticulationAxis_bytePtr pvk_in_f = f;
            return bool_const_PxFlags_PxArticulationAxis_bytePtr_operator_Ptr_ExclaimEqual_PxFlags_PxArticulationAxis_bytePtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxFlags_PxArticulationAxis_bytePtr OpEqual(physx.PxFlags_PxArticulationAxis_bytePtr lhs, physx.PxFlags_PxArticulationAxis_bytePtr f) {
            physx.PxFlags_PxArticulationAxis_bytePtr pvk_in_lhs = lhs;
            physx.PxFlags_PxArticulationAxis_bytePtr pvk_in_f = f;
            return PxFlags_PxArticulationAxis_bytePtr_PxFlags_PxArticulationAxis_bytePtr_operator_Ptr_Equal_PxFlags_PxArticulationAxis_bytePtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxFlags_PxArticulationAxis_bytePtr OpEqual(physx.PxFlags_PxArticulationAxis_bytePtr lhs, physx.PxArticulationAxis e) {
            physx.PxFlags_PxArticulationAxis_bytePtr pvk_in_lhs = lhs;
            physx.PxArticulationAxis pvk_in_e = e;
            return PxFlags_PxArticulationAxis_bytePtr_PxFlags_PxArticulationAxis_bytePtr_operator_Ptr_Equal_PxArticulationAxis_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxFlags_PxArticulationAxis_bytePtr OpPipeEqual(physx.PxFlags_PxArticulationAxis_bytePtr lhs, physx.PxArticulationAxis e) {
            physx.PxFlags_PxArticulationAxis_bytePtr pvk_in_lhs = lhs;
            physx.PxArticulationAxis pvk_in_e = e;
            return PxFlags_PxArticulationAxis_bytePtr_PxFlags_PxArticulationAxis_bytePtr_operator_Ptr_PipeEqual_PxArticulationAxis_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxFlags_PxArticulationAxis_bytePtr OpPipeEqual(physx.PxFlags_PxArticulationAxis_bytePtr lhs, physx.PxFlags_PxArticulationAxis_bytePtr f) {
            physx.PxFlags_PxArticulationAxis_bytePtr pvk_in_lhs = lhs;
            physx.PxFlags_PxArticulationAxis_bytePtr pvk_in_f = f;
            return PxFlags_PxArticulationAxis_bytePtr_PxFlags_PxArticulationAxis_bytePtr_operator_Ptr_PipeEqual_PxFlags_PxArticulationAxis_bytePtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxFlags_PxArticulationAxis_bytePtr OpPipe_New(physx.PxFlags_PxArticulationAxis_bytePtr lhs, physx.PxArticulationAxis e) {
            physx.PxFlags_PxArticulationAxis_bytePtr pvk_in_lhs = lhs;
            physx.PxArticulationAxis pvk_in_e = e;
            return PxFlags_PxArticulationAxis_bytePtr_const_PxFlags_PxArticulationAxis_bytePtr_operator_Ptr_Pipe_PxArticulationAxis_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxFlags_PxArticulationAxis_bytePtr OpPipe_New(physx.PxFlags_PxArticulationAxis_bytePtr lhs, physx.PxFlags_PxArticulationAxis_bytePtr f) {
            physx.PxFlags_PxArticulationAxis_bytePtr pvk_in_lhs = lhs;
            physx.PxFlags_PxArticulationAxis_bytePtr pvk_in_f = f;
            return PxFlags_PxArticulationAxis_bytePtr_const_PxFlags_PxArticulationAxis_bytePtr_operator_Ptr_Pipe_PxFlags_PxArticulationAxis_bytePtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxFlags_PxArticulationAxis_bytePtr OpAndEqual(physx.PxFlags_PxArticulationAxis_bytePtr lhs, physx.PxArticulationAxis e) {
            physx.PxFlags_PxArticulationAxis_bytePtr pvk_in_lhs = lhs;
            physx.PxArticulationAxis pvk_in_e = e;
            return PxFlags_PxArticulationAxis_bytePtr_PxFlags_PxArticulationAxis_bytePtr_operator_Ptr_AmpEqual_PxArticulationAxis_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxFlags_PxArticulationAxis_bytePtr OpAndEqual(physx.PxFlags_PxArticulationAxis_bytePtr lhs, physx.PxFlags_PxArticulationAxis_bytePtr f) {
            physx.PxFlags_PxArticulationAxis_bytePtr pvk_in_lhs = lhs;
            physx.PxFlags_PxArticulationAxis_bytePtr pvk_in_f = f;
            return PxFlags_PxArticulationAxis_bytePtr_PxFlags_PxArticulationAxis_bytePtr_operator_Ptr_AmpEqual_PxFlags_PxArticulationAxis_bytePtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxFlags_PxArticulationAxis_bytePtr OpAnd_New(physx.PxFlags_PxArticulationAxis_bytePtr lhs, physx.PxArticulationAxis e) {
            physx.PxFlags_PxArticulationAxis_bytePtr pvk_in_lhs = lhs;
            physx.PxArticulationAxis pvk_in_e = e;
            return PxFlags_PxArticulationAxis_bytePtr_const_PxFlags_PxArticulationAxis_bytePtr_operator_Ptr_Amp_PxArticulationAxis_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxFlags_PxArticulationAxis_bytePtr OpAnd_New(physx.PxFlags_PxArticulationAxis_bytePtr lhs, physx.PxFlags_PxArticulationAxis_bytePtr f) {
            physx.PxFlags_PxArticulationAxis_bytePtr pvk_in_lhs = lhs;
            physx.PxFlags_PxArticulationAxis_bytePtr pvk_in_f = f;
            return PxFlags_PxArticulationAxis_bytePtr_const_PxFlags_PxArticulationAxis_bytePtr_operator_Ptr_Amp_PxFlags_PxArticulationAxis_bytePtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxFlags_PxArticulationAxis_bytePtr OpCaretEqual(physx.PxFlags_PxArticulationAxis_bytePtr lhs, physx.PxArticulationAxis e) {
            physx.PxFlags_PxArticulationAxis_bytePtr pvk_in_lhs = lhs;
            physx.PxArticulationAxis pvk_in_e = e;
            return PxFlags_PxArticulationAxis_bytePtr_PxFlags_PxArticulationAxis_bytePtr_operator_Ptr_CaretEqual_PxArticulationAxis_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxFlags_PxArticulationAxis_bytePtr OpCaretEqual(physx.PxFlags_PxArticulationAxis_bytePtr lhs, physx.PxFlags_PxArticulationAxis_bytePtr f) {
            physx.PxFlags_PxArticulationAxis_bytePtr pvk_in_lhs = lhs;
            physx.PxFlags_PxArticulationAxis_bytePtr pvk_in_f = f;
            return PxFlags_PxArticulationAxis_bytePtr_PxFlags_PxArticulationAxis_bytePtr_operator_Ptr_CaretEqual_PxFlags_PxArticulationAxis_bytePtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxFlags_PxArticulationAxis_bytePtr OpCaret_New(physx.PxFlags_PxArticulationAxis_bytePtr lhs, physx.PxArticulationAxis e) {
            physx.PxFlags_PxArticulationAxis_bytePtr pvk_in_lhs = lhs;
            physx.PxArticulationAxis pvk_in_e = e;
            return PxFlags_PxArticulationAxis_bytePtr_const_PxFlags_PxArticulationAxis_bytePtr_operator_Ptr_Caret_PxArticulationAxis_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxFlags_PxArticulationAxis_bytePtr OpCaret_New(physx.PxFlags_PxArticulationAxis_bytePtr lhs, physx.PxFlags_PxArticulationAxis_bytePtr f) {
            physx.PxFlags_PxArticulationAxis_bytePtr pvk_in_lhs = lhs;
            physx.PxFlags_PxArticulationAxis_bytePtr pvk_in_f = f;
            return PxFlags_PxArticulationAxis_bytePtr_const_PxFlags_PxArticulationAxis_bytePtr_operator_Ptr_Caret_PxFlags_PxArticulationAxis_bytePtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxFlags_PxArticulationAxis_bytePtr OpTilde_New(physx.PxFlags_PxArticulationAxis_bytePtr lhs) {
            physx.PxFlags_PxArticulationAxis_bytePtr pvk_in_lhs = lhs;
            return PxFlags_PxArticulationAxis_bytePtr_const_PxFlags_PxArticulationAxis_bytePtr_operator_Ptr_Tilde(pvk_in_lhs);
        }

        public static bool ToBool(physx.PxFlags_PxArticulationAxis_bytePtr lhs) {
            physx.PxFlags_PxArticulationAxis_bytePtr pvk_in_lhs = lhs;
            return bool_const_PxFlags_PxArticulationAxis_bytePtr_operator_boolPtr_Conversion(pvk_in_lhs);
        }

        public static byte ToByte(physx.PxFlags_PxArticulationAxis_bytePtr lhs) {
            physx.PxFlags_PxArticulationAxis_bytePtr pvk_in_lhs = lhs;
            return byte_const_PxFlags_PxArticulationAxis_bytePtr_operator_unsigned_charPtr_Conversion(pvk_in_lhs);
        }

        public static ushort ToUShort(physx.PxFlags_PxArticulationAxis_bytePtr lhs) {
            physx.PxFlags_PxArticulationAxis_bytePtr pvk_in_lhs = lhs;
            return ushort_const_PxFlags_PxArticulationAxis_bytePtr_operator_unsigned_shortPtr_Conversion(pvk_in_lhs);
        }

        public static uint ToUInt(physx.PxFlags_PxArticulationAxis_bytePtr lhs) {
            physx.PxFlags_PxArticulationAxis_bytePtr pvk_in_lhs = lhs;
            return uint_const_PxFlags_PxArticulationAxis_bytePtr_operator_unsigned_intPtr_Conversion(pvk_in_lhs);
        }

        public void clear(physx.PxArticulationAxis e) {
            physx.PxFlags_PxArticulationAxis_bytePtr pvk_in_this = this;
            physx.PxArticulationAxis pvk_in_e = e;
            void_PxFlags_PxArticulationAxis_bytePtr_clearPtr_PxArticulationAxis_(pvk_in_this, pvk_in_e);
        }

        public static bool operator==(physx.PxFlags_PxArticulationAxis_bytePtr lhs, physx.PxArticulationAxis e) {
            return physx.PxFlags_PxArticulationAxis_bytePtr.OpEquals(lhs, e);
        }
        public static bool operator==(physx.PxFlags_PxArticulationAxis_bytePtr lhs, physx.PxFlags_PxArticulationAxis_bytePtr f) {
            return physx.PxFlags_PxArticulationAxis_bytePtr.OpEquals(lhs, f);
        }
        public static bool operator==(physx.PxFlags_PxArticulationAxis_bytePtr lhs, bool b) {
            return physx.PxFlags_PxArticulationAxis_bytePtr.OpEquals(lhs, b);
        }
        public static bool operator!=(physx.PxFlags_PxArticulationAxis_bytePtr lhs, bool b) {
            return !(physx.PxFlags_PxArticulationAxis_bytePtr.OpEquals(lhs, b)); // Matching Operator
        }
        public static bool operator!=(physx.PxFlags_PxArticulationAxis_bytePtr lhs, physx.PxArticulationAxis e) {
            return physx.PxFlags_PxArticulationAxis_bytePtr.OpExclaimEqual(lhs, e);
        }
        public static bool operator!=(physx.PxFlags_PxArticulationAxis_bytePtr lhs, physx.PxFlags_PxArticulationAxis_bytePtr f) {
            return physx.PxFlags_PxArticulationAxis_bytePtr.OpExclaimEqual(lhs, f);
        }
    }

    public unsafe partial struct PxArticulationMotionsPtr {
        private System.IntPtr nativePtr_;

        public static void Free(physx.PxArticulationMotionsPtr ptr){
            Freer_physx_PxArticulationMotionsPtr(ptr);
        }
        public void Free(){
            Freer_physx_PxArticulationMotionsPtr(this);
        }

        public static physx.PxArticulationMotionsPtr New(physx.PxEMPTY _) {
            physx.PxEMPTY pvk_in__ = _;
            return Ctor_PxArticulationMotionsPtr_PxEMPTY(pvk_in__);
        }

        public static physx.PxArticulationMotionsPtr New() {
            return Ctor_PxArticulationMotionsPtr_();
        }

        public static physx.PxArticulationMotionsPtr New(physx.PxArticulationMotion e) {
            physx.PxArticulationMotion pvk_in_e = e;
            return Ctor_PxArticulationMotionsPtr_PxArticulationMotion(pvk_in_e);
        }

        public static physx.PxArticulationMotionsPtr New(physx.PxArticulationMotionsPtr f) {
            physx.PxArticulationMotionsPtr pvk_in_f = f;
            return Ctor_PxArticulationMotionsPtr_PxArticulationMotionsPtr(pvk_in_f);
        }

        public static physx.PxArticulationMotionsPtr New(byte b) {
            byte pvk_in_b = b;
            return Ctor_PxArticulationMotionsPtr_byte(pvk_in_b);
        }

        public bool isSet(physx.PxArticulationMotion e) {
            physx.PxArticulationMotionsPtr pvk_in_this = this;
            physx.PxArticulationMotion pvk_in_e = e;
            return bool_const_PxArticulationMotionsPtr_isSetPtr_PxArticulationMotion_(pvk_in_this, pvk_in_e);
        }

        public physx.PxArticulationMotionsPtr set(physx.PxArticulationMotion e) {
            physx.PxArticulationMotionsPtr pvk_in_this = this;
            physx.PxArticulationMotion pvk_in_e = e;
            return PxArticulationMotionsPtr_PxArticulationMotionsPtr_setPtr_PxArticulationMotion_(pvk_in_this, pvk_in_e);
        }

        public static bool OpEquals(physx.PxArticulationMotionsPtr lhs, physx.PxArticulationMotion e) {
            physx.PxArticulationMotionsPtr pvk_in_lhs = lhs;
            physx.PxArticulationMotion pvk_in_e = e;
            return bool_const_PxArticulationMotionsPtr_operator_Ptr_EqualEqual_PxArticulationMotion_(pvk_in_lhs, pvk_in_e);
        }

        public static bool OpEquals(physx.PxArticulationMotionsPtr lhs, physx.PxArticulationMotionsPtr f) {
            physx.PxArticulationMotionsPtr pvk_in_lhs = lhs;
            physx.PxArticulationMotionsPtr pvk_in_f = f;
            return bool_const_PxArticulationMotionsPtr_operator_Ptr_EqualEqual_PxArticulationMotionsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static bool OpEquals(physx.PxArticulationMotionsPtr lhs, bool b) {
            physx.PxArticulationMotionsPtr pvk_in_lhs = lhs;
            bool pvk_in_b = b;
            return bool_const_PxArticulationMotionsPtr_operator_Ptr_EqualEqual_bool_(pvk_in_lhs, pvk_in_b);
        }

        public static bool OpExclaimEqual(physx.PxArticulationMotionsPtr lhs, physx.PxArticulationMotion e) {
            physx.PxArticulationMotionsPtr pvk_in_lhs = lhs;
            physx.PxArticulationMotion pvk_in_e = e;
            return bool_const_PxArticulationMotionsPtr_operator_Ptr_ExclaimEqual_PxArticulationMotion_(pvk_in_lhs, pvk_in_e);
        }

        public static bool OpExclaimEqual(physx.PxArticulationMotionsPtr lhs, physx.PxArticulationMotionsPtr f) {
            physx.PxArticulationMotionsPtr pvk_in_lhs = lhs;
            physx.PxArticulationMotionsPtr pvk_in_f = f;
            return bool_const_PxArticulationMotionsPtr_operator_Ptr_ExclaimEqual_PxArticulationMotionsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxArticulationMotionsPtr OpEqual(physx.PxArticulationMotionsPtr lhs, physx.PxArticulationMotionsPtr f) {
            physx.PxArticulationMotionsPtr pvk_in_lhs = lhs;
            physx.PxArticulationMotionsPtr pvk_in_f = f;
            return PxArticulationMotionsPtr_PxArticulationMotionsPtr_operator_Ptr_Equal_PxArticulationMotionsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxArticulationMotionsPtr OpEqual(physx.PxArticulationMotionsPtr lhs, physx.PxArticulationMotion e) {
            physx.PxArticulationMotionsPtr pvk_in_lhs = lhs;
            physx.PxArticulationMotion pvk_in_e = e;
            return PxArticulationMotionsPtr_PxArticulationMotionsPtr_operator_Ptr_Equal_PxArticulationMotion_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxArticulationMotionsPtr OpPipeEqual(physx.PxArticulationMotionsPtr lhs, physx.PxArticulationMotion e) {
            physx.PxArticulationMotionsPtr pvk_in_lhs = lhs;
            physx.PxArticulationMotion pvk_in_e = e;
            return PxArticulationMotionsPtr_PxArticulationMotionsPtr_operator_Ptr_PipeEqual_PxArticulationMotion_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxArticulationMotionsPtr OpPipeEqual(physx.PxArticulationMotionsPtr lhs, physx.PxArticulationMotionsPtr f) {
            physx.PxArticulationMotionsPtr pvk_in_lhs = lhs;
            physx.PxArticulationMotionsPtr pvk_in_f = f;
            return PxArticulationMotionsPtr_PxArticulationMotionsPtr_operator_Ptr_PipeEqual_PxArticulationMotionsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxArticulationMotionsPtr OpPipe_New(physx.PxArticulationMotionsPtr lhs, physx.PxArticulationMotion e) {
            physx.PxArticulationMotionsPtr pvk_in_lhs = lhs;
            physx.PxArticulationMotion pvk_in_e = e;
            return PxArticulationMotionsPtr_const_PxArticulationMotionsPtr_operator_Ptr_Pipe_PxArticulationMotion_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxArticulationMotionsPtr OpPipe_New(physx.PxArticulationMotionsPtr lhs, physx.PxArticulationMotionsPtr f) {
            physx.PxArticulationMotionsPtr pvk_in_lhs = lhs;
            physx.PxArticulationMotionsPtr pvk_in_f = f;
            return PxArticulationMotionsPtr_const_PxArticulationMotionsPtr_operator_Ptr_Pipe_PxArticulationMotionsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxArticulationMotionsPtr OpAndEqual(physx.PxArticulationMotionsPtr lhs, physx.PxArticulationMotion e) {
            physx.PxArticulationMotionsPtr pvk_in_lhs = lhs;
            physx.PxArticulationMotion pvk_in_e = e;
            return PxArticulationMotionsPtr_PxArticulationMotionsPtr_operator_Ptr_AmpEqual_PxArticulationMotion_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxArticulationMotionsPtr OpAndEqual(physx.PxArticulationMotionsPtr lhs, physx.PxArticulationMotionsPtr f) {
            physx.PxArticulationMotionsPtr pvk_in_lhs = lhs;
            physx.PxArticulationMotionsPtr pvk_in_f = f;
            return PxArticulationMotionsPtr_PxArticulationMotionsPtr_operator_Ptr_AmpEqual_PxArticulationMotionsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxArticulationMotionsPtr OpAnd_New(physx.PxArticulationMotionsPtr lhs, physx.PxArticulationMotion e) {
            physx.PxArticulationMotionsPtr pvk_in_lhs = lhs;
            physx.PxArticulationMotion pvk_in_e = e;
            return PxArticulationMotionsPtr_const_PxArticulationMotionsPtr_operator_Ptr_Amp_PxArticulationMotion_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxArticulationMotionsPtr OpAnd_New(physx.PxArticulationMotionsPtr lhs, physx.PxArticulationMotionsPtr f) {
            physx.PxArticulationMotionsPtr pvk_in_lhs = lhs;
            physx.PxArticulationMotionsPtr pvk_in_f = f;
            return PxArticulationMotionsPtr_const_PxArticulationMotionsPtr_operator_Ptr_Amp_PxArticulationMotionsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxArticulationMotionsPtr OpCaretEqual(physx.PxArticulationMotionsPtr lhs, physx.PxArticulationMotion e) {
            physx.PxArticulationMotionsPtr pvk_in_lhs = lhs;
            physx.PxArticulationMotion pvk_in_e = e;
            return PxArticulationMotionsPtr_PxArticulationMotionsPtr_operator_Ptr_CaretEqual_PxArticulationMotion_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxArticulationMotionsPtr OpCaretEqual(physx.PxArticulationMotionsPtr lhs, physx.PxArticulationMotionsPtr f) {
            physx.PxArticulationMotionsPtr pvk_in_lhs = lhs;
            physx.PxArticulationMotionsPtr pvk_in_f = f;
            return PxArticulationMotionsPtr_PxArticulationMotionsPtr_operator_Ptr_CaretEqual_PxArticulationMotionsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxArticulationMotionsPtr OpCaret_New(physx.PxArticulationMotionsPtr lhs, physx.PxArticulationMotion e) {
            physx.PxArticulationMotionsPtr pvk_in_lhs = lhs;
            physx.PxArticulationMotion pvk_in_e = e;
            return PxArticulationMotionsPtr_const_PxArticulationMotionsPtr_operator_Ptr_Caret_PxArticulationMotion_(pvk_in_lhs, pvk_in_e);
        }

        public static physx.PxArticulationMotionsPtr OpCaret_New(physx.PxArticulationMotionsPtr lhs, physx.PxArticulationMotionsPtr f) {
            physx.PxArticulationMotionsPtr pvk_in_lhs = lhs;
            physx.PxArticulationMotionsPtr pvk_in_f = f;
            return PxArticulationMotionsPtr_const_PxArticulationMotionsPtr_operator_Ptr_Caret_PxArticulationMotionsPtr_(pvk_in_lhs, pvk_in_f);
        }

        public static physx.PxArticulationMotionsPtr OpTilde_New(physx.PxArticulationMotionsPtr lhs) {
            physx.PxArticulationMotionsPtr pvk_in_lhs = lhs;
            return PxArticulationMotionsPtr_const_PxArticulationMotionsPtr_operator_Ptr_Tilde(pvk_in_lhs);
        }

        public static bool ToBool(physx.PxArticulationMotionsPtr lhs) {
            physx.PxArticulationMotionsPtr pvk_in_lhs = lhs;
            return bool_const_PxArticulationMotionsPtr_operator_boolPtr_Conversion(pvk_in_lhs);
        }

        public static byte ToByte(physx.PxArticulationMotionsPtr lhs) {
            physx.PxArticulationMotionsPtr pvk_in_lhs = lhs;
            return byte_const_PxArticulationMotionsPtr_operator_unsigned_charPtr_Conversion(pvk_in_lhs);
        }

        public static ushort ToUShort(physx.PxArticulationMotionsPtr lhs) {
            physx.PxArticulationMotionsPtr pvk_in_lhs = lhs;
            return ushort_const_PxArticulationMotionsPtr_operator_unsigned_shortPtr_Conversion(pvk_in_lhs);
        }

        public static uint ToUInt(physx.PxArticulationMotionsPtr lhs) {
            physx.PxArticulationMotionsPtr pvk_in_lhs = lhs;
            return uint_const_PxArticulationMotionsPtr_operator_unsigned_intPtr_Conversion(pvk_in_lhs);
        }

        public void clear(physx.PxArticulationMotion e) {
            physx.PxArticulationMotionsPtr pvk_in_this = this;
            physx.PxArticulationMotion pvk_in_e = e;
            void_PxArticulationMotionsPtr_clearPtr_PxArticulationMotion_(pvk_in_this, pvk_in_e);
        }

        public static bool operator==(physx.PxArticulationMotionsPtr lhs, physx.PxArticulationMotion e) {
            return physx.PxArticulationMotionsPtr.OpEquals(lhs, e);
        }
        public static bool operator==(physx.PxArticulationMotionsPtr lhs, physx.PxArticulationMotionsPtr f) {
            return physx.PxArticulationMotionsPtr.OpEquals(lhs, f);
        }
        public static bool operator==(physx.PxArticulationMotionsPtr lhs, bool b) {
            return physx.PxArticulationMotionsPtr.OpEquals(lhs, b);
        }
        public static bool operator!=(physx.PxArticulationMotionsPtr lhs, bool b) {
            return !(physx.PxArticulationMotionsPtr.OpEquals(lhs, b)); // Matching Operator
        }
        public static bool operator!=(physx.PxArticulationMotionsPtr lhs, physx.PxArticulationMotion e) {
            return physx.PxArticulationMotionsPtr.OpExclaimEqual(lhs, e);
        }
        public static bool operator!=(physx.PxArticulationMotionsPtr lhs, physx.PxArticulationMotionsPtr f) {
            return physx.PxArticulationMotionsPtr.OpExclaimEqual(lhs, f);
        }
    }

}
