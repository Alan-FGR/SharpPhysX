//Generated by MinBinder.
using System;
using System.Runtime.InteropServices;

public partial struct PxFlags {
    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern PxFlags C_PxFlags_PxFlags<enumtype, storagetype>(Ptr f);
    public unsafe PxFlags(Ptr f){
        var _new = C_PxFlags_PxFlags<enumtype, storagetype>(f);        
        fixed (void* ptr = &this)
          Buffer.MemoryCopy(&_new, ptr, Marshal.SizeOf(this), Marshal.SizeOf(this));    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern bool C_CONST_PxFlags_OP_EqualEqual(PxFlags cls,Ptr f);
    public static bool EqualEqual(PxFlags cls,Ptr f){
        return C_CONST_PxFlags_OP_EqualEqual(cls,f);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern bool C_CONST_PxFlags_OP_EqualEqual(PxFlags cls,bool b);
    public static bool EqualEqual(PxFlags cls,bool b){
        return C_CONST_PxFlags_OP_EqualEqual(cls,b);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern bool C_CONST_PxFlags_OP_ExclaimEqual(PxFlags cls,Ptr f);
    public static bool ExclaimEqual(PxFlags cls,Ptr f){
        return C_CONST_PxFlags_OP_ExclaimEqual(cls,f);    
    }


}
