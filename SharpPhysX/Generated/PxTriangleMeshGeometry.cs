// Generated by minBND 5.1.93.2 - Â© github.com/Alan-FGR
using System;
using System.Runtime.InteropServices;
using static minBND_pinvokes;

public static unsafe partial class physx {

    public static physx.PxMeshGeometryFlagsPtr OpPipe_New(physx.PxMeshGeometryFlagEnum a, physx.PxMeshGeometryFlagEnum b) {
        physx.PxMeshGeometryFlagEnum pvk_in_a = a;
        physx.PxMeshGeometryFlagEnum pvk_in_b = b;
        return PxMeshGeometryFlagsPtr_operator_Ptr_Pipe_PxMeshGeometryFlagEnum_PxMeshGeometryFlagEnum_(pvk_in_a, pvk_in_b);
    }

    public static physx.PxMeshGeometryFlagsPtr OpAnd_New(physx.PxMeshGeometryFlagEnum a, physx.PxMeshGeometryFlagEnum b) {
        physx.PxMeshGeometryFlagEnum pvk_in_a = a;
        physx.PxMeshGeometryFlagEnum pvk_in_b = b;
        return PxMeshGeometryFlagsPtr_operator_Ptr_Amp_PxMeshGeometryFlagEnum_PxMeshGeometryFlagEnum_(pvk_in_a, pvk_in_b);
    }

    public static physx.PxMeshGeometryFlagsPtr OpTilde_New(physx.PxMeshGeometryFlagEnum a) {
        physx.PxMeshGeometryFlagEnum pvk_in_a = a;
        return PxMeshGeometryFlagsPtr_operator_Ptr_Tilde_PxMeshGeometryFlagEnum_(pvk_in_a);
    }

    public enum PxMeshGeometryFlagEnum : int {
        eDOUBLE_SIDED = 2, // eDOUBLE_SIDED = (1<<1)
    }

    [StructLayout(LayoutKind.Sequential, Size = 48)]
    public unsafe partial struct PxTriangleMeshGeometry : physx.PxGeometry.IPxGeometry {
        internal physx.PxGeometryTypeEnum mType;
        public physx.PxMeshScalePtr scale;
        public physx.PxMeshGeometryFlagsPtr meshFlags;
        public physx.PxPadding_intVal3Ptr paddingFromFlags;
        public physx.PxTriangleMeshPtr triangleMesh;

        public static physx.PxTriangleMeshGeometry Default() {
            physx.PxTriangleMeshGeometry RetRef;
            Default_PxTriangleMeshGeometry_(&RetRef);
            return RetRef;
        }

        public PxTriangleMeshGeometry(physx.PxTriangleMeshPtr mesh) {

            physx.PxTriangleMeshPtr pvk_in_mesh = mesh;
            PxTriangleMeshGeometry toInit;
            var pvk_in_this = &toInit;
            void_PxTriangleMeshGeometry_PxTriangleMeshGeometryPtr_Ctor_PxTriangleMeshPtr_(pvk_in_this, pvk_in_mesh);
            this = toInit;
        }

        public PxTriangleMeshGeometry(physx.PxTriangleMeshPtr mesh, physx.PxMeshScalePtr scaling) {

            physx.PxTriangleMeshPtr pvk_in_mesh = mesh;
            physx.PxMeshScalePtr pvk_in_scaling = scaling;
            PxTriangleMeshGeometry toInit;
            var pvk_in_this = &toInit;
            void_PxTriangleMeshGeometry_PxTriangleMeshGeometryPtr_Ctor_PxTriangleMeshPtr_PxMeshScalePtr_(pvk_in_this, pvk_in_mesh, pvk_in_scaling);
            this = toInit;
        }

        public PxTriangleMeshGeometry(physx.PxTriangleMeshPtr mesh, physx.PxMeshScalePtr scaling, physx.PxMeshGeometryFlagsPtr flags) {

            physx.PxTriangleMeshPtr pvk_in_mesh = mesh;
            physx.PxMeshScalePtr pvk_in_scaling = scaling;
            physx.PxMeshGeometryFlagsPtr pvk_in_flags = flags;
            PxTriangleMeshGeometry toInit;
            var pvk_in_this = &toInit;
            void_PxTriangleMeshGeometry_PxTriangleMeshGeometryPtr_Ctor_PxTriangleMeshPtr_PxMeshScalePtr_PxMeshGeometryFlagsPtr_(pvk_in_this, pvk_in_mesh, pvk_in_scaling, pvk_in_flags);
            this = toInit;
        }

        public bool isValid() {

            fixed (PxTriangleMeshGeometry* pvk_in_this = &this){
              return bool_const_PxTriangleMeshGeometry_isValidPtr(pvk_in_this);
            }
        }

        public static explicit operator physx.PxGeometry(PxTriangleMeshGeometry obj) => *(physx.PxGeometry*)&obj;

        public physx.PxGeometryTypeEnum getType(){return((physx.PxGeometry)this).getType();}
        public struct Ref {
            private IntPtr nativePtr_;
            public static implicit operator Ref(in physx.PxTriangleMeshGeometry obj)
            {fixed (void* f = &obj) return new Ref {nativePtr_ = (IntPtr)f};}
        }
    }

}
