// Generated by minBND 5.1.78.26 - Â© github.com/Alan-FGR
//DEBUG: UnitNode  - 0
//Unit PxScene
using System;
using System.Runtime.InteropServices;

//DEBUG: NamespaceNode physx - 48-1645
public static unsafe partial class physx {
    //DEBUG: FunctionNode physx::operator| - 123
    // physx::operator| [static PxActorTypeFlagsPtr Pipe_New(physx.PxActorTypeFlagEnum a, physx.PxActorTypeFlagEnum b)] will be bound as member operator
    
    //DEBUG: FunctionNode physx::operator& - 123
    // physx::operator& [static PxActorTypeFlagsPtr Amp_New(physx.PxActorTypeFlagEnum a, physx.PxActorTypeFlagEnum b)] will be bound as member operator
    
    //DEBUG: FunctionNode physx::operator~ - 123
    // physx::operator~ [static PxActorTypeFlagsPtr Tilde_New(physx.PxActorTypeFlagEnum a)] will be bound as member operator
    
    //DEBUG: ClassNode physx::PxDominanceGroupPair - 83-89
    //Interface use count: 0
    public unsafe partial struct PxDominanceGroupPairPtr{
        private System.IntPtr nativePtr_;
        
    //DEBUG: NewerFreerNode physx::PxDominanceGroupPair - 83-89
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void Freer_physx_PxDominanceGroupPairPtr(PxDominanceGroupPairPtr ptr);
        
        public static void Free(PxDominanceGroupPairPtr ptr){
            Freer_physx_PxDominanceGroupPairPtr(ptr);
        }
        public void Free(){
            Freer_physx_PxDominanceGroupPairPtr(this);
        }
        
        //DEBUG: PtrStructCtorNode physx::PxDominanceGroupPair::PxDominanceGroupPair - 85-86
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxDominanceGroupPairPtr Ctor_physx_PxDominanceGroupPairPtr_byte_byte(byte pvk_a, byte pvk_b);
        
        public static physx.PxDominanceGroupPairPtr New(byte a, byte b) {
            //RET nat: physx.PxDominanceGroupPairPtr, man: physx.PxDominanceGroupPairPtr, stg: PtrStruct, ret: True
            //PAR nat: unsigned char, man: byte, stg: Value
            byte pvk_in_a = a;
            //PAR nat: unsigned char, man: byte, stg: Value
            byte pvk_in_b = b;
            return Ctor_physx_PxDominanceGroupPairPtr_byte_byte(pvk_in_a, pvk_in_b);
        }
        
        //DEBUG: PtrStructCtorNode physx::PxDominanceGroupPair::PxDominanceGroupPair - 83
        //ERRORS OCCURED IN physx::PxDominanceGroupPair::PxDominanceGroupPair
        //Implicit Function/Method
        
        //DEBUG: PtrStructCtorNode physx::PxDominanceGroupPair::PxDominanceGroupPair - 83
        //ERRORS OCCURED IN physx::PxDominanceGroupPair::PxDominanceGroupPair
        //Implicit Function/Method
        
        //DEBUG: GetterSetterNode physx::PxDominanceGroupPair - 83-89
        //Field: dominance0 - 87-87
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern byte PxDominanceGroupPair_GET_dominance0(PxDominanceGroupPairPtr cls);
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void PxDominanceGroupPair_SET_dominance0(PxDominanceGroupPairPtr cls, byte value);
        
        public byte dominance0 {
            get => PxDominanceGroupPair_GET_dominance0(this);
            set => PxDominanceGroupPair_SET_dominance0(this, value);
        }
        
        //DEBUG: GetterSetterNode physx::PxDominanceGroupPair - 83-89
        //Field: dominance1 - 88-88
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern byte PxDominanceGroupPair_GET_dominance1(PxDominanceGroupPairPtr cls);
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void PxDominanceGroupPair_SET_dominance1(PxDominanceGroupPairPtr cls, byte value);
        
        public byte dominance1 {
            get => PxDominanceGroupPair_GET_dominance1(this);
            set => PxDominanceGroupPair_SET_dominance1(this, value);
        }
        
        //DEBUG: MethodNode physx::PxDominanceGroupPair::operator= - 83
        //ERRORS OCCURED IN physx::PxDominanceGroupPair::operator=
        //Implicit Function/Method
        //Unbindable Operator: Equal
        
        //DEBUG: MethodNode physx::PxDominanceGroupPair::operator= - 83
        //ERRORS OCCURED IN physx::PxDominanceGroupPair::operator=
        //Implicit Function/Method
        //Unbindable Operator: Equal
        
        //DEBUG: MethodNode physx::PxDominanceGroupPair::~PxDominanceGroupPair - 83
        //ERRORS OCCURED IN physx::PxDominanceGroupPair::~PxDominanceGroupPair
        //Implicit Function/Method
        //Destructor
    }
    
    //DEBUG: ClassNode physx::PxActorTypeFlag - 99-115
    //DEBUG: EnumNode physx::PxActorTypeFlag::Enum - 101-114
    public enum PxActorTypeFlagEnum : int {
        eRIGID_STATIC = 1,  // eRIGID_STATIC = (1 << 0)
        eRIGID_DYNAMIC = 2, // eRIGID_DYNAMIC = (1 << 1)
    }
    
    //DEBUG: ClassNode physx::PxQueryCache - 143-158
    //Interface use count: 0
    public unsafe partial struct PxQueryCachePtr{
        private System.IntPtr nativePtr_;
        
    //DEBUG: NewerFreerNode physx::PxQueryCache - 143-158
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void Freer_physx_PxQueryCachePtr(PxQueryCachePtr ptr);
        
        public static void Free(PxQueryCachePtr ptr){
            Freer_physx_PxQueryCachePtr(ptr);
        }
        public void Free(){
            Freer_physx_PxQueryCachePtr(this);
        }
        
        //DEBUG: PtrStructCtorNode physx::PxQueryCache::PxQueryCache - 148
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxQueryCachePtr Ctor_physx_PxQueryCachePtr_();
        
        public static physx.PxQueryCachePtr New() {
            //RET nat: physx.PxQueryCachePtr, man: physx.PxQueryCachePtr, stg: PtrStruct, ret: True
            return Ctor_physx_PxQueryCachePtr_();
        }
        
        //DEBUG: PtrStructCtorNode physx::PxQueryCache::PxQueryCache - 153
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxQueryCachePtr Ctor_physx_PxQueryCachePtr_physx_PxShapePtr_uint(physx.PxShapePtr pvk_s, uint pvk_findex);
        
        public static physx.PxQueryCachePtr New(physx.PxShapePtr s, uint findex) {
            //RET nat: physx.PxQueryCachePtr, man: physx.PxQueryCachePtr, stg: PtrStruct, ret: True
            //PAR nat: PxShapePtr, man: physx.PxShapePtr, stg: PtrStruct
            physx.PxShapePtr pvk_in_s = s;
            //PAR nat: unsigned int, man: uint, stg: Value
            uint pvk_in_findex = findex;
            return Ctor_physx_PxQueryCachePtr_physx_PxShapePtr_uint(pvk_in_s, pvk_in_findex);
        }
        
        //DEBUG: PtrStructCtorNode physx::PxQueryCache::PxQueryCache - 143
        //ERRORS OCCURED IN physx::PxQueryCache::PxQueryCache
        //Implicit Function/Method
        
        //DEBUG: PtrStructCtorNode physx::PxQueryCache::PxQueryCache - 143
        //ERRORS OCCURED IN physx::PxQueryCache::PxQueryCache
        //Implicit Function/Method
        
        //DEBUG: GetterSetterNode physx::PxQueryCache - 143-158
        //Field: shape - 155-155
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxShapePtr PxQueryCache_GET_shape(PxQueryCachePtr cls);
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void PxQueryCache_SET_shape(PxQueryCachePtr cls, physx.PxShapePtr value);
        
        public physx.PxShapePtr shape {
            get => PxQueryCache_GET_shape(this);
            set => PxQueryCache_SET_shape(this, value);
        }
        
        //DEBUG: GetterSetterNode physx::PxQueryCache - 143-158
        //Field: actor - 156-156
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxRigidActorPtr PxQueryCache_GET_actor(PxQueryCachePtr cls);
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void PxQueryCache_SET_actor(PxQueryCachePtr cls, physx.PxRigidActorPtr value);
        
        public physx.PxRigidActorPtr actor {
            get => PxQueryCache_GET_actor(this);
            set => PxQueryCache_SET_actor(this, value);
        }
        
        //DEBUG: GetterSetterNode physx::PxQueryCache - 143-158
        //Field: faceIndex - 157-157
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern uint PxQueryCache_GET_faceIndex(PxQueryCachePtr cls);
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void PxQueryCache_SET_faceIndex(PxQueryCachePtr cls, uint value);
        
        public uint faceIndex {
            get => PxQueryCache_GET_faceIndex(this);
            set => PxQueryCache_SET_faceIndex(this, value);
        }
        
        //DEBUG: MethodNode physx::PxQueryCache::operator= - 143
        //ERRORS OCCURED IN physx::PxQueryCache::operator=
        //Implicit Function/Method
        //Unbindable Operator: Equal
        
        //DEBUG: MethodNode physx::PxQueryCache::operator= - 143
        //ERRORS OCCURED IN physx::PxQueryCache::operator=
        //Implicit Function/Method
        //Unbindable Operator: Equal
        
        //DEBUG: MethodNode physx::PxQueryCache::~PxQueryCache - 143
        //ERRORS OCCURED IN physx::PxQueryCache::~PxQueryCache
        //Implicit Function/Method
        //Destructor
    }
    
    //DEBUG: ClassNode physx::PxScene - 169-1642
    //Interface use count: 0
    public unsafe partial struct PxScenePtr{
        private System.IntPtr nativePtr_;
        
    //DEBUG: GetterSetterNode physx::PxScene - 169-1642
        //Field: userData - 1641-1641
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern IntPtr PxScene_GET_userData(PxScenePtr cls);
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void PxScene_SET_userData(PxScenePtr cls, IntPtr value);
        
        public IntPtr userData {
            get => PxScene_GET_userData(this);
            set => PxScene_SET_userData(this, value);
        }
        
        //DEBUG: MethodNode physx::PxScene::release - 195
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxScene_release(physx.PxScenePtr pvk_this);
        
        public void release() {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            void_physx_PxScene_release(pvk_in_this);
        }
        
        //DEBUG: MethodNode physx::PxScene::setFlag - 204
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxScene_setFlag_physx_PxSceneFlagEnum_bool_(physx.PxScenePtr pvk_this, physx.PxSceneFlagEnum pvk_flag, bool pvk_value);
        
        public void setFlag(physx.PxSceneFlagEnum flag, bool value) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            //PAR nat: physx::PxSceneFlag::Enum, man: physx.PxSceneFlagEnum, stg: Value
            physx.PxSceneFlagEnum pvk_in_flag = flag;
            //PAR nat: bool, man: bool, stg: Value
            bool pvk_in_value = value;
            void_physx_PxScene_setFlag_physx_PxSceneFlagEnum_bool_(pvk_in_this, pvk_in_flag, pvk_in_value);
        }
        
        //DEBUG: MethodNode physx::PxScene::getFlags - 213
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern PxSceneFlagsPtr PxSceneFlagsPtr_const_physx_PxScene_getFlags(physx.PxScenePtr pvk_this);
        
        public PxSceneFlagsPtr getFlags_New() {
            //RET nat: PxSceneFlagsPtr, man: PxSceneFlagsPtr, stg: PtrStruct, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            return PxSceneFlagsPtr_const_physx_PxScene_getFlags(pvk_in_this);
        }
        
        //DEBUG: MethodNode physx::PxScene::setLimits - 226
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxScene_setLimits_physx_PxSceneLimitsPtr_(physx.PxScenePtr pvk_this, physx.PxSceneLimitsPtr pvk_limits);
        
        public void setLimits(physx.PxSceneLimitsPtr limits) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            //PAR nat: PxSceneLimitsPtr, man: physx.PxSceneLimitsPtr, stg: PtrStruct
            physx.PxSceneLimitsPtr pvk_in_limits = limits;
            void_physx_PxScene_setLimits_physx_PxSceneLimitsPtr_(pvk_in_this, pvk_in_limits);
        }
        
        //DEBUG: MethodNode physx::PxScene::getLimits - 233
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxSceneLimitsPtr physx_PxSceneLimitsPtr_const_physx_PxScene_getLimits(physx.PxScenePtr pvk_this);
        
        public physx.PxSceneLimitsPtr getLimits_New() {
            //RET nat: physx.PxSceneLimitsPtr, man: physx.PxSceneLimitsPtr, stg: PtrStruct, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            return physx_PxSceneLimitsPtr_const_physx_PxScene_getLimits(pvk_in_this);
        }
        
        //DEBUG: MethodNode physx::PxScene::getPhysics - 243
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxPhysicsPtr physx_PxPhysicsPtr_physx_PxScene_getPhysics(physx.PxScenePtr pvk_this);
        
        public physx.PxPhysicsPtr getPhysics() {
            //RET nat: physx.PxPhysicsPtr, man: physx.PxPhysicsPtr, stg: PtrStruct, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            return physx_PxPhysicsPtr_physx_PxScene_getPhysics(pvk_in_this);
        }
        
        //DEBUG: MethodNode physx::PxScene::getTimestamp - 250
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern uint uint_const_physx_PxScene_getTimestamp(physx.PxScenePtr pvk_this);
        
        public uint getTimestamp() {
            //RET nat: uint, man: uint, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            return uint_const_physx_PxScene_getTimestamp(pvk_in_this);
        }
        
        //DEBUG: MethodNode physx::PxScene::addArticulation - 268
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxScene_addArticulation_physx_PxArticulationBasePtr_(physx.PxScenePtr pvk_this, physx.PxArticulationBasePtr pvk_articulation);
        
        public void addArticulation(physx.PxArticulationBasePtr articulation) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            //PAR nat: PxArticulationBasePtr, man: physx.PxArticulationBasePtr, stg: PtrStruct
            physx.PxArticulationBasePtr pvk_in_articulation = articulation;
            void_physx_PxScene_addArticulation_physx_PxArticulationBasePtr_(pvk_in_this, pvk_in_articulation);
        }
        
        //DEBUG: MethodNode physx::PxScene::removeArticulation - 282
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxScene_removeArticulation_physx_PxArticulationBasePtr_bool_(physx.PxScenePtr pvk_this, physx.PxArticulationBasePtr pvk_articulation, bool pvk_wakeOnLostTouch);
        
        public void removeArticulation(physx.PxArticulationBasePtr articulation, bool wakeOnLostTouch=true) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            //PAR nat: PxArticulationBasePtr, man: physx.PxArticulationBasePtr, stg: PtrStruct
            physx.PxArticulationBasePtr pvk_in_articulation = articulation;
            //PAR nat: bool, man: bool, stg: Value
            bool pvk_in_wakeOnLostTouch = wakeOnLostTouch;
            void_physx_PxScene_removeArticulation_physx_PxArticulationBasePtr_bool_(pvk_in_this, pvk_in_articulation, pvk_in_wakeOnLostTouch);
        }
        
        //DEBUG: MethodNode physx::PxScene::removeArticulation - 282
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxScene_removeArticulation_physx_PxArticulationBasePtr_(physx.PxScenePtr pvk_this, physx.PxArticulationBasePtr pvk_articulation);
        
        public void removeArticulation(physx.PxArticulationBasePtr articulation) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            //PAR nat: PxArticulationBasePtr, man: physx.PxArticulationBasePtr, stg: PtrStruct
            physx.PxArticulationBasePtr pvk_in_articulation = articulation;
            void_physx_PxScene_removeArticulation_physx_PxArticulationBasePtr_(pvk_in_this, pvk_in_articulation);
        }
        
        //DEBUG: MethodNode physx::PxScene::addActor - 311
        //////Type PxBVHStructurePtr explicitly forbidden by user configuration
        
        //DEBUG: MethodNode physx::PxScene::addActor - 311
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxScene_addActor_physx_PxActorPtr_(physx.PxScenePtr pvk_this, physx.PxActorPtr pvk_actor);
        
        public void addActor(physx.PxActorPtr actor) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            //PAR nat: PxActorPtr, man: physx.PxActorPtr, stg: PtrStruct
            physx.PxActorPtr pvk_in_actor = actor;
            void_physx_PxScene_addActor_physx_PxActorPtr_(pvk_in_this, pvk_in_actor);
        }
        
        //DEBUG: MethodNode physx::PxScene::addActors - 331
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxScene_addActors_physx_PxActorPtr_uint_(physx.PxScenePtr pvk_this, physx.PxActorPtr* pvk_actors, uint pvk_nbActors);
        
        public void addActors(physx.PxActorPtr* actors, uint nbActors) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            //PAR nat: PxActorPtr*, man: physx.PxActorPtr*, stg: Value
            physx.PxActorPtr* pvk_in_actors = actors;
            //PAR nat: unsigned int, man: uint, stg: Value
            uint pvk_in_nbActors = nbActors;
            void_physx_PxScene_addActors_physx_PxActorPtr_uint_(pvk_in_this, pvk_in_actors, pvk_in_nbActors);
        }
        
        //DEBUG: MethodNode physx::PxScene::addActors - 351
        //ERRORS OCCURED IN physx::PxScene::addActors
        //////Type PxPruningStructurePtr explicitly forbidden by user configuration
        
        //DEBUG: MethodNode physx::PxScene::removeActor - 369
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxScene_removeActor_physx_PxActorPtr_bool_(physx.PxScenePtr pvk_this, physx.PxActorPtr pvk_actor, bool pvk_wakeOnLostTouch);
        
        public void removeActor(physx.PxActorPtr actor, bool wakeOnLostTouch=true) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            //PAR nat: PxActorPtr, man: physx.PxActorPtr, stg: PtrStruct
            physx.PxActorPtr pvk_in_actor = actor;
            //PAR nat: bool, man: bool, stg: Value
            bool pvk_in_wakeOnLostTouch = wakeOnLostTouch;
            void_physx_PxScene_removeActor_physx_PxActorPtr_bool_(pvk_in_this, pvk_in_actor, pvk_in_wakeOnLostTouch);
        }
        
        //DEBUG: MethodNode physx::PxScene::removeActor - 369
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxScene_removeActor_physx_PxActorPtr_(physx.PxScenePtr pvk_this, physx.PxActorPtr pvk_actor);
        
        public void removeActor(physx.PxActorPtr actor) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            //PAR nat: PxActorPtr, man: physx.PxActorPtr, stg: PtrStruct
            physx.PxActorPtr pvk_in_actor = actor;
            void_physx_PxScene_removeActor_physx_PxActorPtr_(pvk_in_this, pvk_in_actor);
        }
        
        //DEBUG: MethodNode physx::PxScene::removeActors - 386
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxScene_removeActors_physx_PxActorPtr_uint_bool_(physx.PxScenePtr pvk_this, physx.PxActorPtr* pvk_actors, uint pvk_nbActors, bool pvk_wakeOnLostTouch);
        
        public void removeActors(physx.PxActorPtr* actors, uint nbActors, bool wakeOnLostTouch=true) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            //PAR nat: PxActorPtr*, man: physx.PxActorPtr*, stg: Value
            physx.PxActorPtr* pvk_in_actors = actors;
            //PAR nat: unsigned int, man: uint, stg: Value
            uint pvk_in_nbActors = nbActors;
            //PAR nat: bool, man: bool, stg: Value
            bool pvk_in_wakeOnLostTouch = wakeOnLostTouch;
            void_physx_PxScene_removeActors_physx_PxActorPtr_uint_bool_(pvk_in_this, pvk_in_actors, pvk_in_nbActors, pvk_in_wakeOnLostTouch);
        }
        
        //DEBUG: MethodNode physx::PxScene::removeActors - 386
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxScene_removeActors_physx_PxActorPtr_uint_(physx.PxScenePtr pvk_this, physx.PxActorPtr* pvk_actors, uint pvk_nbActors);
        
        public void removeActors(physx.PxActorPtr* actors, uint nbActors) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            //PAR nat: PxActorPtr*, man: physx.PxActorPtr*, stg: Value
            physx.PxActorPtr* pvk_in_actors = actors;
            //PAR nat: unsigned int, man: uint, stg: Value
            uint pvk_in_nbActors = nbActors;
            void_physx_PxScene_removeActors_physx_PxActorPtr_uint_(pvk_in_this, pvk_in_actors, pvk_in_nbActors);
        }
        
        //DEBUG: MethodNode physx::PxScene::addAggregate - 400
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxScene_addAggregate_physx_PxAggregatePtr_(physx.PxScenePtr pvk_this, physx.PxAggregatePtr pvk_aggregate);
        
        public void addAggregate(physx.PxAggregatePtr aggregate) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            //PAR nat: PxAggregatePtr, man: physx.PxAggregatePtr, stg: PtrStruct
            physx.PxAggregatePtr pvk_in_aggregate = aggregate;
            void_physx_PxScene_addAggregate_physx_PxAggregatePtr_(pvk_in_this, pvk_in_aggregate);
        }
        
        //DEBUG: MethodNode physx::PxScene::removeAggregate - 414
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxScene_removeAggregate_physx_PxAggregatePtr_bool_(physx.PxScenePtr pvk_this, physx.PxAggregatePtr pvk_aggregate, bool pvk_wakeOnLostTouch);
        
        public void removeAggregate(physx.PxAggregatePtr aggregate, bool wakeOnLostTouch=true) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            //PAR nat: PxAggregatePtr, man: physx.PxAggregatePtr, stg: PtrStruct
            physx.PxAggregatePtr pvk_in_aggregate = aggregate;
            //PAR nat: bool, man: bool, stg: Value
            bool pvk_in_wakeOnLostTouch = wakeOnLostTouch;
            void_physx_PxScene_removeAggregate_physx_PxAggregatePtr_bool_(pvk_in_this, pvk_in_aggregate, pvk_in_wakeOnLostTouch);
        }
        
        //DEBUG: MethodNode physx::PxScene::removeAggregate - 414
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxScene_removeAggregate_physx_PxAggregatePtr_(physx.PxScenePtr pvk_this, physx.PxAggregatePtr pvk_aggregate);
        
        public void removeAggregate(physx.PxAggregatePtr aggregate) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            //PAR nat: PxAggregatePtr, man: physx.PxAggregatePtr, stg: PtrStruct
            physx.PxAggregatePtr pvk_in_aggregate = aggregate;
            void_physx_PxScene_removeAggregate_physx_PxAggregatePtr_(pvk_in_this, pvk_in_aggregate);
        }
        
        //DEBUG: MethodNode physx::PxScene::addCollection - 428
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxScene_addCollection_physx_PxCollectionPtr_(physx.PxScenePtr pvk_this, physx.PxCollectionPtr pvk_collection);
        
        public void addCollection(physx.PxCollectionPtr collection) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            //PAR nat: PxCollectionPtr, man: physx.PxCollectionPtr, stg: PtrStruct
            physx.PxCollectionPtr pvk_in_collection = collection;
            void_physx_PxScene_addCollection_physx_PxCollectionPtr_(pvk_in_this, pvk_in_collection);
        }
        
        //DEBUG: MethodNode physx::PxScene::getNbActors - 444
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern uint uint_const_physx_PxScene_getNbActors_PxActorTypeFlagsPtr_(physx.PxScenePtr pvk_this, PxActorTypeFlagsPtr pvk_types);
        
        public uint getNbActors(PxActorTypeFlagsPtr types) {
            //RET nat: uint, man: uint, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            //PAR nat: PxActorTypeFlagsPtr, man: PxActorTypeFlagsPtr, stg: PtrStruct
            PxActorTypeFlagsPtr pvk_in_types = types;
            return uint_const_physx_PxScene_getNbActors_PxActorTypeFlagsPtr_(pvk_in_this, pvk_in_types);
        }
        
        //DEBUG: MethodNode physx::PxScene::getActors - 457
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern uint uint_const_physx_PxScene_getActors_PxActorTypeFlagsPtr_physx_PxActorPtr_uint_uint_(physx.PxScenePtr pvk_this, PxActorTypeFlagsPtr pvk_types, physx.PxActorPtr* pvk_userBuffer, uint pvk_bufferSize, uint pvk_startIndex);
        
        public uint getActors(PxActorTypeFlagsPtr types, physx.PxActorPtr* userBuffer, uint bufferSize, uint startIndex=0) {
            //RET nat: uint, man: uint, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            //PAR nat: PxActorTypeFlagsPtr, man: PxActorTypeFlagsPtr, stg: PtrStruct
            PxActorTypeFlagsPtr pvk_in_types = types;
            //PAR nat: PxActorPtr*, man: physx.PxActorPtr*, stg: Value
            physx.PxActorPtr* pvk_in_userBuffer = userBuffer;
            //PAR nat: unsigned int, man: uint, stg: Value
            uint pvk_in_bufferSize = bufferSize;
            //PAR nat: unsigned int, man: uint, stg: Value
            uint pvk_in_startIndex = startIndex;
            return uint_const_physx_PxScene_getActors_PxActorTypeFlagsPtr_physx_PxActorPtr_uint_uint_(pvk_in_this, pvk_in_types, pvk_in_userBuffer, pvk_in_bufferSize, pvk_in_startIndex);
        }
        
        //DEBUG: MethodNode physx::PxScene::getActors - 457
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern uint uint_const_physx_PxScene_getActors_PxActorTypeFlagsPtr_physx_PxActorPtr_uint_(physx.PxScenePtr pvk_this, PxActorTypeFlagsPtr pvk_types, physx.PxActorPtr* pvk_userBuffer, uint pvk_bufferSize);
        
        public uint getActors(PxActorTypeFlagsPtr types, physx.PxActorPtr* userBuffer, uint bufferSize) {
            //RET nat: uint, man: uint, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            //PAR nat: PxActorTypeFlagsPtr, man: PxActorTypeFlagsPtr, stg: PtrStruct
            PxActorTypeFlagsPtr pvk_in_types = types;
            //PAR nat: PxActorPtr*, man: physx.PxActorPtr*, stg: Value
            physx.PxActorPtr* pvk_in_userBuffer = userBuffer;
            //PAR nat: unsigned int, man: uint, stg: Value
            uint pvk_in_bufferSize = bufferSize;
            return uint_const_physx_PxScene_getActors_PxActorTypeFlagsPtr_physx_PxActorPtr_uint_(pvk_in_this, pvk_in_types, pvk_in_userBuffer, pvk_in_bufferSize);
        }
        
        //DEBUG: MethodNode physx::PxScene::getActiveActors - 473
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxActorPtr* physx_PxActorPtr_physx_PxScene_getActiveActors_uint_(physx.PxScenePtr pvk_this, uint* pvk_nbActorsOut);
        
        public physx.PxActorPtr* getActiveActors(uint* nbActorsOut) {
            //RET nat: physx.PxActorPtr*, man: physx.PxActorPtr*, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            //PAR nat: unsigned int*, man: uint*, stg: Value
            uint* pvk_in_nbActorsOut = nbActorsOut;
            return physx_PxActorPtr_physx_PxScene_getActiveActors_uint_(pvk_in_this, pvk_in_nbActorsOut);
        }
        
        //DEBUG: MethodNode physx::PxScene::getNbArticulations - 482
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern uint uint_const_physx_PxScene_getNbArticulations(physx.PxScenePtr pvk_this);
        
        public uint getNbArticulations() {
            //RET nat: uint, man: uint, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            return uint_const_physx_PxScene_getNbArticulations(pvk_in_this);
        }
        
        //DEBUG: MethodNode physx::PxScene::getArticulations - 494
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern uint uint_const_physx_PxScene_getArticulations_physx_PxArticulationBasePtr_uint_uint_(physx.PxScenePtr pvk_this, physx.PxArticulationBasePtr* pvk_userBuffer, uint pvk_bufferSize, uint pvk_startIndex);
        
        public uint getArticulations(physx.PxArticulationBasePtr* userBuffer, uint bufferSize, uint startIndex=0) {
            //RET nat: uint, man: uint, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            //PAR nat: PxArticulationBasePtr*, man: physx.PxArticulationBasePtr*, stg: Value
            physx.PxArticulationBasePtr* pvk_in_userBuffer = userBuffer;
            //PAR nat: unsigned int, man: uint, stg: Value
            uint pvk_in_bufferSize = bufferSize;
            //PAR nat: unsigned int, man: uint, stg: Value
            uint pvk_in_startIndex = startIndex;
            return uint_const_physx_PxScene_getArticulations_physx_PxArticulationBasePtr_uint_uint_(pvk_in_this, pvk_in_userBuffer, pvk_in_bufferSize, pvk_in_startIndex);
        }
        
        //DEBUG: MethodNode physx::PxScene::getArticulations - 494
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern uint uint_const_physx_PxScene_getArticulations_physx_PxArticulationBasePtr_uint_(physx.PxScenePtr pvk_this, physx.PxArticulationBasePtr* pvk_userBuffer, uint pvk_bufferSize);
        
        public uint getArticulations(physx.PxArticulationBasePtr* userBuffer, uint bufferSize) {
            //RET nat: uint, man: uint, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            //PAR nat: PxArticulationBasePtr*, man: physx.PxArticulationBasePtr*, stg: Value
            physx.PxArticulationBasePtr* pvk_in_userBuffer = userBuffer;
            //PAR nat: unsigned int, man: uint, stg: Value
            uint pvk_in_bufferSize = bufferSize;
            return uint_const_physx_PxScene_getArticulations_physx_PxArticulationBasePtr_uint_(pvk_in_this, pvk_in_userBuffer, pvk_in_bufferSize);
        }
        
        //DEBUG: MethodNode physx::PxScene::getNbConstraints - 503
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern uint uint_const_physx_PxScene_getNbConstraints(physx.PxScenePtr pvk_this);
        
        public uint getNbConstraints() {
            //RET nat: uint, man: uint, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            return uint_const_physx_PxScene_getNbConstraints(pvk_in_this);
        }
        
        //DEBUG: MethodNode physx::PxScene::getConstraints - 515
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern uint uint_const_physx_PxScene_getConstraints_physx_PxConstraintPtr_uint_uint_(physx.PxScenePtr pvk_this, physx.PxConstraintPtr* pvk_userBuffer, uint pvk_bufferSize, uint pvk_startIndex);
        
        public uint getConstraints(physx.PxConstraintPtr* userBuffer, uint bufferSize, uint startIndex=0) {
            //RET nat: uint, man: uint, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            //PAR nat: PxConstraintPtr*, man: physx.PxConstraintPtr*, stg: Value
            physx.PxConstraintPtr* pvk_in_userBuffer = userBuffer;
            //PAR nat: unsigned int, man: uint, stg: Value
            uint pvk_in_bufferSize = bufferSize;
            //PAR nat: unsigned int, man: uint, stg: Value
            uint pvk_in_startIndex = startIndex;
            return uint_const_physx_PxScene_getConstraints_physx_PxConstraintPtr_uint_uint_(pvk_in_this, pvk_in_userBuffer, pvk_in_bufferSize, pvk_in_startIndex);
        }
        
        //DEBUG: MethodNode physx::PxScene::getConstraints - 515
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern uint uint_const_physx_PxScene_getConstraints_physx_PxConstraintPtr_uint_(physx.PxScenePtr pvk_this, physx.PxConstraintPtr* pvk_userBuffer, uint pvk_bufferSize);
        
        public uint getConstraints(physx.PxConstraintPtr* userBuffer, uint bufferSize) {
            //RET nat: uint, man: uint, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            //PAR nat: PxConstraintPtr*, man: physx.PxConstraintPtr*, stg: Value
            physx.PxConstraintPtr* pvk_in_userBuffer = userBuffer;
            //PAR nat: unsigned int, man: uint, stg: Value
            uint pvk_in_bufferSize = bufferSize;
            return uint_const_physx_PxScene_getConstraints_physx_PxConstraintPtr_uint_(pvk_in_this, pvk_in_userBuffer, pvk_in_bufferSize);
        }
        
        //DEBUG: MethodNode physx::PxScene::getNbAggregates - 525
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern uint uint_const_physx_PxScene_getNbAggregates(physx.PxScenePtr pvk_this);
        
        public uint getNbAggregates() {
            //RET nat: uint, man: uint, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            return uint_const_physx_PxScene_getNbAggregates(pvk_in_this);
        }
        
        //DEBUG: MethodNode physx::PxScene::getAggregates - 537
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern uint uint_const_physx_PxScene_getAggregates_physx_PxAggregatePtr_uint_uint_(physx.PxScenePtr pvk_this, physx.PxAggregatePtr* pvk_userBuffer, uint pvk_bufferSize, uint pvk_startIndex);
        
        public uint getAggregates(physx.PxAggregatePtr* userBuffer, uint bufferSize, uint startIndex=0) {
            //RET nat: uint, man: uint, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            //PAR nat: PxAggregatePtr*, man: physx.PxAggregatePtr*, stg: Value
            physx.PxAggregatePtr* pvk_in_userBuffer = userBuffer;
            //PAR nat: unsigned int, man: uint, stg: Value
            uint pvk_in_bufferSize = bufferSize;
            //PAR nat: unsigned int, man: uint, stg: Value
            uint pvk_in_startIndex = startIndex;
            return uint_const_physx_PxScene_getAggregates_physx_PxAggregatePtr_uint_uint_(pvk_in_this, pvk_in_userBuffer, pvk_in_bufferSize, pvk_in_startIndex);
        }
        
        //DEBUG: MethodNode physx::PxScene::getAggregates - 537
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern uint uint_const_physx_PxScene_getAggregates_physx_PxAggregatePtr_uint_(physx.PxScenePtr pvk_this, physx.PxAggregatePtr* pvk_userBuffer, uint pvk_bufferSize);
        
        public uint getAggregates(physx.PxAggregatePtr* userBuffer, uint bufferSize) {
            //RET nat: uint, man: uint, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            //PAR nat: PxAggregatePtr*, man: physx.PxAggregatePtr*, stg: Value
            physx.PxAggregatePtr* pvk_in_userBuffer = userBuffer;
            //PAR nat: unsigned int, man: uint, stg: Value
            uint pvk_in_bufferSize = bufferSize;
            return uint_const_physx_PxScene_getAggregates_physx_PxAggregatePtr_uint_(pvk_in_this, pvk_in_userBuffer, pvk_in_bufferSize);
        }
        
        //DEBUG: MethodNode physx::PxScene::setDominanceGroupPair - 596-597
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxScene_setDominanceGroupPair_byte_byte_physx_PxDominanceGroupPairPtr_(physx.PxScenePtr pvk_this, byte pvk_group1, byte pvk_group2, physx.PxDominanceGroupPairPtr pvk_dominance);
        
        public void setDominanceGroupPair(byte group1, byte group2, physx.PxDominanceGroupPairPtr dominance) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            //PAR nat: unsigned char, man: byte, stg: Value
            byte pvk_in_group1 = group1;
            //PAR nat: unsigned char, man: byte, stg: Value
            byte pvk_in_group2 = group2;
            //PAR nat: PxDominanceGroupPairPtr, man: physx.PxDominanceGroupPairPtr, stg: PtrStruct
            physx.PxDominanceGroupPairPtr pvk_in_dominance = dominance;
            void_physx_PxScene_setDominanceGroupPair_byte_byte_physx_PxDominanceGroupPairPtr_(pvk_in_this, pvk_in_group1, pvk_in_group2, pvk_in_dominance);
        }
        
        //DEBUG: MethodNode physx::PxScene::getDominanceGroupPair - 604
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxDominanceGroupPairPtr physx_PxDominanceGroupPairPtr_const_physx_PxScene_getDominanceGroupPair_byte_byte_(physx.PxScenePtr pvk_this, byte pvk_group1, byte pvk_group2);
        
        public physx.PxDominanceGroupPairPtr getDominanceGroupPair_New(byte group1, byte group2) {
            //RET nat: physx.PxDominanceGroupPairPtr, man: physx.PxDominanceGroupPairPtr, stg: PtrStruct, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            //PAR nat: unsigned char, man: byte, stg: Value
            byte pvk_in_group1 = group1;
            //PAR nat: unsigned char, man: byte, stg: Value
            byte pvk_in_group2 = group2;
            return physx_PxDominanceGroupPairPtr_const_physx_PxScene_getDominanceGroupPair_byte_byte_(pvk_in_this, pvk_in_group1, pvk_in_group2);
        }
        
        //DEBUG: MethodNode physx::PxScene::getCpuDispatcher - 618
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxCpuDispatcherPtr physx_PxCpuDispatcherPtr_const_physx_PxScene_getCpuDispatcher(physx.PxScenePtr pvk_this);
        
        public physx.PxCpuDispatcherPtr getCpuDispatcher() {
            //RET nat: physx.PxCpuDispatcherPtr, man: physx.PxCpuDispatcherPtr, stg: PtrStruct, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            return physx_PxCpuDispatcherPtr_const_physx_PxScene_getCpuDispatcher(pvk_in_this);
        }
        
        //DEBUG: MethodNode physx::PxScene::getGpuDispatcher - 627
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxGpuDispatcherPtr physx_PxGpuDispatcherPtr_const_physx_PxScene_getGpuDispatcher(physx.PxScenePtr pvk_this);
        
        public physx.PxGpuDispatcherPtr getGpuDispatcher() {
            //RET nat: physx.PxGpuDispatcherPtr, man: physx.PxGpuDispatcherPtr, stg: PtrStruct, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            return physx_PxGpuDispatcherPtr_const_physx_PxScene_getGpuDispatcher(pvk_in_this);
        }
        
        //DEBUG: MethodNode physx::PxScene::createClient - 643
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern byte byte_physx_PxScene_createClient(physx.PxScenePtr pvk_this);
        
        public byte createClient() {
            //RET nat: byte, man: byte, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            return byte_physx_PxScene_createClient(pvk_in_this);
        }
        
        //DEBUG: MethodNode physx::PxScene::setSimulationEventCallback - 662
        //ERRORS OCCURED IN physx::PxScene::setSimulationEventCallback
        //////Type PxSimulationEventCallbackPtr explicitly forbidden by user configuration
        
        //DEBUG: MethodNode physx::PxScene::getSimulationEventCallback - 671
        //ERRORS OCCURED IN physx::PxScene::getSimulationEventCallback
        ////Type PxSimulationEventCallbackPtr explicitly forbidden by user configuration
        
        //DEBUG: MethodNode physx::PxScene::setContactModifyCallback - 680
        //ERRORS OCCURED IN physx::PxScene::setContactModifyCallback
        //////Type PxContactModifyCallbackPtr explicitly forbidden by user configuration
        
        //DEBUG: MethodNode physx::PxScene::setCCDContactModifyCallback - 689
        //ERRORS OCCURED IN physx::PxScene::setCCDContactModifyCallback
        //////Type PxCCDContactModifyCallbackPtr explicitly forbidden by user configuration
        
        //DEBUG: MethodNode physx::PxScene::getContactModifyCallback - 698
        //ERRORS OCCURED IN physx::PxScene::getContactModifyCallback
        ////Type PxContactModifyCallbackPtr explicitly forbidden by user configuration
        
        //DEBUG: MethodNode physx::PxScene::getCCDContactModifyCallback - 707
        //ERRORS OCCURED IN physx::PxScene::getCCDContactModifyCallback
        ////Type PxCCDContactModifyCallbackPtr explicitly forbidden by user configuration
        
        //DEBUG: MethodNode physx::PxScene::setBroadPhaseCallback - 716
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxScene_setBroadPhaseCallback_physx_PxBroadPhaseCallbackPtr_(physx.PxScenePtr pvk_this, physx.PxBroadPhaseCallbackPtr pvk_callback);
        
        public void setBroadPhaseCallback(physx.PxBroadPhaseCallbackPtr callback) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            //PAR nat: PxBroadPhaseCallbackPtr, man: physx.PxBroadPhaseCallbackPtr, stg: PtrStruct
            physx.PxBroadPhaseCallbackPtr pvk_in_callback = callback;
            void_physx_PxScene_setBroadPhaseCallback_physx_PxBroadPhaseCallbackPtr_(pvk_in_this, pvk_in_callback);
        }
        
        //DEBUG: MethodNode physx::PxScene::getBroadPhaseCallback - 725
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxBroadPhaseCallbackPtr physx_PxBroadPhaseCallbackPtr_const_physx_PxScene_getBroadPhaseCallback(physx.PxScenePtr pvk_this);
        
        public physx.PxBroadPhaseCallbackPtr getBroadPhaseCallback() {
            //RET nat: physx.PxBroadPhaseCallbackPtr, man: physx.PxBroadPhaseCallbackPtr, stg: PtrStruct, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            return physx_PxBroadPhaseCallbackPtr_const_physx_PxScene_getBroadPhaseCallback(pvk_in_this);
        }
        
        //DEBUG: MethodNode physx::PxScene::setFilterShaderData - 750
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxScene_setFilterShaderData_IntPtr_uint_(physx.PxScenePtr pvk_this, IntPtr pvk_data, uint pvk_dataSize);
        
        public void setFilterShaderData(IntPtr data, uint dataSize) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            //PAR nat: void*, man: IntPtr, stg: Value
            IntPtr pvk_in_data = data;
            //PAR nat: unsigned int, man: uint, stg: Value
            uint pvk_in_dataSize = dataSize;
            void_physx_PxScene_setFilterShaderData_IntPtr_uint_(pvk_in_this, pvk_in_data, pvk_in_dataSize);
        }
        
        //DEBUG: MethodNode physx::PxScene::getFilterShaderData - 761
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern IntPtr IntPtr_const_physx_PxScene_getFilterShaderData(physx.PxScenePtr pvk_this);
        
        public IntPtr getFilterShaderData() {
            //RET nat: IntPtr, man: IntPtr, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            return IntPtr_const_physx_PxScene_getFilterShaderData(pvk_in_this);
        }
        
        //DEBUG: MethodNode physx::PxScene::getFilterShaderDataSize - 770
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern uint uint_const_physx_PxScene_getFilterShaderDataSize(physx.PxScenePtr pvk_this);
        
        public uint getFilterShaderDataSize() {
            //RET nat: uint, man: uint, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            return uint_const_physx_PxScene_getFilterShaderDataSize(pvk_in_this);
        }
        
        //DEBUG: MethodNode physx::PxScene::getFilterShader - 779-780
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern PxSimulationFilterShader PxSimulationFilterShader_const_physx_PxScene_getFilterShader(physx.PxScenePtr pvk_this);
        
        public PxSimulationFilterShader getFilterShader() {
            //RET nat: PxSimulationFilterShader, man: PxSimulationFilterShader, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            return PxSimulationFilterShader_const_physx_PxScene_getFilterShader(pvk_in_this);
        }
        
        //DEBUG: MethodNode physx::PxScene::getFilterCallback - 789-790
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxSimulationFilterCallbackPtr physx_PxSimulationFilterCallbackPtr_const_physx_PxScene_getFilterCallback(physx.PxScenePtr pvk_this);
        
        public physx.PxSimulationFilterCallbackPtr getFilterCallback() {
            //RET nat: physx.PxSimulationFilterCallbackPtr, man: physx.PxSimulationFilterCallbackPtr, stg: PtrStruct, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            return physx_PxSimulationFilterCallbackPtr_const_physx_PxScene_getFilterCallback(pvk_in_this);
        }
        
        //DEBUG: MethodNode physx::PxScene::resetFiltering - 821
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxScene_resetFiltering_physx_PxActorPtr_(physx.PxScenePtr pvk_this, physx.PxActorPtr pvk_actor);
        
        public void resetFiltering(physx.PxActorPtr actor) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            //PAR nat: PxActorPtr, man: physx.PxActorPtr, stg: PtrStruct
            physx.PxActorPtr pvk_in_actor = actor;
            void_physx_PxScene_resetFiltering_physx_PxActorPtr_(pvk_in_this, pvk_in_actor);
        }
        
        //DEBUG: MethodNode physx::PxScene::resetFiltering - 837
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxScene_resetFiltering_physx_PxRigidActorPtr_physx_PxShapePtr_uint_(physx.PxScenePtr pvk_this, physx.PxRigidActorPtr pvk_actor, physx.PxShapePtr* pvk_shapes, uint pvk_shapeCount);
        
        public void resetFiltering(physx.PxRigidActorPtr actor, physx.PxShapePtr* shapes, uint shapeCount) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            //PAR nat: PxRigidActorPtr, man: physx.PxRigidActorPtr, stg: PtrStruct
            physx.PxRigidActorPtr pvk_in_actor = actor;
            //PAR nat: PxShapePtr*, man: physx.PxShapePtr*, stg: Value
            physx.PxShapePtr* pvk_in_shapes = shapes;
            //PAR nat: unsigned int, man: uint, stg: Value
            uint pvk_in_shapeCount = shapeCount;
            void_physx_PxScene_resetFiltering_physx_PxRigidActorPtr_physx_PxShapePtr_uint_(pvk_in_this, pvk_in_actor, pvk_in_shapes, pvk_in_shapeCount);
        }
        
        //DEBUG: MethodNode physx::PxScene::simulate - 876-877
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxScene_simulate_float_physx_PxBaseTaskPtr_IntPtr_uint_bool_(physx.PxScenePtr pvk_this, float pvk_elapsedTime, physx.PxBaseTaskPtr pvk_completionTask, IntPtr pvk_scratchMemBlock, uint pvk_scratchMemBlockSize, bool pvk_controlSimulation);
        
        public void simulate(float elapsedTime, physx.PxBaseTaskPtr completionTask=default(physx.PxBaseTaskPtr), IntPtr scratchMemBlock=default(IntPtr), uint scratchMemBlockSize=0, bool controlSimulation=true) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            //PAR nat: float, man: float, stg: Value
            float pvk_in_elapsedTime = elapsedTime;
            //PAR nat: PxBaseTaskPtr, man: physx.PxBaseTaskPtr, stg: PtrStruct
            physx.PxBaseTaskPtr pvk_in_completionTask = completionTask;
            //PAR nat: void*, man: IntPtr, stg: Value
            IntPtr pvk_in_scratchMemBlock = scratchMemBlock;
            //PAR nat: unsigned int, man: uint, stg: Value
            uint pvk_in_scratchMemBlockSize = scratchMemBlockSize;
            //PAR nat: bool, man: bool, stg: Value
            bool pvk_in_controlSimulation = controlSimulation;
            void_physx_PxScene_simulate_float_physx_PxBaseTaskPtr_IntPtr_uint_bool_(pvk_in_this, pvk_in_elapsedTime, pvk_in_completionTask, pvk_in_scratchMemBlock, pvk_in_scratchMemBlockSize, pvk_in_controlSimulation);
        }
        
        //DEBUG: MethodNode physx::PxScene::simulate - 876-877
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxScene_simulate_float_physx_PxBaseTaskPtr_IntPtr_uint_(physx.PxScenePtr pvk_this, float pvk_elapsedTime, physx.PxBaseTaskPtr pvk_completionTask, IntPtr pvk_scratchMemBlock, uint pvk_scratchMemBlockSize);
        
        public void simulate(float elapsedTime, physx.PxBaseTaskPtr completionTask=default(physx.PxBaseTaskPtr), IntPtr scratchMemBlock=default(IntPtr), uint scratchMemBlockSize=0) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            //PAR nat: float, man: float, stg: Value
            float pvk_in_elapsedTime = elapsedTime;
            //PAR nat: PxBaseTaskPtr, man: physx.PxBaseTaskPtr, stg: PtrStruct
            physx.PxBaseTaskPtr pvk_in_completionTask = completionTask;
            //PAR nat: void*, man: IntPtr, stg: Value
            IntPtr pvk_in_scratchMemBlock = scratchMemBlock;
            //PAR nat: unsigned int, man: uint, stg: Value
            uint pvk_in_scratchMemBlockSize = scratchMemBlockSize;
            void_physx_PxScene_simulate_float_physx_PxBaseTaskPtr_IntPtr_uint_(pvk_in_this, pvk_in_elapsedTime, pvk_in_completionTask, pvk_in_scratchMemBlock, pvk_in_scratchMemBlockSize);
        }
        
        //DEBUG: MethodNode physx::PxScene::simulate - 876-877
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxScene_simulate_float_physx_PxBaseTaskPtr_IntPtr_(physx.PxScenePtr pvk_this, float pvk_elapsedTime, physx.PxBaseTaskPtr pvk_completionTask, IntPtr pvk_scratchMemBlock);
        
        public void simulate(float elapsedTime, physx.PxBaseTaskPtr completionTask=default(physx.PxBaseTaskPtr), IntPtr scratchMemBlock=default(IntPtr)) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            //PAR nat: float, man: float, stg: Value
            float pvk_in_elapsedTime = elapsedTime;
            //PAR nat: PxBaseTaskPtr, man: physx.PxBaseTaskPtr, stg: PtrStruct
            physx.PxBaseTaskPtr pvk_in_completionTask = completionTask;
            //PAR nat: void*, man: IntPtr, stg: Value
            IntPtr pvk_in_scratchMemBlock = scratchMemBlock;
            void_physx_PxScene_simulate_float_physx_PxBaseTaskPtr_IntPtr_(pvk_in_this, pvk_in_elapsedTime, pvk_in_completionTask, pvk_in_scratchMemBlock);
        }
        
        //DEBUG: MethodNode physx::PxScene::simulate - 876-877
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxScene_simulate_float_physx_PxBaseTaskPtr_(physx.PxScenePtr pvk_this, float pvk_elapsedTime, physx.PxBaseTaskPtr pvk_completionTask);
        
        public void simulate(float elapsedTime, physx.PxBaseTaskPtr completionTask=default(physx.PxBaseTaskPtr)) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            //PAR nat: float, man: float, stg: Value
            float pvk_in_elapsedTime = elapsedTime;
            //PAR nat: PxBaseTaskPtr, man: physx.PxBaseTaskPtr, stg: PtrStruct
            physx.PxBaseTaskPtr pvk_in_completionTask = completionTask;
            void_physx_PxScene_simulate_float_physx_PxBaseTaskPtr_(pvk_in_this, pvk_in_elapsedTime, pvk_in_completionTask);
        }
        
        //DEBUG: MethodNode physx::PxScene::simulate - 876-877
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxScene_simulate_float_(physx.PxScenePtr pvk_this, float pvk_elapsedTime);
        
        public void simulate(float elapsedTime) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            //PAR nat: float, man: float, stg: Value
            float pvk_in_elapsedTime = elapsedTime;
            void_physx_PxScene_simulate_float_(pvk_in_this, pvk_in_elapsedTime);
        }
        
        //DEBUG: MethodNode physx::PxScene::advance - 890
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxScene_advance_physx_PxBaseTaskPtr_(physx.PxScenePtr pvk_this, physx.PxBaseTaskPtr pvk_completionTask);
        
        public void advance(physx.PxBaseTaskPtr completionTask=default(physx.PxBaseTaskPtr)) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            //PAR nat: PxBaseTaskPtr, man: physx.PxBaseTaskPtr, stg: PtrStruct
            physx.PxBaseTaskPtr pvk_in_completionTask = completionTask;
            void_physx_PxScene_advance_physx_PxBaseTaskPtr_(pvk_in_this, pvk_in_completionTask);
        }
        
        //DEBUG: MethodNode physx::PxScene::advance - 890
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxScene_advance(physx.PxScenePtr pvk_this);
        
        public void advance() {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            void_physx_PxScene_advance(pvk_in_this);
        }
        
        //DEBUG: MethodNode physx::PxScene::collide - 909-910
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxScene_collide_float_physx_PxBaseTaskPtr_IntPtr_uint_bool_(physx.PxScenePtr pvk_this, float pvk_elapsedTime, physx.PxBaseTaskPtr pvk_completionTask, IntPtr pvk_scratchMemBlock, uint pvk_scratchMemBlockSize, bool pvk_controlSimulation);
        
        public void collide(float elapsedTime, physx.PxBaseTaskPtr completionTask=default(physx.PxBaseTaskPtr), IntPtr scratchMemBlock=default(IntPtr), uint scratchMemBlockSize=0, bool controlSimulation=true) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            //PAR nat: float, man: float, stg: Value
            float pvk_in_elapsedTime = elapsedTime;
            //PAR nat: PxBaseTaskPtr, man: physx.PxBaseTaskPtr, stg: PtrStruct
            physx.PxBaseTaskPtr pvk_in_completionTask = completionTask;
            //PAR nat: void*, man: IntPtr, stg: Value
            IntPtr pvk_in_scratchMemBlock = scratchMemBlock;
            //PAR nat: unsigned int, man: uint, stg: Value
            uint pvk_in_scratchMemBlockSize = scratchMemBlockSize;
            //PAR nat: bool, man: bool, stg: Value
            bool pvk_in_controlSimulation = controlSimulation;
            void_physx_PxScene_collide_float_physx_PxBaseTaskPtr_IntPtr_uint_bool_(pvk_in_this, pvk_in_elapsedTime, pvk_in_completionTask, pvk_in_scratchMemBlock, pvk_in_scratchMemBlockSize, pvk_in_controlSimulation);
        }
        
        //DEBUG: MethodNode physx::PxScene::collide - 909-910
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxScene_collide_float_physx_PxBaseTaskPtr_IntPtr_uint_(physx.PxScenePtr pvk_this, float pvk_elapsedTime, physx.PxBaseTaskPtr pvk_completionTask, IntPtr pvk_scratchMemBlock, uint pvk_scratchMemBlockSize);
        
        public void collide(float elapsedTime, physx.PxBaseTaskPtr completionTask=default(physx.PxBaseTaskPtr), IntPtr scratchMemBlock=default(IntPtr), uint scratchMemBlockSize=0) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            //PAR nat: float, man: float, stg: Value
            float pvk_in_elapsedTime = elapsedTime;
            //PAR nat: PxBaseTaskPtr, man: physx.PxBaseTaskPtr, stg: PtrStruct
            physx.PxBaseTaskPtr pvk_in_completionTask = completionTask;
            //PAR nat: void*, man: IntPtr, stg: Value
            IntPtr pvk_in_scratchMemBlock = scratchMemBlock;
            //PAR nat: unsigned int, man: uint, stg: Value
            uint pvk_in_scratchMemBlockSize = scratchMemBlockSize;
            void_physx_PxScene_collide_float_physx_PxBaseTaskPtr_IntPtr_uint_(pvk_in_this, pvk_in_elapsedTime, pvk_in_completionTask, pvk_in_scratchMemBlock, pvk_in_scratchMemBlockSize);
        }
        
        //DEBUG: MethodNode physx::PxScene::collide - 909-910
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxScene_collide_float_physx_PxBaseTaskPtr_IntPtr_(physx.PxScenePtr pvk_this, float pvk_elapsedTime, physx.PxBaseTaskPtr pvk_completionTask, IntPtr pvk_scratchMemBlock);
        
        public void collide(float elapsedTime, physx.PxBaseTaskPtr completionTask=default(physx.PxBaseTaskPtr), IntPtr scratchMemBlock=default(IntPtr)) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            //PAR nat: float, man: float, stg: Value
            float pvk_in_elapsedTime = elapsedTime;
            //PAR nat: PxBaseTaskPtr, man: physx.PxBaseTaskPtr, stg: PtrStruct
            physx.PxBaseTaskPtr pvk_in_completionTask = completionTask;
            //PAR nat: void*, man: IntPtr, stg: Value
            IntPtr pvk_in_scratchMemBlock = scratchMemBlock;
            void_physx_PxScene_collide_float_physx_PxBaseTaskPtr_IntPtr_(pvk_in_this, pvk_in_elapsedTime, pvk_in_completionTask, pvk_in_scratchMemBlock);
        }
        
        //DEBUG: MethodNode physx::PxScene::collide - 909-910
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxScene_collide_float_physx_PxBaseTaskPtr_(physx.PxScenePtr pvk_this, float pvk_elapsedTime, physx.PxBaseTaskPtr pvk_completionTask);
        
        public void collide(float elapsedTime, physx.PxBaseTaskPtr completionTask=default(physx.PxBaseTaskPtr)) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            //PAR nat: float, man: float, stg: Value
            float pvk_in_elapsedTime = elapsedTime;
            //PAR nat: PxBaseTaskPtr, man: physx.PxBaseTaskPtr, stg: PtrStruct
            physx.PxBaseTaskPtr pvk_in_completionTask = completionTask;
            void_physx_PxScene_collide_float_physx_PxBaseTaskPtr_(pvk_in_this, pvk_in_elapsedTime, pvk_in_completionTask);
        }
        
        //DEBUG: MethodNode physx::PxScene::collide - 909-910
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxScene_collide_float_(physx.PxScenePtr pvk_this, float pvk_elapsedTime);
        
        public void collide(float elapsedTime) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            //PAR nat: float, man: float, stg: Value
            float pvk_in_elapsedTime = elapsedTime;
            void_physx_PxScene_collide_float_(pvk_in_this, pvk_in_elapsedTime);
        }
        
        //DEBUG: MethodNode physx::PxScene::checkResults - 923
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern bool bool_physx_PxScene_checkResults_bool_(physx.PxScenePtr pvk_this, bool pvk_block);
        
        public bool checkResults(bool block=false) {
            //RET nat: bool, man: bool, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            //PAR nat: bool, man: bool, stg: Value
            bool pvk_in_block = block;
            return bool_physx_PxScene_checkResults_bool_(pvk_in_this, pvk_in_block);
        }
        
        //DEBUG: MethodNode physx::PxScene::checkResults - 923
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern bool bool_physx_PxScene_checkResults(physx.PxScenePtr pvk_this);
        
        public bool checkResults() {
            //RET nat: bool, man: bool, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            return bool_physx_PxScene_checkResults(pvk_in_this);
        }
        
        //DEBUG: MethodNode physx::PxScene::fetchCollision - 932
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern bool bool_physx_PxScene_fetchCollision_bool_(physx.PxScenePtr pvk_this, bool pvk_block);
        
        public bool fetchCollision(bool block=false) {
            //RET nat: bool, man: bool, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            //PAR nat: bool, man: bool, stg: Value
            bool pvk_in_block = block;
            return bool_physx_PxScene_fetchCollision_bool_(pvk_in_this, pvk_in_block);
        }
        
        //DEBUG: MethodNode physx::PxScene::fetchCollision - 932
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern bool bool_physx_PxScene_fetchCollision(physx.PxScenePtr pvk_this);
        
        public bool fetchCollision() {
            //RET nat: bool, man: bool, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            return bool_physx_PxScene_fetchCollision(pvk_in_this);
        }
        
        //DEBUG: MethodNode physx::PxScene::fetchResults - 955
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern bool bool_physx_PxScene_fetchResults_bool_uint_(physx.PxScenePtr pvk_this, bool pvk_block, uint* pvk_errorState);
        
        public bool fetchResults(bool block=false, uint* errorState=default(uint*)) {
            //RET nat: bool, man: bool, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            //PAR nat: bool, man: bool, stg: Value
            bool pvk_in_block = block;
            //PAR nat: unsigned int*, man: uint*, stg: Value
            uint* pvk_in_errorState = errorState;
            return bool_physx_PxScene_fetchResults_bool_uint_(pvk_in_this, pvk_in_block, pvk_in_errorState);
        }
        
        //DEBUG: MethodNode physx::PxScene::fetchResults - 955
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern bool bool_physx_PxScene_fetchResults_bool_(physx.PxScenePtr pvk_this, bool pvk_block);
        
        public bool fetchResults(bool block=false) {
            //RET nat: bool, man: bool, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            //PAR nat: bool, man: bool, stg: Value
            bool pvk_in_block = block;
            return bool_physx_PxScene_fetchResults_bool_(pvk_in_this, pvk_in_block);
        }
        
        //DEBUG: MethodNode physx::PxScene::fetchResults - 955
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern bool bool_physx_PxScene_fetchResults(physx.PxScenePtr pvk_this);
        
        public bool fetchResults() {
            //RET nat: bool, man: bool, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            return bool_physx_PxScene_fetchResults(pvk_in_this);
        }
        
        //DEBUG: MethodNode physx::PxScene::fetchResultsStart - 973
        //ERRORS OCCURED IN physx::PxScene::fetchResultsStart
        //////Type PxContactPairHeaderPtr* explicitly forbidden by user configuration
        
        //DEBUG: MethodNode physx::PxScene::processCallbacks - 984
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxScene_processCallbacks_physx_PxBaseTaskPtr_(physx.PxScenePtr pvk_this, physx.PxBaseTaskPtr pvk_continuation);
        
        public void processCallbacks(physx.PxBaseTaskPtr continuation) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            //PAR nat: PxBaseTaskPtr, man: physx.PxBaseTaskPtr, stg: PtrStruct
            physx.PxBaseTaskPtr pvk_in_continuation = continuation;
            void_physx_PxScene_processCallbacks_physx_PxBaseTaskPtr_(pvk_in_this, pvk_in_continuation);
        }
        
        //DEBUG: MethodNode physx::PxScene::fetchResultsFinish - 998
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxScene_fetchResultsFinish_uint_(physx.PxScenePtr pvk_this, uint* pvk_errorState);
        
        public void fetchResultsFinish(uint* errorState=default(uint*)) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            //PAR nat: unsigned int*, man: uint*, stg: Value
            uint* pvk_in_errorState = errorState;
            void_physx_PxScene_fetchResultsFinish_uint_(pvk_in_this, pvk_in_errorState);
        }
        
        //DEBUG: MethodNode physx::PxScene::fetchResultsFinish - 998
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxScene_fetchResultsFinish(physx.PxScenePtr pvk_this);
        
        public void fetchResultsFinish() {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            void_physx_PxScene_fetchResultsFinish(pvk_in_this);
        }
        
        //DEBUG: MethodNode physx::PxScene::flushSimulation - 1011
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxScene_flushSimulation_bool_(physx.PxScenePtr pvk_this, bool pvk_sendPendingReports);
        
        public void flushSimulation(bool sendPendingReports=false) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            //PAR nat: bool, man: bool, stg: Value
            bool pvk_in_sendPendingReports = sendPendingReports;
            void_physx_PxScene_flushSimulation_bool_(pvk_in_this, pvk_in_sendPendingReports);
        }
        
        //DEBUG: MethodNode physx::PxScene::flushSimulation - 1011
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxScene_flushSimulation(physx.PxScenePtr pvk_this);
        
        public void flushSimulation() {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            void_physx_PxScene_flushSimulation(pvk_in_this);
        }
        
        //DEBUG: MethodNode physx::PxScene::setGravity - 1022
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxScene_setGravity_physx_PxVec3_(physx.PxScenePtr pvk_this, physx.PxVec3* pvk_vec);
        
        public void setGravity(physx.PxVec3* vec) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            //PAR nat: physx::PxVec3*, man: physx.PxVec3*, stg: Value
            physx.PxVec3* pvk_in_vec = vec;
            void_physx_PxScene_setGravity_physx_PxVec3_(pvk_in_this, pvk_in_vec);
        }
        
        //DEBUG: MethodNode physx::PxScene::getGravity - 1031
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void physx_PxVec3_const_physx_PxScene_getGravity(physx.PxVec3* RetRef, physx.PxScenePtr pvk_this);
        
        public physx.PxVec3 getGravity() {
            //RET nat: physx.PxVec3, man: physx.PxVec3, stg: Blittable, ret: False
            physx.PxVec3 RetRef;
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            physx_PxVec3_const_physx_PxScene_getGravity(&RetRef, pvk_in_this);
            return RetRef;
        }
        
        //DEBUG: MethodNode physx::PxScene::setBounceThresholdVelocity - 1038
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxScene_setBounceThresholdVelocity_floatC(physx.PxScenePtr pvk_this, float pvk_t);
        
        public void setBounceThresholdVelocity(float t) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            //PAR nat: float, man: float, stg: Value
            float pvk_in_t = t;
            void_physx_PxScene_setBounceThresholdVelocity_floatC(pvk_in_this, pvk_in_t);
        }
        
        //DEBUG: MethodNode physx::PxScene::getBounceThresholdVelocity - 1045
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern float float_const_physx_PxScene_getBounceThresholdVelocity(physx.PxScenePtr pvk_this);
        
        public float getBounceThresholdVelocity() {
            //RET nat: float, man: float, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            return float_const_physx_PxScene_getBounceThresholdVelocity(pvk_in_this);
        }
        
        //DEBUG: MethodNode physx::PxScene::setCCDMaxPasses - 1056
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxScene_setCCDMaxPasses_uint_(physx.PxScenePtr pvk_this, uint pvk_ccdMaxPasses);
        
        public void setCCDMaxPasses(uint ccdMaxPasses) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            //PAR nat: unsigned int, man: uint, stg: Value
            uint pvk_in_ccdMaxPasses = ccdMaxPasses;
            void_physx_PxScene_setCCDMaxPasses_uint_(pvk_in_this, pvk_in_ccdMaxPasses);
        }
        
        //DEBUG: MethodNode physx::PxScene::getCCDMaxPasses - 1066
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern uint uint_const_physx_PxScene_getCCDMaxPasses(physx.PxScenePtr pvk_this);
        
        public uint getCCDMaxPasses() {
            //RET nat: uint, man: uint, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            return uint_const_physx_PxScene_getCCDMaxPasses(pvk_in_this);
        }
        
        //DEBUG: MethodNode physx::PxScene::getFrictionOffsetThreshold - 1073
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern float float_const_physx_PxScene_getFrictionOffsetThreshold(physx.PxScenePtr pvk_this);
        
        public float getFrictionOffsetThreshold() {
            //RET nat: float, man: float, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            return float_const_physx_PxScene_getFrictionOffsetThreshold(pvk_in_this);
        }
        
        //DEBUG: MethodNode physx::PxScene::setFrictionType - 1079
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxScene_setFrictionType_physx_PxFrictionTypeEnum_(physx.PxScenePtr pvk_this, physx.PxFrictionTypeEnum pvk_frictionType);
        
        public void setFrictionType(physx.PxFrictionTypeEnum frictionType) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            //PAR nat: physx::PxFrictionType::Enum, man: physx.PxFrictionTypeEnum, stg: Value
            physx.PxFrictionTypeEnum pvk_in_frictionType = frictionType;
            void_physx_PxScene_setFrictionType_physx_PxFrictionTypeEnum_(pvk_in_this, pvk_in_frictionType);
        }
        
        //DEBUG: MethodNode physx::PxScene::getFrictionType - 1085
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxFrictionTypeEnum physx_PxFrictionTypeEnum_const_physx_PxScene_getFrictionType(physx.PxScenePtr pvk_this);
        
        public physx.PxFrictionTypeEnum getFrictionType() {
            //RET nat: physx.PxFrictionTypeEnum, man: physx.PxFrictionTypeEnum, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            return physx_PxFrictionTypeEnum_const_physx_PxScene_getFrictionType(pvk_in_this);
        }
        
        //DEBUG: MethodNode physx::PxScene::setVisualizationParameter - 1104
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern bool bool_physx_PxScene_setVisualizationParameter_physx_PxVisualizationParameterEnum_float_(physx.PxScenePtr pvk_this, physx.PxVisualizationParameterEnum pvk_param, float pvk_value);
        
        public bool setVisualizationParameter(physx.PxVisualizationParameterEnum param, float value) {
            //RET nat: bool, man: bool, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            //PAR nat: physx::PxVisualizationParameter::Enum, man: physx.PxVisualizationParameterEnum, stg: Value
            physx.PxVisualizationParameterEnum pvk_in_param = param;
            //PAR nat: float, man: float, stg: Value
            float pvk_in_value = value;
            return bool_physx_PxScene_setVisualizationParameter_physx_PxVisualizationParameterEnum_float_(pvk_in_this, pvk_in_param, pvk_in_value);
        }
        
        //DEBUG: MethodNode physx::PxScene::getVisualizationParameter - 1114
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern float float_const_physx_PxScene_getVisualizationParameter_physx_PxVisualizationParameterEnum_(physx.PxScenePtr pvk_this, physx.PxVisualizationParameterEnum pvk_paramEnum);
        
        public float getVisualizationParameter(physx.PxVisualizationParameterEnum paramEnum) {
            //RET nat: float, man: float, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            //PAR nat: physx::PxVisualizationParameter::Enum, man: physx.PxVisualizationParameterEnum, stg: Value
            physx.PxVisualizationParameterEnum pvk_in_paramEnum = paramEnum;
            return float_const_physx_PxScene_getVisualizationParameter_physx_PxVisualizationParameterEnum_(pvk_in_this, pvk_in_paramEnum);
        }
        
        //DEBUG: MethodNode physx::PxScene::setVisualizationCullingBox - 1123
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxScene_setVisualizationCullingBox_physx_PxBounds3_(physx.PxScenePtr pvk_this, physx.PxBounds3* pvk_box);
        
        public void setVisualizationCullingBox(physx.PxBounds3* box) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            //PAR nat: physx::PxBounds3*, man: physx.PxBounds3*, stg: Value
            physx.PxBounds3* pvk_in_box = box;
            void_physx_PxScene_setVisualizationCullingBox_physx_PxBounds3_(pvk_in_this, pvk_in_box);
        }
        
        //DEBUG: MethodNode physx::PxScene::getVisualizationCullingBox - 1131
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void physx_PxBounds3_const_physx_PxScene_getVisualizationCullingBox(physx.PxBounds3* RetRef, physx.PxScenePtr pvk_this);
        
        public physx.PxBounds3 getVisualizationCullingBox() {
            //RET nat: physx.PxBounds3, man: physx.PxBounds3, stg: Blittable, ret: False
            physx.PxBounds3 RetRef;
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            physx_PxBounds3_const_physx_PxScene_getVisualizationCullingBox(&RetRef, pvk_in_this);
            return RetRef;
        }
        
        //DEBUG: MethodNode physx::PxScene::getRenderBuffer - 1144
        //ERRORS OCCURED IN physx::PxScene::getRenderBuffer
        ////Type PxRenderBufferPtr explicitly forbidden by user configuration
        
        //DEBUG: MethodNode physx::PxScene::getSimulationStatistics - 1155
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_const_physx_PxScene_getSimulationStatistics_physx_PxSimulationStatisticsPtr_(physx.PxScenePtr pvk_this, physx.PxSimulationStatisticsPtr pvk_stats);
        
        public void getSimulationStatistics(physx.PxSimulationStatisticsPtr stats) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            //PAR nat: PxSimulationStatisticsPtr, man: physx.PxSimulationStatisticsPtr, stg: PtrStruct
            physx.PxSimulationStatisticsPtr pvk_in_stats = stats;
            void_const_physx_PxScene_getSimulationStatistics_physx_PxSimulationStatisticsPtr_(pvk_in_this, pvk_in_stats);
        }
        
        //DEBUG: MethodNode physx::PxScene::getStaticStructure - 1170
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxPruningStructureTypeEnum physx_PxPruningStructureTypeEnum_const_physx_PxScene_getStaticStructure(physx.PxScenePtr pvk_this);
        
        public physx.PxPruningStructureTypeEnum getStaticStructure() {
            //RET nat: physx.PxPruningStructureTypeEnum, man: physx.PxPruningStructureTypeEnum, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            return physx_PxPruningStructureTypeEnum_const_physx_PxScene_getStaticStructure(pvk_in_this);
        }
        
        //DEBUG: MethodNode physx::PxScene::getDynamicStructure - 1177
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxPruningStructureTypeEnum physx_PxPruningStructureTypeEnum_const_physx_PxScene_getDynamicStructure(physx.PxScenePtr pvk_this);
        
        public physx.PxPruningStructureTypeEnum getDynamicStructure() {
            //RET nat: physx.PxPruningStructureTypeEnum, man: physx.PxPruningStructureTypeEnum, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            return physx_PxPruningStructureTypeEnum_const_physx_PxScene_getDynamicStructure(pvk_in_this);
        }
        
        //DEBUG: MethodNode physx::PxScene::flushQueryUpdates - 1194
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxScene_flushQueryUpdates(physx.PxScenePtr pvk_this);
        
        public void flushQueryUpdates() {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            void_physx_PxScene_flushQueryUpdates(pvk_in_this);
        }
        
        //DEBUG: MethodNode physx::PxScene::createBatchQuery - 1207
        //ERRORS OCCURED IN physx::PxScene::createBatchQuery
        ////Type PxBatchQueryPtr explicitly forbidden by user configuration
        
        //DEBUG: MethodNode physx::PxScene::setDynamicTreeRebuildRateHint - 1216
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxScene_setDynamicTreeRebuildRateHint_uint_(physx.PxScenePtr pvk_this, uint pvk_dynamicTreeRebuildRateHint);
        
        public void setDynamicTreeRebuildRateHint(uint dynamicTreeRebuildRateHint) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            //PAR nat: unsigned int, man: uint, stg: Value
            uint pvk_in_dynamicTreeRebuildRateHint = dynamicTreeRebuildRateHint;
            void_physx_PxScene_setDynamicTreeRebuildRateHint_uint_(pvk_in_this, pvk_in_dynamicTreeRebuildRateHint);
        }
        
        //DEBUG: MethodNode physx::PxScene::getDynamicTreeRebuildRateHint - 1225
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern uint uint_const_physx_PxScene_getDynamicTreeRebuildRateHint(physx.PxScenePtr pvk_this);
        
        public uint getDynamicTreeRebuildRateHint() {
            //RET nat: uint, man: uint, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            return uint_const_physx_PxScene_getDynamicTreeRebuildRateHint(pvk_in_this);
        }
        
        //DEBUG: MethodNode physx::PxScene::forceDynamicTreeRebuild - 1235
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxScene_forceDynamicTreeRebuild_bool_bool_(physx.PxScenePtr pvk_this, bool pvk_rebuildStaticStructure, bool pvk_rebuildDynamicStructure);
        
        public void forceDynamicTreeRebuild(bool rebuildStaticStructure, bool rebuildDynamicStructure) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            //PAR nat: bool, man: bool, stg: Value
            bool pvk_in_rebuildStaticStructure = rebuildStaticStructure;
            //PAR nat: bool, man: bool, stg: Value
            bool pvk_in_rebuildDynamicStructure = rebuildDynamicStructure;
            void_physx_PxScene_forceDynamicTreeRebuild_bool_bool_(pvk_in_this, pvk_in_rebuildStaticStructure, pvk_in_rebuildDynamicStructure);
        }
        
        //DEBUG: MethodNode physx::PxScene::setSceneQueryUpdateMode - 1244
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxScene_setSceneQueryUpdateMode_physx_PxSceneQueryUpdateModeEnum_(physx.PxScenePtr pvk_this, physx.PxSceneQueryUpdateModeEnum pvk_updateMode);
        
        public void setSceneQueryUpdateMode(physx.PxSceneQueryUpdateModeEnum updateMode) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            //PAR nat: physx::PxSceneQueryUpdateMode::Enum, man: physx.PxSceneQueryUpdateModeEnum, stg: Value
            physx.PxSceneQueryUpdateModeEnum pvk_in_updateMode = updateMode;
            void_physx_PxScene_setSceneQueryUpdateMode_physx_PxSceneQueryUpdateModeEnum_(pvk_in_this, pvk_in_updateMode);
        }
        
        //DEBUG: MethodNode physx::PxScene::getSceneQueryUpdateMode - 1253
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxSceneQueryUpdateModeEnum physx_PxSceneQueryUpdateModeEnum_const_physx_PxScene_getSceneQueryUpdateMode(physx.PxScenePtr pvk_this);
        
        public physx.PxSceneQueryUpdateModeEnum getSceneQueryUpdateMode() {
            //RET nat: physx.PxSceneQueryUpdateModeEnum, man: physx.PxSceneQueryUpdateModeEnum, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            return physx_PxSceneQueryUpdateModeEnum_const_physx_PxScene_getSceneQueryUpdateMode(pvk_in_this);
        }
        
        //DEBUG: MethodNode physx::PxScene::sceneQueriesUpdate - 1272
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxScene_sceneQueriesUpdate_physx_PxBaseTaskPtr_bool_(physx.PxScenePtr pvk_this, physx.PxBaseTaskPtr pvk_completionTask, bool pvk_controlSimulation);
        
        public void sceneQueriesUpdate(physx.PxBaseTaskPtr completionTask=default(physx.PxBaseTaskPtr), bool controlSimulation=true) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            //PAR nat: PxBaseTaskPtr, man: physx.PxBaseTaskPtr, stg: PtrStruct
            physx.PxBaseTaskPtr pvk_in_completionTask = completionTask;
            //PAR nat: bool, man: bool, stg: Value
            bool pvk_in_controlSimulation = controlSimulation;
            void_physx_PxScene_sceneQueriesUpdate_physx_PxBaseTaskPtr_bool_(pvk_in_this, pvk_in_completionTask, pvk_in_controlSimulation);
        }
        
        //DEBUG: MethodNode physx::PxScene::sceneQueriesUpdate - 1272
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxScene_sceneQueriesUpdate_physx_PxBaseTaskPtr_(physx.PxScenePtr pvk_this, physx.PxBaseTaskPtr pvk_completionTask);
        
        public void sceneQueriesUpdate(physx.PxBaseTaskPtr completionTask=default(physx.PxBaseTaskPtr)) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            //PAR nat: PxBaseTaskPtr, man: physx.PxBaseTaskPtr, stg: PtrStruct
            physx.PxBaseTaskPtr pvk_in_completionTask = completionTask;
            void_physx_PxScene_sceneQueriesUpdate_physx_PxBaseTaskPtr_(pvk_in_this, pvk_in_completionTask);
        }
        
        //DEBUG: MethodNode physx::PxScene::sceneQueriesUpdate - 1272
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxScene_sceneQueriesUpdate(physx.PxScenePtr pvk_this);
        
        public void sceneQueriesUpdate() {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            void_physx_PxScene_sceneQueriesUpdate(pvk_in_this);
        }
        
        //DEBUG: MethodNode physx::PxScene::checkQueries - 1285
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern bool bool_physx_PxScene_checkQueries_bool_(physx.PxScenePtr pvk_this, bool pvk_block);
        
        public bool checkQueries(bool block=false) {
            //RET nat: bool, man: bool, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            //PAR nat: bool, man: bool, stg: Value
            bool pvk_in_block = block;
            return bool_physx_PxScene_checkQueries_bool_(pvk_in_this, pvk_in_block);
        }
        
        //DEBUG: MethodNode physx::PxScene::checkQueries - 1285
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern bool bool_physx_PxScene_checkQueries(physx.PxScenePtr pvk_this);
        
        public bool checkQueries() {
            //RET nat: bool, man: bool, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            return bool_physx_PxScene_checkQueries(pvk_in_this);
        }
        
        //DEBUG: MethodNode physx::PxScene::fetchQueries - 1296
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern bool bool_physx_PxScene_fetchQueries_bool_(physx.PxScenePtr pvk_this, bool pvk_block);
        
        public bool fetchQueries(bool block=false) {
            //RET nat: bool, man: bool, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            //PAR nat: bool, man: bool, stg: Value
            bool pvk_in_block = block;
            return bool_physx_PxScene_fetchQueries_bool_(pvk_in_this, pvk_in_block);
        }
        
        //DEBUG: MethodNode physx::PxScene::fetchQueries - 1296
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern bool bool_physx_PxScene_fetchQueries(physx.PxScenePtr pvk_this);
        
        public bool fetchQueries() {
            //RET nat: bool, man: bool, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            return bool_physx_PxScene_fetchQueries(pvk_in_this);
        }
        
        //DEBUG: MethodNode physx::PxScene::raycast - 1320-1324
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern bool bool_const_physx_PxScene_raycast_physx_PxVec3_physx_PxVec3_float_PxRaycastCallbackPtr_PxHitFlagsPtr_physx_PxQueryFilterDataPtr_physx_PxQueryFilterCallbackPtr_physx_PxQueryCachePtr_C_(physx.PxScenePtr pvk_this, physx.PxVec3* pvk_origin, physx.PxVec3* pvk_unitDir, float pvk_distance, PxRaycastCallbackPtr pvk_hitCall, PxHitFlagsPtr pvk_hitFlags, physx.PxQueryFilterDataPtr pvk_filterData, physx.PxQueryFilterCallbackPtr pvk_filterCall, physx.PxQueryCachePtr pvk_cache);
        
        public bool raycast(physx.PxVec3* origin, physx.PxVec3* unitDir, float distance, PxRaycastCallbackPtr hitCall, PxHitFlagsPtr hitFlags, physx.PxQueryFilterDataPtr filterData, physx.PxQueryFilterCallbackPtr filterCall=default(physx.PxQueryFilterCallbackPtr), physx.PxQueryCachePtr cache=default(physx.PxQueryCachePtr)) {
            //RET nat: bool, man: bool, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            //PAR nat: physx::PxVec3*, man: physx.PxVec3*, stg: Value
            physx.PxVec3* pvk_in_origin = origin;
            //PAR nat: physx::PxVec3*, man: physx.PxVec3*, stg: Value
            physx.PxVec3* pvk_in_unitDir = unitDir;
            //PAR nat: float, man: float, stg: Value
            float pvk_in_distance = distance;
            //PAR nat: PxRaycastCallbackPtr, man: PxRaycastCallbackPtr, stg: PtrStruct
            PxRaycastCallbackPtr pvk_in_hitCall = hitCall;
            //PAR nat: PxHitFlagsPtr, man: PxHitFlagsPtr, stg: PtrStruct
            PxHitFlagsPtr pvk_in_hitFlags = hitFlags;
            //PAR nat: PxQueryFilterDataPtr, man: physx.PxQueryFilterDataPtr, stg: PtrStruct
            physx.PxQueryFilterDataPtr pvk_in_filterData = filterData;
            //PAR nat: PxQueryFilterCallbackPtr, man: physx.PxQueryFilterCallbackPtr, stg: PtrStruct
            physx.PxQueryFilterCallbackPtr pvk_in_filterCall = filterCall;
            //PAR nat: PxQueryCachePtr, man: physx.PxQueryCachePtr, stg: PtrStruct
            physx.PxQueryCachePtr pvk_in_cache = cache;
            return bool_const_physx_PxScene_raycast_physx_PxVec3_physx_PxVec3_float_PxRaycastCallbackPtr_PxHitFlagsPtr_physx_PxQueryFilterDataPtr_physx_PxQueryFilterCallbackPtr_physx_PxQueryCachePtr_C_(pvk_in_this, pvk_in_origin, pvk_in_unitDir, pvk_in_distance, pvk_in_hitCall, pvk_in_hitFlags, pvk_in_filterData, pvk_in_filterCall, pvk_in_cache);
        }
        
        //DEBUG: MethodNode physx::PxScene::raycast - 1320-1324
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern bool bool_const_physx_PxScene_raycast_physx_PxVec3_physx_PxVec3_float_PxRaycastCallbackPtr_PxHitFlagsPtr_physx_PxQueryFilterDataPtr_physx_PxQueryFilterCallbackPtr_C_(physx.PxScenePtr pvk_this, physx.PxVec3* pvk_origin, physx.PxVec3* pvk_unitDir, float pvk_distance, PxRaycastCallbackPtr pvk_hitCall, PxHitFlagsPtr pvk_hitFlags, physx.PxQueryFilterDataPtr pvk_filterData, physx.PxQueryFilterCallbackPtr pvk_filterCall);
        
        public bool raycast(physx.PxVec3* origin, physx.PxVec3* unitDir, float distance, PxRaycastCallbackPtr hitCall, PxHitFlagsPtr hitFlags, physx.PxQueryFilterDataPtr filterData, physx.PxQueryFilterCallbackPtr filterCall=default(physx.PxQueryFilterCallbackPtr)) {
            //RET nat: bool, man: bool, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            //PAR nat: physx::PxVec3*, man: physx.PxVec3*, stg: Value
            physx.PxVec3* pvk_in_origin = origin;
            //PAR nat: physx::PxVec3*, man: physx.PxVec3*, stg: Value
            physx.PxVec3* pvk_in_unitDir = unitDir;
            //PAR nat: float, man: float, stg: Value
            float pvk_in_distance = distance;
            //PAR nat: PxRaycastCallbackPtr, man: PxRaycastCallbackPtr, stg: PtrStruct
            PxRaycastCallbackPtr pvk_in_hitCall = hitCall;
            //PAR nat: PxHitFlagsPtr, man: PxHitFlagsPtr, stg: PtrStruct
            PxHitFlagsPtr pvk_in_hitFlags = hitFlags;
            //PAR nat: PxQueryFilterDataPtr, man: physx.PxQueryFilterDataPtr, stg: PtrStruct
            physx.PxQueryFilterDataPtr pvk_in_filterData = filterData;
            //PAR nat: PxQueryFilterCallbackPtr, man: physx.PxQueryFilterCallbackPtr, stg: PtrStruct
            physx.PxQueryFilterCallbackPtr pvk_in_filterCall = filterCall;
            return bool_const_physx_PxScene_raycast_physx_PxVec3_physx_PxVec3_float_PxRaycastCallbackPtr_PxHitFlagsPtr_physx_PxQueryFilterDataPtr_physx_PxQueryFilterCallbackPtr_C_(pvk_in_this, pvk_in_origin, pvk_in_unitDir, pvk_in_distance, pvk_in_hitCall, pvk_in_hitFlags, pvk_in_filterData, pvk_in_filterCall);
        }
        
        //DEBUG: MethodNode physx::PxScene::raycast - 1320-1324
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern bool bool_const_physx_PxScene_raycast_physx_PxVec3_physx_PxVec3_float_PxRaycastCallbackPtr_PxHitFlagsPtr_physx_PxQueryFilterDataPtr_C_(physx.PxScenePtr pvk_this, physx.PxVec3* pvk_origin, physx.PxVec3* pvk_unitDir, float pvk_distance, PxRaycastCallbackPtr pvk_hitCall, PxHitFlagsPtr pvk_hitFlags, physx.PxQueryFilterDataPtr pvk_filterData);
        
        public bool raycast(physx.PxVec3* origin, physx.PxVec3* unitDir, float distance, PxRaycastCallbackPtr hitCall, PxHitFlagsPtr hitFlags, physx.PxQueryFilterDataPtr filterData) {
            //RET nat: bool, man: bool, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            //PAR nat: physx::PxVec3*, man: physx.PxVec3*, stg: Value
            physx.PxVec3* pvk_in_origin = origin;
            //PAR nat: physx::PxVec3*, man: physx.PxVec3*, stg: Value
            physx.PxVec3* pvk_in_unitDir = unitDir;
            //PAR nat: float, man: float, stg: Value
            float pvk_in_distance = distance;
            //PAR nat: PxRaycastCallbackPtr, man: PxRaycastCallbackPtr, stg: PtrStruct
            PxRaycastCallbackPtr pvk_in_hitCall = hitCall;
            //PAR nat: PxHitFlagsPtr, man: PxHitFlagsPtr, stg: PtrStruct
            PxHitFlagsPtr pvk_in_hitFlags = hitFlags;
            //PAR nat: PxQueryFilterDataPtr, man: physx.PxQueryFilterDataPtr, stg: PtrStruct
            physx.PxQueryFilterDataPtr pvk_in_filterData = filterData;
            return bool_const_physx_PxScene_raycast_physx_PxVec3_physx_PxVec3_float_PxRaycastCallbackPtr_PxHitFlagsPtr_physx_PxQueryFilterDataPtr_C_(pvk_in_this, pvk_in_origin, pvk_in_unitDir, pvk_in_distance, pvk_in_hitCall, pvk_in_hitFlags, pvk_in_filterData);
        }
        
        //DEBUG: MethodNode physx::PxScene::raycast - 1320-1324
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern bool bool_const_physx_PxScene_raycast_physx_PxVec3_physx_PxVec3_float_PxRaycastCallbackPtr_PxHitFlagsPtr_C_(physx.PxScenePtr pvk_this, physx.PxVec3* pvk_origin, physx.PxVec3* pvk_unitDir, float pvk_distance, PxRaycastCallbackPtr pvk_hitCall, PxHitFlagsPtr pvk_hitFlags);
        
        public bool raycast(physx.PxVec3* origin, physx.PxVec3* unitDir, float distance, PxRaycastCallbackPtr hitCall, PxHitFlagsPtr hitFlags) {
            //RET nat: bool, man: bool, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            //PAR nat: physx::PxVec3*, man: physx.PxVec3*, stg: Value
            physx.PxVec3* pvk_in_origin = origin;
            //PAR nat: physx::PxVec3*, man: physx.PxVec3*, stg: Value
            physx.PxVec3* pvk_in_unitDir = unitDir;
            //PAR nat: float, man: float, stg: Value
            float pvk_in_distance = distance;
            //PAR nat: PxRaycastCallbackPtr, man: PxRaycastCallbackPtr, stg: PtrStruct
            PxRaycastCallbackPtr pvk_in_hitCall = hitCall;
            //PAR nat: PxHitFlagsPtr, man: PxHitFlagsPtr, stg: PtrStruct
            PxHitFlagsPtr pvk_in_hitFlags = hitFlags;
            return bool_const_physx_PxScene_raycast_physx_PxVec3_physx_PxVec3_float_PxRaycastCallbackPtr_PxHitFlagsPtr_C_(pvk_in_this, pvk_in_origin, pvk_in_unitDir, pvk_in_distance, pvk_in_hitCall, pvk_in_hitFlags);
        }
        
        //DEBUG: MethodNode physx::PxScene::raycast - 1320-1324
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern bool bool_const_physx_PxScene_raycast_physx_PxVec3_physx_PxVec3_float_PxRaycastCallbackPtr_C_(physx.PxScenePtr pvk_this, physx.PxVec3* pvk_origin, physx.PxVec3* pvk_unitDir, float pvk_distance, PxRaycastCallbackPtr pvk_hitCall);
        
        public bool raycast(physx.PxVec3* origin, physx.PxVec3* unitDir, float distance, PxRaycastCallbackPtr hitCall) {
            //RET nat: bool, man: bool, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            //PAR nat: physx::PxVec3*, man: physx.PxVec3*, stg: Value
            physx.PxVec3* pvk_in_origin = origin;
            //PAR nat: physx::PxVec3*, man: physx.PxVec3*, stg: Value
            physx.PxVec3* pvk_in_unitDir = unitDir;
            //PAR nat: float, man: float, stg: Value
            float pvk_in_distance = distance;
            //PAR nat: PxRaycastCallbackPtr, man: PxRaycastCallbackPtr, stg: PtrStruct
            PxRaycastCallbackPtr pvk_in_hitCall = hitCall;
            return bool_const_physx_PxScene_raycast_physx_PxVec3_physx_PxVec3_float_PxRaycastCallbackPtr_C_(pvk_in_this, pvk_in_origin, pvk_in_unitDir, pvk_in_distance, pvk_in_hitCall);
        }
        
        //DEBUG: MethodNode physx::PxScene::sweep - 1353-1356
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern bool bool_const_physx_PxScene_sweep_physx_PxGeometryPtr_physx_PxTransform_physx_PxVec3_float_PxSweepCallbackPtr_PxHitFlagsPtr_physx_PxQueryFilterDataPtr_physx_PxQueryFilterCallbackPtr_physx_PxQueryCachePtr_float_C_C(physx.PxScenePtr pvk_this, physx.PxGeometryPtr pvk_geometry, physx.PxTransform* pvk_pose, physx.PxVec3* pvk_unitDir, float pvk_distance, PxSweepCallbackPtr pvk_hitCall, PxHitFlagsPtr pvk_hitFlags, physx.PxQueryFilterDataPtr pvk_filterData, physx.PxQueryFilterCallbackPtr pvk_filterCall, physx.PxQueryCachePtr pvk_cache, float pvk_inflation);
        
        public bool sweep(physx.PxGeometryPtr geometry, physx.PxTransform* pose, physx.PxVec3* unitDir, float distance, PxSweepCallbackPtr hitCall, PxHitFlagsPtr hitFlags, physx.PxQueryFilterDataPtr filterData, physx.PxQueryFilterCallbackPtr filterCall=default(physx.PxQueryFilterCallbackPtr), physx.PxQueryCachePtr cache=default(physx.PxQueryCachePtr), float inflation=0f) {
            //RET nat: bool, man: bool, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            //PAR nat: PxGeometryPtr, man: physx.PxGeometryPtr, stg: PtrStruct
            physx.PxGeometryPtr pvk_in_geometry = geometry;
            //PAR nat: physx::PxTransform*, man: physx.PxTransform*, stg: Value
            physx.PxTransform* pvk_in_pose = pose;
            //PAR nat: physx::PxVec3*, man: physx.PxVec3*, stg: Value
            physx.PxVec3* pvk_in_unitDir = unitDir;
            //PAR nat: float, man: float, stg: Value
            float pvk_in_distance = distance;
            //PAR nat: PxSweepCallbackPtr, man: PxSweepCallbackPtr, stg: PtrStruct
            PxSweepCallbackPtr pvk_in_hitCall = hitCall;
            //PAR nat: PxHitFlagsPtr, man: PxHitFlagsPtr, stg: PtrStruct
            PxHitFlagsPtr pvk_in_hitFlags = hitFlags;
            //PAR nat: PxQueryFilterDataPtr, man: physx.PxQueryFilterDataPtr, stg: PtrStruct
            physx.PxQueryFilterDataPtr pvk_in_filterData = filterData;
            //PAR nat: PxQueryFilterCallbackPtr, man: physx.PxQueryFilterCallbackPtr, stg: PtrStruct
            physx.PxQueryFilterCallbackPtr pvk_in_filterCall = filterCall;
            //PAR nat: PxQueryCachePtr, man: physx.PxQueryCachePtr, stg: PtrStruct
            physx.PxQueryCachePtr pvk_in_cache = cache;
            //PAR nat: float, man: float, stg: Value
            float pvk_in_inflation = inflation;
            return bool_const_physx_PxScene_sweep_physx_PxGeometryPtr_physx_PxTransform_physx_PxVec3_float_PxSweepCallbackPtr_PxHitFlagsPtr_physx_PxQueryFilterDataPtr_physx_PxQueryFilterCallbackPtr_physx_PxQueryCachePtr_float_C_C(pvk_in_this, pvk_in_geometry, pvk_in_pose, pvk_in_unitDir, pvk_in_distance, pvk_in_hitCall, pvk_in_hitFlags, pvk_in_filterData, pvk_in_filterCall, pvk_in_cache, pvk_in_inflation);
        }
        
        //DEBUG: MethodNode physx::PxScene::sweep - 1353-1356
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern bool bool_const_physx_PxScene_sweep_physx_PxGeometryPtr_physx_PxTransform_physx_PxVec3_float_PxSweepCallbackPtr_PxHitFlagsPtr_physx_PxQueryFilterDataPtr_physx_PxQueryFilterCallbackPtr_physx_PxQueryCachePtr_C_(physx.PxScenePtr pvk_this, physx.PxGeometryPtr pvk_geometry, physx.PxTransform* pvk_pose, physx.PxVec3* pvk_unitDir, float pvk_distance, PxSweepCallbackPtr pvk_hitCall, PxHitFlagsPtr pvk_hitFlags, physx.PxQueryFilterDataPtr pvk_filterData, physx.PxQueryFilterCallbackPtr pvk_filterCall, physx.PxQueryCachePtr pvk_cache);
        
        public bool sweep(physx.PxGeometryPtr geometry, physx.PxTransform* pose, physx.PxVec3* unitDir, float distance, PxSweepCallbackPtr hitCall, PxHitFlagsPtr hitFlags, physx.PxQueryFilterDataPtr filterData, physx.PxQueryFilterCallbackPtr filterCall=default(physx.PxQueryFilterCallbackPtr), physx.PxQueryCachePtr cache=default(physx.PxQueryCachePtr)) {
            //RET nat: bool, man: bool, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            //PAR nat: PxGeometryPtr, man: physx.PxGeometryPtr, stg: PtrStruct
            physx.PxGeometryPtr pvk_in_geometry = geometry;
            //PAR nat: physx::PxTransform*, man: physx.PxTransform*, stg: Value
            physx.PxTransform* pvk_in_pose = pose;
            //PAR nat: physx::PxVec3*, man: physx.PxVec3*, stg: Value
            physx.PxVec3* pvk_in_unitDir = unitDir;
            //PAR nat: float, man: float, stg: Value
            float pvk_in_distance = distance;
            //PAR nat: PxSweepCallbackPtr, man: PxSweepCallbackPtr, stg: PtrStruct
            PxSweepCallbackPtr pvk_in_hitCall = hitCall;
            //PAR nat: PxHitFlagsPtr, man: PxHitFlagsPtr, stg: PtrStruct
            PxHitFlagsPtr pvk_in_hitFlags = hitFlags;
            //PAR nat: PxQueryFilterDataPtr, man: physx.PxQueryFilterDataPtr, stg: PtrStruct
            physx.PxQueryFilterDataPtr pvk_in_filterData = filterData;
            //PAR nat: PxQueryFilterCallbackPtr, man: physx.PxQueryFilterCallbackPtr, stg: PtrStruct
            physx.PxQueryFilterCallbackPtr pvk_in_filterCall = filterCall;
            //PAR nat: PxQueryCachePtr, man: physx.PxQueryCachePtr, stg: PtrStruct
            physx.PxQueryCachePtr pvk_in_cache = cache;
            return bool_const_physx_PxScene_sweep_physx_PxGeometryPtr_physx_PxTransform_physx_PxVec3_float_PxSweepCallbackPtr_PxHitFlagsPtr_physx_PxQueryFilterDataPtr_physx_PxQueryFilterCallbackPtr_physx_PxQueryCachePtr_C_(pvk_in_this, pvk_in_geometry, pvk_in_pose, pvk_in_unitDir, pvk_in_distance, pvk_in_hitCall, pvk_in_hitFlags, pvk_in_filterData, pvk_in_filterCall, pvk_in_cache);
        }
        
        //DEBUG: MethodNode physx::PxScene::sweep - 1353-1356
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern bool bool_const_physx_PxScene_sweep_physx_PxGeometryPtr_physx_PxTransform_physx_PxVec3_float_PxSweepCallbackPtr_PxHitFlagsPtr_physx_PxQueryFilterDataPtr_physx_PxQueryFilterCallbackPtr_C_(physx.PxScenePtr pvk_this, physx.PxGeometryPtr pvk_geometry, physx.PxTransform* pvk_pose, physx.PxVec3* pvk_unitDir, float pvk_distance, PxSweepCallbackPtr pvk_hitCall, PxHitFlagsPtr pvk_hitFlags, physx.PxQueryFilterDataPtr pvk_filterData, physx.PxQueryFilterCallbackPtr pvk_filterCall);
        
        public bool sweep(physx.PxGeometryPtr geometry, physx.PxTransform* pose, physx.PxVec3* unitDir, float distance, PxSweepCallbackPtr hitCall, PxHitFlagsPtr hitFlags, physx.PxQueryFilterDataPtr filterData, physx.PxQueryFilterCallbackPtr filterCall=default(physx.PxQueryFilterCallbackPtr)) {
            //RET nat: bool, man: bool, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            //PAR nat: PxGeometryPtr, man: physx.PxGeometryPtr, stg: PtrStruct
            physx.PxGeometryPtr pvk_in_geometry = geometry;
            //PAR nat: physx::PxTransform*, man: physx.PxTransform*, stg: Value
            physx.PxTransform* pvk_in_pose = pose;
            //PAR nat: physx::PxVec3*, man: physx.PxVec3*, stg: Value
            physx.PxVec3* pvk_in_unitDir = unitDir;
            //PAR nat: float, man: float, stg: Value
            float pvk_in_distance = distance;
            //PAR nat: PxSweepCallbackPtr, man: PxSweepCallbackPtr, stg: PtrStruct
            PxSweepCallbackPtr pvk_in_hitCall = hitCall;
            //PAR nat: PxHitFlagsPtr, man: PxHitFlagsPtr, stg: PtrStruct
            PxHitFlagsPtr pvk_in_hitFlags = hitFlags;
            //PAR nat: PxQueryFilterDataPtr, man: physx.PxQueryFilterDataPtr, stg: PtrStruct
            physx.PxQueryFilterDataPtr pvk_in_filterData = filterData;
            //PAR nat: PxQueryFilterCallbackPtr, man: physx.PxQueryFilterCallbackPtr, stg: PtrStruct
            physx.PxQueryFilterCallbackPtr pvk_in_filterCall = filterCall;
            return bool_const_physx_PxScene_sweep_physx_PxGeometryPtr_physx_PxTransform_physx_PxVec3_float_PxSweepCallbackPtr_PxHitFlagsPtr_physx_PxQueryFilterDataPtr_physx_PxQueryFilterCallbackPtr_C_(pvk_in_this, pvk_in_geometry, pvk_in_pose, pvk_in_unitDir, pvk_in_distance, pvk_in_hitCall, pvk_in_hitFlags, pvk_in_filterData, pvk_in_filterCall);
        }
        
        //DEBUG: MethodNode physx::PxScene::sweep - 1353-1356
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern bool bool_const_physx_PxScene_sweep_physx_PxGeometryPtr_physx_PxTransform_physx_PxVec3_float_PxSweepCallbackPtr_PxHitFlagsPtr_physx_PxQueryFilterDataPtr_C_(physx.PxScenePtr pvk_this, physx.PxGeometryPtr pvk_geometry, physx.PxTransform* pvk_pose, physx.PxVec3* pvk_unitDir, float pvk_distance, PxSweepCallbackPtr pvk_hitCall, PxHitFlagsPtr pvk_hitFlags, physx.PxQueryFilterDataPtr pvk_filterData);
        
        public bool sweep(physx.PxGeometryPtr geometry, physx.PxTransform* pose, physx.PxVec3* unitDir, float distance, PxSweepCallbackPtr hitCall, PxHitFlagsPtr hitFlags, physx.PxQueryFilterDataPtr filterData) {
            //RET nat: bool, man: bool, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            //PAR nat: PxGeometryPtr, man: physx.PxGeometryPtr, stg: PtrStruct
            physx.PxGeometryPtr pvk_in_geometry = geometry;
            //PAR nat: physx::PxTransform*, man: physx.PxTransform*, stg: Value
            physx.PxTransform* pvk_in_pose = pose;
            //PAR nat: physx::PxVec3*, man: physx.PxVec3*, stg: Value
            physx.PxVec3* pvk_in_unitDir = unitDir;
            //PAR nat: float, man: float, stg: Value
            float pvk_in_distance = distance;
            //PAR nat: PxSweepCallbackPtr, man: PxSweepCallbackPtr, stg: PtrStruct
            PxSweepCallbackPtr pvk_in_hitCall = hitCall;
            //PAR nat: PxHitFlagsPtr, man: PxHitFlagsPtr, stg: PtrStruct
            PxHitFlagsPtr pvk_in_hitFlags = hitFlags;
            //PAR nat: PxQueryFilterDataPtr, man: physx.PxQueryFilterDataPtr, stg: PtrStruct
            physx.PxQueryFilterDataPtr pvk_in_filterData = filterData;
            return bool_const_physx_PxScene_sweep_physx_PxGeometryPtr_physx_PxTransform_physx_PxVec3_float_PxSweepCallbackPtr_PxHitFlagsPtr_physx_PxQueryFilterDataPtr_C_(pvk_in_this, pvk_in_geometry, pvk_in_pose, pvk_in_unitDir, pvk_in_distance, pvk_in_hitCall, pvk_in_hitFlags, pvk_in_filterData);
        }
        
        //DEBUG: MethodNode physx::PxScene::sweep - 1353-1356
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern bool bool_const_physx_PxScene_sweep_physx_PxGeometryPtr_physx_PxTransform_physx_PxVec3_float_PxSweepCallbackPtr_PxHitFlagsPtr_C_(physx.PxScenePtr pvk_this, physx.PxGeometryPtr pvk_geometry, physx.PxTransform* pvk_pose, physx.PxVec3* pvk_unitDir, float pvk_distance, PxSweepCallbackPtr pvk_hitCall, PxHitFlagsPtr pvk_hitFlags);
        
        public bool sweep(physx.PxGeometryPtr geometry, physx.PxTransform* pose, physx.PxVec3* unitDir, float distance, PxSweepCallbackPtr hitCall, PxHitFlagsPtr hitFlags) {
            //RET nat: bool, man: bool, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            //PAR nat: PxGeometryPtr, man: physx.PxGeometryPtr, stg: PtrStruct
            physx.PxGeometryPtr pvk_in_geometry = geometry;
            //PAR nat: physx::PxTransform*, man: physx.PxTransform*, stg: Value
            physx.PxTransform* pvk_in_pose = pose;
            //PAR nat: physx::PxVec3*, man: physx.PxVec3*, stg: Value
            physx.PxVec3* pvk_in_unitDir = unitDir;
            //PAR nat: float, man: float, stg: Value
            float pvk_in_distance = distance;
            //PAR nat: PxSweepCallbackPtr, man: PxSweepCallbackPtr, stg: PtrStruct
            PxSweepCallbackPtr pvk_in_hitCall = hitCall;
            //PAR nat: PxHitFlagsPtr, man: PxHitFlagsPtr, stg: PtrStruct
            PxHitFlagsPtr pvk_in_hitFlags = hitFlags;
            return bool_const_physx_PxScene_sweep_physx_PxGeometryPtr_physx_PxTransform_physx_PxVec3_float_PxSweepCallbackPtr_PxHitFlagsPtr_C_(pvk_in_this, pvk_in_geometry, pvk_in_pose, pvk_in_unitDir, pvk_in_distance, pvk_in_hitCall, pvk_in_hitFlags);
        }
        
        //DEBUG: MethodNode physx::PxScene::sweep - 1353-1356
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern bool bool_const_physx_PxScene_sweep_physx_PxGeometryPtr_physx_PxTransform_physx_PxVec3_float_PxSweepCallbackPtr_C_(physx.PxScenePtr pvk_this, physx.PxGeometryPtr pvk_geometry, physx.PxTransform* pvk_pose, physx.PxVec3* pvk_unitDir, float pvk_distance, PxSweepCallbackPtr pvk_hitCall);
        
        public bool sweep(physx.PxGeometryPtr geometry, physx.PxTransform* pose, physx.PxVec3* unitDir, float distance, PxSweepCallbackPtr hitCall) {
            //RET nat: bool, man: bool, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            //PAR nat: PxGeometryPtr, man: physx.PxGeometryPtr, stg: PtrStruct
            physx.PxGeometryPtr pvk_in_geometry = geometry;
            //PAR nat: physx::PxTransform*, man: physx.PxTransform*, stg: Value
            physx.PxTransform* pvk_in_pose = pose;
            //PAR nat: physx::PxVec3*, man: physx.PxVec3*, stg: Value
            physx.PxVec3* pvk_in_unitDir = unitDir;
            //PAR nat: float, man: float, stg: Value
            float pvk_in_distance = distance;
            //PAR nat: PxSweepCallbackPtr, man: PxSweepCallbackPtr, stg: PtrStruct
            PxSweepCallbackPtr pvk_in_hitCall = hitCall;
            return bool_const_physx_PxScene_sweep_physx_PxGeometryPtr_physx_PxTransform_physx_PxVec3_float_PxSweepCallbackPtr_C_(pvk_in_this, pvk_in_geometry, pvk_in_pose, pvk_in_unitDir, pvk_in_distance, pvk_in_hitCall);
        }
        
        //DEBUG: MethodNode physx::PxScene::overlap - 1378-1380
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern bool bool_const_physx_PxScene_overlap_physx_PxGeometryPtr_physx_PxTransform_PxOverlapCallbackPtr_physx_PxQueryFilterDataPtr_physx_PxQueryFilterCallbackPtr_(physx.PxScenePtr pvk_this, physx.PxGeometryPtr pvk_geometry, physx.PxTransform* pvk_pose, PxOverlapCallbackPtr pvk_hitCall, physx.PxQueryFilterDataPtr pvk_filterData, physx.PxQueryFilterCallbackPtr pvk_filterCall);
        
        public bool overlap(physx.PxGeometryPtr geometry, physx.PxTransform* pose, PxOverlapCallbackPtr hitCall, physx.PxQueryFilterDataPtr filterData, physx.PxQueryFilterCallbackPtr filterCall=default(physx.PxQueryFilterCallbackPtr)) {
            //RET nat: bool, man: bool, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            //PAR nat: PxGeometryPtr, man: physx.PxGeometryPtr, stg: PtrStruct
            physx.PxGeometryPtr pvk_in_geometry = geometry;
            //PAR nat: physx::PxTransform*, man: physx.PxTransform*, stg: Value
            physx.PxTransform* pvk_in_pose = pose;
            //PAR nat: PxOverlapCallbackPtr, man: PxOverlapCallbackPtr, stg: PtrStruct
            PxOverlapCallbackPtr pvk_in_hitCall = hitCall;
            //PAR nat: PxQueryFilterDataPtr, man: physx.PxQueryFilterDataPtr, stg: PtrStruct
            physx.PxQueryFilterDataPtr pvk_in_filterData = filterData;
            //PAR nat: PxQueryFilterCallbackPtr, man: physx.PxQueryFilterCallbackPtr, stg: PtrStruct
            physx.PxQueryFilterCallbackPtr pvk_in_filterCall = filterCall;
            return bool_const_physx_PxScene_overlap_physx_PxGeometryPtr_physx_PxTransform_PxOverlapCallbackPtr_physx_PxQueryFilterDataPtr_physx_PxQueryFilterCallbackPtr_(pvk_in_this, pvk_in_geometry, pvk_in_pose, pvk_in_hitCall, pvk_in_filterData, pvk_in_filterCall);
        }
        
        //DEBUG: MethodNode physx::PxScene::overlap - 1378-1380
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern bool bool_const_physx_PxScene_overlap_physx_PxGeometryPtr_physx_PxTransform_PxOverlapCallbackPtr_physx_PxQueryFilterDataPtr_(physx.PxScenePtr pvk_this, physx.PxGeometryPtr pvk_geometry, physx.PxTransform* pvk_pose, PxOverlapCallbackPtr pvk_hitCall, physx.PxQueryFilterDataPtr pvk_filterData);
        
        public bool overlap(physx.PxGeometryPtr geometry, physx.PxTransform* pose, PxOverlapCallbackPtr hitCall, physx.PxQueryFilterDataPtr filterData) {
            //RET nat: bool, man: bool, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            //PAR nat: PxGeometryPtr, man: physx.PxGeometryPtr, stg: PtrStruct
            physx.PxGeometryPtr pvk_in_geometry = geometry;
            //PAR nat: physx::PxTransform*, man: physx.PxTransform*, stg: Value
            physx.PxTransform* pvk_in_pose = pose;
            //PAR nat: PxOverlapCallbackPtr, man: PxOverlapCallbackPtr, stg: PtrStruct
            PxOverlapCallbackPtr pvk_in_hitCall = hitCall;
            //PAR nat: PxQueryFilterDataPtr, man: physx.PxQueryFilterDataPtr, stg: PtrStruct
            physx.PxQueryFilterDataPtr pvk_in_filterData = filterData;
            return bool_const_physx_PxScene_overlap_physx_PxGeometryPtr_physx_PxTransform_PxOverlapCallbackPtr_physx_PxQueryFilterDataPtr_(pvk_in_this, pvk_in_geometry, pvk_in_pose, pvk_in_hitCall, pvk_in_filterData);
        }
        
        //DEBUG: MethodNode physx::PxScene::overlap - 1378-1380
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern bool bool_const_physx_PxScene_overlap_physx_PxGeometryPtr_physx_PxTransform_PxOverlapCallbackPtr_(physx.PxScenePtr pvk_this, physx.PxGeometryPtr pvk_geometry, physx.PxTransform* pvk_pose, PxOverlapCallbackPtr pvk_hitCall);
        
        public bool overlap(physx.PxGeometryPtr geometry, physx.PxTransform* pose, PxOverlapCallbackPtr hitCall) {
            //RET nat: bool, man: bool, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            //PAR nat: PxGeometryPtr, man: physx.PxGeometryPtr, stg: PtrStruct
            physx.PxGeometryPtr pvk_in_geometry = geometry;
            //PAR nat: physx::PxTransform*, man: physx.PxTransform*, stg: Value
            physx.PxTransform* pvk_in_pose = pose;
            //PAR nat: PxOverlapCallbackPtr, man: PxOverlapCallbackPtr, stg: PtrStruct
            PxOverlapCallbackPtr pvk_in_hitCall = hitCall;
            return bool_const_physx_PxScene_overlap_physx_PxGeometryPtr_physx_PxTransform_PxOverlapCallbackPtr_(pvk_in_this, pvk_in_geometry, pvk_in_pose, pvk_in_hitCall);
        }
        
        //DEBUG: MethodNode physx::PxScene::getSceneQueryStaticTimestamp - 1389
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern uint uint_const_physx_PxScene_getSceneQueryStaticTimestamp(physx.PxScenePtr pvk_this);
        
        public uint getSceneQueryStaticTimestamp() {
            //RET nat: uint, man: uint, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            return uint_const_physx_PxScene_getSceneQueryStaticTimestamp(pvk_in_this);
        }
        
        //DEBUG: MethodNode physx::PxScene::getBroadPhaseType - 1402
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxBroadPhaseTypeEnum physx_PxBroadPhaseTypeEnum_const_physx_PxScene_getBroadPhaseType(physx.PxScenePtr pvk_this);
        
        public physx.PxBroadPhaseTypeEnum getBroadPhaseType() {
            //RET nat: physx.PxBroadPhaseTypeEnum, man: physx.PxBroadPhaseTypeEnum, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            return physx_PxBroadPhaseTypeEnum_const_physx_PxScene_getBroadPhaseType(pvk_in_this);
        }
        
        //DEBUG: MethodNode physx::PxScene::getBroadPhaseCaps - 1410
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern bool bool_const_physx_PxScene_getBroadPhaseCaps_physx_PxBroadPhaseCapsPtr_(physx.PxScenePtr pvk_this, physx.PxBroadPhaseCapsPtr pvk_caps);
        
        public bool getBroadPhaseCaps(physx.PxBroadPhaseCapsPtr caps) {
            //RET nat: bool, man: bool, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            //PAR nat: PxBroadPhaseCapsPtr, man: physx.PxBroadPhaseCapsPtr, stg: PtrStruct
            physx.PxBroadPhaseCapsPtr pvk_in_caps = caps;
            return bool_const_physx_PxScene_getBroadPhaseCaps_physx_PxBroadPhaseCapsPtr_(pvk_in_this, pvk_in_caps);
        }
        
        //DEBUG: MethodNode physx::PxScene::getNbBroadPhaseRegions - 1417
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern uint uint_const_physx_PxScene_getNbBroadPhaseRegions(physx.PxScenePtr pvk_this);
        
        public uint getNbBroadPhaseRegions() {
            //RET nat: uint, man: uint, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            return uint_const_physx_PxScene_getNbBroadPhaseRegions(pvk_in_this);
        }
        
        //DEBUG: MethodNode physx::PxScene::getBroadPhaseRegions - 1427
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern uint uint_const_physx_PxScene_getBroadPhaseRegions_physx_PxBroadPhaseRegionInfoPtr_uint_uint_(physx.PxScenePtr pvk_this, physx.PxBroadPhaseRegionInfoPtr pvk_userBuffer, uint pvk_bufferSize, uint pvk_startIndex);
        
        public uint getBroadPhaseRegions(physx.PxBroadPhaseRegionInfoPtr userBuffer, uint bufferSize, uint startIndex=0) {
            //RET nat: uint, man: uint, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            //PAR nat: PxBroadPhaseRegionInfoPtr, man: physx.PxBroadPhaseRegionInfoPtr, stg: PtrStruct
            physx.PxBroadPhaseRegionInfoPtr pvk_in_userBuffer = userBuffer;
            //PAR nat: unsigned int, man: uint, stg: Value
            uint pvk_in_bufferSize = bufferSize;
            //PAR nat: unsigned int, man: uint, stg: Value
            uint pvk_in_startIndex = startIndex;
            return uint_const_physx_PxScene_getBroadPhaseRegions_physx_PxBroadPhaseRegionInfoPtr_uint_uint_(pvk_in_this, pvk_in_userBuffer, pvk_in_bufferSize, pvk_in_startIndex);
        }
        
        //DEBUG: MethodNode physx::PxScene::getBroadPhaseRegions - 1427
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern uint uint_const_physx_PxScene_getBroadPhaseRegions_physx_PxBroadPhaseRegionInfoPtr_uint_(physx.PxScenePtr pvk_this, physx.PxBroadPhaseRegionInfoPtr pvk_userBuffer, uint pvk_bufferSize);
        
        public uint getBroadPhaseRegions(physx.PxBroadPhaseRegionInfoPtr userBuffer, uint bufferSize) {
            //RET nat: uint, man: uint, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            //PAR nat: PxBroadPhaseRegionInfoPtr, man: physx.PxBroadPhaseRegionInfoPtr, stg: PtrStruct
            physx.PxBroadPhaseRegionInfoPtr pvk_in_userBuffer = userBuffer;
            //PAR nat: unsigned int, man: uint, stg: Value
            uint pvk_in_bufferSize = bufferSize;
            return uint_const_physx_PxScene_getBroadPhaseRegions_physx_PxBroadPhaseRegionInfoPtr_uint_(pvk_in_this, pvk_in_userBuffer, pvk_in_bufferSize);
        }
        
        //DEBUG: MethodNode physx::PxScene::addBroadPhaseRegion - 1445
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern uint uint_physx_PxScene_addBroadPhaseRegion_physx_PxBroadPhaseRegionPtr_bool_(physx.PxScenePtr pvk_this, physx.PxBroadPhaseRegionPtr pvk_region, bool pvk_populateRegion);
        
        public uint addBroadPhaseRegion(physx.PxBroadPhaseRegionPtr region, bool populateRegion=false) {
            //RET nat: uint, man: uint, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            //PAR nat: PxBroadPhaseRegionPtr, man: physx.PxBroadPhaseRegionPtr, stg: PtrStruct
            physx.PxBroadPhaseRegionPtr pvk_in_region = region;
            //PAR nat: bool, man: bool, stg: Value
            bool pvk_in_populateRegion = populateRegion;
            return uint_physx_PxScene_addBroadPhaseRegion_physx_PxBroadPhaseRegionPtr_bool_(pvk_in_this, pvk_in_region, pvk_in_populateRegion);
        }
        
        //DEBUG: MethodNode physx::PxScene::addBroadPhaseRegion - 1445
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern uint uint_physx_PxScene_addBroadPhaseRegion_physx_PxBroadPhaseRegionPtr_(physx.PxScenePtr pvk_this, physx.PxBroadPhaseRegionPtr pvk_region);
        
        public uint addBroadPhaseRegion(physx.PxBroadPhaseRegionPtr region) {
            //RET nat: uint, man: uint, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            //PAR nat: PxBroadPhaseRegionPtr, man: physx.PxBroadPhaseRegionPtr, stg: PtrStruct
            physx.PxBroadPhaseRegionPtr pvk_in_region = region;
            return uint_physx_PxScene_addBroadPhaseRegion_physx_PxBroadPhaseRegionPtr_(pvk_in_this, pvk_in_region);
        }
        
        //DEBUG: MethodNode physx::PxScene::removeBroadPhaseRegion - 1460
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern bool bool_physx_PxScene_removeBroadPhaseRegion_uint_(physx.PxScenePtr pvk_this, uint pvk_handle);
        
        public bool removeBroadPhaseRegion(uint handle) {
            //RET nat: bool, man: bool, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            //PAR nat: unsigned int, man: uint, stg: Value
            uint pvk_in_handle = handle;
            return bool_physx_PxScene_removeBroadPhaseRegion_uint_(pvk_in_this, pvk_in_handle);
        }
        
        //DEBUG: MethodNode physx::PxScene::getTaskManager - 1475
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxTaskManagerPtr physx_PxTaskManagerPtr_const_physx_PxScene_getTaskManager(physx.PxScenePtr pvk_this);
        
        public physx.PxTaskManagerPtr getTaskManager() {
            //RET nat: physx.PxTaskManagerPtr, man: physx.PxTaskManagerPtr, stg: PtrStruct, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            return physx_PxTaskManagerPtr_const_physx_PxScene_getTaskManager(pvk_in_this);
        }
        
        //DEBUG: MethodNode physx::PxScene::lockRead - 1496
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxScene_lockRead_string_uint_(physx.PxScenePtr pvk_this, string pvk_file, uint pvk_line);
        
        public void lockRead(string file=default(string), uint line=0) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            //PAR nat: char*, man: string, stg: Value
            string pvk_in_file = file;
            //PAR nat: unsigned int, man: uint, stg: Value
            uint pvk_in_line = line;
            void_physx_PxScene_lockRead_string_uint_(pvk_in_this, pvk_in_file, pvk_in_line);
        }
        
        //DEBUG: MethodNode physx::PxScene::lockRead - 1496
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxScene_lockRead_string_(physx.PxScenePtr pvk_this, string pvk_file);
        
        public void lockRead(string file=default(string)) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            //PAR nat: char*, man: string, stg: Value
            string pvk_in_file = file;
            void_physx_PxScene_lockRead_string_(pvk_in_this, pvk_in_file);
        }
        
        //DEBUG: MethodNode physx::PxScene::lockRead - 1496
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxScene_lockRead(physx.PxScenePtr pvk_this);
        
        public void lockRead() {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            void_physx_PxScene_lockRead(pvk_in_this);
        }
        
        //DEBUG: MethodNode physx::PxScene::unlockRead - 1503
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxScene_unlockRead(physx.PxScenePtr pvk_this);
        
        public void unlockRead() {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            void_physx_PxScene_unlockRead(pvk_in_this);
        }
        
        //DEBUG: MethodNode physx::PxScene::lockWrite - 1530
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxScene_lockWrite_string_uint_(physx.PxScenePtr pvk_this, string pvk_file, uint pvk_line);
        
        public void lockWrite(string file=default(string), uint line=0) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            //PAR nat: char*, man: string, stg: Value
            string pvk_in_file = file;
            //PAR nat: unsigned int, man: uint, stg: Value
            uint pvk_in_line = line;
            void_physx_PxScene_lockWrite_string_uint_(pvk_in_this, pvk_in_file, pvk_in_line);
        }
        
        //DEBUG: MethodNode physx::PxScene::lockWrite - 1530
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxScene_lockWrite_string_(physx.PxScenePtr pvk_this, string pvk_file);
        
        public void lockWrite(string file=default(string)) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            //PAR nat: char*, man: string, stg: Value
            string pvk_in_file = file;
            void_physx_PxScene_lockWrite_string_(pvk_in_this, pvk_in_file);
        }
        
        //DEBUG: MethodNode physx::PxScene::lockWrite - 1530
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxScene_lockWrite(physx.PxScenePtr pvk_this);
        
        public void lockWrite() {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            void_physx_PxScene_lockWrite(pvk_in_this);
        }
        
        //DEBUG: MethodNode physx::PxScene::unlockWrite - 1537
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxScene_unlockWrite(physx.PxScenePtr pvk_this);
        
        public void unlockWrite() {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            void_physx_PxScene_unlockWrite(pvk_in_this);
        }
        
        //DEBUG: MethodNode physx::PxScene::setNbContactDataBlocks - 1553
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxScene_setNbContactDataBlocks_uint_(physx.PxScenePtr pvk_this, uint pvk_numBlocks);
        
        public void setNbContactDataBlocks(uint numBlocks) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            //PAR nat: unsigned int, man: uint, stg: Value
            uint pvk_in_numBlocks = numBlocks;
            void_physx_PxScene_setNbContactDataBlocks_uint_(pvk_in_this, pvk_in_numBlocks);
        }
        
        //DEBUG: MethodNode physx::PxScene::getNbContactDataBlocksUsed - 1565
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern uint uint_const_physx_PxScene_getNbContactDataBlocksUsed(physx.PxScenePtr pvk_this);
        
        public uint getNbContactDataBlocksUsed() {
            //RET nat: uint, man: uint, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            return uint_const_physx_PxScene_getNbContactDataBlocksUsed(pvk_in_this);
        }
        
        //DEBUG: MethodNode physx::PxScene::getMaxNbContactDataBlocksUsed - 1576
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern uint uint_const_physx_PxScene_getMaxNbContactDataBlocksUsed(physx.PxScenePtr pvk_this);
        
        public uint getMaxNbContactDataBlocksUsed() {
            //RET nat: uint, man: uint, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            return uint_const_physx_PxScene_getMaxNbContactDataBlocksUsed(pvk_in_this);
        }
        
        //DEBUG: MethodNode physx::PxScene::getContactReportStreamBufferSize - 1584
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern uint uint_const_physx_PxScene_getContactReportStreamBufferSize(physx.PxScenePtr pvk_this);
        
        public uint getContactReportStreamBufferSize() {
            //RET nat: uint, man: uint, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            return uint_const_physx_PxScene_getContactReportStreamBufferSize(pvk_in_this);
        }
        
        //DEBUG: MethodNode physx::PxScene::setSolverBatchSize - 1594
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxScene_setSolverBatchSize_uint_(physx.PxScenePtr pvk_this, uint pvk_solverBatchSize);
        
        public void setSolverBatchSize(uint solverBatchSize) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            //PAR nat: unsigned int, man: uint, stg: Value
            uint pvk_in_solverBatchSize = solverBatchSize;
            void_physx_PxScene_setSolverBatchSize_uint_(pvk_in_this, pvk_in_solverBatchSize);
        }
        
        //DEBUG: MethodNode physx::PxScene::getSolverBatchSize - 1603
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern uint uint_const_physx_PxScene_getSolverBatchSize(physx.PxScenePtr pvk_this);
        
        public uint getSolverBatchSize() {
            //RET nat: uint, man: uint, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            return uint_const_physx_PxScene_getSolverBatchSize(pvk_in_this);
        }
        
        //DEBUG: MethodNode physx::PxScene::getWakeCounterResetValue - 1615
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern float float_const_physx_PxScene_getWakeCounterResetValue(physx.PxScenePtr pvk_this);
        
        public float getWakeCounterResetValue() {
            //RET nat: float, man: float, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            return float_const_physx_PxScene_getWakeCounterResetValue(pvk_in_this);
        }
        
        //DEBUG: MethodNode physx::PxScene::shiftOrigin - 1633
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxScene_shiftOrigin_physx_PxVec3_(physx.PxScenePtr pvk_this, physx.PxVec3* pvk_shift);
        
        public void shiftOrigin(physx.PxVec3* shift) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct
            physx.PxScenePtr pvk_in_this = this;
            //PAR nat: physx::PxVec3*, man: physx.PxVec3*, stg: Value
            physx.PxVec3* pvk_in_shift = shift;
            void_physx_PxScene_shiftOrigin_physx_PxVec3_(pvk_in_this, pvk_in_shift);
        }
        
        //DEBUG: MethodNode physx::PxScene::getScenePvdClient - 1639
        //ERRORS OCCURED IN physx::PxScene::getScenePvdClient
        ////Type PxPvdSceneClientPtr explicitly forbidden by user configuration
        
        //DEBUG: MethodNode physx::PxScene::operator= - 169
        //ERRORS OCCURED IN physx::PxScene::operator=
        //Implicit Function/Method
        //Unbindable Operator: Equal
    }
    
    //DEBUG: DeclNode physx::PxActorTypeFlags - 122
    // TODO DeclNode.GenBinding()
    
    //DEBUG: DeclNode physx::PxDominanceGroup - 71
    // TODO DeclNode.GenBinding()
    
}
