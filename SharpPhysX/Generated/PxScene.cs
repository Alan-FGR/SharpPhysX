// Generated by minBND 5.1.90.51 - Â© github.com/Alan-FGR
using System;
using System.Runtime.InteropServices;
using static minBND_pinvokes;

public static unsafe partial class physx {

    //DBG: FunctionNode physx::operator| L123
    //physx::operator| static physx.PxActorTypeFlagsPtr OpPipe_New(physx.PxActorTypeFlagEnum a, physx.PxActorTypeFlagEnum b) will also be bound as member operator
    //RET nat: PxActorTypeFlagsPtr, man: physx.PxActorTypeFlagsPtr, ret: True, kind: PtrStruct
    //PAR nat: physx::PxActorTypeFlag::Enum, man: physx.PxActorTypeFlagEnum, kind: Value
    //PAR nat: physx::PxActorTypeFlag::Enum, man: physx.PxActorTypeFlagEnum, kind: Value
    public static physx.PxActorTypeFlagsPtr OpPipe_New(physx.PxActorTypeFlagEnum a, physx.PxActorTypeFlagEnum b) {
        physx.PxActorTypeFlagEnum pvk_in_a = a;
        physx.PxActorTypeFlagEnum pvk_in_b = b;
        return PxActorTypeFlagsPtr_operator_Ptr_Pipe_PxActorTypeFlagEnum_PxActorTypeFlagEnum_(pvk_in_a, pvk_in_b);
    }

    //DBG: FunctionNode physx::operator& L123
    //physx::operator& static physx.PxActorTypeFlagsPtr OpAnd_New(physx.PxActorTypeFlagEnum a, physx.PxActorTypeFlagEnum b) will also be bound as member operator
    //RET nat: PxActorTypeFlagsPtr, man: physx.PxActorTypeFlagsPtr, ret: True, kind: PtrStruct
    //PAR nat: physx::PxActorTypeFlag::Enum, man: physx.PxActorTypeFlagEnum, kind: Value
    //PAR nat: physx::PxActorTypeFlag::Enum, man: physx.PxActorTypeFlagEnum, kind: Value
    public static physx.PxActorTypeFlagsPtr OpAnd_New(physx.PxActorTypeFlagEnum a, physx.PxActorTypeFlagEnum b) {
        physx.PxActorTypeFlagEnum pvk_in_a = a;
        physx.PxActorTypeFlagEnum pvk_in_b = b;
        return PxActorTypeFlagsPtr_operator_Ptr_Amp_PxActorTypeFlagEnum_PxActorTypeFlagEnum_(pvk_in_a, pvk_in_b);
    }

    //DBG: FunctionNode physx::operator~ L123
    //physx::operator~ static physx.PxActorTypeFlagsPtr OpTilde_New(physx.PxActorTypeFlagEnum a) will also be bound as member operator
    //RET nat: PxActorTypeFlagsPtr, man: physx.PxActorTypeFlagsPtr, ret: True, kind: PtrStruct
    //PAR nat: physx::PxActorTypeFlag::Enum, man: physx.PxActorTypeFlagEnum, kind: Value
    public static physx.PxActorTypeFlagsPtr OpTilde_New(physx.PxActorTypeFlagEnum a) {
        physx.PxActorTypeFlagEnum pvk_in_a = a;
        return PxActorTypeFlagsPtr_operator_Ptr_Tilde_PxActorTypeFlagEnum_(pvk_in_a);
    }

    //DBG: DeclTree PxBVHStructure physx::PxBVHStructure L68
    //Skipping DeclTree PxBVHStructure physx::PxBVHStructure L68...

    //DBG: DeclTree PxPruningStructure physx::PxPruningStructure L67
    //Skipping DeclTree PxPruningStructure physx::PxPruningStructure L67...

    //DBG: DeclTree PxSimulationEventCallback physx::PxSimulationEventCallback L56
    //Skipping DeclTree PxSimulationEventCallback physx::PxSimulationEventCallback L56...

    //DBG: DeclTree PxContactPairHeader physx::PxContactPairHeader L69
    //Skipping DeclTree PxContactPairHeader physx::PxContactPairHeader L69...

    //DBG: DeclTree PxRenderBuffer physx::PxRenderBuffer L61
    //Skipping DeclTree PxRenderBuffer physx::PxRenderBuffer L61...

    //DBG: DeclTree PxBatchQuery physx::PxBatchQuery L59
    //Skipping DeclTree PxBatchQuery physx::PxBatchQuery L59...

    //DBG: DeclTree PxBatchQueryDesc physx::PxBatchQueryDesc L58
    //Skipping DeclTree PxBatchQueryDesc physx::PxBatchQueryDesc L58...
    //Subclasses using this: 0

    public unsafe partial struct PxDominanceGroupPairPtr {
        private System.IntPtr nativePtr_;

        //DBG: ClassNode PxDominanceGroupPair physx::PxDominanceGroupPair L83-89

        //DBG: NewerFreerNode PxDominanceGroupPair physx::PxDominanceGroupPair L83-89
        public static void Free(physx.PxDominanceGroupPairPtr ptr){
            Freer_physx_PxDominanceGroupPairPtr(ptr);
        }
        public void Free(){
            Freer_physx_PxDominanceGroupPairPtr(this);
        }

        //DBG: PtrWrapperCtorNode physx::PxDominanceGroupPair::PxDominanceGroupPair L85-86
        //RET nat: PxDominanceGroupPairPtr, man: physx.PxDominanceGroupPairPtr, ret: True, kind: PtrStruct
        //PAR nat: PxU8, man: byte, kind: Value
        //PAR nat: PxU8, man: byte, kind: Value
        public static physx.PxDominanceGroupPairPtr New(byte a, byte b) {
            byte pvk_in_a = a;
            byte pvk_in_b = b;
            return Ctor_PxDominanceGroupPairPtr_byte_byte(pvk_in_a, pvk_in_b);
        }

        //DBG: PtrWrapperCtorNode physx::PxDominanceGroupPair::PxDominanceGroupPair L83
        //ERRORS in PtrWrapperCtorNode: Skipping Implicit PtrWrapperCtorNode physx::PxDominanceGroupPair::PxDominanceGroupPair L83

        //DBG: PtrWrapperCtorNode physx::PxDominanceGroupPair::PxDominanceGroupPair L83
        //ERRORS in PtrWrapperCtorNode: Skipping Implicit PtrWrapperCtorNode physx::PxDominanceGroupPair::PxDominanceGroupPair L83

        //DBG: Field: dominance0 - 87-87
        public byte dominance0 {
            get => PxDominanceGroupPairPtr_GET_dominance0(this);
            set => PxDominanceGroupPairPtr_SET_dominance0(this, value);
        }

        //DBG: Field: dominance1 - 88-88
        public byte dominance1 {
            get => PxDominanceGroupPairPtr_GET_dominance1(this);
            set => PxDominanceGroupPairPtr_SET_dominance1(this, value);
        }

        //DBG: MethodNode physx::PxDominanceGroupPair::operator= L83
        //ERRORS in MethodNode: Skipping Implicit MethodNode physx::PxDominanceGroupPair::operator= L83

        //DBG: MethodNode physx::PxDominanceGroupPair::operator= L83
        //ERRORS in MethodNode: Skipping Implicit MethodNode physx::PxDominanceGroupPair::operator= L83

        //DBG: MethodNode physx::PxDominanceGroupPair::~PxDominanceGroupPair L83
        //ERRORS in MethodNode: Skipping Implicit MethodNode physx::PxDominanceGroupPair::~PxDominanceGroupPair L83, Destructor

        //Operators
    }

    //DBG: ClassNode PxActorTypeFlag physx::PxActorTypeFlag L99-115
    public enum PxActorTypeFlagEnum : int {
        eRIGID_STATIC = 1,  // eRIGID_STATIC = (1 << 0)
        eRIGID_DYNAMIC = 2, // eRIGID_DYNAMIC = (1 << 1)
    }
    //Subclasses using this: 0

    public unsafe partial struct PxQueryCachePtr {
        private System.IntPtr nativePtr_;

        //DBG: ClassNode PxQueryCache physx::PxQueryCache L143-158

        //DBG: NewerFreerNode PxQueryCache physx::PxQueryCache L143-158
        public static void Free(physx.PxQueryCachePtr ptr){
            Freer_physx_PxQueryCachePtr(ptr);
        }
        public void Free(){
            Freer_physx_PxQueryCachePtr(this);
        }

        //DBG: PtrWrapperCtorNode physx::PxQueryCache::PxQueryCache L148
        //RET nat: PxQueryCachePtr, man: physx.PxQueryCachePtr, ret: True, kind: PtrStruct
        public static physx.PxQueryCachePtr New() {
            return Ctor_PxQueryCachePtr_();
        }

        //DBG: PtrWrapperCtorNode physx::PxQueryCache::PxQueryCache L153
        //RET nat: PxQueryCachePtr, man: physx.PxQueryCachePtr, ret: True, kind: PtrStruct
        //PAR nat: PxShapePtr, man: physx.PxShapePtr, kind: PtrStruct
        //PAR nat: PxU32, man: uint, kind: Value
        public static physx.PxQueryCachePtr New(physx.PxShapePtr s, uint findex) {
            physx.PxShapePtr pvk_in_s = s;
            uint pvk_in_findex = findex;
            return Ctor_PxQueryCachePtr_PxShapePtr_uint(pvk_in_s, pvk_in_findex);
        }

        //DBG: PtrWrapperCtorNode physx::PxQueryCache::PxQueryCache L143
        //ERRORS in PtrWrapperCtorNode: Skipping Implicit PtrWrapperCtorNode physx::PxQueryCache::PxQueryCache L143

        //DBG: PtrWrapperCtorNode physx::PxQueryCache::PxQueryCache L143
        //ERRORS in PtrWrapperCtorNode: Skipping Implicit PtrWrapperCtorNode physx::PxQueryCache::PxQueryCache L143

        //DBG: Field: shape - 155-155
        public physx.PxShapePtr shape {
            get => PxQueryCachePtr_GET_shape(this);
            set => PxQueryCachePtr_SET_shape(this, value);
        }

        //DBG: Field: actor - 156-156
        public physx.PxRigidActorPtr actor {
            get => PxQueryCachePtr_GET_actor(this);
            set => PxQueryCachePtr_SET_actor(this, value);
        }

        //DBG: Field: faceIndex - 157-157
        public uint faceIndex {
            get => PxQueryCachePtr_GET_faceIndex(this);
            set => PxQueryCachePtr_SET_faceIndex(this, value);
        }

        //DBG: MethodNode physx::PxQueryCache::operator= L143
        //ERRORS in MethodNode: Skipping Implicit MethodNode physx::PxQueryCache::operator= L143

        //DBG: MethodNode physx::PxQueryCache::operator= L143
        //ERRORS in MethodNode: Skipping Implicit MethodNode physx::PxQueryCache::operator= L143

        //DBG: MethodNode physx::PxQueryCache::~PxQueryCache L143
        //ERRORS in MethodNode: Skipping Implicit MethodNode physx::PxQueryCache::~PxQueryCache L143, Destructor

        //Operators
    }
    //Subclasses using this: 0

    public unsafe partial struct PxScenePtr {
        private System.IntPtr nativePtr_;

        //DBG: ClassNode PxScene physx::PxScene L169-1642

        //DBG: Field: userData - 1641-1641
        public IntPtr userData {
            get => PxScenePtr_GET_userData(this);
            set => PxScenePtr_SET_userData(this, value);
        }

        //DBG: MethodNode physx::PxScene::release L195
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        public void release() {
            physx.PxScenePtr pvk_in_this = this;
            void_PxScenePtr_releasePtr(pvk_in_this);
        }

        //DBG: MethodNode physx::PxScene::setFlag L204
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: physx::PxSceneFlag::Enum, man: physx.PxSceneFlagEnum, kind: Value
        //PAR nat: bool, man: bool, kind: Value
        public void setFlag(physx.PxSceneFlagEnum flag, bool value) {
            physx.PxScenePtr pvk_in_this = this;
            physx.PxSceneFlagEnum pvk_in_flag = flag;
            bool pvk_in_value = value;
            void_PxScenePtr_setFlagPtr_PxSceneFlagEnum_bool_(pvk_in_this, pvk_in_flag, pvk_in_value);
        }

        //DBG: MethodNode physx::PxScene::getFlags L213
        //RET nat: PxSceneFlagsPtr, man: physx.PxSceneFlagsPtr, ret: True, kind: PtrStruct
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        public physx.PxSceneFlagsPtr getFlags_New() {
            physx.PxScenePtr pvk_in_this = this;
            return PxSceneFlagsPtr_const_PxScenePtr_getFlagsPtr(pvk_in_this);
        }

        //DBG: MethodNode physx::PxScene::setLimits L226
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: PxSceneLimitsPtr, man: physx.PxSceneLimitsPtr, kind: PtrStruct
        public void setLimits(physx.PxSceneLimitsPtr limits) {
            physx.PxScenePtr pvk_in_this = this;
            physx.PxSceneLimitsPtr pvk_in_limits = limits;
            void_PxScenePtr_setLimitsPtr_PxSceneLimitsPtr_(pvk_in_this, pvk_in_limits);
        }

        //DBG: MethodNode physx::PxScene::getLimits L233
        //RET nat: PxSceneLimitsPtr, man: physx.PxSceneLimitsPtr, ret: True, kind: PtrStruct
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        public physx.PxSceneLimitsPtr getLimits_New() {
            physx.PxScenePtr pvk_in_this = this;
            return PxSceneLimitsPtr_const_PxScenePtr_getLimitsPtr(pvk_in_this);
        }

        //DBG: MethodNode physx::PxScene::getPhysics L243
        //RET nat: PxPhysicsPtr, man: physx.PxPhysicsPtr, ret: True, kind: PtrStruct
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        public physx.PxPhysicsPtr getPhysics() {
            physx.PxScenePtr pvk_in_this = this;
            return PxPhysicsPtr_PxScenePtr_getPhysicsPtr(pvk_in_this);
        }

        //DBG: MethodNode physx::PxScene::getTimestamp L250
        //RET nat: PxU32, man: uint, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        public uint getTimestamp() {
            physx.PxScenePtr pvk_in_this = this;
            return uint_const_PxScenePtr_getTimestampPtr(pvk_in_this);
        }

        //DBG: MethodNode physx::PxScene::addArticulation L268
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: PxArticulationBasePtr, man: physx.PxArticulationBasePtr, kind: PtrStruct
        public void addArticulation(physx.PxArticulationBasePtr articulation) {
            physx.PxScenePtr pvk_in_this = this;
            physx.PxArticulationBasePtr pvk_in_articulation = articulation;
            void_PxScenePtr_addArticulationPtr_PxArticulationBasePtr_(pvk_in_this, pvk_in_articulation);
        }

        //DBG: MethodNode physx::PxScene::removeArticulation L282
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: PxArticulationBasePtr, man: physx.PxArticulationBasePtr, kind: PtrStruct
        //PAR nat: bool, man: bool, kind: Value
        public void removeArticulation(physx.PxArticulationBasePtr articulation, bool wakeOnLostTouch=true) {
            physx.PxScenePtr pvk_in_this = this;
            physx.PxArticulationBasePtr pvk_in_articulation = articulation;
            bool pvk_in_wakeOnLostTouch = wakeOnLostTouch;
            void_PxScenePtr_removeArticulationPtr_PxArticulationBasePtr_bool_(pvk_in_this, pvk_in_articulation, pvk_in_wakeOnLostTouch);
        }

        //DBG: MethodNode physx::PxScene::addActor L311

        //DBG: MethodNode physx::PxScene::addActors L331
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: PxActorPtr*, man: physx.PxActorPtr*, kind: Value
        //PAR nat: PxU32, man: uint, kind: Value
        public void addActors(physx.PxActorPtr* actors, uint nbActors) {
            physx.PxScenePtr pvk_in_this = this;
            physx.PxActorPtr* pvk_in_actors = actors;
            uint pvk_in_nbActors = nbActors;
            void_PxScenePtr_addActorsPtr_PxActorPtr_uint_(pvk_in_this, pvk_in_actors, pvk_in_nbActors);
        }

        //DBG: MethodNode physx::PxScene::addActors L351

        //DBG: MethodNode physx::PxScene::removeActor L369
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: PxActorPtr, man: physx.PxActorPtr, kind: PtrStruct
        //PAR nat: bool, man: bool, kind: Value
        public void removeActor(physx.PxActorPtr actor, bool wakeOnLostTouch=true) {
            physx.PxScenePtr pvk_in_this = this;
            physx.PxActorPtr pvk_in_actor = actor;
            bool pvk_in_wakeOnLostTouch = wakeOnLostTouch;
            void_PxScenePtr_removeActorPtr_PxActorPtr_bool_(pvk_in_this, pvk_in_actor, pvk_in_wakeOnLostTouch);
        }

        //DBG: MethodNode physx::PxScene::removeActors L386
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: PxActorPtr*, man: physx.PxActorPtr*, kind: Value
        //PAR nat: PxU32, man: uint, kind: Value
        //PAR nat: bool, man: bool, kind: Value
        public void removeActors(physx.PxActorPtr* actors, uint nbActors, bool wakeOnLostTouch=true) {
            physx.PxScenePtr pvk_in_this = this;
            physx.PxActorPtr* pvk_in_actors = actors;
            uint pvk_in_nbActors = nbActors;
            bool pvk_in_wakeOnLostTouch = wakeOnLostTouch;
            void_PxScenePtr_removeActorsPtr_PxActorPtr_uint_bool_(pvk_in_this, pvk_in_actors, pvk_in_nbActors, pvk_in_wakeOnLostTouch);
        }

        //DBG: MethodNode physx::PxScene::addAggregate L400
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: PxAggregatePtr, man: physx.PxAggregatePtr, kind: PtrStruct
        public void addAggregate(physx.PxAggregatePtr aggregate) {
            physx.PxScenePtr pvk_in_this = this;
            physx.PxAggregatePtr pvk_in_aggregate = aggregate;
            void_PxScenePtr_addAggregatePtr_PxAggregatePtr_(pvk_in_this, pvk_in_aggregate);
        }

        //DBG: MethodNode physx::PxScene::removeAggregate L414
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: PxAggregatePtr, man: physx.PxAggregatePtr, kind: PtrStruct
        //PAR nat: bool, man: bool, kind: Value
        public void removeAggregate(physx.PxAggregatePtr aggregate, bool wakeOnLostTouch=true) {
            physx.PxScenePtr pvk_in_this = this;
            physx.PxAggregatePtr pvk_in_aggregate = aggregate;
            bool pvk_in_wakeOnLostTouch = wakeOnLostTouch;
            void_PxScenePtr_removeAggregatePtr_PxAggregatePtr_bool_(pvk_in_this, pvk_in_aggregate, pvk_in_wakeOnLostTouch);
        }

        //DBG: MethodNode physx::PxScene::addCollection L428
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: PxCollectionPtr, man: physx.PxCollectionPtr, kind: PtrStruct
        public void addCollection(physx.PxCollectionPtr collection) {
            physx.PxScenePtr pvk_in_this = this;
            physx.PxCollectionPtr pvk_in_collection = collection;
            void_PxScenePtr_addCollectionPtr_PxCollectionPtr_(pvk_in_this, pvk_in_collection);
        }

        //DBG: MethodNode physx::PxScene::getNbActors L444
        //RET nat: PxU32, man: uint, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: PxActorTypeFlagsPtr, man: physx.PxActorTypeFlagsPtr, kind: PtrStruct
        public uint getNbActors(physx.PxActorTypeFlagsPtr types) {
            physx.PxScenePtr pvk_in_this = this;
            physx.PxActorTypeFlagsPtr pvk_in_types = types;
            return uint_const_PxScenePtr_getNbActorsPtr_PxActorTypeFlagsPtr_(pvk_in_this, pvk_in_types);
        }

        //DBG: MethodNode physx::PxScene::getActors L457
        //RET nat: PxU32, man: uint, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: PxActorTypeFlagsPtr, man: physx.PxActorTypeFlagsPtr, kind: PtrStruct
        //PAR nat: PxActorPtr*, man: physx.PxActorPtr*, kind: Value
        //PAR nat: PxU32, man: uint, kind: Value
        //PAR nat: PxU32, man: uint, kind: Value
        public uint getActors(physx.PxActorTypeFlagsPtr types, physx.PxActorPtr* userBuffer, uint bufferSize, uint startIndex=0) {
            physx.PxScenePtr pvk_in_this = this;
            physx.PxActorTypeFlagsPtr pvk_in_types = types;
            physx.PxActorPtr* pvk_in_userBuffer = userBuffer;
            uint pvk_in_bufferSize = bufferSize;
            uint pvk_in_startIndex = startIndex;
            return uint_const_PxScenePtr_getActorsPtr_PxActorTypeFlagsPtr_PxActorPtr_uint_uint_(pvk_in_this, pvk_in_types, pvk_in_userBuffer, pvk_in_bufferSize, pvk_in_startIndex);
        }

        //DBG: MethodNode physx::PxScene::getActiveActors L473
        //RET nat: PxActorPtr*, man: physx.PxActorPtr*, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: PxU32*, man: uint*, kind: Value
        public physx.PxActorPtr* getActiveActors(uint* nbActorsOut) {
            physx.PxScenePtr pvk_in_this = this;
            uint* pvk_in_nbActorsOut = nbActorsOut;
            return PxActorPtr_PxScenePtr_getActiveActorsPtr_uint_(pvk_in_this, pvk_in_nbActorsOut);
        }

        //DBG: MethodNode physx::PxScene::getNbArticulations L482
        //RET nat: PxU32, man: uint, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        public uint getNbArticulations() {
            physx.PxScenePtr pvk_in_this = this;
            return uint_const_PxScenePtr_getNbArticulationsPtr(pvk_in_this);
        }

        //DBG: MethodNode physx::PxScene::getArticulations L494
        //RET nat: PxU32, man: uint, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: PxArticulationBasePtr*, man: physx.PxArticulationBasePtr*, kind: Value
        //PAR nat: PxU32, man: uint, kind: Value
        //PAR nat: PxU32, man: uint, kind: Value
        public uint getArticulations(physx.PxArticulationBasePtr* userBuffer, uint bufferSize, uint startIndex=0) {
            physx.PxScenePtr pvk_in_this = this;
            physx.PxArticulationBasePtr* pvk_in_userBuffer = userBuffer;
            uint pvk_in_bufferSize = bufferSize;
            uint pvk_in_startIndex = startIndex;
            return uint_const_PxScenePtr_getArticulationsPtr_PxArticulationBasePtr_uint_uint_(pvk_in_this, pvk_in_userBuffer, pvk_in_bufferSize, pvk_in_startIndex);
        }

        //DBG: MethodNode physx::PxScene::getNbConstraints L503
        //RET nat: PxU32, man: uint, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        public uint getNbConstraints() {
            physx.PxScenePtr pvk_in_this = this;
            return uint_const_PxScenePtr_getNbConstraintsPtr(pvk_in_this);
        }

        //DBG: MethodNode physx::PxScene::getConstraints L515
        //RET nat: PxU32, man: uint, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: PxConstraintPtr*, man: physx.PxConstraintPtr*, kind: Value
        //PAR nat: PxU32, man: uint, kind: Value
        //PAR nat: PxU32, man: uint, kind: Value
        public uint getConstraints(physx.PxConstraintPtr* userBuffer, uint bufferSize, uint startIndex=0) {
            physx.PxScenePtr pvk_in_this = this;
            physx.PxConstraintPtr* pvk_in_userBuffer = userBuffer;
            uint pvk_in_bufferSize = bufferSize;
            uint pvk_in_startIndex = startIndex;
            return uint_const_PxScenePtr_getConstraintsPtr_PxConstraintPtr_uint_uint_(pvk_in_this, pvk_in_userBuffer, pvk_in_bufferSize, pvk_in_startIndex);
        }

        //DBG: MethodNode physx::PxScene::getNbAggregates L525
        //RET nat: PxU32, man: uint, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        public uint getNbAggregates() {
            physx.PxScenePtr pvk_in_this = this;
            return uint_const_PxScenePtr_getNbAggregatesPtr(pvk_in_this);
        }

        //DBG: MethodNode physx::PxScene::getAggregates L537
        //RET nat: PxU32, man: uint, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: PxAggregatePtr*, man: physx.PxAggregatePtr*, kind: Value
        //PAR nat: PxU32, man: uint, kind: Value
        //PAR nat: PxU32, man: uint, kind: Value
        public uint getAggregates(physx.PxAggregatePtr* userBuffer, uint bufferSize, uint startIndex=0) {
            physx.PxScenePtr pvk_in_this = this;
            physx.PxAggregatePtr* pvk_in_userBuffer = userBuffer;
            uint pvk_in_bufferSize = bufferSize;
            uint pvk_in_startIndex = startIndex;
            return uint_const_PxScenePtr_getAggregatesPtr_PxAggregatePtr_uint_uint_(pvk_in_this, pvk_in_userBuffer, pvk_in_bufferSize, pvk_in_startIndex);
        }

        //DBG: MethodNode physx::PxScene::setDominanceGroupPair L596-597
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: PxDominanceGroup, man: byte, kind: Value
        //PAR nat: PxDominanceGroup, man: byte, kind: Value
        //PAR nat: PxDominanceGroupPairPtr, man: physx.PxDominanceGroupPairPtr, kind: PtrStruct
        public void setDominanceGroupPair(byte group1, byte group2, physx.PxDominanceGroupPairPtr dominance) {
            physx.PxScenePtr pvk_in_this = this;
            byte pvk_in_group1 = group1;
            byte pvk_in_group2 = group2;
            physx.PxDominanceGroupPairPtr pvk_in_dominance = dominance;
            void_PxScenePtr_setDominanceGroupPairPtr_byte_byte_PxDominanceGroupPairPtr_(pvk_in_this, pvk_in_group1, pvk_in_group2, pvk_in_dominance);
        }

        //DBG: MethodNode physx::PxScene::getDominanceGroupPair L604
        //RET nat: PxDominanceGroupPairPtr, man: physx.PxDominanceGroupPairPtr, ret: True, kind: PtrStruct
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: PxDominanceGroup, man: byte, kind: Value
        //PAR nat: PxDominanceGroup, man: byte, kind: Value
        public physx.PxDominanceGroupPairPtr getDominanceGroupPair_New(byte group1, byte group2) {
            physx.PxScenePtr pvk_in_this = this;
            byte pvk_in_group1 = group1;
            byte pvk_in_group2 = group2;
            return PxDominanceGroupPairPtr_const_PxScenePtr_getDominanceGroupPairPtr_byte_byte_(pvk_in_this, pvk_in_group1, pvk_in_group2);
        }

        //DBG: MethodNode physx::PxScene::getCpuDispatcher L618
        //RET nat: PxCpuDispatcherPtr, man: physx.PxCpuDispatcherPtr, ret: True, kind: PtrStruct
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        public physx.PxCpuDispatcherPtr getCpuDispatcher() {
            physx.PxScenePtr pvk_in_this = this;
            return PxCpuDispatcherPtr_const_PxScenePtr_getCpuDispatcherPtr(pvk_in_this);
        }

        //DBG: MethodNode physx::PxScene::getGpuDispatcher L627
        //RET nat: PxGpuDispatcherPtr, man: physx.PxGpuDispatcherPtr, ret: True, kind: PtrStruct
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        public physx.PxGpuDispatcherPtr getGpuDispatcher() {
            physx.PxScenePtr pvk_in_this = this;
            return PxGpuDispatcherPtr_const_PxScenePtr_getGpuDispatcherPtr(pvk_in_this);
        }

        //DBG: MethodNode physx::PxScene::createClient L643
        //RET nat: PxClientID, man: byte, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        public byte createClient() {
            physx.PxScenePtr pvk_in_this = this;
            return byte_PxScenePtr_createClientPtr(pvk_in_this);
        }

        //DBG: MethodNode physx::PxScene::setSimulationEventCallback L662

        //DBG: MethodNode physx::PxScene::getSimulationEventCallback L671

        //DBG: MethodNode physx::PxScene::setContactModifyCallback L680

        //DBG: MethodNode physx::PxScene::setCCDContactModifyCallback L689

        //DBG: MethodNode physx::PxScene::getContactModifyCallback L698

        //DBG: MethodNode physx::PxScene::getCCDContactModifyCallback L707

        //DBG: MethodNode physx::PxScene::setBroadPhaseCallback L716
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: PxBroadPhaseCallbackPtr, man: physx.PxBroadPhaseCallbackPtr, kind: PtrStruct
        public void setBroadPhaseCallback(physx.PxBroadPhaseCallbackPtr callback) {
            physx.PxScenePtr pvk_in_this = this;
            physx.PxBroadPhaseCallbackPtr pvk_in_callback = callback;
            void_PxScenePtr_setBroadPhaseCallbackPtr_PxBroadPhaseCallbackPtr_(pvk_in_this, pvk_in_callback);
        }

        //DBG: MethodNode physx::PxScene::getBroadPhaseCallback L725
        //RET nat: PxBroadPhaseCallbackPtr, man: physx.PxBroadPhaseCallbackPtr, ret: True, kind: PtrStruct
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        public physx.PxBroadPhaseCallbackPtr getBroadPhaseCallback() {
            physx.PxScenePtr pvk_in_this = this;
            return PxBroadPhaseCallbackPtr_const_PxScenePtr_getBroadPhaseCallbackPtr(pvk_in_this);
        }

        //DBG: MethodNode physx::PxScene::setFilterShaderData L750
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: void*, man: IntPtr, kind: Value
        //PAR nat: PxU32, man: uint, kind: Value
        public void setFilterShaderData(IntPtr data, uint dataSize) {
            physx.PxScenePtr pvk_in_this = this;
            IntPtr pvk_in_data = data;
            uint pvk_in_dataSize = dataSize;
            void_PxScenePtr_setFilterShaderDataPtr_IntPtr_uint_(pvk_in_this, pvk_in_data, pvk_in_dataSize);
        }

        //DBG: MethodNode physx::PxScene::getFilterShaderData L761
        //RET nat: void*, man: IntPtr, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        public IntPtr getFilterShaderData() {
            physx.PxScenePtr pvk_in_this = this;
            return IntPtr_const_PxScenePtr_getFilterShaderDataPtr(pvk_in_this);
        }

        //DBG: MethodNode physx::PxScene::getFilterShaderDataSize L770
        //RET nat: PxU32, man: uint, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        public uint getFilterShaderDataSize() {
            physx.PxScenePtr pvk_in_this = this;
            return uint_const_PxScenePtr_getFilterShaderDataSizePtr(pvk_in_this);
        }

        //DBG: MethodNode physx::PxScene::getFilterShader L779-780
        //RET nat: PxSimulationFilterShader, man: PxSimulationFilterShader, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        public PxSimulationFilterShader getFilterShader() {
            physx.PxScenePtr pvk_in_this = this;
            return PxSimulationFilterShader_const_PxScenePtr_getFilterShaderPtr(pvk_in_this);
        }

        //DBG: MethodNode physx::PxScene::getFilterCallback L789-790
        //RET nat: PxSimulationFilterCallbackPtr, man: physx.PxSimulationFilterCallbackPtr, ret: True, kind: PtrStruct
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        public physx.PxSimulationFilterCallbackPtr getFilterCallback() {
            physx.PxScenePtr pvk_in_this = this;
            return PxSimulationFilterCallbackPtr_const_PxScenePtr_getFilterCallbackPtr(pvk_in_this);
        }

        //DBG: MethodNode physx::PxScene::resetFiltering L821
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: PxActorPtr, man: physx.PxActorPtr, kind: PtrStruct
        public void resetFiltering(physx.PxActorPtr actor) {
            physx.PxScenePtr pvk_in_this = this;
            physx.PxActorPtr pvk_in_actor = actor;
            void_PxScenePtr_resetFilteringPtr_PxActorPtr_(pvk_in_this, pvk_in_actor);
        }

        //DBG: MethodNode physx::PxScene::resetFiltering L837
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: PxRigidActorPtr, man: physx.PxRigidActorPtr, kind: PtrStruct
        //PAR nat: PxShapePtr*, man: physx.PxShapePtr*, kind: Value
        //PAR nat: PxU32, man: uint, kind: Value
        public void resetFiltering(physx.PxRigidActorPtr actor, physx.PxShapePtr* shapes, uint shapeCount) {
            physx.PxScenePtr pvk_in_this = this;
            physx.PxRigidActorPtr pvk_in_actor = actor;
            physx.PxShapePtr* pvk_in_shapes = shapes;
            uint pvk_in_shapeCount = shapeCount;
            void_PxScenePtr_resetFilteringPtr_PxRigidActorPtr_PxShapePtr_uint_(pvk_in_this, pvk_in_actor, pvk_in_shapes, pvk_in_shapeCount);
        }

        //DBG: MethodNode physx::PxScene::simulate L876-877
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: PxReal, man: float, kind: Value
        //PAR nat: PxBaseTaskPtr, man: physx.PxBaseTaskPtr, kind: PtrStruct
        //PAR nat: void*, man: IntPtr, kind: Value
        //PAR nat: PxU32, man: uint, kind: Value
        //PAR nat: bool, man: bool, kind: Value
        public void simulate(float elapsedTime, physx.PxBaseTaskPtr completionTask=default(physx.PxBaseTaskPtr), IntPtr scratchMemBlock=default(IntPtr), uint scratchMemBlockSize=0, bool controlSimulation=true) {
            physx.PxScenePtr pvk_in_this = this;
            float pvk_in_elapsedTime = elapsedTime;
            physx.PxBaseTaskPtr pvk_in_completionTask = completionTask;
            IntPtr pvk_in_scratchMemBlock = scratchMemBlock;
            uint pvk_in_scratchMemBlockSize = scratchMemBlockSize;
            bool pvk_in_controlSimulation = controlSimulation;
            void_PxScenePtr_simulatePtr_float_PxBaseTaskPtr_IntPtr_uint_bool_(pvk_in_this, pvk_in_elapsedTime, pvk_in_completionTask, pvk_in_scratchMemBlock, pvk_in_scratchMemBlockSize, pvk_in_controlSimulation);
        }

        //DBG: MethodNode physx::PxScene::advance L890
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: PxBaseTaskPtr, man: physx.PxBaseTaskPtr, kind: PtrStruct
        public void advance(physx.PxBaseTaskPtr completionTask=default(physx.PxBaseTaskPtr)) {
            physx.PxScenePtr pvk_in_this = this;
            physx.PxBaseTaskPtr pvk_in_completionTask = completionTask;
            void_PxScenePtr_advancePtr_PxBaseTaskPtr_(pvk_in_this, pvk_in_completionTask);
        }

        //DBG: MethodNode physx::PxScene::collide L909-910
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: PxReal, man: float, kind: Value
        //PAR nat: PxBaseTaskPtr, man: physx.PxBaseTaskPtr, kind: PtrStruct
        //PAR nat: void*, man: IntPtr, kind: Value
        //PAR nat: PxU32, man: uint, kind: Value
        //PAR nat: bool, man: bool, kind: Value
        public void collide(float elapsedTime, physx.PxBaseTaskPtr completionTask=default(physx.PxBaseTaskPtr), IntPtr scratchMemBlock=default(IntPtr), uint scratchMemBlockSize=0, bool controlSimulation=true) {
            physx.PxScenePtr pvk_in_this = this;
            float pvk_in_elapsedTime = elapsedTime;
            physx.PxBaseTaskPtr pvk_in_completionTask = completionTask;
            IntPtr pvk_in_scratchMemBlock = scratchMemBlock;
            uint pvk_in_scratchMemBlockSize = scratchMemBlockSize;
            bool pvk_in_controlSimulation = controlSimulation;
            void_PxScenePtr_collidePtr_float_PxBaseTaskPtr_IntPtr_uint_bool_(pvk_in_this, pvk_in_elapsedTime, pvk_in_completionTask, pvk_in_scratchMemBlock, pvk_in_scratchMemBlockSize, pvk_in_controlSimulation);
        }

        //DBG: MethodNode physx::PxScene::checkResults L923
        //RET nat: bool, man: bool, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: bool, man: bool, kind: Value
        public bool checkResults(bool block=false) {
            physx.PxScenePtr pvk_in_this = this;
            bool pvk_in_block = block;
            return bool_PxScenePtr_checkResultsPtr_bool_(pvk_in_this, pvk_in_block);
        }

        //DBG: MethodNode physx::PxScene::fetchCollision L932
        //RET nat: bool, man: bool, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: bool, man: bool, kind: Value
        public bool fetchCollision(bool block=false) {
            physx.PxScenePtr pvk_in_this = this;
            bool pvk_in_block = block;
            return bool_PxScenePtr_fetchCollisionPtr_bool_(pvk_in_this, pvk_in_block);
        }

        //DBG: MethodNode physx::PxScene::fetchResults L955
        //RET nat: bool, man: bool, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: bool, man: bool, kind: Value
        //PAR nat: PxU32*, man: uint*, kind: Value
        public bool fetchResults(bool block=false, uint* errorState=default(uint*)) {
            physx.PxScenePtr pvk_in_this = this;
            bool pvk_in_block = block;
            uint* pvk_in_errorState = errorState;
            return bool_PxScenePtr_fetchResultsPtr_bool_uint_(pvk_in_this, pvk_in_block, pvk_in_errorState);
        }

        //DBG: MethodNode physx::PxScene::fetchResultsStart L973

        //DBG: MethodNode physx::PxScene::processCallbacks L984
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: PxBaseTaskPtr, man: physx.PxBaseTaskPtr, kind: PtrStruct
        public void processCallbacks(physx.PxBaseTaskPtr continuation) {
            physx.PxScenePtr pvk_in_this = this;
            physx.PxBaseTaskPtr pvk_in_continuation = continuation;
            void_PxScenePtr_processCallbacksPtr_PxBaseTaskPtr_(pvk_in_this, pvk_in_continuation);
        }

        //DBG: MethodNode physx::PxScene::fetchResultsFinish L998
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: PxU32*, man: uint*, kind: Value
        public void fetchResultsFinish(uint* errorState=default(uint*)) {
            physx.PxScenePtr pvk_in_this = this;
            uint* pvk_in_errorState = errorState;
            void_PxScenePtr_fetchResultsFinishPtr_uint_(pvk_in_this, pvk_in_errorState);
        }

        //DBG: MethodNode physx::PxScene::flushSimulation L1011
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: bool, man: bool, kind: Value
        public void flushSimulation(bool sendPendingReports=false) {
            physx.PxScenePtr pvk_in_this = this;
            bool pvk_in_sendPendingReports = sendPendingReports;
            void_PxScenePtr_flushSimulationPtr_bool_(pvk_in_this, pvk_in_sendPendingReports);
        }

        //DBG: MethodNode physx::PxScene::setGravity L1022
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: physx::PxVec3*, man: physx.PxVec3*, kind: Value
        public void setGravity(physx.PxVec3* vec) {
            physx.PxScenePtr pvk_in_this = this;
            physx.PxVec3* pvk_in_vec = vec;
            void_PxScenePtr_setGravityPtr_PxVec3_(pvk_in_this, pvk_in_vec);
        }

        //DBG: MethodNode physx::PxScene::getGravity L1031
        //RET nat: physx::PxVec3, man: physx.PxVec3, ret: False, kind: Blittable
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        public physx.PxVec3 getGravity() {
            physx.PxVec3 RetRef;
            physx.PxScenePtr pvk_in_this = this;
            PxVec3_const_PxScenePtr_getGravityPtr(&RetRef, pvk_in_this);
            return RetRef;
        }

        //DBG: MethodNode physx::PxScene::setBounceThresholdVelocity L1038
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: PxReal, man: float, kind: Value
        public void setBounceThresholdVelocity(float t) {
            physx.PxScenePtr pvk_in_this = this;
            float pvk_in_t = t;
            void_PxScenePtr_setBounceThresholdVelocityPtr_floatC(pvk_in_this, pvk_in_t);
        }

        //DBG: MethodNode physx::PxScene::getBounceThresholdVelocity L1045
        //RET nat: PxReal, man: float, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        public float getBounceThresholdVelocity() {
            physx.PxScenePtr pvk_in_this = this;
            return float_const_PxScenePtr_getBounceThresholdVelocityPtr(pvk_in_this);
        }

        //DBG: MethodNode physx::PxScene::setCCDMaxPasses L1056
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: PxU32, man: uint, kind: Value
        public void setCCDMaxPasses(uint ccdMaxPasses) {
            physx.PxScenePtr pvk_in_this = this;
            uint pvk_in_ccdMaxPasses = ccdMaxPasses;
            void_PxScenePtr_setCCDMaxPassesPtr_uint_(pvk_in_this, pvk_in_ccdMaxPasses);
        }

        //DBG: MethodNode physx::PxScene::getCCDMaxPasses L1066
        //RET nat: PxU32, man: uint, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        public uint getCCDMaxPasses() {
            physx.PxScenePtr pvk_in_this = this;
            return uint_const_PxScenePtr_getCCDMaxPassesPtr(pvk_in_this);
        }

        //DBG: MethodNode physx::PxScene::getFrictionOffsetThreshold L1073
        //RET nat: PxReal, man: float, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        public float getFrictionOffsetThreshold() {
            physx.PxScenePtr pvk_in_this = this;
            return float_const_PxScenePtr_getFrictionOffsetThresholdPtr(pvk_in_this);
        }

        //DBG: MethodNode physx::PxScene::setFrictionType L1079
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: physx::PxFrictionType::Enum, man: physx.PxFrictionTypeEnum, kind: Value
        public void setFrictionType(physx.PxFrictionTypeEnum frictionType) {
            physx.PxScenePtr pvk_in_this = this;
            physx.PxFrictionTypeEnum pvk_in_frictionType = frictionType;
            void_PxScenePtr_setFrictionTypePtr_PxFrictionTypeEnum_(pvk_in_this, pvk_in_frictionType);
        }

        //DBG: MethodNode physx::PxScene::getFrictionType L1085
        //RET nat: physx::PxFrictionType::Enum, man: physx.PxFrictionTypeEnum, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        public physx.PxFrictionTypeEnum getFrictionType() {
            physx.PxScenePtr pvk_in_this = this;
            return PxFrictionTypeEnum_const_PxScenePtr_getFrictionTypePtr(pvk_in_this);
        }

        //DBG: MethodNode physx::PxScene::setVisualizationParameter L1104
        //RET nat: bool, man: bool, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: physx::PxVisualizationParameter::Enum, man: physx.PxVisualizationParameterEnum, kind: Value
        //PAR nat: PxReal, man: float, kind: Value
        public bool setVisualizationParameter(physx.PxVisualizationParameterEnum param, float value) {
            physx.PxScenePtr pvk_in_this = this;
            physx.PxVisualizationParameterEnum pvk_in_param = param;
            float pvk_in_value = value;
            return bool_PxScenePtr_setVisualizationParameterPtr_PxVisualizationParameterEnum_float_(pvk_in_this, pvk_in_param, pvk_in_value);
        }

        //DBG: MethodNode physx::PxScene::getVisualizationParameter L1114
        //RET nat: PxReal, man: float, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: physx::PxVisualizationParameter::Enum, man: physx.PxVisualizationParameterEnum, kind: Value
        public float getVisualizationParameter(physx.PxVisualizationParameterEnum paramEnum) {
            physx.PxScenePtr pvk_in_this = this;
            physx.PxVisualizationParameterEnum pvk_in_paramEnum = paramEnum;
            return float_const_PxScenePtr_getVisualizationParameterPtr_PxVisualizationParameterEnum_(pvk_in_this, pvk_in_paramEnum);
        }

        //DBG: MethodNode physx::PxScene::setVisualizationCullingBox L1123
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: physx::PxBounds3*, man: physx.PxBounds3*, kind: Value
        public void setVisualizationCullingBox(physx.PxBounds3* box) {
            physx.PxScenePtr pvk_in_this = this;
            physx.PxBounds3* pvk_in_box = box;
            void_PxScenePtr_setVisualizationCullingBoxPtr_PxBounds3_(pvk_in_this, pvk_in_box);
        }

        //DBG: MethodNode physx::PxScene::getVisualizationCullingBox L1131
        //RET nat: physx::PxBounds3, man: physx.PxBounds3, ret: False, kind: Blittable
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        public physx.PxBounds3 getVisualizationCullingBox() {
            physx.PxBounds3 RetRef;
            physx.PxScenePtr pvk_in_this = this;
            PxBounds3_const_PxScenePtr_getVisualizationCullingBoxPtr(&RetRef, pvk_in_this);
            return RetRef;
        }

        //DBG: MethodNode physx::PxScene::getRenderBuffer L1144

        //DBG: MethodNode physx::PxScene::getSimulationStatistics L1155
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: PxSimulationStatisticsPtr, man: physx.PxSimulationStatisticsPtr, kind: PtrStruct
        public void getSimulationStatistics(physx.PxSimulationStatisticsPtr stats) {
            physx.PxScenePtr pvk_in_this = this;
            physx.PxSimulationStatisticsPtr pvk_in_stats = stats;
            void_const_PxScenePtr_getSimulationStatisticsPtr_PxSimulationStatisticsPtr_(pvk_in_this, pvk_in_stats);
        }

        //DBG: MethodNode physx::PxScene::getStaticStructure L1170
        //RET nat: physx::PxPruningStructureType::Enum, man: physx.PxPruningStructureTypeEnum, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        public physx.PxPruningStructureTypeEnum getStaticStructure() {
            physx.PxScenePtr pvk_in_this = this;
            return PxPruningStructureTypeEnum_const_PxScenePtr_getStaticStructurePtr(pvk_in_this);
        }

        //DBG: MethodNode physx::PxScene::getDynamicStructure L1177
        //RET nat: physx::PxPruningStructureType::Enum, man: physx.PxPruningStructureTypeEnum, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        public physx.PxPruningStructureTypeEnum getDynamicStructure() {
            physx.PxScenePtr pvk_in_this = this;
            return PxPruningStructureTypeEnum_const_PxScenePtr_getDynamicStructurePtr(pvk_in_this);
        }

        //DBG: MethodNode physx::PxScene::flushQueryUpdates L1194
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        public void flushQueryUpdates() {
            physx.PxScenePtr pvk_in_this = this;
            void_PxScenePtr_flushQueryUpdatesPtr(pvk_in_this);
        }

        //DBG: MethodNode physx::PxScene::createBatchQuery L1207

        //DBG: MethodNode physx::PxScene::setDynamicTreeRebuildRateHint L1216
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: PxU32, man: uint, kind: Value
        public void setDynamicTreeRebuildRateHint(uint dynamicTreeRebuildRateHint) {
            physx.PxScenePtr pvk_in_this = this;
            uint pvk_in_dynamicTreeRebuildRateHint = dynamicTreeRebuildRateHint;
            void_PxScenePtr_setDynamicTreeRebuildRateHintPtr_uint_(pvk_in_this, pvk_in_dynamicTreeRebuildRateHint);
        }

        //DBG: MethodNode physx::PxScene::getDynamicTreeRebuildRateHint L1225
        //RET nat: PxU32, man: uint, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        public uint getDynamicTreeRebuildRateHint() {
            physx.PxScenePtr pvk_in_this = this;
            return uint_const_PxScenePtr_getDynamicTreeRebuildRateHintPtr(pvk_in_this);
        }

        //DBG: MethodNode physx::PxScene::forceDynamicTreeRebuild L1235
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: bool, man: bool, kind: Value
        //PAR nat: bool, man: bool, kind: Value
        public void forceDynamicTreeRebuild(bool rebuildStaticStructure, bool rebuildDynamicStructure) {
            physx.PxScenePtr pvk_in_this = this;
            bool pvk_in_rebuildStaticStructure = rebuildStaticStructure;
            bool pvk_in_rebuildDynamicStructure = rebuildDynamicStructure;
            void_PxScenePtr_forceDynamicTreeRebuildPtr_bool_bool_(pvk_in_this, pvk_in_rebuildStaticStructure, pvk_in_rebuildDynamicStructure);
        }

        //DBG: MethodNode physx::PxScene::setSceneQueryUpdateMode L1244
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: physx::PxSceneQueryUpdateMode::Enum, man: physx.PxSceneQueryUpdateModeEnum, kind: Value
        public void setSceneQueryUpdateMode(physx.PxSceneQueryUpdateModeEnum updateMode) {
            physx.PxScenePtr pvk_in_this = this;
            physx.PxSceneQueryUpdateModeEnum pvk_in_updateMode = updateMode;
            void_PxScenePtr_setSceneQueryUpdateModePtr_PxSceneQueryUpdateModeEnum_(pvk_in_this, pvk_in_updateMode);
        }

        //DBG: MethodNode physx::PxScene::getSceneQueryUpdateMode L1253
        //RET nat: physx::PxSceneQueryUpdateMode::Enum, man: physx.PxSceneQueryUpdateModeEnum, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        public physx.PxSceneQueryUpdateModeEnum getSceneQueryUpdateMode() {
            physx.PxScenePtr pvk_in_this = this;
            return PxSceneQueryUpdateModeEnum_const_PxScenePtr_getSceneQueryUpdateModePtr(pvk_in_this);
        }

        //DBG: MethodNode physx::PxScene::sceneQueriesUpdate L1272
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: PxBaseTaskPtr, man: physx.PxBaseTaskPtr, kind: PtrStruct
        //PAR nat: bool, man: bool, kind: Value
        public void sceneQueriesUpdate(physx.PxBaseTaskPtr completionTask=default(physx.PxBaseTaskPtr), bool controlSimulation=true) {
            physx.PxScenePtr pvk_in_this = this;
            physx.PxBaseTaskPtr pvk_in_completionTask = completionTask;
            bool pvk_in_controlSimulation = controlSimulation;
            void_PxScenePtr_sceneQueriesUpdatePtr_PxBaseTaskPtr_bool_(pvk_in_this, pvk_in_completionTask, pvk_in_controlSimulation);
        }

        //DBG: MethodNode physx::PxScene::checkQueries L1285
        //RET nat: bool, man: bool, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: bool, man: bool, kind: Value
        public bool checkQueries(bool block=false) {
            physx.PxScenePtr pvk_in_this = this;
            bool pvk_in_block = block;
            return bool_PxScenePtr_checkQueriesPtr_bool_(pvk_in_this, pvk_in_block);
        }

        //DBG: MethodNode physx::PxScene::fetchQueries L1296
        //RET nat: bool, man: bool, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: bool, man: bool, kind: Value
        public bool fetchQueries(bool block=false) {
            physx.PxScenePtr pvk_in_this = this;
            bool pvk_in_block = block;
            return bool_PxScenePtr_fetchQueriesPtr_bool_(pvk_in_this, pvk_in_block);
        }

        //DBG: MethodNode physx::PxScene::raycast L1320-1324
        //RET nat: bool, man: bool, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: physx::PxVec3*, man: physx.PxVec3*, kind: Value
        //PAR nat: physx::PxVec3*, man: physx.PxVec3*, kind: Value
        //PAR nat: PxReal, man: float, kind: Value
        //PAR nat: PxRaycastCallbackPtr, man: physx.PxRaycastCallbackPtr, kind: PtrStruct
        //PAR nat: PxHitFlagsPtr, man: physx.PxHitFlagsPtr, kind: PtrStruct
        //PAR nat: PxQueryFilterDataPtr, man: physx.PxQueryFilterDataPtr, kind: PtrStruct
        //PAR nat: PxQueryFilterCallbackPtr, man: physx.PxQueryFilterCallbackPtr, kind: PtrStruct
        //PAR nat: PxQueryCachePtr, man: physx.PxQueryCachePtr, kind: PtrStruct
        public bool raycast(physx.PxVec3* origin, physx.PxVec3* unitDir, float distance, physx.PxRaycastCallbackPtr hitCall, physx.PxHitFlagsPtr hitFlags, physx.PxQueryFilterDataPtr filterData, physx.PxQueryFilterCallbackPtr filterCall=default(physx.PxQueryFilterCallbackPtr), physx.PxQueryCachePtr cache=default(physx.PxQueryCachePtr)) {
            physx.PxScenePtr pvk_in_this = this;
            physx.PxVec3* pvk_in_origin = origin;
            physx.PxVec3* pvk_in_unitDir = unitDir;
            float pvk_in_distance = distance;
            physx.PxRaycastCallbackPtr pvk_in_hitCall = hitCall;
            physx.PxHitFlagsPtr pvk_in_hitFlags = hitFlags;
            physx.PxQueryFilterDataPtr pvk_in_filterData = filterData;
            physx.PxQueryFilterCallbackPtr pvk_in_filterCall = filterCall;
            physx.PxQueryCachePtr pvk_in_cache = cache;
            return bool_const_PxScenePtr_raycastPtr_PxVec3_PxVec3_float_PxRaycastCallbackPtr_PxHitFlagsPtr_PxQueryFilterDataPtr_PxQueryFilterCallbackPtr_PxQueryCachePtr_C_(pvk_in_this, pvk_in_origin, pvk_in_unitDir, pvk_in_distance, pvk_in_hitCall, pvk_in_hitFlags, pvk_in_filterData, pvk_in_filterCall, pvk_in_cache);
        }

        //DBG: MethodNode physx::PxScene::sweep L1353-1356
        //RET nat: bool, man: bool, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: physx::PxGeometry*, man: physx.PxGeometry*, kind: Value
        //PAR nat: physx::PxTransform*, man: physx.PxTransform*, kind: Value
        //PAR nat: physx::PxVec3*, man: physx.PxVec3*, kind: Value
        //PAR nat: PxReal, man: float, kind: Value
        //PAR nat: PxSweepCallbackPtr, man: physx.PxSweepCallbackPtr, kind: PtrStruct
        //PAR nat: PxHitFlagsPtr, man: physx.PxHitFlagsPtr, kind: PtrStruct
        //PAR nat: PxQueryFilterDataPtr, man: physx.PxQueryFilterDataPtr, kind: PtrStruct
        //PAR nat: PxQueryFilterCallbackPtr, man: physx.PxQueryFilterCallbackPtr, kind: PtrStruct
        //PAR nat: PxQueryCachePtr, man: physx.PxQueryCachePtr, kind: PtrStruct
        //PAR nat: PxReal, man: float, kind: Value
        public bool sweep(physx.PxGeometry* geometry, physx.PxTransform* pose, physx.PxVec3* unitDir, float distance, physx.PxSweepCallbackPtr hitCall, physx.PxHitFlagsPtr hitFlags, physx.PxQueryFilterDataPtr filterData, physx.PxQueryFilterCallbackPtr filterCall=default(physx.PxQueryFilterCallbackPtr), physx.PxQueryCachePtr cache=default(physx.PxQueryCachePtr), float inflation=0f) {
            physx.PxScenePtr pvk_in_this = this;
            physx.PxGeometry* pvk_in_geometry = geometry;
            physx.PxTransform* pvk_in_pose = pose;
            physx.PxVec3* pvk_in_unitDir = unitDir;
            float pvk_in_distance = distance;
            physx.PxSweepCallbackPtr pvk_in_hitCall = hitCall;
            physx.PxHitFlagsPtr pvk_in_hitFlags = hitFlags;
            physx.PxQueryFilterDataPtr pvk_in_filterData = filterData;
            physx.PxQueryFilterCallbackPtr pvk_in_filterCall = filterCall;
            physx.PxQueryCachePtr pvk_in_cache = cache;
            float pvk_in_inflation = inflation;
            return bool_const_PxScenePtr_sweepPtr_PxGeometry_PxTransform_PxVec3_float_PxSweepCallbackPtr_PxHitFlagsPtr_PxQueryFilterDataPtr_PxQueryFilterCallbackPtr_PxQueryCachePtr_float_C_C(pvk_in_this, pvk_in_geometry, pvk_in_pose, pvk_in_unitDir, pvk_in_distance, pvk_in_hitCall, pvk_in_hitFlags, pvk_in_filterData, pvk_in_filterCall, pvk_in_cache, pvk_in_inflation);
        }

        //DBG: MethodNode physx::PxScene::overlap L1378-1380
        //RET nat: bool, man: bool, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: physx::PxGeometry*, man: physx.PxGeometry*, kind: Value
        //PAR nat: physx::PxTransform*, man: physx.PxTransform*, kind: Value
        //PAR nat: PxOverlapCallbackPtr, man: physx.PxOverlapCallbackPtr, kind: PtrStruct
        //PAR nat: PxQueryFilterDataPtr, man: physx.PxQueryFilterDataPtr, kind: PtrStruct
        //PAR nat: PxQueryFilterCallbackPtr, man: physx.PxQueryFilterCallbackPtr, kind: PtrStruct
        public bool overlap(physx.PxGeometry* geometry, physx.PxTransform* pose, physx.PxOverlapCallbackPtr hitCall, physx.PxQueryFilterDataPtr filterData, physx.PxQueryFilterCallbackPtr filterCall=default(physx.PxQueryFilterCallbackPtr)) {
            physx.PxScenePtr pvk_in_this = this;
            physx.PxGeometry* pvk_in_geometry = geometry;
            physx.PxTransform* pvk_in_pose = pose;
            physx.PxOverlapCallbackPtr pvk_in_hitCall = hitCall;
            physx.PxQueryFilterDataPtr pvk_in_filterData = filterData;
            physx.PxQueryFilterCallbackPtr pvk_in_filterCall = filterCall;
            return bool_const_PxScenePtr_overlapPtr_PxGeometry_PxTransform_PxOverlapCallbackPtr_PxQueryFilterDataPtr_PxQueryFilterCallbackPtr_(pvk_in_this, pvk_in_geometry, pvk_in_pose, pvk_in_hitCall, pvk_in_filterData, pvk_in_filterCall);
        }

        //DBG: MethodNode physx::PxScene::getSceneQueryStaticTimestamp L1389
        //RET nat: PxU32, man: uint, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        public uint getSceneQueryStaticTimestamp() {
            physx.PxScenePtr pvk_in_this = this;
            return uint_const_PxScenePtr_getSceneQueryStaticTimestampPtr(pvk_in_this);
        }

        //DBG: MethodNode physx::PxScene::getBroadPhaseType L1402
        //RET nat: physx::PxBroadPhaseType::Enum, man: physx.PxBroadPhaseTypeEnum, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        public physx.PxBroadPhaseTypeEnum getBroadPhaseType() {
            physx.PxScenePtr pvk_in_this = this;
            return PxBroadPhaseTypeEnum_const_PxScenePtr_getBroadPhaseTypePtr(pvk_in_this);
        }

        //DBG: MethodNode physx::PxScene::getBroadPhaseCaps L1410
        //RET nat: bool, man: bool, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: PxBroadPhaseCapsPtr, man: physx.PxBroadPhaseCapsPtr, kind: PtrStruct
        public bool getBroadPhaseCaps(physx.PxBroadPhaseCapsPtr caps) {
            physx.PxScenePtr pvk_in_this = this;
            physx.PxBroadPhaseCapsPtr pvk_in_caps = caps;
            return bool_const_PxScenePtr_getBroadPhaseCapsPtr_PxBroadPhaseCapsPtr_(pvk_in_this, pvk_in_caps);
        }

        //DBG: MethodNode physx::PxScene::getNbBroadPhaseRegions L1417
        //RET nat: PxU32, man: uint, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        public uint getNbBroadPhaseRegions() {
            physx.PxScenePtr pvk_in_this = this;
            return uint_const_PxScenePtr_getNbBroadPhaseRegionsPtr(pvk_in_this);
        }

        //DBG: MethodNode physx::PxScene::getBroadPhaseRegions L1427
        //RET nat: PxU32, man: uint, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: PxBroadPhaseRegionInfoPtr, man: physx.PxBroadPhaseRegionInfoPtr, kind: PtrStruct
        //PAR nat: PxU32, man: uint, kind: Value
        //PAR nat: PxU32, man: uint, kind: Value
        public uint getBroadPhaseRegions(physx.PxBroadPhaseRegionInfoPtr userBuffer, uint bufferSize, uint startIndex=0) {
            physx.PxScenePtr pvk_in_this = this;
            physx.PxBroadPhaseRegionInfoPtr pvk_in_userBuffer = userBuffer;
            uint pvk_in_bufferSize = bufferSize;
            uint pvk_in_startIndex = startIndex;
            return uint_const_PxScenePtr_getBroadPhaseRegionsPtr_PxBroadPhaseRegionInfoPtr_uint_uint_(pvk_in_this, pvk_in_userBuffer, pvk_in_bufferSize, pvk_in_startIndex);
        }

        //DBG: MethodNode physx::PxScene::addBroadPhaseRegion L1445
        //RET nat: PxU32, man: uint, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: PxBroadPhaseRegionPtr, man: physx.PxBroadPhaseRegionPtr, kind: PtrStruct
        //PAR nat: bool, man: bool, kind: Value
        public uint addBroadPhaseRegion(physx.PxBroadPhaseRegionPtr region, bool populateRegion=false) {
            physx.PxScenePtr pvk_in_this = this;
            physx.PxBroadPhaseRegionPtr pvk_in_region = region;
            bool pvk_in_populateRegion = populateRegion;
            return uint_PxScenePtr_addBroadPhaseRegionPtr_PxBroadPhaseRegionPtr_bool_(pvk_in_this, pvk_in_region, pvk_in_populateRegion);
        }

        //DBG: MethodNode physx::PxScene::removeBroadPhaseRegion L1460
        //RET nat: bool, man: bool, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: PxU32, man: uint, kind: Value
        public bool removeBroadPhaseRegion(uint handle) {
            physx.PxScenePtr pvk_in_this = this;
            uint pvk_in_handle = handle;
            return bool_PxScenePtr_removeBroadPhaseRegionPtr_uint_(pvk_in_this, pvk_in_handle);
        }

        //DBG: MethodNode physx::PxScene::getTaskManager L1475
        //RET nat: PxTaskManagerPtr, man: physx.PxTaskManagerPtr, ret: True, kind: PtrStruct
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        public physx.PxTaskManagerPtr getTaskManager() {
            physx.PxScenePtr pvk_in_this = this;
            return PxTaskManagerPtr_const_PxScenePtr_getTaskManagerPtr(pvk_in_this);
        }

        //DBG: MethodNode physx::PxScene::lockRead L1496
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: char*, man: string, kind: Value
        //PAR nat: PxU32, man: uint, kind: Value
        public void lockRead(string file=default(string), uint line=0) {
            physx.PxScenePtr pvk_in_this = this;
            string pvk_in_file = file;
            uint pvk_in_line = line;
            void_PxScenePtr_lockReadPtr_string_uint_(pvk_in_this, pvk_in_file, pvk_in_line);
        }

        //DBG: MethodNode physx::PxScene::unlockRead L1503
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        public void unlockRead() {
            physx.PxScenePtr pvk_in_this = this;
            void_PxScenePtr_unlockReadPtr(pvk_in_this);
        }

        //DBG: MethodNode physx::PxScene::lockWrite L1530
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: char*, man: string, kind: Value
        //PAR nat: PxU32, man: uint, kind: Value
        public void lockWrite(string file=default(string), uint line=0) {
            physx.PxScenePtr pvk_in_this = this;
            string pvk_in_file = file;
            uint pvk_in_line = line;
            void_PxScenePtr_lockWritePtr_string_uint_(pvk_in_this, pvk_in_file, pvk_in_line);
        }

        //DBG: MethodNode physx::PxScene::unlockWrite L1537
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        public void unlockWrite() {
            physx.PxScenePtr pvk_in_this = this;
            void_PxScenePtr_unlockWritePtr(pvk_in_this);
        }

        //DBG: MethodNode physx::PxScene::setNbContactDataBlocks L1553
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: PxU32, man: uint, kind: Value
        public void setNbContactDataBlocks(uint numBlocks) {
            physx.PxScenePtr pvk_in_this = this;
            uint pvk_in_numBlocks = numBlocks;
            void_PxScenePtr_setNbContactDataBlocksPtr_uint_(pvk_in_this, pvk_in_numBlocks);
        }

        //DBG: MethodNode physx::PxScene::getNbContactDataBlocksUsed L1565
        //RET nat: PxU32, man: uint, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        public uint getNbContactDataBlocksUsed() {
            physx.PxScenePtr pvk_in_this = this;
            return uint_const_PxScenePtr_getNbContactDataBlocksUsedPtr(pvk_in_this);
        }

        //DBG: MethodNode physx::PxScene::getMaxNbContactDataBlocksUsed L1576
        //RET nat: PxU32, man: uint, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        public uint getMaxNbContactDataBlocksUsed() {
            physx.PxScenePtr pvk_in_this = this;
            return uint_const_PxScenePtr_getMaxNbContactDataBlocksUsedPtr(pvk_in_this);
        }

        //DBG: MethodNode physx::PxScene::getContactReportStreamBufferSize L1584
        //RET nat: PxU32, man: uint, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        public uint getContactReportStreamBufferSize() {
            physx.PxScenePtr pvk_in_this = this;
            return uint_const_PxScenePtr_getContactReportStreamBufferSizePtr(pvk_in_this);
        }

        //DBG: MethodNode physx::PxScene::setSolverBatchSize L1594
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: PxU32, man: uint, kind: Value
        public void setSolverBatchSize(uint solverBatchSize) {
            physx.PxScenePtr pvk_in_this = this;
            uint pvk_in_solverBatchSize = solverBatchSize;
            void_PxScenePtr_setSolverBatchSizePtr_uint_(pvk_in_this, pvk_in_solverBatchSize);
        }

        //DBG: MethodNode physx::PxScene::getSolverBatchSize L1603
        //RET nat: PxU32, man: uint, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        public uint getSolverBatchSize() {
            physx.PxScenePtr pvk_in_this = this;
            return uint_const_PxScenePtr_getSolverBatchSizePtr(pvk_in_this);
        }

        //DBG: MethodNode physx::PxScene::getWakeCounterResetValue L1615
        //RET nat: PxReal, man: float, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        public float getWakeCounterResetValue() {
            physx.PxScenePtr pvk_in_this = this;
            return float_const_PxScenePtr_getWakeCounterResetValuePtr(pvk_in_this);
        }

        //DBG: MethodNode physx::PxScene::shiftOrigin L1633
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: physx::PxVec3*, man: physx.PxVec3*, kind: Value
        public void shiftOrigin(physx.PxVec3* shift) {
            physx.PxScenePtr pvk_in_this = this;
            physx.PxVec3* pvk_in_shift = shift;
            void_PxScenePtr_shiftOriginPtr_PxVec3_(pvk_in_this, pvk_in_shift);
        }

        //DBG: MethodNode physx::PxScene::getScenePvdClient L1639

        //DBG: MethodNode physx::PxScene::operator= L169
        //ERRORS in MethodNode: Skipping Implicit MethodNode physx::PxScene::operator= L169

        //DBG: MethodNode physx::PxScene::removeArticulation L282
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: PxArticulationBasePtr, man: physx.PxArticulationBasePtr, kind: PtrStruct
        public void removeArticulation(physx.PxArticulationBasePtr articulation) {
            physx.PxScenePtr pvk_in_this = this;
            physx.PxArticulationBasePtr pvk_in_articulation = articulation;
            void_PxScenePtr_removeArticulationPtr_PxArticulationBasePtr_(pvk_in_this, pvk_in_articulation);
        }

        //DBG: MethodNode physx::PxScene::addActor L311
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: PxActorPtr, man: physx.PxActorPtr, kind: PtrStruct
        public void addActor(physx.PxActorPtr actor) {
            physx.PxScenePtr pvk_in_this = this;
            physx.PxActorPtr pvk_in_actor = actor;
            void_PxScenePtr_addActorPtr_PxActorPtr_(pvk_in_this, pvk_in_actor);
        }

        //DBG: MethodNode physx::PxScene::removeActor L369
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: PxActorPtr, man: physx.PxActorPtr, kind: PtrStruct
        public void removeActor(physx.PxActorPtr actor) {
            physx.PxScenePtr pvk_in_this = this;
            physx.PxActorPtr pvk_in_actor = actor;
            void_PxScenePtr_removeActorPtr_PxActorPtr_(pvk_in_this, pvk_in_actor);
        }

        //DBG: MethodNode physx::PxScene::removeActors L386
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: PxActorPtr*, man: physx.PxActorPtr*, kind: Value
        //PAR nat: PxU32, man: uint, kind: Value
        public void removeActors(physx.PxActorPtr* actors, uint nbActors) {
            physx.PxScenePtr pvk_in_this = this;
            physx.PxActorPtr* pvk_in_actors = actors;
            uint pvk_in_nbActors = nbActors;
            void_PxScenePtr_removeActorsPtr_PxActorPtr_uint_(pvk_in_this, pvk_in_actors, pvk_in_nbActors);
        }

        //DBG: MethodNode physx::PxScene::removeAggregate L414
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: PxAggregatePtr, man: physx.PxAggregatePtr, kind: PtrStruct
        public void removeAggregate(physx.PxAggregatePtr aggregate) {
            physx.PxScenePtr pvk_in_this = this;
            physx.PxAggregatePtr pvk_in_aggregate = aggregate;
            void_PxScenePtr_removeAggregatePtr_PxAggregatePtr_(pvk_in_this, pvk_in_aggregate);
        }

        //DBG: MethodNode physx::PxScene::getActors L457
        //RET nat: PxU32, man: uint, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: PxActorTypeFlagsPtr, man: physx.PxActorTypeFlagsPtr, kind: PtrStruct
        //PAR nat: PxActorPtr*, man: physx.PxActorPtr*, kind: Value
        //PAR nat: PxU32, man: uint, kind: Value
        public uint getActors(physx.PxActorTypeFlagsPtr types, physx.PxActorPtr* userBuffer, uint bufferSize) {
            physx.PxScenePtr pvk_in_this = this;
            physx.PxActorTypeFlagsPtr pvk_in_types = types;
            physx.PxActorPtr* pvk_in_userBuffer = userBuffer;
            uint pvk_in_bufferSize = bufferSize;
            return uint_const_PxScenePtr_getActorsPtr_PxActorTypeFlagsPtr_PxActorPtr_uint_(pvk_in_this, pvk_in_types, pvk_in_userBuffer, pvk_in_bufferSize);
        }

        //DBG: MethodNode physx::PxScene::getArticulations L494
        //RET nat: PxU32, man: uint, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: PxArticulationBasePtr*, man: physx.PxArticulationBasePtr*, kind: Value
        //PAR nat: PxU32, man: uint, kind: Value
        public uint getArticulations(physx.PxArticulationBasePtr* userBuffer, uint bufferSize) {
            physx.PxScenePtr pvk_in_this = this;
            physx.PxArticulationBasePtr* pvk_in_userBuffer = userBuffer;
            uint pvk_in_bufferSize = bufferSize;
            return uint_const_PxScenePtr_getArticulationsPtr_PxArticulationBasePtr_uint_(pvk_in_this, pvk_in_userBuffer, pvk_in_bufferSize);
        }

        //DBG: MethodNode physx::PxScene::getConstraints L515
        //RET nat: PxU32, man: uint, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: PxConstraintPtr*, man: physx.PxConstraintPtr*, kind: Value
        //PAR nat: PxU32, man: uint, kind: Value
        public uint getConstraints(physx.PxConstraintPtr* userBuffer, uint bufferSize) {
            physx.PxScenePtr pvk_in_this = this;
            physx.PxConstraintPtr* pvk_in_userBuffer = userBuffer;
            uint pvk_in_bufferSize = bufferSize;
            return uint_const_PxScenePtr_getConstraintsPtr_PxConstraintPtr_uint_(pvk_in_this, pvk_in_userBuffer, pvk_in_bufferSize);
        }

        //DBG: MethodNode physx::PxScene::getAggregates L537
        //RET nat: PxU32, man: uint, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: PxAggregatePtr*, man: physx.PxAggregatePtr*, kind: Value
        //PAR nat: PxU32, man: uint, kind: Value
        public uint getAggregates(physx.PxAggregatePtr* userBuffer, uint bufferSize) {
            physx.PxScenePtr pvk_in_this = this;
            physx.PxAggregatePtr* pvk_in_userBuffer = userBuffer;
            uint pvk_in_bufferSize = bufferSize;
            return uint_const_PxScenePtr_getAggregatesPtr_PxAggregatePtr_uint_(pvk_in_this, pvk_in_userBuffer, pvk_in_bufferSize);
        }

        //DBG: MethodNode physx::PxScene::simulate L876-877
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: PxReal, man: float, kind: Value
        public void simulate(float elapsedTime) {
            physx.PxScenePtr pvk_in_this = this;
            float pvk_in_elapsedTime = elapsedTime;
            void_PxScenePtr_simulatePtr_float_(pvk_in_this, pvk_in_elapsedTime);
        }

        //DBG: MethodNode physx::PxScene::simulate L876-877
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: PxReal, man: float, kind: Value
        //PAR nat: PxBaseTaskPtr, man: physx.PxBaseTaskPtr, kind: PtrStruct
        public void simulate(float elapsedTime, physx.PxBaseTaskPtr completionTask=default(physx.PxBaseTaskPtr)) {
            physx.PxScenePtr pvk_in_this = this;
            float pvk_in_elapsedTime = elapsedTime;
            physx.PxBaseTaskPtr pvk_in_completionTask = completionTask;
            void_PxScenePtr_simulatePtr_float_PxBaseTaskPtr_(pvk_in_this, pvk_in_elapsedTime, pvk_in_completionTask);
        }

        //DBG: MethodNode physx::PxScene::simulate L876-877
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: PxReal, man: float, kind: Value
        //PAR nat: PxBaseTaskPtr, man: physx.PxBaseTaskPtr, kind: PtrStruct
        //PAR nat: void*, man: IntPtr, kind: Value
        public void simulate(float elapsedTime, physx.PxBaseTaskPtr completionTask=default(physx.PxBaseTaskPtr), IntPtr scratchMemBlock=default(IntPtr)) {
            physx.PxScenePtr pvk_in_this = this;
            float pvk_in_elapsedTime = elapsedTime;
            physx.PxBaseTaskPtr pvk_in_completionTask = completionTask;
            IntPtr pvk_in_scratchMemBlock = scratchMemBlock;
            void_PxScenePtr_simulatePtr_float_PxBaseTaskPtr_IntPtr_(pvk_in_this, pvk_in_elapsedTime, pvk_in_completionTask, pvk_in_scratchMemBlock);
        }

        //DBG: MethodNode physx::PxScene::simulate L876-877
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: PxReal, man: float, kind: Value
        //PAR nat: PxBaseTaskPtr, man: physx.PxBaseTaskPtr, kind: PtrStruct
        //PAR nat: void*, man: IntPtr, kind: Value
        //PAR nat: PxU32, man: uint, kind: Value
        public void simulate(float elapsedTime, physx.PxBaseTaskPtr completionTask=default(physx.PxBaseTaskPtr), IntPtr scratchMemBlock=default(IntPtr), uint scratchMemBlockSize=0) {
            physx.PxScenePtr pvk_in_this = this;
            float pvk_in_elapsedTime = elapsedTime;
            physx.PxBaseTaskPtr pvk_in_completionTask = completionTask;
            IntPtr pvk_in_scratchMemBlock = scratchMemBlock;
            uint pvk_in_scratchMemBlockSize = scratchMemBlockSize;
            void_PxScenePtr_simulatePtr_float_PxBaseTaskPtr_IntPtr_uint_(pvk_in_this, pvk_in_elapsedTime, pvk_in_completionTask, pvk_in_scratchMemBlock, pvk_in_scratchMemBlockSize);
        }

        //DBG: MethodNode physx::PxScene::advance L890
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        public void advance() {
            physx.PxScenePtr pvk_in_this = this;
            void_PxScenePtr_advancePtr(pvk_in_this);
        }

        //DBG: MethodNode physx::PxScene::collide L909-910
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: PxReal, man: float, kind: Value
        public void collide(float elapsedTime) {
            physx.PxScenePtr pvk_in_this = this;
            float pvk_in_elapsedTime = elapsedTime;
            void_PxScenePtr_collidePtr_float_(pvk_in_this, pvk_in_elapsedTime);
        }

        //DBG: MethodNode physx::PxScene::collide L909-910
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: PxReal, man: float, kind: Value
        //PAR nat: PxBaseTaskPtr, man: physx.PxBaseTaskPtr, kind: PtrStruct
        public void collide(float elapsedTime, physx.PxBaseTaskPtr completionTask=default(physx.PxBaseTaskPtr)) {
            physx.PxScenePtr pvk_in_this = this;
            float pvk_in_elapsedTime = elapsedTime;
            physx.PxBaseTaskPtr pvk_in_completionTask = completionTask;
            void_PxScenePtr_collidePtr_float_PxBaseTaskPtr_(pvk_in_this, pvk_in_elapsedTime, pvk_in_completionTask);
        }

        //DBG: MethodNode physx::PxScene::collide L909-910
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: PxReal, man: float, kind: Value
        //PAR nat: PxBaseTaskPtr, man: physx.PxBaseTaskPtr, kind: PtrStruct
        //PAR nat: void*, man: IntPtr, kind: Value
        public void collide(float elapsedTime, physx.PxBaseTaskPtr completionTask=default(physx.PxBaseTaskPtr), IntPtr scratchMemBlock=default(IntPtr)) {
            physx.PxScenePtr pvk_in_this = this;
            float pvk_in_elapsedTime = elapsedTime;
            physx.PxBaseTaskPtr pvk_in_completionTask = completionTask;
            IntPtr pvk_in_scratchMemBlock = scratchMemBlock;
            void_PxScenePtr_collidePtr_float_PxBaseTaskPtr_IntPtr_(pvk_in_this, pvk_in_elapsedTime, pvk_in_completionTask, pvk_in_scratchMemBlock);
        }

        //DBG: MethodNode physx::PxScene::collide L909-910
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: PxReal, man: float, kind: Value
        //PAR nat: PxBaseTaskPtr, man: physx.PxBaseTaskPtr, kind: PtrStruct
        //PAR nat: void*, man: IntPtr, kind: Value
        //PAR nat: PxU32, man: uint, kind: Value
        public void collide(float elapsedTime, physx.PxBaseTaskPtr completionTask=default(physx.PxBaseTaskPtr), IntPtr scratchMemBlock=default(IntPtr), uint scratchMemBlockSize=0) {
            physx.PxScenePtr pvk_in_this = this;
            float pvk_in_elapsedTime = elapsedTime;
            physx.PxBaseTaskPtr pvk_in_completionTask = completionTask;
            IntPtr pvk_in_scratchMemBlock = scratchMemBlock;
            uint pvk_in_scratchMemBlockSize = scratchMemBlockSize;
            void_PxScenePtr_collidePtr_float_PxBaseTaskPtr_IntPtr_uint_(pvk_in_this, pvk_in_elapsedTime, pvk_in_completionTask, pvk_in_scratchMemBlock, pvk_in_scratchMemBlockSize);
        }

        //DBG: MethodNode physx::PxScene::checkResults L923
        //RET nat: bool, man: bool, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        public bool checkResults() {
            physx.PxScenePtr pvk_in_this = this;
            return bool_PxScenePtr_checkResultsPtr(pvk_in_this);
        }

        //DBG: MethodNode physx::PxScene::fetchCollision L932
        //RET nat: bool, man: bool, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        public bool fetchCollision() {
            physx.PxScenePtr pvk_in_this = this;
            return bool_PxScenePtr_fetchCollisionPtr(pvk_in_this);
        }

        //DBG: MethodNode physx::PxScene::fetchResults L955
        //RET nat: bool, man: bool, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        public bool fetchResults() {
            physx.PxScenePtr pvk_in_this = this;
            return bool_PxScenePtr_fetchResultsPtr(pvk_in_this);
        }

        //DBG: MethodNode physx::PxScene::fetchResults L955
        //RET nat: bool, man: bool, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: bool, man: bool, kind: Value
        public bool fetchResults(bool block=false) {
            physx.PxScenePtr pvk_in_this = this;
            bool pvk_in_block = block;
            return bool_PxScenePtr_fetchResultsPtr_bool_(pvk_in_this, pvk_in_block);
        }

        //DBG: MethodNode physx::PxScene::fetchResultsStart L973

        //DBG: MethodNode physx::PxScene::fetchResultsFinish L998
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        public void fetchResultsFinish() {
            physx.PxScenePtr pvk_in_this = this;
            void_PxScenePtr_fetchResultsFinishPtr(pvk_in_this);
        }

        //DBG: MethodNode physx::PxScene::flushSimulation L1011
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        public void flushSimulation() {
            physx.PxScenePtr pvk_in_this = this;
            void_PxScenePtr_flushSimulationPtr(pvk_in_this);
        }

        //DBG: MethodNode physx::PxScene::setGravity L1022
        //Value Converter setGravity
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
        public void setGravity(physx.PxVec3 vec) {
            setGravity((physx.PxVec3*)&vec);
        }

        //DBG: MethodNode physx::PxScene::setGravity L1022
        //Value Converter setGravity
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
        public void setGravity(physx.PxVec3.Ref vec) {
            setGravity((physx.PxVec3*)(*((IntPtr*)(&vec))));
        }

        //DBG: MethodNode physx::PxScene::setVisualizationCullingBox L1123
        //Value Converter setVisualizationCullingBox
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: physx::PxBounds3, man: physx.PxBounds3, kind: Blittable
        public void setVisualizationCullingBox(physx.PxBounds3 box) {
            setVisualizationCullingBox((physx.PxBounds3*)&box);
        }

        //DBG: MethodNode physx::PxScene::setVisualizationCullingBox L1123
        //Value Converter setVisualizationCullingBox
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: physx::PxBounds3, man: physx.PxBounds3, kind: Blittable
        public void setVisualizationCullingBox(physx.PxBounds3.Ref box) {
            setVisualizationCullingBox((physx.PxBounds3*)(*((IntPtr*)(&box))));
        }

        //DBG: MethodNode physx::PxScene::sceneQueriesUpdate L1272
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        public void sceneQueriesUpdate() {
            physx.PxScenePtr pvk_in_this = this;
            void_PxScenePtr_sceneQueriesUpdatePtr(pvk_in_this);
        }

        //DBG: MethodNode physx::PxScene::sceneQueriesUpdate L1272
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: PxBaseTaskPtr, man: physx.PxBaseTaskPtr, kind: PtrStruct
        public void sceneQueriesUpdate(physx.PxBaseTaskPtr completionTask=default(physx.PxBaseTaskPtr)) {
            physx.PxScenePtr pvk_in_this = this;
            physx.PxBaseTaskPtr pvk_in_completionTask = completionTask;
            void_PxScenePtr_sceneQueriesUpdatePtr_PxBaseTaskPtr_(pvk_in_this, pvk_in_completionTask);
        }

        //DBG: MethodNode physx::PxScene::checkQueries L1285
        //RET nat: bool, man: bool, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        public bool checkQueries() {
            physx.PxScenePtr pvk_in_this = this;
            return bool_PxScenePtr_checkQueriesPtr(pvk_in_this);
        }

        //DBG: MethodNode physx::PxScene::fetchQueries L1296
        //RET nat: bool, man: bool, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        public bool fetchQueries() {
            physx.PxScenePtr pvk_in_this = this;
            return bool_PxScenePtr_fetchQueriesPtr(pvk_in_this);
        }

        //DBG: MethodNode physx::PxScene::raycast L1320-1324
        //Value Converter raycast
        //RET nat: bool, man: bool, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
        //PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
        //PAR nat: PxReal, man: float, kind: Value
        //PAR nat: PxRaycastCallbackPtr, man: physx.PxRaycastCallbackPtr, kind: PtrStruct
        public bool raycast(physx.PxVec3 origin, physx.PxVec3 unitDir, float distance, physx.PxRaycastCallbackPtr hitCall) {
            return raycast((physx.PxVec3*)&origin, (physx.PxVec3*)&unitDir, distance, hitCall);
        }

        //DBG: MethodNode physx::PxScene::raycast L1320-1324
        //Value Converter raycast
        //RET nat: bool, man: bool, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
        //PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
        //PAR nat: PxReal, man: float, kind: Value
        //PAR nat: PxRaycastCallbackPtr, man: physx.PxRaycastCallbackPtr, kind: PtrStruct
        public bool raycast(physx.PxVec3.Ref origin, physx.PxVec3.Ref unitDir, float distance, physx.PxRaycastCallbackPtr hitCall) {
            return raycast((physx.PxVec3*)(*((IntPtr*)(&origin))), (physx.PxVec3*)(*((IntPtr*)(&unitDir))), distance, hitCall);
        }

        //DBG: MethodNode physx::PxScene::raycast L1320-1324
        //RET nat: bool, man: bool, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: physx::PxVec3*, man: physx.PxVec3*, kind: Value
        //PAR nat: physx::PxVec3*, man: physx.PxVec3*, kind: Value
        //PAR nat: PxReal, man: float, kind: Value
        //PAR nat: PxRaycastCallbackPtr, man: physx.PxRaycastCallbackPtr, kind: PtrStruct
        public bool raycast(physx.PxVec3* origin, physx.PxVec3* unitDir, float distance, physx.PxRaycastCallbackPtr hitCall) {
            physx.PxScenePtr pvk_in_this = this;
            physx.PxVec3* pvk_in_origin = origin;
            physx.PxVec3* pvk_in_unitDir = unitDir;
            float pvk_in_distance = distance;
            physx.PxRaycastCallbackPtr pvk_in_hitCall = hitCall;
            return bool_const_PxScenePtr_raycastPtr_PxVec3_PxVec3_float_PxRaycastCallbackPtr_C_(pvk_in_this, pvk_in_origin, pvk_in_unitDir, pvk_in_distance, pvk_in_hitCall);
        }

        //DBG: MethodNode physx::PxScene::raycast L1320-1324
        //Value Converter raycast
        //RET nat: bool, man: bool, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
        //PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
        //PAR nat: PxReal, man: float, kind: Value
        //PAR nat: PxRaycastCallbackPtr, man: physx.PxRaycastCallbackPtr, kind: PtrStruct
        //PAR nat: PxHitFlagsPtr, man: physx.PxHitFlagsPtr, kind: PtrStruct
        public bool raycast(physx.PxVec3 origin, physx.PxVec3 unitDir, float distance, physx.PxRaycastCallbackPtr hitCall, physx.PxHitFlagsPtr hitFlags) {
            return raycast((physx.PxVec3*)&origin, (physx.PxVec3*)&unitDir, distance, hitCall, hitFlags);
        }

        //DBG: MethodNode physx::PxScene::raycast L1320-1324
        //Value Converter raycast
        //RET nat: bool, man: bool, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
        //PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
        //PAR nat: PxReal, man: float, kind: Value
        //PAR nat: PxRaycastCallbackPtr, man: physx.PxRaycastCallbackPtr, kind: PtrStruct
        //PAR nat: PxHitFlagsPtr, man: physx.PxHitFlagsPtr, kind: PtrStruct
        public bool raycast(physx.PxVec3.Ref origin, physx.PxVec3.Ref unitDir, float distance, physx.PxRaycastCallbackPtr hitCall, physx.PxHitFlagsPtr hitFlags) {
            return raycast((physx.PxVec3*)(*((IntPtr*)(&origin))), (physx.PxVec3*)(*((IntPtr*)(&unitDir))), distance, hitCall, hitFlags);
        }

        //DBG: MethodNode physx::PxScene::raycast L1320-1324
        //RET nat: bool, man: bool, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: physx::PxVec3*, man: physx.PxVec3*, kind: Value
        //PAR nat: physx::PxVec3*, man: physx.PxVec3*, kind: Value
        //PAR nat: PxReal, man: float, kind: Value
        //PAR nat: PxRaycastCallbackPtr, man: physx.PxRaycastCallbackPtr, kind: PtrStruct
        //PAR nat: PxHitFlagsPtr, man: physx.PxHitFlagsPtr, kind: PtrStruct
        public bool raycast(physx.PxVec3* origin, physx.PxVec3* unitDir, float distance, physx.PxRaycastCallbackPtr hitCall, physx.PxHitFlagsPtr hitFlags) {
            physx.PxScenePtr pvk_in_this = this;
            physx.PxVec3* pvk_in_origin = origin;
            physx.PxVec3* pvk_in_unitDir = unitDir;
            float pvk_in_distance = distance;
            physx.PxRaycastCallbackPtr pvk_in_hitCall = hitCall;
            physx.PxHitFlagsPtr pvk_in_hitFlags = hitFlags;
            return bool_const_PxScenePtr_raycastPtr_PxVec3_PxVec3_float_PxRaycastCallbackPtr_PxHitFlagsPtr_C_(pvk_in_this, pvk_in_origin, pvk_in_unitDir, pvk_in_distance, pvk_in_hitCall, pvk_in_hitFlags);
        }

        //DBG: MethodNode physx::PxScene::raycast L1320-1324
        //Value Converter raycast
        //RET nat: bool, man: bool, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
        //PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
        //PAR nat: PxReal, man: float, kind: Value
        //PAR nat: PxRaycastCallbackPtr, man: physx.PxRaycastCallbackPtr, kind: PtrStruct
        //PAR nat: PxHitFlagsPtr, man: physx.PxHitFlagsPtr, kind: PtrStruct
        //PAR nat: PxQueryFilterDataPtr, man: physx.PxQueryFilterDataPtr, kind: PtrStruct
        public bool raycast(physx.PxVec3 origin, physx.PxVec3 unitDir, float distance, physx.PxRaycastCallbackPtr hitCall, physx.PxHitFlagsPtr hitFlags, physx.PxQueryFilterDataPtr filterData) {
            return raycast((physx.PxVec3*)&origin, (physx.PxVec3*)&unitDir, distance, hitCall, hitFlags, filterData);
        }

        //DBG: MethodNode physx::PxScene::raycast L1320-1324
        //Value Converter raycast
        //RET nat: bool, man: bool, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
        //PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
        //PAR nat: PxReal, man: float, kind: Value
        //PAR nat: PxRaycastCallbackPtr, man: physx.PxRaycastCallbackPtr, kind: PtrStruct
        //PAR nat: PxHitFlagsPtr, man: physx.PxHitFlagsPtr, kind: PtrStruct
        //PAR nat: PxQueryFilterDataPtr, man: physx.PxQueryFilterDataPtr, kind: PtrStruct
        public bool raycast(physx.PxVec3.Ref origin, physx.PxVec3.Ref unitDir, float distance, physx.PxRaycastCallbackPtr hitCall, physx.PxHitFlagsPtr hitFlags, physx.PxQueryFilterDataPtr filterData) {
            return raycast((physx.PxVec3*)(*((IntPtr*)(&origin))), (physx.PxVec3*)(*((IntPtr*)(&unitDir))), distance, hitCall, hitFlags, filterData);
        }

        //DBG: MethodNode physx::PxScene::raycast L1320-1324
        //RET nat: bool, man: bool, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: physx::PxVec3*, man: physx.PxVec3*, kind: Value
        //PAR nat: physx::PxVec3*, man: physx.PxVec3*, kind: Value
        //PAR nat: PxReal, man: float, kind: Value
        //PAR nat: PxRaycastCallbackPtr, man: physx.PxRaycastCallbackPtr, kind: PtrStruct
        //PAR nat: PxHitFlagsPtr, man: physx.PxHitFlagsPtr, kind: PtrStruct
        //PAR nat: PxQueryFilterDataPtr, man: physx.PxQueryFilterDataPtr, kind: PtrStruct
        public bool raycast(physx.PxVec3* origin, physx.PxVec3* unitDir, float distance, physx.PxRaycastCallbackPtr hitCall, physx.PxHitFlagsPtr hitFlags, physx.PxQueryFilterDataPtr filterData) {
            physx.PxScenePtr pvk_in_this = this;
            physx.PxVec3* pvk_in_origin = origin;
            physx.PxVec3* pvk_in_unitDir = unitDir;
            float pvk_in_distance = distance;
            physx.PxRaycastCallbackPtr pvk_in_hitCall = hitCall;
            physx.PxHitFlagsPtr pvk_in_hitFlags = hitFlags;
            physx.PxQueryFilterDataPtr pvk_in_filterData = filterData;
            return bool_const_PxScenePtr_raycastPtr_PxVec3_PxVec3_float_PxRaycastCallbackPtr_PxHitFlagsPtr_PxQueryFilterDataPtr_C_(pvk_in_this, pvk_in_origin, pvk_in_unitDir, pvk_in_distance, pvk_in_hitCall, pvk_in_hitFlags, pvk_in_filterData);
        }

        //DBG: MethodNode physx::PxScene::raycast L1320-1324
        //Value Converter raycast
        //RET nat: bool, man: bool, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
        //PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
        //PAR nat: PxReal, man: float, kind: Value
        //PAR nat: PxRaycastCallbackPtr, man: physx.PxRaycastCallbackPtr, kind: PtrStruct
        //PAR nat: PxHitFlagsPtr, man: physx.PxHitFlagsPtr, kind: PtrStruct
        //PAR nat: PxQueryFilterDataPtr, man: physx.PxQueryFilterDataPtr, kind: PtrStruct
        //PAR nat: PxQueryFilterCallbackPtr, man: physx.PxQueryFilterCallbackPtr, kind: PtrStruct
        public bool raycast(physx.PxVec3 origin, physx.PxVec3 unitDir, float distance, physx.PxRaycastCallbackPtr hitCall, physx.PxHitFlagsPtr hitFlags, physx.PxQueryFilterDataPtr filterData, physx.PxQueryFilterCallbackPtr filterCall=default(physx.PxQueryFilterCallbackPtr)) {
            return raycast((physx.PxVec3*)&origin, (physx.PxVec3*)&unitDir, distance, hitCall, hitFlags, filterData, filterCall);
        }

        //DBG: MethodNode physx::PxScene::raycast L1320-1324
        //Value Converter raycast
        //RET nat: bool, man: bool, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
        //PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
        //PAR nat: PxReal, man: float, kind: Value
        //PAR nat: PxRaycastCallbackPtr, man: physx.PxRaycastCallbackPtr, kind: PtrStruct
        //PAR nat: PxHitFlagsPtr, man: physx.PxHitFlagsPtr, kind: PtrStruct
        //PAR nat: PxQueryFilterDataPtr, man: physx.PxQueryFilterDataPtr, kind: PtrStruct
        //PAR nat: PxQueryFilterCallbackPtr, man: physx.PxQueryFilterCallbackPtr, kind: PtrStruct
        public bool raycast(physx.PxVec3.Ref origin, physx.PxVec3.Ref unitDir, float distance, physx.PxRaycastCallbackPtr hitCall, physx.PxHitFlagsPtr hitFlags, physx.PxQueryFilterDataPtr filterData, physx.PxQueryFilterCallbackPtr filterCall=default(physx.PxQueryFilterCallbackPtr)) {
            return raycast((physx.PxVec3*)(*((IntPtr*)(&origin))), (physx.PxVec3*)(*((IntPtr*)(&unitDir))), distance, hitCall, hitFlags, filterData, filterCall);
        }

        //DBG: MethodNode physx::PxScene::raycast L1320-1324
        //RET nat: bool, man: bool, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: physx::PxVec3*, man: physx.PxVec3*, kind: Value
        //PAR nat: physx::PxVec3*, man: physx.PxVec3*, kind: Value
        //PAR nat: PxReal, man: float, kind: Value
        //PAR nat: PxRaycastCallbackPtr, man: physx.PxRaycastCallbackPtr, kind: PtrStruct
        //PAR nat: PxHitFlagsPtr, man: physx.PxHitFlagsPtr, kind: PtrStruct
        //PAR nat: PxQueryFilterDataPtr, man: physx.PxQueryFilterDataPtr, kind: PtrStruct
        //PAR nat: PxQueryFilterCallbackPtr, man: physx.PxQueryFilterCallbackPtr, kind: PtrStruct
        public bool raycast(physx.PxVec3* origin, physx.PxVec3* unitDir, float distance, physx.PxRaycastCallbackPtr hitCall, physx.PxHitFlagsPtr hitFlags, physx.PxQueryFilterDataPtr filterData, physx.PxQueryFilterCallbackPtr filterCall=default(physx.PxQueryFilterCallbackPtr)) {
            physx.PxScenePtr pvk_in_this = this;
            physx.PxVec3* pvk_in_origin = origin;
            physx.PxVec3* pvk_in_unitDir = unitDir;
            float pvk_in_distance = distance;
            physx.PxRaycastCallbackPtr pvk_in_hitCall = hitCall;
            physx.PxHitFlagsPtr pvk_in_hitFlags = hitFlags;
            physx.PxQueryFilterDataPtr pvk_in_filterData = filterData;
            physx.PxQueryFilterCallbackPtr pvk_in_filterCall = filterCall;
            return bool_const_PxScenePtr_raycastPtr_PxVec3_PxVec3_float_PxRaycastCallbackPtr_PxHitFlagsPtr_PxQueryFilterDataPtr_PxQueryFilterCallbackPtr_C_(pvk_in_this, pvk_in_origin, pvk_in_unitDir, pvk_in_distance, pvk_in_hitCall, pvk_in_hitFlags, pvk_in_filterData, pvk_in_filterCall);
        }

        //DBG: MethodNode physx::PxScene::raycast L1320-1324
        //Value Converter raycast
        //RET nat: bool, man: bool, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
        //PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
        //PAR nat: PxReal, man: float, kind: Value
        //PAR nat: PxRaycastCallbackPtr, man: physx.PxRaycastCallbackPtr, kind: PtrStruct
        //PAR nat: PxHitFlagsPtr, man: physx.PxHitFlagsPtr, kind: PtrStruct
        //PAR nat: PxQueryFilterDataPtr, man: physx.PxQueryFilterDataPtr, kind: PtrStruct
        //PAR nat: PxQueryFilterCallbackPtr, man: physx.PxQueryFilterCallbackPtr, kind: PtrStruct
        //PAR nat: PxQueryCachePtr, man: physx.PxQueryCachePtr, kind: PtrStruct
        public bool raycast(physx.PxVec3 origin, physx.PxVec3 unitDir, float distance, physx.PxRaycastCallbackPtr hitCall, physx.PxHitFlagsPtr hitFlags, physx.PxQueryFilterDataPtr filterData, physx.PxQueryFilterCallbackPtr filterCall=default(physx.PxQueryFilterCallbackPtr), physx.PxQueryCachePtr cache=default(physx.PxQueryCachePtr)) {
            return raycast((physx.PxVec3*)&origin, (physx.PxVec3*)&unitDir, distance, hitCall, hitFlags, filterData, filterCall, cache);
        }

        //DBG: MethodNode physx::PxScene::raycast L1320-1324
        //Value Converter raycast
        //RET nat: bool, man: bool, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
        //PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
        //PAR nat: PxReal, man: float, kind: Value
        //PAR nat: PxRaycastCallbackPtr, man: physx.PxRaycastCallbackPtr, kind: PtrStruct
        //PAR nat: PxHitFlagsPtr, man: physx.PxHitFlagsPtr, kind: PtrStruct
        //PAR nat: PxQueryFilterDataPtr, man: physx.PxQueryFilterDataPtr, kind: PtrStruct
        //PAR nat: PxQueryFilterCallbackPtr, man: physx.PxQueryFilterCallbackPtr, kind: PtrStruct
        //PAR nat: PxQueryCachePtr, man: physx.PxQueryCachePtr, kind: PtrStruct
        public bool raycast(physx.PxVec3.Ref origin, physx.PxVec3.Ref unitDir, float distance, physx.PxRaycastCallbackPtr hitCall, physx.PxHitFlagsPtr hitFlags, physx.PxQueryFilterDataPtr filterData, physx.PxQueryFilterCallbackPtr filterCall=default(physx.PxQueryFilterCallbackPtr), physx.PxQueryCachePtr cache=default(physx.PxQueryCachePtr)) {
            return raycast((physx.PxVec3*)(*((IntPtr*)(&origin))), (physx.PxVec3*)(*((IntPtr*)(&unitDir))), distance, hitCall, hitFlags, filterData, filterCall, cache);
        }

        //DBG: MethodNode physx::PxScene::sweep L1353-1356
        //Value Converter sweep
        //RET nat: bool, man: bool, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: physx::PxGeometry, man: physx.PxGeometry, kind: Blittable
        //PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable
        //PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
        //PAR nat: PxReal, man: float, kind: Value
        //PAR nat: PxSweepCallbackPtr, man: physx.PxSweepCallbackPtr, kind: PtrStruct
        public bool sweep<T>(T geometry, physx.PxTransform pose, physx.PxVec3 unitDir, float distance, physx.PxSweepCallbackPtr hitCall) where T : unmanaged, physx.PxGeometry.IPxGeometry {
            return sweep((physx.PxGeometry*)&geometry, (physx.PxTransform*)&pose, (physx.PxVec3*)&unitDir, distance, hitCall);
        }

        //DBG: MethodNode physx::PxScene::sweep L1353-1356
        //Value Converter sweep
        //RET nat: bool, man: bool, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: physx::PxGeometry, man: physx.PxGeometry, kind: Blittable
        //PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable
        //PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
        //PAR nat: PxReal, man: float, kind: Value
        //PAR nat: PxSweepCallbackPtr, man: physx.PxSweepCallbackPtr, kind: PtrStruct
        public bool sweep(physx.PxGeometry.Ref geometry, physx.PxTransform.Ref pose, physx.PxVec3.Ref unitDir, float distance, physx.PxSweepCallbackPtr hitCall) {
            return sweep((physx.PxGeometry*)(*((IntPtr*)(&geometry))), (physx.PxTransform*)(*((IntPtr*)(&pose))), (physx.PxVec3*)(*((IntPtr*)(&unitDir))), distance, hitCall);
        }

        //DBG: MethodNode physx::PxScene::sweep L1353-1356
        //RET nat: bool, man: bool, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: physx::PxGeometry*, man: physx.PxGeometry*, kind: Value
        //PAR nat: physx::PxTransform*, man: physx.PxTransform*, kind: Value
        //PAR nat: physx::PxVec3*, man: physx.PxVec3*, kind: Value
        //PAR nat: PxReal, man: float, kind: Value
        //PAR nat: PxSweepCallbackPtr, man: physx.PxSweepCallbackPtr, kind: PtrStruct
        public bool sweep(physx.PxGeometry* geometry, physx.PxTransform* pose, physx.PxVec3* unitDir, float distance, physx.PxSweepCallbackPtr hitCall) {
            physx.PxScenePtr pvk_in_this = this;
            physx.PxGeometry* pvk_in_geometry = geometry;
            physx.PxTransform* pvk_in_pose = pose;
            physx.PxVec3* pvk_in_unitDir = unitDir;
            float pvk_in_distance = distance;
            physx.PxSweepCallbackPtr pvk_in_hitCall = hitCall;
            return bool_const_PxScenePtr_sweepPtr_PxGeometry_PxTransform_PxVec3_float_PxSweepCallbackPtr_C_(pvk_in_this, pvk_in_geometry, pvk_in_pose, pvk_in_unitDir, pvk_in_distance, pvk_in_hitCall);
        }

        //DBG: MethodNode physx::PxScene::sweep L1353-1356
        //Value Converter sweep
        //RET nat: bool, man: bool, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: physx::PxGeometry, man: physx.PxGeometry, kind: Blittable
        //PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable
        //PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
        //PAR nat: PxReal, man: float, kind: Value
        //PAR nat: PxSweepCallbackPtr, man: physx.PxSweepCallbackPtr, kind: PtrStruct
        //PAR nat: PxHitFlagsPtr, man: physx.PxHitFlagsPtr, kind: PtrStruct
        public bool sweep<T>(T geometry, physx.PxTransform pose, physx.PxVec3 unitDir, float distance, physx.PxSweepCallbackPtr hitCall, physx.PxHitFlagsPtr hitFlags) where T : unmanaged, physx.PxGeometry.IPxGeometry {
            return sweep((physx.PxGeometry*)&geometry, (physx.PxTransform*)&pose, (physx.PxVec3*)&unitDir, distance, hitCall, hitFlags);
        }

        //DBG: MethodNode physx::PxScene::sweep L1353-1356
        //Value Converter sweep
        //RET nat: bool, man: bool, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: physx::PxGeometry, man: physx.PxGeometry, kind: Blittable
        //PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable
        //PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
        //PAR nat: PxReal, man: float, kind: Value
        //PAR nat: PxSweepCallbackPtr, man: physx.PxSweepCallbackPtr, kind: PtrStruct
        //PAR nat: PxHitFlagsPtr, man: physx.PxHitFlagsPtr, kind: PtrStruct
        public bool sweep(physx.PxGeometry.Ref geometry, physx.PxTransform.Ref pose, physx.PxVec3.Ref unitDir, float distance, physx.PxSweepCallbackPtr hitCall, physx.PxHitFlagsPtr hitFlags) {
            return sweep((physx.PxGeometry*)(*((IntPtr*)(&geometry))), (physx.PxTransform*)(*((IntPtr*)(&pose))), (physx.PxVec3*)(*((IntPtr*)(&unitDir))), distance, hitCall, hitFlags);
        }

        //DBG: MethodNode physx::PxScene::sweep L1353-1356
        //RET nat: bool, man: bool, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: physx::PxGeometry*, man: physx.PxGeometry*, kind: Value
        //PAR nat: physx::PxTransform*, man: physx.PxTransform*, kind: Value
        //PAR nat: physx::PxVec3*, man: physx.PxVec3*, kind: Value
        //PAR nat: PxReal, man: float, kind: Value
        //PAR nat: PxSweepCallbackPtr, man: physx.PxSweepCallbackPtr, kind: PtrStruct
        //PAR nat: PxHitFlagsPtr, man: physx.PxHitFlagsPtr, kind: PtrStruct
        public bool sweep(physx.PxGeometry* geometry, physx.PxTransform* pose, physx.PxVec3* unitDir, float distance, physx.PxSweepCallbackPtr hitCall, physx.PxHitFlagsPtr hitFlags) {
            physx.PxScenePtr pvk_in_this = this;
            physx.PxGeometry* pvk_in_geometry = geometry;
            physx.PxTransform* pvk_in_pose = pose;
            physx.PxVec3* pvk_in_unitDir = unitDir;
            float pvk_in_distance = distance;
            physx.PxSweepCallbackPtr pvk_in_hitCall = hitCall;
            physx.PxHitFlagsPtr pvk_in_hitFlags = hitFlags;
            return bool_const_PxScenePtr_sweepPtr_PxGeometry_PxTransform_PxVec3_float_PxSweepCallbackPtr_PxHitFlagsPtr_C_(pvk_in_this, pvk_in_geometry, pvk_in_pose, pvk_in_unitDir, pvk_in_distance, pvk_in_hitCall, pvk_in_hitFlags);
        }

        //DBG: MethodNode physx::PxScene::sweep L1353-1356
        //Value Converter sweep
        //RET nat: bool, man: bool, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: physx::PxGeometry, man: physx.PxGeometry, kind: Blittable
        //PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable
        //PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
        //PAR nat: PxReal, man: float, kind: Value
        //PAR nat: PxSweepCallbackPtr, man: physx.PxSweepCallbackPtr, kind: PtrStruct
        //PAR nat: PxHitFlagsPtr, man: physx.PxHitFlagsPtr, kind: PtrStruct
        //PAR nat: PxQueryFilterDataPtr, man: physx.PxQueryFilterDataPtr, kind: PtrStruct
        public bool sweep<T>(T geometry, physx.PxTransform pose, physx.PxVec3 unitDir, float distance, physx.PxSweepCallbackPtr hitCall, physx.PxHitFlagsPtr hitFlags, physx.PxQueryFilterDataPtr filterData) where T : unmanaged, physx.PxGeometry.IPxGeometry {
            return sweep((physx.PxGeometry*)&geometry, (physx.PxTransform*)&pose, (physx.PxVec3*)&unitDir, distance, hitCall, hitFlags, filterData);
        }

        //DBG: MethodNode physx::PxScene::sweep L1353-1356
        //Value Converter sweep
        //RET nat: bool, man: bool, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: physx::PxGeometry, man: physx.PxGeometry, kind: Blittable
        //PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable
        //PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
        //PAR nat: PxReal, man: float, kind: Value
        //PAR nat: PxSweepCallbackPtr, man: physx.PxSweepCallbackPtr, kind: PtrStruct
        //PAR nat: PxHitFlagsPtr, man: physx.PxHitFlagsPtr, kind: PtrStruct
        //PAR nat: PxQueryFilterDataPtr, man: physx.PxQueryFilterDataPtr, kind: PtrStruct
        public bool sweep(physx.PxGeometry.Ref geometry, physx.PxTransform.Ref pose, physx.PxVec3.Ref unitDir, float distance, physx.PxSweepCallbackPtr hitCall, physx.PxHitFlagsPtr hitFlags, physx.PxQueryFilterDataPtr filterData) {
            return sweep((physx.PxGeometry*)(*((IntPtr*)(&geometry))), (physx.PxTransform*)(*((IntPtr*)(&pose))), (physx.PxVec3*)(*((IntPtr*)(&unitDir))), distance, hitCall, hitFlags, filterData);
        }

        //DBG: MethodNode physx::PxScene::sweep L1353-1356
        //RET nat: bool, man: bool, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: physx::PxGeometry*, man: physx.PxGeometry*, kind: Value
        //PAR nat: physx::PxTransform*, man: physx.PxTransform*, kind: Value
        //PAR nat: physx::PxVec3*, man: physx.PxVec3*, kind: Value
        //PAR nat: PxReal, man: float, kind: Value
        //PAR nat: PxSweepCallbackPtr, man: physx.PxSweepCallbackPtr, kind: PtrStruct
        //PAR nat: PxHitFlagsPtr, man: physx.PxHitFlagsPtr, kind: PtrStruct
        //PAR nat: PxQueryFilterDataPtr, man: physx.PxQueryFilterDataPtr, kind: PtrStruct
        public bool sweep(physx.PxGeometry* geometry, physx.PxTransform* pose, physx.PxVec3* unitDir, float distance, physx.PxSweepCallbackPtr hitCall, physx.PxHitFlagsPtr hitFlags, physx.PxQueryFilterDataPtr filterData) {
            physx.PxScenePtr pvk_in_this = this;
            physx.PxGeometry* pvk_in_geometry = geometry;
            physx.PxTransform* pvk_in_pose = pose;
            physx.PxVec3* pvk_in_unitDir = unitDir;
            float pvk_in_distance = distance;
            physx.PxSweepCallbackPtr pvk_in_hitCall = hitCall;
            physx.PxHitFlagsPtr pvk_in_hitFlags = hitFlags;
            physx.PxQueryFilterDataPtr pvk_in_filterData = filterData;
            return bool_const_PxScenePtr_sweepPtr_PxGeometry_PxTransform_PxVec3_float_PxSweepCallbackPtr_PxHitFlagsPtr_PxQueryFilterDataPtr_C_(pvk_in_this, pvk_in_geometry, pvk_in_pose, pvk_in_unitDir, pvk_in_distance, pvk_in_hitCall, pvk_in_hitFlags, pvk_in_filterData);
        }

        //DBG: MethodNode physx::PxScene::sweep L1353-1356
        //Value Converter sweep
        //RET nat: bool, man: bool, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: physx::PxGeometry, man: physx.PxGeometry, kind: Blittable
        //PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable
        //PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
        //PAR nat: PxReal, man: float, kind: Value
        //PAR nat: PxSweepCallbackPtr, man: physx.PxSweepCallbackPtr, kind: PtrStruct
        //PAR nat: PxHitFlagsPtr, man: physx.PxHitFlagsPtr, kind: PtrStruct
        //PAR nat: PxQueryFilterDataPtr, man: physx.PxQueryFilterDataPtr, kind: PtrStruct
        //PAR nat: PxQueryFilterCallbackPtr, man: physx.PxQueryFilterCallbackPtr, kind: PtrStruct
        public bool sweep<T>(T geometry, physx.PxTransform pose, physx.PxVec3 unitDir, float distance, physx.PxSweepCallbackPtr hitCall, physx.PxHitFlagsPtr hitFlags, physx.PxQueryFilterDataPtr filterData, physx.PxQueryFilterCallbackPtr filterCall=default(physx.PxQueryFilterCallbackPtr)) where T : unmanaged, physx.PxGeometry.IPxGeometry {
            return sweep((physx.PxGeometry*)&geometry, (physx.PxTransform*)&pose, (physx.PxVec3*)&unitDir, distance, hitCall, hitFlags, filterData, filterCall);
        }

        //DBG: MethodNode physx::PxScene::sweep L1353-1356
        //Value Converter sweep
        //RET nat: bool, man: bool, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: physx::PxGeometry, man: physx.PxGeometry, kind: Blittable
        //PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable
        //PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
        //PAR nat: PxReal, man: float, kind: Value
        //PAR nat: PxSweepCallbackPtr, man: physx.PxSweepCallbackPtr, kind: PtrStruct
        //PAR nat: PxHitFlagsPtr, man: physx.PxHitFlagsPtr, kind: PtrStruct
        //PAR nat: PxQueryFilterDataPtr, man: physx.PxQueryFilterDataPtr, kind: PtrStruct
        //PAR nat: PxQueryFilterCallbackPtr, man: physx.PxQueryFilterCallbackPtr, kind: PtrStruct
        public bool sweep(physx.PxGeometry.Ref geometry, physx.PxTransform.Ref pose, physx.PxVec3.Ref unitDir, float distance, physx.PxSweepCallbackPtr hitCall, physx.PxHitFlagsPtr hitFlags, physx.PxQueryFilterDataPtr filterData, physx.PxQueryFilterCallbackPtr filterCall=default(physx.PxQueryFilterCallbackPtr)) {
            return sweep((physx.PxGeometry*)(*((IntPtr*)(&geometry))), (physx.PxTransform*)(*((IntPtr*)(&pose))), (physx.PxVec3*)(*((IntPtr*)(&unitDir))), distance, hitCall, hitFlags, filterData, filterCall);
        }

        //DBG: MethodNode physx::PxScene::sweep L1353-1356
        //RET nat: bool, man: bool, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: physx::PxGeometry*, man: physx.PxGeometry*, kind: Value
        //PAR nat: physx::PxTransform*, man: physx.PxTransform*, kind: Value
        //PAR nat: physx::PxVec3*, man: physx.PxVec3*, kind: Value
        //PAR nat: PxReal, man: float, kind: Value
        //PAR nat: PxSweepCallbackPtr, man: physx.PxSweepCallbackPtr, kind: PtrStruct
        //PAR nat: PxHitFlagsPtr, man: physx.PxHitFlagsPtr, kind: PtrStruct
        //PAR nat: PxQueryFilterDataPtr, man: physx.PxQueryFilterDataPtr, kind: PtrStruct
        //PAR nat: PxQueryFilterCallbackPtr, man: physx.PxQueryFilterCallbackPtr, kind: PtrStruct
        public bool sweep(physx.PxGeometry* geometry, physx.PxTransform* pose, physx.PxVec3* unitDir, float distance, physx.PxSweepCallbackPtr hitCall, physx.PxHitFlagsPtr hitFlags, physx.PxQueryFilterDataPtr filterData, physx.PxQueryFilterCallbackPtr filterCall=default(physx.PxQueryFilterCallbackPtr)) {
            physx.PxScenePtr pvk_in_this = this;
            physx.PxGeometry* pvk_in_geometry = geometry;
            physx.PxTransform* pvk_in_pose = pose;
            physx.PxVec3* pvk_in_unitDir = unitDir;
            float pvk_in_distance = distance;
            physx.PxSweepCallbackPtr pvk_in_hitCall = hitCall;
            physx.PxHitFlagsPtr pvk_in_hitFlags = hitFlags;
            physx.PxQueryFilterDataPtr pvk_in_filterData = filterData;
            physx.PxQueryFilterCallbackPtr pvk_in_filterCall = filterCall;
            return bool_const_PxScenePtr_sweepPtr_PxGeometry_PxTransform_PxVec3_float_PxSweepCallbackPtr_PxHitFlagsPtr_PxQueryFilterDataPtr_PxQueryFilterCallbackPtr_C_(pvk_in_this, pvk_in_geometry, pvk_in_pose, pvk_in_unitDir, pvk_in_distance, pvk_in_hitCall, pvk_in_hitFlags, pvk_in_filterData, pvk_in_filterCall);
        }

        //DBG: MethodNode physx::PxScene::sweep L1353-1356
        //Value Converter sweep
        //RET nat: bool, man: bool, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: physx::PxGeometry, man: physx.PxGeometry, kind: Blittable
        //PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable
        //PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
        //PAR nat: PxReal, man: float, kind: Value
        //PAR nat: PxSweepCallbackPtr, man: physx.PxSweepCallbackPtr, kind: PtrStruct
        //PAR nat: PxHitFlagsPtr, man: physx.PxHitFlagsPtr, kind: PtrStruct
        //PAR nat: PxQueryFilterDataPtr, man: physx.PxQueryFilterDataPtr, kind: PtrStruct
        //PAR nat: PxQueryFilterCallbackPtr, man: physx.PxQueryFilterCallbackPtr, kind: PtrStruct
        //PAR nat: PxQueryCachePtr, man: physx.PxQueryCachePtr, kind: PtrStruct
        public bool sweep<T>(T geometry, physx.PxTransform pose, physx.PxVec3 unitDir, float distance, physx.PxSweepCallbackPtr hitCall, physx.PxHitFlagsPtr hitFlags, physx.PxQueryFilterDataPtr filterData, physx.PxQueryFilterCallbackPtr filterCall=default(physx.PxQueryFilterCallbackPtr), physx.PxQueryCachePtr cache=default(physx.PxQueryCachePtr)) where T : unmanaged, physx.PxGeometry.IPxGeometry {
            return sweep((physx.PxGeometry*)&geometry, (physx.PxTransform*)&pose, (physx.PxVec3*)&unitDir, distance, hitCall, hitFlags, filterData, filterCall, cache);
        }

        //DBG: MethodNode physx::PxScene::sweep L1353-1356
        //Value Converter sweep
        //RET nat: bool, man: bool, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: physx::PxGeometry, man: physx.PxGeometry, kind: Blittable
        //PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable
        //PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
        //PAR nat: PxReal, man: float, kind: Value
        //PAR nat: PxSweepCallbackPtr, man: physx.PxSweepCallbackPtr, kind: PtrStruct
        //PAR nat: PxHitFlagsPtr, man: physx.PxHitFlagsPtr, kind: PtrStruct
        //PAR nat: PxQueryFilterDataPtr, man: physx.PxQueryFilterDataPtr, kind: PtrStruct
        //PAR nat: PxQueryFilterCallbackPtr, man: physx.PxQueryFilterCallbackPtr, kind: PtrStruct
        //PAR nat: PxQueryCachePtr, man: physx.PxQueryCachePtr, kind: PtrStruct
        public bool sweep(physx.PxGeometry.Ref geometry, physx.PxTransform.Ref pose, physx.PxVec3.Ref unitDir, float distance, physx.PxSweepCallbackPtr hitCall, physx.PxHitFlagsPtr hitFlags, physx.PxQueryFilterDataPtr filterData, physx.PxQueryFilterCallbackPtr filterCall=default(physx.PxQueryFilterCallbackPtr), physx.PxQueryCachePtr cache=default(physx.PxQueryCachePtr)) {
            return sweep((physx.PxGeometry*)(*((IntPtr*)(&geometry))), (physx.PxTransform*)(*((IntPtr*)(&pose))), (physx.PxVec3*)(*((IntPtr*)(&unitDir))), distance, hitCall, hitFlags, filterData, filterCall, cache);
        }

        //DBG: MethodNode physx::PxScene::sweep L1353-1356
        //RET nat: bool, man: bool, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: physx::PxGeometry*, man: physx.PxGeometry*, kind: Value
        //PAR nat: physx::PxTransform*, man: physx.PxTransform*, kind: Value
        //PAR nat: physx::PxVec3*, man: physx.PxVec3*, kind: Value
        //PAR nat: PxReal, man: float, kind: Value
        //PAR nat: PxSweepCallbackPtr, man: physx.PxSweepCallbackPtr, kind: PtrStruct
        //PAR nat: PxHitFlagsPtr, man: physx.PxHitFlagsPtr, kind: PtrStruct
        //PAR nat: PxQueryFilterDataPtr, man: physx.PxQueryFilterDataPtr, kind: PtrStruct
        //PAR nat: PxQueryFilterCallbackPtr, man: physx.PxQueryFilterCallbackPtr, kind: PtrStruct
        //PAR nat: PxQueryCachePtr, man: physx.PxQueryCachePtr, kind: PtrStruct
        public bool sweep(physx.PxGeometry* geometry, physx.PxTransform* pose, physx.PxVec3* unitDir, float distance, physx.PxSweepCallbackPtr hitCall, physx.PxHitFlagsPtr hitFlags, physx.PxQueryFilterDataPtr filterData, physx.PxQueryFilterCallbackPtr filterCall=default(physx.PxQueryFilterCallbackPtr), physx.PxQueryCachePtr cache=default(physx.PxQueryCachePtr)) {
            physx.PxScenePtr pvk_in_this = this;
            physx.PxGeometry* pvk_in_geometry = geometry;
            physx.PxTransform* pvk_in_pose = pose;
            physx.PxVec3* pvk_in_unitDir = unitDir;
            float pvk_in_distance = distance;
            physx.PxSweepCallbackPtr pvk_in_hitCall = hitCall;
            physx.PxHitFlagsPtr pvk_in_hitFlags = hitFlags;
            physx.PxQueryFilterDataPtr pvk_in_filterData = filterData;
            physx.PxQueryFilterCallbackPtr pvk_in_filterCall = filterCall;
            physx.PxQueryCachePtr pvk_in_cache = cache;
            return bool_const_PxScenePtr_sweepPtr_PxGeometry_PxTransform_PxVec3_float_PxSweepCallbackPtr_PxHitFlagsPtr_PxQueryFilterDataPtr_PxQueryFilterCallbackPtr_PxQueryCachePtr_C_(pvk_in_this, pvk_in_geometry, pvk_in_pose, pvk_in_unitDir, pvk_in_distance, pvk_in_hitCall, pvk_in_hitFlags, pvk_in_filterData, pvk_in_filterCall, pvk_in_cache);
        }

        //DBG: MethodNode physx::PxScene::sweep L1353-1356
        //Value Converter sweep
        //RET nat: bool, man: bool, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: physx::PxGeometry, man: physx.PxGeometry, kind: Blittable
        //PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable
        //PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
        //PAR nat: PxReal, man: float, kind: Value
        //PAR nat: PxSweepCallbackPtr, man: physx.PxSweepCallbackPtr, kind: PtrStruct
        //PAR nat: PxHitFlagsPtr, man: physx.PxHitFlagsPtr, kind: PtrStruct
        //PAR nat: PxQueryFilterDataPtr, man: physx.PxQueryFilterDataPtr, kind: PtrStruct
        //PAR nat: PxQueryFilterCallbackPtr, man: physx.PxQueryFilterCallbackPtr, kind: PtrStruct
        //PAR nat: PxQueryCachePtr, man: physx.PxQueryCachePtr, kind: PtrStruct
        //PAR nat: PxReal, man: float, kind: Value
        public bool sweep<T>(T geometry, physx.PxTransform pose, physx.PxVec3 unitDir, float distance, physx.PxSweepCallbackPtr hitCall, physx.PxHitFlagsPtr hitFlags, physx.PxQueryFilterDataPtr filterData, physx.PxQueryFilterCallbackPtr filterCall=default(physx.PxQueryFilterCallbackPtr), physx.PxQueryCachePtr cache=default(physx.PxQueryCachePtr), float inflation=0f) where T : unmanaged, physx.PxGeometry.IPxGeometry {
            return sweep((physx.PxGeometry*)&geometry, (physx.PxTransform*)&pose, (physx.PxVec3*)&unitDir, distance, hitCall, hitFlags, filterData, filterCall, cache, inflation);
        }

        //DBG: MethodNode physx::PxScene::sweep L1353-1356
        //Value Converter sweep
        //RET nat: bool, man: bool, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: physx::PxGeometry, man: physx.PxGeometry, kind: Blittable
        //PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable
        //PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
        //PAR nat: PxReal, man: float, kind: Value
        //PAR nat: PxSweepCallbackPtr, man: physx.PxSweepCallbackPtr, kind: PtrStruct
        //PAR nat: PxHitFlagsPtr, man: physx.PxHitFlagsPtr, kind: PtrStruct
        //PAR nat: PxQueryFilterDataPtr, man: physx.PxQueryFilterDataPtr, kind: PtrStruct
        //PAR nat: PxQueryFilterCallbackPtr, man: physx.PxQueryFilterCallbackPtr, kind: PtrStruct
        //PAR nat: PxQueryCachePtr, man: physx.PxQueryCachePtr, kind: PtrStruct
        //PAR nat: PxReal, man: float, kind: Value
        public bool sweep(physx.PxGeometry.Ref geometry, physx.PxTransform.Ref pose, physx.PxVec3.Ref unitDir, float distance, physx.PxSweepCallbackPtr hitCall, physx.PxHitFlagsPtr hitFlags, physx.PxQueryFilterDataPtr filterData, physx.PxQueryFilterCallbackPtr filterCall=default(physx.PxQueryFilterCallbackPtr), physx.PxQueryCachePtr cache=default(physx.PxQueryCachePtr), float inflation=0f) {
            return sweep((physx.PxGeometry*)(*((IntPtr*)(&geometry))), (physx.PxTransform*)(*((IntPtr*)(&pose))), (physx.PxVec3*)(*((IntPtr*)(&unitDir))), distance, hitCall, hitFlags, filterData, filterCall, cache, inflation);
        }

        //DBG: MethodNode physx::PxScene::overlap L1378-1380
        //Value Converter overlap
        //RET nat: bool, man: bool, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: physx::PxGeometry, man: physx.PxGeometry, kind: Blittable
        //PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable
        //PAR nat: PxOverlapCallbackPtr, man: physx.PxOverlapCallbackPtr, kind: PtrStruct
        public bool overlap<T>(T geometry, physx.PxTransform pose, physx.PxOverlapCallbackPtr hitCall) where T : unmanaged, physx.PxGeometry.IPxGeometry {
            return overlap((physx.PxGeometry*)&geometry, (physx.PxTransform*)&pose, hitCall);
        }

        //DBG: MethodNode physx::PxScene::overlap L1378-1380
        //Value Converter overlap
        //RET nat: bool, man: bool, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: physx::PxGeometry, man: physx.PxGeometry, kind: Blittable
        //PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable
        //PAR nat: PxOverlapCallbackPtr, man: physx.PxOverlapCallbackPtr, kind: PtrStruct
        public bool overlap(physx.PxGeometry.Ref geometry, physx.PxTransform.Ref pose, physx.PxOverlapCallbackPtr hitCall) {
            return overlap((physx.PxGeometry*)(*((IntPtr*)(&geometry))), (physx.PxTransform*)(*((IntPtr*)(&pose))), hitCall);
        }

        //DBG: MethodNode physx::PxScene::overlap L1378-1380
        //RET nat: bool, man: bool, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: physx::PxGeometry*, man: physx.PxGeometry*, kind: Value
        //PAR nat: physx::PxTransform*, man: physx.PxTransform*, kind: Value
        //PAR nat: PxOverlapCallbackPtr, man: physx.PxOverlapCallbackPtr, kind: PtrStruct
        public bool overlap(physx.PxGeometry* geometry, physx.PxTransform* pose, physx.PxOverlapCallbackPtr hitCall) {
            physx.PxScenePtr pvk_in_this = this;
            physx.PxGeometry* pvk_in_geometry = geometry;
            physx.PxTransform* pvk_in_pose = pose;
            physx.PxOverlapCallbackPtr pvk_in_hitCall = hitCall;
            return bool_const_PxScenePtr_overlapPtr_PxGeometry_PxTransform_PxOverlapCallbackPtr_(pvk_in_this, pvk_in_geometry, pvk_in_pose, pvk_in_hitCall);
        }

        //DBG: MethodNode physx::PxScene::overlap L1378-1380
        //Value Converter overlap
        //RET nat: bool, man: bool, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: physx::PxGeometry, man: physx.PxGeometry, kind: Blittable
        //PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable
        //PAR nat: PxOverlapCallbackPtr, man: physx.PxOverlapCallbackPtr, kind: PtrStruct
        //PAR nat: PxQueryFilterDataPtr, man: physx.PxQueryFilterDataPtr, kind: PtrStruct
        public bool overlap<T>(T geometry, physx.PxTransform pose, physx.PxOverlapCallbackPtr hitCall, physx.PxQueryFilterDataPtr filterData) where T : unmanaged, physx.PxGeometry.IPxGeometry {
            return overlap((physx.PxGeometry*)&geometry, (physx.PxTransform*)&pose, hitCall, filterData);
        }

        //DBG: MethodNode physx::PxScene::overlap L1378-1380
        //Value Converter overlap
        //RET nat: bool, man: bool, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: physx::PxGeometry, man: physx.PxGeometry, kind: Blittable
        //PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable
        //PAR nat: PxOverlapCallbackPtr, man: physx.PxOverlapCallbackPtr, kind: PtrStruct
        //PAR nat: PxQueryFilterDataPtr, man: physx.PxQueryFilterDataPtr, kind: PtrStruct
        public bool overlap(physx.PxGeometry.Ref geometry, physx.PxTransform.Ref pose, physx.PxOverlapCallbackPtr hitCall, physx.PxQueryFilterDataPtr filterData) {
            return overlap((physx.PxGeometry*)(*((IntPtr*)(&geometry))), (physx.PxTransform*)(*((IntPtr*)(&pose))), hitCall, filterData);
        }

        //DBG: MethodNode physx::PxScene::overlap L1378-1380
        //RET nat: bool, man: bool, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: physx::PxGeometry*, man: physx.PxGeometry*, kind: Value
        //PAR nat: physx::PxTransform*, man: physx.PxTransform*, kind: Value
        //PAR nat: PxOverlapCallbackPtr, man: physx.PxOverlapCallbackPtr, kind: PtrStruct
        //PAR nat: PxQueryFilterDataPtr, man: physx.PxQueryFilterDataPtr, kind: PtrStruct
        public bool overlap(physx.PxGeometry* geometry, physx.PxTransform* pose, physx.PxOverlapCallbackPtr hitCall, physx.PxQueryFilterDataPtr filterData) {
            physx.PxScenePtr pvk_in_this = this;
            physx.PxGeometry* pvk_in_geometry = geometry;
            physx.PxTransform* pvk_in_pose = pose;
            physx.PxOverlapCallbackPtr pvk_in_hitCall = hitCall;
            physx.PxQueryFilterDataPtr pvk_in_filterData = filterData;
            return bool_const_PxScenePtr_overlapPtr_PxGeometry_PxTransform_PxOverlapCallbackPtr_PxQueryFilterDataPtr_(pvk_in_this, pvk_in_geometry, pvk_in_pose, pvk_in_hitCall, pvk_in_filterData);
        }

        //DBG: MethodNode physx::PxScene::overlap L1378-1380
        //Value Converter overlap
        //RET nat: bool, man: bool, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: physx::PxGeometry, man: physx.PxGeometry, kind: Blittable
        //PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable
        //PAR nat: PxOverlapCallbackPtr, man: physx.PxOverlapCallbackPtr, kind: PtrStruct
        //PAR nat: PxQueryFilterDataPtr, man: physx.PxQueryFilterDataPtr, kind: PtrStruct
        //PAR nat: PxQueryFilterCallbackPtr, man: physx.PxQueryFilterCallbackPtr, kind: PtrStruct
        public bool overlap<T>(T geometry, physx.PxTransform pose, physx.PxOverlapCallbackPtr hitCall, physx.PxQueryFilterDataPtr filterData, physx.PxQueryFilterCallbackPtr filterCall=default(physx.PxQueryFilterCallbackPtr)) where T : unmanaged, physx.PxGeometry.IPxGeometry {
            return overlap((physx.PxGeometry*)&geometry, (physx.PxTransform*)&pose, hitCall, filterData, filterCall);
        }

        //DBG: MethodNode physx::PxScene::overlap L1378-1380
        //Value Converter overlap
        //RET nat: bool, man: bool, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: physx::PxGeometry, man: physx.PxGeometry, kind: Blittable
        //PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable
        //PAR nat: PxOverlapCallbackPtr, man: physx.PxOverlapCallbackPtr, kind: PtrStruct
        //PAR nat: PxQueryFilterDataPtr, man: physx.PxQueryFilterDataPtr, kind: PtrStruct
        //PAR nat: PxQueryFilterCallbackPtr, man: physx.PxQueryFilterCallbackPtr, kind: PtrStruct
        public bool overlap(physx.PxGeometry.Ref geometry, physx.PxTransform.Ref pose, physx.PxOverlapCallbackPtr hitCall, physx.PxQueryFilterDataPtr filterData, physx.PxQueryFilterCallbackPtr filterCall=default(physx.PxQueryFilterCallbackPtr)) {
            return overlap((physx.PxGeometry*)(*((IntPtr*)(&geometry))), (physx.PxTransform*)(*((IntPtr*)(&pose))), hitCall, filterData, filterCall);
        }

        //DBG: MethodNode physx::PxScene::getBroadPhaseRegions L1427
        //RET nat: PxU32, man: uint, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: PxBroadPhaseRegionInfoPtr, man: physx.PxBroadPhaseRegionInfoPtr, kind: PtrStruct
        //PAR nat: PxU32, man: uint, kind: Value
        public uint getBroadPhaseRegions(physx.PxBroadPhaseRegionInfoPtr userBuffer, uint bufferSize) {
            physx.PxScenePtr pvk_in_this = this;
            physx.PxBroadPhaseRegionInfoPtr pvk_in_userBuffer = userBuffer;
            uint pvk_in_bufferSize = bufferSize;
            return uint_const_PxScenePtr_getBroadPhaseRegionsPtr_PxBroadPhaseRegionInfoPtr_uint_(pvk_in_this, pvk_in_userBuffer, pvk_in_bufferSize);
        }

        //DBG: MethodNode physx::PxScene::addBroadPhaseRegion L1445
        //RET nat: PxU32, man: uint, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: PxBroadPhaseRegionPtr, man: physx.PxBroadPhaseRegionPtr, kind: PtrStruct
        public uint addBroadPhaseRegion(physx.PxBroadPhaseRegionPtr region) {
            physx.PxScenePtr pvk_in_this = this;
            physx.PxBroadPhaseRegionPtr pvk_in_region = region;
            return uint_PxScenePtr_addBroadPhaseRegionPtr_PxBroadPhaseRegionPtr_(pvk_in_this, pvk_in_region);
        }

        //DBG: MethodNode physx::PxScene::lockRead L1496
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        public void lockRead() {
            physx.PxScenePtr pvk_in_this = this;
            void_PxScenePtr_lockReadPtr(pvk_in_this);
        }

        //DBG: MethodNode physx::PxScene::lockRead L1496
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: char*, man: string, kind: Value
        public void lockRead(string file=default(string)) {
            physx.PxScenePtr pvk_in_this = this;
            string pvk_in_file = file;
            void_PxScenePtr_lockReadPtr_string_(pvk_in_this, pvk_in_file);
        }

        //DBG: MethodNode physx::PxScene::lockWrite L1530
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        public void lockWrite() {
            physx.PxScenePtr pvk_in_this = this;
            void_PxScenePtr_lockWritePtr(pvk_in_this);
        }

        //DBG: MethodNode physx::PxScene::lockWrite L1530
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: char*, man: string, kind: Value
        public void lockWrite(string file=default(string)) {
            physx.PxScenePtr pvk_in_this = this;
            string pvk_in_file = file;
            void_PxScenePtr_lockWritePtr_string_(pvk_in_this, pvk_in_file);
        }

        //DBG: MethodNode physx::PxScene::shiftOrigin L1633
        //Value Converter shiftOrigin
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
        public void shiftOrigin(physx.PxVec3 shift) {
            shiftOrigin((physx.PxVec3*)&shift);
        }

        //DBG: MethodNode physx::PxScene::shiftOrigin L1633
        //Value Converter shiftOrigin
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxScenePtr, man: physx.PxScenePtr, kind: PtrStruct
        //PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
        public void shiftOrigin(physx.PxVec3.Ref shift) {
            shiftOrigin((physx.PxVec3*)(*((IntPtr*)(&shift))));
        }

        //Operators
    }

    //DBG: DeclNode PxActorTypeFlags physx::PxActorTypeFlags L122

    //DBG: DeclNode PxDominanceGroup physx::PxDominanceGroup L71
}
