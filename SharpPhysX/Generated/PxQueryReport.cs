// Generated by minBND 5.1.90.51 - Â© github.com/Alan-FGR
using System;
using System.Runtime.InteropServices;
using static minBND_pinvokes;

public static unsafe partial class physx {

    //DBG: FunctionNode physx::operator| L94
    //physx::operator| static physx.PxHitFlagsPtr OpPipe_New(physx.PxHitFlagEnum a, physx.PxHitFlagEnum b) will also be bound as member operator
    //RET nat: PxHitFlagsPtr, man: physx.PxHitFlagsPtr, ret: True, kind: PtrStruct
    //PAR nat: physx::PxHitFlag::Enum, man: physx.PxHitFlagEnum, kind: Value
    //PAR nat: physx::PxHitFlag::Enum, man: physx.PxHitFlagEnum, kind: Value
    public static physx.PxHitFlagsPtr OpPipe_New(physx.PxHitFlagEnum a, physx.PxHitFlagEnum b) {
        physx.PxHitFlagEnum pvk_in_a = a;
        physx.PxHitFlagEnum pvk_in_b = b;
        return PxHitFlagsPtr_operator_Ptr_Pipe_PxHitFlagEnum_PxHitFlagEnum_(pvk_in_a, pvk_in_b);
    }

    //DBG: FunctionNode physx::operator& L94
    //physx::operator& static physx.PxHitFlagsPtr OpAnd_New(physx.PxHitFlagEnum a, physx.PxHitFlagEnum b) will also be bound as member operator
    //RET nat: PxHitFlagsPtr, man: physx.PxHitFlagsPtr, ret: True, kind: PtrStruct
    //PAR nat: physx::PxHitFlag::Enum, man: physx.PxHitFlagEnum, kind: Value
    //PAR nat: physx::PxHitFlag::Enum, man: physx.PxHitFlagEnum, kind: Value
    public static physx.PxHitFlagsPtr OpAnd_New(physx.PxHitFlagEnum a, physx.PxHitFlagEnum b) {
        physx.PxHitFlagEnum pvk_in_a = a;
        physx.PxHitFlagEnum pvk_in_b = b;
        return PxHitFlagsPtr_operator_Ptr_Amp_PxHitFlagEnum_PxHitFlagEnum_(pvk_in_a, pvk_in_b);
    }

    //DBG: FunctionNode physx::operator~ L94
    //physx::operator~ static physx.PxHitFlagsPtr OpTilde_New(physx.PxHitFlagEnum a) will also be bound as member operator
    //RET nat: PxHitFlagsPtr, man: physx.PxHitFlagsPtr, ret: True, kind: PtrStruct
    //PAR nat: physx::PxHitFlag::Enum, man: physx.PxHitFlagEnum, kind: Value
    public static physx.PxHitFlagsPtr OpTilde_New(physx.PxHitFlagEnum a) {
        physx.PxHitFlagEnum pvk_in_a = a;
        return PxHitFlagsPtr_operator_Ptr_Tilde_PxHitFlagEnum_(pvk_in_a);
    }
    //Subclasses using this: 1

    public unsafe partial struct PxRaycastCallbackPtr : physx.PxRaycastCallbackPtr.IPxRaycastCallbackPtr {
        private System.IntPtr nativePtr_;

        //DBG: ClassNode PxHitCallback physx::PxHitCallback<global::SharpPhysX.physx.PxRaycastHit> L-1

        //DBG: Field: block - 234-234
        public physx.PxRaycastHitPtr block {
            get => PxRaycastCallbackPtr_GET_block(this);
            set => PxRaycastCallbackPtr_SET_block(this, value);
        }

        //DBG: Field: hasBlock - 235-235
        public bool hasBlock {
            get => PxRaycastCallbackPtr_GET_hasBlock(this);
            set => PxRaycastCallbackPtr_SET_hasBlock(this, value);
        }

        //DBG: Field: touches - 237-237
        public physx.PxRaycastHitPtr touches {
            get => PxRaycastCallbackPtr_GET_touches(this);
            set => PxRaycastCallbackPtr_SET_touches(this, value);
        }

        //DBG: Field: maxNbTouches - 243-243
        public uint maxNbTouches {
            get => PxRaycastCallbackPtr_GET_maxNbTouches(this);
            set => PxRaycastCallbackPtr_SET_maxNbTouches(this, value);
        }

        //DBG: Field: nbTouches - 248-248
        public uint nbTouches {
            get => PxRaycastCallbackPtr_GET_nbTouches(this);
            set => PxRaycastCallbackPtr_SET_nbTouches(this, value);
        }

        //DBG: MethodNode physx::PxHitCallback<global::SharpPhysX.physx.PxRaycastHit>::processTouches L285
        //RET nat: PxAgain, man: bool, ret: True, kind: Value
        //PAR nat: PxRaycastCallbackPtr, man: physx.PxRaycastCallbackPtr, kind: PtrStruct
        //PAR nat: PxRaycastHitPtr, man: physx.PxRaycastHitPtr, kind: PtrStruct
        //PAR nat: PxU32, man: uint, kind: Value
        public bool processTouches(physx.PxRaycastHitPtr buffer, uint nbHits) {
            physx.PxRaycastCallbackPtr pvk_in_this = this;
            physx.PxRaycastHitPtr pvk_in_buffer = buffer;
            uint pvk_in_nbHits = nbHits;
            return bool_PxRaycastCallbackPtr_processTouchesPtr_PxRaycastHitPtr_uint_(pvk_in_this, pvk_in_buffer, pvk_in_nbHits);
        }

        //DBG: MethodNode physx::PxHitCallback<global::SharpPhysX.physx.PxRaycastHit>::finalizeQuery L287
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxRaycastCallbackPtr, man: physx.PxRaycastCallbackPtr, kind: PtrStruct
        public void finalizeQuery() {
            physx.PxRaycastCallbackPtr pvk_in_this = this;
            void_PxRaycastCallbackPtr_finalizeQueryPtr(pvk_in_this);
        }

        //DBG: MethodNode physx::PxHitCallback<global::SharpPhysX.physx.PxRaycastHit>::~PxHitCallback L289
        //ERRORS in MethodNode: Destructor

        //DBG: MethodNode physx::PxHitCallback<global::SharpPhysX.physx.PxRaycastHit>::hasAnyHits L292
        //RET nat: bool, man: bool, ret: True, kind: Value
        //PAR nat: PxRaycastCallbackPtr, man: physx.PxRaycastCallbackPtr, kind: PtrStruct
        public bool hasAnyHits() {
            physx.PxRaycastCallbackPtr pvk_in_this = this;
            return bool_PxRaycastCallbackPtr_hasAnyHitsPtr(pvk_in_this);
        }

        //DBG: MethodNode physx::PxHitCallback<global::SharpPhysX.physx.PxRaycastHit>::operator= L232
        //ERRORS in MethodNode: Skipping Implicit MethodNode physx::PxHitCallback<global::SharpPhysX.physx.PxRaycastHit>::operator= L232

        //INTERFACES
        public unsafe interface IPxRaycastCallbackPtr {
            physx.PxRaycastHitPtr block {get;set;}
            bool hasBlock {get;set;}
            physx.PxRaycastHitPtr touches {get;set;}
            uint maxNbTouches {get;set;}
            uint nbTouches {get;set;}
            bool processTouches(physx.PxRaycastHitPtr buffer, uint nbHits);
            void finalizeQuery();
            bool hasAnyHits();
        }

        //Operators
    }
    //Subclasses using this: 1

    public unsafe partial struct PxSweepCallbackPtr : physx.PxSweepCallbackPtr.IPxSweepCallbackPtr {
        private System.IntPtr nativePtr_;

        //DBG: ClassNode PxHitCallback physx::PxHitCallback<global::SharpPhysX.physx.PxSweepHit> L-1

        //DBG: Field: block - 234-234
        public physx.PxSweepHitPtr block {
            get => PxSweepCallbackPtr_GET_block(this);
            set => PxSweepCallbackPtr_SET_block(this, value);
        }

        //DBG: Field: hasBlock - 235-235
        public bool hasBlock {
            get => PxSweepCallbackPtr_GET_hasBlock(this);
            set => PxSweepCallbackPtr_SET_hasBlock(this, value);
        }

        //DBG: Field: touches - 237-237
        public physx.PxSweepHitPtr touches {
            get => PxSweepCallbackPtr_GET_touches(this);
            set => PxSweepCallbackPtr_SET_touches(this, value);
        }

        //DBG: Field: maxNbTouches - 243-243
        public uint maxNbTouches {
            get => PxSweepCallbackPtr_GET_maxNbTouches(this);
            set => PxSweepCallbackPtr_SET_maxNbTouches(this, value);
        }

        //DBG: Field: nbTouches - 248-248
        public uint nbTouches {
            get => PxSweepCallbackPtr_GET_nbTouches(this);
            set => PxSweepCallbackPtr_SET_nbTouches(this, value);
        }

        //DBG: MethodNode physx::PxHitCallback<global::SharpPhysX.physx.PxSweepHit>::processTouches L285
        //RET nat: PxAgain, man: bool, ret: True, kind: Value
        //PAR nat: PxSweepCallbackPtr, man: physx.PxSweepCallbackPtr, kind: PtrStruct
        //PAR nat: PxSweepHitPtr, man: physx.PxSweepHitPtr, kind: PtrStruct
        //PAR nat: PxU32, man: uint, kind: Value
        public bool processTouches(physx.PxSweepHitPtr buffer, uint nbHits) {
            physx.PxSweepCallbackPtr pvk_in_this = this;
            physx.PxSweepHitPtr pvk_in_buffer = buffer;
            uint pvk_in_nbHits = nbHits;
            return bool_PxSweepCallbackPtr_processTouchesPtr_PxSweepHitPtr_uint_(pvk_in_this, pvk_in_buffer, pvk_in_nbHits);
        }

        //DBG: MethodNode physx::PxHitCallback<global::SharpPhysX.physx.PxSweepHit>::finalizeQuery L287
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxSweepCallbackPtr, man: physx.PxSweepCallbackPtr, kind: PtrStruct
        public void finalizeQuery() {
            physx.PxSweepCallbackPtr pvk_in_this = this;
            void_PxSweepCallbackPtr_finalizeQueryPtr(pvk_in_this);
        }

        //DBG: MethodNode physx::PxHitCallback<global::SharpPhysX.physx.PxSweepHit>::~PxHitCallback L289
        //ERRORS in MethodNode: Destructor

        //DBG: MethodNode physx::PxHitCallback<global::SharpPhysX.physx.PxSweepHit>::hasAnyHits L292
        //RET nat: bool, man: bool, ret: True, kind: Value
        //PAR nat: PxSweepCallbackPtr, man: physx.PxSweepCallbackPtr, kind: PtrStruct
        public bool hasAnyHits() {
            physx.PxSweepCallbackPtr pvk_in_this = this;
            return bool_PxSweepCallbackPtr_hasAnyHitsPtr(pvk_in_this);
        }

        //DBG: MethodNode physx::PxHitCallback<global::SharpPhysX.physx.PxSweepHit>::operator= L232
        //ERRORS in MethodNode: Skipping Implicit MethodNode physx::PxHitCallback<global::SharpPhysX.physx.PxSweepHit>::operator= L232

        //INTERFACES
        public unsafe interface IPxSweepCallbackPtr {
            physx.PxSweepHitPtr block {get;set;}
            bool hasBlock {get;set;}
            physx.PxSweepHitPtr touches {get;set;}
            uint maxNbTouches {get;set;}
            uint nbTouches {get;set;}
            bool processTouches(physx.PxSweepHitPtr buffer, uint nbHits);
            void finalizeQuery();
            bool hasAnyHits();
        }

        //Operators
    }
    //Subclasses using this: 1

    public unsafe partial struct PxOverlapCallbackPtr : physx.PxOverlapCallbackPtr.IPxOverlapCallbackPtr {
        private System.IntPtr nativePtr_;

        //DBG: ClassNode PxHitCallback physx::PxHitCallback<global::SharpPhysX.physx.PxOverlapHit> L-1

        //DBG: Field: block - 234-234
        public physx.PxOverlapHitPtr block {
            get => PxOverlapCallbackPtr_GET_block(this);
            set => PxOverlapCallbackPtr_SET_block(this, value);
        }

        //DBG: Field: hasBlock - 235-235
        public bool hasBlock {
            get => PxOverlapCallbackPtr_GET_hasBlock(this);
            set => PxOverlapCallbackPtr_SET_hasBlock(this, value);
        }

        //DBG: Field: touches - 237-237
        public physx.PxOverlapHitPtr touches {
            get => PxOverlapCallbackPtr_GET_touches(this);
            set => PxOverlapCallbackPtr_SET_touches(this, value);
        }

        //DBG: Field: maxNbTouches - 243-243
        public uint maxNbTouches {
            get => PxOverlapCallbackPtr_GET_maxNbTouches(this);
            set => PxOverlapCallbackPtr_SET_maxNbTouches(this, value);
        }

        //DBG: Field: nbTouches - 248-248
        public uint nbTouches {
            get => PxOverlapCallbackPtr_GET_nbTouches(this);
            set => PxOverlapCallbackPtr_SET_nbTouches(this, value);
        }

        //DBG: MethodNode physx::PxHitCallback<global::SharpPhysX.physx.PxOverlapHit>::processTouches L285
        //RET nat: PxAgain, man: bool, ret: True, kind: Value
        //PAR nat: PxOverlapCallbackPtr, man: physx.PxOverlapCallbackPtr, kind: PtrStruct
        //PAR nat: PxOverlapHitPtr, man: physx.PxOverlapHitPtr, kind: PtrStruct
        //PAR nat: PxU32, man: uint, kind: Value
        public bool processTouches(physx.PxOverlapHitPtr buffer, uint nbHits) {
            physx.PxOverlapCallbackPtr pvk_in_this = this;
            physx.PxOverlapHitPtr pvk_in_buffer = buffer;
            uint pvk_in_nbHits = nbHits;
            return bool_PxOverlapCallbackPtr_processTouchesPtr_PxOverlapHitPtr_uint_(pvk_in_this, pvk_in_buffer, pvk_in_nbHits);
        }

        //DBG: MethodNode physx::PxHitCallback<global::SharpPhysX.physx.PxOverlapHit>::finalizeQuery L287
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxOverlapCallbackPtr, man: physx.PxOverlapCallbackPtr, kind: PtrStruct
        public void finalizeQuery() {
            physx.PxOverlapCallbackPtr pvk_in_this = this;
            void_PxOverlapCallbackPtr_finalizeQueryPtr(pvk_in_this);
        }

        //DBG: MethodNode physx::PxHitCallback<global::SharpPhysX.physx.PxOverlapHit>::~PxHitCallback L289
        //ERRORS in MethodNode: Destructor

        //DBG: MethodNode physx::PxHitCallback<global::SharpPhysX.physx.PxOverlapHit>::hasAnyHits L292
        //RET nat: bool, man: bool, ret: True, kind: Value
        //PAR nat: PxOverlapCallbackPtr, man: physx.PxOverlapCallbackPtr, kind: PtrStruct
        public bool hasAnyHits() {
            physx.PxOverlapCallbackPtr pvk_in_this = this;
            return bool_PxOverlapCallbackPtr_hasAnyHitsPtr(pvk_in_this);
        }

        //DBG: MethodNode physx::PxHitCallback<global::SharpPhysX.physx.PxOverlapHit>::operator= L232
        //ERRORS in MethodNode: Skipping Implicit MethodNode physx::PxHitCallback<global::SharpPhysX.physx.PxOverlapHit>::operator= L232

        //INTERFACES
        public unsafe interface IPxOverlapCallbackPtr {
            physx.PxOverlapHitPtr block {get;set;}
            bool hasBlock {get;set;}
            physx.PxOverlapHitPtr touches {get;set;}
            uint maxNbTouches {get;set;}
            uint nbTouches {get;set;}
            bool processTouches(physx.PxOverlapHitPtr buffer, uint nbHits);
            void finalizeQuery();
            bool hasAnyHits();
        }

        //Operators
    }
    //Subclasses using this: 0

    public unsafe partial struct PxRaycastBufferPtr : physx.PxRaycastCallbackPtr.IPxRaycastCallbackPtr {
        private System.IntPtr nativePtr_;

        //DBG: ClassNode PxHitBuffer physx::PxHitBuffer<global::SharpPhysX.physx.PxRaycastHit> L-1Bases: PxRaycastCallbackPtr

        //DBG: NewerFreerNode PxHitBuffer physx::PxHitBuffer<global::SharpPhysX.physx.PxRaycastHit> L-1
        public static void Free(physx.PxRaycastBufferPtr ptr){
            Freer_physx_PxRaycastBufferPtr(ptr);
        }
        public void Free(){
            Freer_physx_PxRaycastBufferPtr(this);
        }

        //DBG: PtrWrapperCtorNode physx::PxHitBuffer<global::SharpPhysX.physx.PxRaycastHit>::PxHitBuffer L322
        //RET nat: PxRaycastBufferPtr, man: physx.PxRaycastBufferPtr, ret: True, kind: PtrStruct
        //PAR nat: PxRaycastHitPtr, man: physx.PxRaycastHitPtr, kind: PtrStruct
        //PAR nat: PxU32, man: uint, kind: Value
        public static physx.PxRaycastBufferPtr New(physx.PxRaycastHitPtr aTouches=default(physx.PxRaycastHitPtr), uint aMaxNbTouches=0) {
            physx.PxRaycastHitPtr pvk_in_aTouches = aTouches;
            uint pvk_in_aMaxNbTouches = aMaxNbTouches;
            return Ctor_PxRaycastBufferPtr_PxRaycastHitPtr_uint(pvk_in_aTouches, pvk_in_aMaxNbTouches);
        }

        //DBG: PtrWrapperCtorNode physx::PxHitBuffer<global::SharpPhysX.physx.PxRaycastHit>::PxHitBuffer L310
        //ERRORS in PtrWrapperCtorNode: Skipping Implicit PtrWrapperCtorNode physx::PxHitBuffer<global::SharpPhysX.physx.PxRaycastHit>::PxHitBuffer L310

        //DBG: PtrWrapperCtorNode physx::PxHitBuffer<global::SharpPhysX.physx.PxRaycastHit>::PxHitBuffer L322
        //RET nat: PxRaycastBufferPtr, man: physx.PxRaycastBufferPtr, ret: True, kind: PtrStruct
        public static physx.PxRaycastBufferPtr New() {
            return Ctor_PxRaycastBufferPtr_();
        }

        //DBG: PtrWrapperCtorNode physx::PxHitBuffer<global::SharpPhysX.physx.PxRaycastHit>::PxHitBuffer L322
        //RET nat: PxRaycastBufferPtr, man: physx.PxRaycastBufferPtr, ret: True, kind: PtrStruct
        //PAR nat: PxRaycastHitPtr, man: physx.PxRaycastHitPtr, kind: PtrStruct
        public static physx.PxRaycastBufferPtr New(physx.PxRaycastHitPtr aTouches=default(physx.PxRaycastHitPtr)) {
            physx.PxRaycastHitPtr pvk_in_aTouches = aTouches;
            return Ctor_PxRaycastBufferPtr_PxRaycastHitPtr(pvk_in_aTouches);
        }

        //DBG: MethodNode physx::PxHitBuffer<global::SharpPhysX.physx.PxRaycastHit>::getNbAnyHits L325
        //RET nat: PxU32, man: uint, ret: True, kind: Value
        //PAR nat: PxRaycastBufferPtr, man: physx.PxRaycastBufferPtr, kind: PtrStruct
        public uint getNbAnyHits() {
            physx.PxRaycastBufferPtr pvk_in_this = this;
            return uint_const_PxRaycastBufferPtr_getNbAnyHitsPtr(pvk_in_this);
        }

        //DBG: MethodNode physx::PxHitBuffer<global::SharpPhysX.physx.PxRaycastHit>::getAnyHit L327
        //RET nat: PxRaycastHitPtr, man: physx.PxRaycastHitPtr, ret: True, kind: PtrStruct
        //PAR nat: PxRaycastBufferPtr, man: physx.PxRaycastBufferPtr, kind: PtrStruct
        //PAR nat: PxU32, man: uint, kind: Value
        public physx.PxRaycastHitPtr getAnyHit(uint index) {
            physx.PxRaycastBufferPtr pvk_in_this = this;
            uint pvk_in_index = index;
            return PxRaycastHitPtr_const_PxRaycastBufferPtr_getAnyHitPtr_uintC(pvk_in_this, pvk_in_index);
        }

        //DBG: MethodNode physx::PxHitBuffer<global::SharpPhysX.physx.PxRaycastHit>::getNbTouches L330
        //RET nat: PxU32, man: uint, ret: True, kind: Value
        //PAR nat: PxRaycastBufferPtr, man: physx.PxRaycastBufferPtr, kind: PtrStruct
        public uint getNbTouches() {
            physx.PxRaycastBufferPtr pvk_in_this = this;
            return uint_const_PxRaycastBufferPtr_getNbTouchesPtr(pvk_in_this);
        }

        //DBG: MethodNode physx::PxHitBuffer<global::SharpPhysX.physx.PxRaycastHit>::getTouches L331
        //RET nat: PxRaycastHitPtr, man: physx.PxRaycastHitPtr, ret: True, kind: PtrStruct
        //PAR nat: PxRaycastBufferPtr, man: physx.PxRaycastBufferPtr, kind: PtrStruct
        public physx.PxRaycastHitPtr getTouches() {
            physx.PxRaycastBufferPtr pvk_in_this = this;
            return PxRaycastHitPtr_const_PxRaycastBufferPtr_getTouchesPtr(pvk_in_this);
        }

        //DBG: MethodNode physx::PxHitBuffer<global::SharpPhysX.physx.PxRaycastHit>::getTouch L332
        //RET nat: PxRaycastHitPtr, man: physx.PxRaycastHitPtr, ret: True, kind: PtrStruct
        //PAR nat: PxRaycastBufferPtr, man: physx.PxRaycastBufferPtr, kind: PtrStruct
        //PAR nat: PxU32, man: uint, kind: Value
        public physx.PxRaycastHitPtr getTouch(uint index) {
            physx.PxRaycastBufferPtr pvk_in_this = this;
            uint pvk_in_index = index;
            return PxRaycastHitPtr_const_PxRaycastBufferPtr_getTouchPtr_uintC(pvk_in_this, pvk_in_index);
        }

        //DBG: MethodNode physx::PxHitBuffer<global::SharpPhysX.physx.PxRaycastHit>::getMaxNbTouches L333
        //RET nat: PxU32, man: uint, ret: True, kind: Value
        //PAR nat: PxRaycastBufferPtr, man: physx.PxRaycastBufferPtr, kind: PtrStruct
        public uint getMaxNbTouches() {
            physx.PxRaycastBufferPtr pvk_in_this = this;
            return uint_const_PxRaycastBufferPtr_getMaxNbTouchesPtr(pvk_in_this);
        }

        //DBG: MethodNode physx::PxHitBuffer<global::SharpPhysX.physx.PxRaycastHit>::~PxHitBuffer L335
        //ERRORS in MethodNode: Destructor

        //DBG: MethodNode physx::PxHitBuffer<global::SharpPhysX.physx.PxRaycastHit>::operator= L310
        //ERRORS in MethodNode: Skipping Implicit MethodNode physx::PxHitBuffer<global::SharpPhysX.physx.PxRaycastHit>::operator= L310
        public static implicit operator physx.PxRaycastCallbackPtr(PxRaycastBufferPtr obj) => *(physx.PxRaycastCallbackPtr*)&obj;
        public static explicit operator PxRaycastBufferPtr(physx.PxRaycastCallbackPtr obj) => *(PxRaycastBufferPtr*)&obj;

        //DBG: Field: block - 234-234
        public physx.PxRaycastHitPtr block {
            get => PxRaycastCallbackPtr_GET_block(this);
            set => PxRaycastCallbackPtr_SET_block(this, value);
        }

        //DBG: Field: hasBlock - 235-235
        public bool hasBlock {
            get => PxRaycastCallbackPtr_GET_hasBlock(this);
            set => PxRaycastCallbackPtr_SET_hasBlock(this, value);
        }

        //DBG: Field: touches - 237-237
        public physx.PxRaycastHitPtr touches {
            get => PxRaycastCallbackPtr_GET_touches(this);
            set => PxRaycastCallbackPtr_SET_touches(this, value);
        }

        //DBG: Field: maxNbTouches - 243-243
        public uint maxNbTouches {
            get => PxRaycastCallbackPtr_GET_maxNbTouches(this);
            set => PxRaycastCallbackPtr_SET_maxNbTouches(this, value);
        }

        //DBG: Field: nbTouches - 248-248
        public uint nbTouches {
            get => PxRaycastCallbackPtr_GET_nbTouches(this);
            set => PxRaycastCallbackPtr_SET_nbTouches(this, value);
        }

        //PIPING
        public bool processTouches(physx.PxRaycastHitPtr buffer, uint nbHits){return((physx.PxRaycastCallbackPtr)this).processTouches(buffer, nbHits);}
        public void finalizeQuery(){((physx.PxRaycastCallbackPtr)this).finalizeQuery();}
        public bool hasAnyHits(){return((physx.PxRaycastCallbackPtr)this).hasAnyHits();}

        //Operators
    }
    //Subclasses using this: 0

    public unsafe partial struct PxOverlapBufferPtr : physx.PxOverlapCallbackPtr.IPxOverlapCallbackPtr {
        private System.IntPtr nativePtr_;

        //DBG: ClassNode PxHitBuffer physx::PxHitBuffer<global::SharpPhysX.physx.PxOverlapHit> L-1Bases: PxOverlapCallbackPtr

        //DBG: NewerFreerNode PxHitBuffer physx::PxHitBuffer<global::SharpPhysX.physx.PxOverlapHit> L-1
        public static void Free(physx.PxOverlapBufferPtr ptr){
            Freer_physx_PxOverlapBufferPtr(ptr);
        }
        public void Free(){
            Freer_physx_PxOverlapBufferPtr(this);
        }

        //DBG: PtrWrapperCtorNode physx::PxHitBuffer<global::SharpPhysX.physx.PxOverlapHit>::PxHitBuffer L322
        //RET nat: PxOverlapBufferPtr, man: physx.PxOverlapBufferPtr, ret: True, kind: PtrStruct
        //PAR nat: PxOverlapHitPtr, man: physx.PxOverlapHitPtr, kind: PtrStruct
        //PAR nat: PxU32, man: uint, kind: Value
        public static physx.PxOverlapBufferPtr New(physx.PxOverlapHitPtr aTouches=default(physx.PxOverlapHitPtr), uint aMaxNbTouches=0) {
            physx.PxOverlapHitPtr pvk_in_aTouches = aTouches;
            uint pvk_in_aMaxNbTouches = aMaxNbTouches;
            return Ctor_PxOverlapBufferPtr_PxOverlapHitPtr_uint(pvk_in_aTouches, pvk_in_aMaxNbTouches);
        }

        //DBG: PtrWrapperCtorNode physx::PxHitBuffer<global::SharpPhysX.physx.PxOverlapHit>::PxHitBuffer L310
        //ERRORS in PtrWrapperCtorNode: Skipping Implicit PtrWrapperCtorNode physx::PxHitBuffer<global::SharpPhysX.physx.PxOverlapHit>::PxHitBuffer L310

        //DBG: PtrWrapperCtorNode physx::PxHitBuffer<global::SharpPhysX.physx.PxOverlapHit>::PxHitBuffer L322
        //RET nat: PxOverlapBufferPtr, man: physx.PxOverlapBufferPtr, ret: True, kind: PtrStruct
        public static physx.PxOverlapBufferPtr New() {
            return Ctor_PxOverlapBufferPtr_();
        }

        //DBG: PtrWrapperCtorNode physx::PxHitBuffer<global::SharpPhysX.physx.PxOverlapHit>::PxHitBuffer L322
        //RET nat: PxOverlapBufferPtr, man: physx.PxOverlapBufferPtr, ret: True, kind: PtrStruct
        //PAR nat: PxOverlapHitPtr, man: physx.PxOverlapHitPtr, kind: PtrStruct
        public static physx.PxOverlapBufferPtr New(physx.PxOverlapHitPtr aTouches=default(physx.PxOverlapHitPtr)) {
            physx.PxOverlapHitPtr pvk_in_aTouches = aTouches;
            return Ctor_PxOverlapBufferPtr_PxOverlapHitPtr(pvk_in_aTouches);
        }

        //DBG: MethodNode physx::PxHitBuffer<global::SharpPhysX.physx.PxOverlapHit>::getNbAnyHits L325
        //RET nat: PxU32, man: uint, ret: True, kind: Value
        //PAR nat: PxOverlapBufferPtr, man: physx.PxOverlapBufferPtr, kind: PtrStruct
        public uint getNbAnyHits() {
            physx.PxOverlapBufferPtr pvk_in_this = this;
            return uint_const_PxOverlapBufferPtr_getNbAnyHitsPtr(pvk_in_this);
        }

        //DBG: MethodNode physx::PxHitBuffer<global::SharpPhysX.physx.PxOverlapHit>::getAnyHit L327
        //RET nat: PxOverlapHitPtr, man: physx.PxOverlapHitPtr, ret: True, kind: PtrStruct
        //PAR nat: PxOverlapBufferPtr, man: physx.PxOverlapBufferPtr, kind: PtrStruct
        //PAR nat: PxU32, man: uint, kind: Value
        public physx.PxOverlapHitPtr getAnyHit(uint index) {
            physx.PxOverlapBufferPtr pvk_in_this = this;
            uint pvk_in_index = index;
            return PxOverlapHitPtr_const_PxOverlapBufferPtr_getAnyHitPtr_uintC(pvk_in_this, pvk_in_index);
        }

        //DBG: MethodNode physx::PxHitBuffer<global::SharpPhysX.physx.PxOverlapHit>::getNbTouches L330
        //RET nat: PxU32, man: uint, ret: True, kind: Value
        //PAR nat: PxOverlapBufferPtr, man: physx.PxOverlapBufferPtr, kind: PtrStruct
        public uint getNbTouches() {
            physx.PxOverlapBufferPtr pvk_in_this = this;
            return uint_const_PxOverlapBufferPtr_getNbTouchesPtr(pvk_in_this);
        }

        //DBG: MethodNode physx::PxHitBuffer<global::SharpPhysX.physx.PxOverlapHit>::getTouches L331
        //RET nat: PxOverlapHitPtr, man: physx.PxOverlapHitPtr, ret: True, kind: PtrStruct
        //PAR nat: PxOverlapBufferPtr, man: physx.PxOverlapBufferPtr, kind: PtrStruct
        public physx.PxOverlapHitPtr getTouches() {
            physx.PxOverlapBufferPtr pvk_in_this = this;
            return PxOverlapHitPtr_const_PxOverlapBufferPtr_getTouchesPtr(pvk_in_this);
        }

        //DBG: MethodNode physx::PxHitBuffer<global::SharpPhysX.physx.PxOverlapHit>::getTouch L332
        //RET nat: PxOverlapHitPtr, man: physx.PxOverlapHitPtr, ret: True, kind: PtrStruct
        //PAR nat: PxOverlapBufferPtr, man: physx.PxOverlapBufferPtr, kind: PtrStruct
        //PAR nat: PxU32, man: uint, kind: Value
        public physx.PxOverlapHitPtr getTouch(uint index) {
            physx.PxOverlapBufferPtr pvk_in_this = this;
            uint pvk_in_index = index;
            return PxOverlapHitPtr_const_PxOverlapBufferPtr_getTouchPtr_uintC(pvk_in_this, pvk_in_index);
        }

        //DBG: MethodNode physx::PxHitBuffer<global::SharpPhysX.physx.PxOverlapHit>::getMaxNbTouches L333
        //RET nat: PxU32, man: uint, ret: True, kind: Value
        //PAR nat: PxOverlapBufferPtr, man: physx.PxOverlapBufferPtr, kind: PtrStruct
        public uint getMaxNbTouches() {
            physx.PxOverlapBufferPtr pvk_in_this = this;
            return uint_const_PxOverlapBufferPtr_getMaxNbTouchesPtr(pvk_in_this);
        }

        //DBG: MethodNode physx::PxHitBuffer<global::SharpPhysX.physx.PxOverlapHit>::~PxHitBuffer L335
        //ERRORS in MethodNode: Destructor

        //DBG: MethodNode physx::PxHitBuffer<global::SharpPhysX.physx.PxOverlapHit>::operator= L310
        //ERRORS in MethodNode: Skipping Implicit MethodNode physx::PxHitBuffer<global::SharpPhysX.physx.PxOverlapHit>::operator= L310
        public static implicit operator physx.PxOverlapCallbackPtr(PxOverlapBufferPtr obj) => *(physx.PxOverlapCallbackPtr*)&obj;
        public static explicit operator PxOverlapBufferPtr(physx.PxOverlapCallbackPtr obj) => *(PxOverlapBufferPtr*)&obj;

        //DBG: Field: block - 234-234
        public physx.PxOverlapHitPtr block {
            get => PxOverlapCallbackPtr_GET_block(this);
            set => PxOverlapCallbackPtr_SET_block(this, value);
        }

        //DBG: Field: hasBlock - 235-235
        public bool hasBlock {
            get => PxOverlapCallbackPtr_GET_hasBlock(this);
            set => PxOverlapCallbackPtr_SET_hasBlock(this, value);
        }

        //DBG: Field: touches - 237-237
        public physx.PxOverlapHitPtr touches {
            get => PxOverlapCallbackPtr_GET_touches(this);
            set => PxOverlapCallbackPtr_SET_touches(this, value);
        }

        //DBG: Field: maxNbTouches - 243-243
        public uint maxNbTouches {
            get => PxOverlapCallbackPtr_GET_maxNbTouches(this);
            set => PxOverlapCallbackPtr_SET_maxNbTouches(this, value);
        }

        //DBG: Field: nbTouches - 248-248
        public uint nbTouches {
            get => PxOverlapCallbackPtr_GET_nbTouches(this);
            set => PxOverlapCallbackPtr_SET_nbTouches(this, value);
        }

        //PIPING
        public bool processTouches(physx.PxOverlapHitPtr buffer, uint nbHits){return((physx.PxOverlapCallbackPtr)this).processTouches(buffer, nbHits);}
        public void finalizeQuery(){((physx.PxOverlapCallbackPtr)this).finalizeQuery();}
        public bool hasAnyHits(){return((physx.PxOverlapCallbackPtr)this).hasAnyHits();}

        //Operators
    }
    //Subclasses using this: 0

    public unsafe partial struct PxSweepBufferPtr : physx.PxSweepCallbackPtr.IPxSweepCallbackPtr {
        private System.IntPtr nativePtr_;

        //DBG: ClassNode PxHitBuffer physx::PxHitBuffer<global::SharpPhysX.physx.PxSweepHit> L-1Bases: PxSweepCallbackPtr

        //DBG: NewerFreerNode PxHitBuffer physx::PxHitBuffer<global::SharpPhysX.physx.PxSweepHit> L-1
        public static void Free(physx.PxSweepBufferPtr ptr){
            Freer_physx_PxSweepBufferPtr(ptr);
        }
        public void Free(){
            Freer_physx_PxSweepBufferPtr(this);
        }

        //DBG: PtrWrapperCtorNode physx::PxHitBuffer<global::SharpPhysX.physx.PxSweepHit>::PxHitBuffer L322
        //RET nat: PxSweepBufferPtr, man: physx.PxSweepBufferPtr, ret: True, kind: PtrStruct
        //PAR nat: PxSweepHitPtr, man: physx.PxSweepHitPtr, kind: PtrStruct
        //PAR nat: PxU32, man: uint, kind: Value
        public static physx.PxSweepBufferPtr New(physx.PxSweepHitPtr aTouches=default(physx.PxSweepHitPtr), uint aMaxNbTouches=0) {
            physx.PxSweepHitPtr pvk_in_aTouches = aTouches;
            uint pvk_in_aMaxNbTouches = aMaxNbTouches;
            return Ctor_PxSweepBufferPtr_PxSweepHitPtr_uint(pvk_in_aTouches, pvk_in_aMaxNbTouches);
        }

        //DBG: PtrWrapperCtorNode physx::PxHitBuffer<global::SharpPhysX.physx.PxSweepHit>::PxHitBuffer L310
        //ERRORS in PtrWrapperCtorNode: Skipping Implicit PtrWrapperCtorNode physx::PxHitBuffer<global::SharpPhysX.physx.PxSweepHit>::PxHitBuffer L310

        //DBG: PtrWrapperCtorNode physx::PxHitBuffer<global::SharpPhysX.physx.PxSweepHit>::PxHitBuffer L322
        //RET nat: PxSweepBufferPtr, man: physx.PxSweepBufferPtr, ret: True, kind: PtrStruct
        public static physx.PxSweepBufferPtr New() {
            return Ctor_PxSweepBufferPtr_();
        }

        //DBG: PtrWrapperCtorNode physx::PxHitBuffer<global::SharpPhysX.physx.PxSweepHit>::PxHitBuffer L322
        //RET nat: PxSweepBufferPtr, man: physx.PxSweepBufferPtr, ret: True, kind: PtrStruct
        //PAR nat: PxSweepHitPtr, man: physx.PxSweepHitPtr, kind: PtrStruct
        public static physx.PxSweepBufferPtr New(physx.PxSweepHitPtr aTouches=default(physx.PxSweepHitPtr)) {
            physx.PxSweepHitPtr pvk_in_aTouches = aTouches;
            return Ctor_PxSweepBufferPtr_PxSweepHitPtr(pvk_in_aTouches);
        }

        //DBG: MethodNode physx::PxHitBuffer<global::SharpPhysX.physx.PxSweepHit>::getNbAnyHits L325
        //RET nat: PxU32, man: uint, ret: True, kind: Value
        //PAR nat: PxSweepBufferPtr, man: physx.PxSweepBufferPtr, kind: PtrStruct
        public uint getNbAnyHits() {
            physx.PxSweepBufferPtr pvk_in_this = this;
            return uint_const_PxSweepBufferPtr_getNbAnyHitsPtr(pvk_in_this);
        }

        //DBG: MethodNode physx::PxHitBuffer<global::SharpPhysX.physx.PxSweepHit>::getAnyHit L327
        //RET nat: PxSweepHitPtr, man: physx.PxSweepHitPtr, ret: True, kind: PtrStruct
        //PAR nat: PxSweepBufferPtr, man: physx.PxSweepBufferPtr, kind: PtrStruct
        //PAR nat: PxU32, man: uint, kind: Value
        public physx.PxSweepHitPtr getAnyHit(uint index) {
            physx.PxSweepBufferPtr pvk_in_this = this;
            uint pvk_in_index = index;
            return PxSweepHitPtr_const_PxSweepBufferPtr_getAnyHitPtr_uintC(pvk_in_this, pvk_in_index);
        }

        //DBG: MethodNode physx::PxHitBuffer<global::SharpPhysX.physx.PxSweepHit>::getNbTouches L330
        //RET nat: PxU32, man: uint, ret: True, kind: Value
        //PAR nat: PxSweepBufferPtr, man: physx.PxSweepBufferPtr, kind: PtrStruct
        public uint getNbTouches() {
            physx.PxSweepBufferPtr pvk_in_this = this;
            return uint_const_PxSweepBufferPtr_getNbTouchesPtr(pvk_in_this);
        }

        //DBG: MethodNode physx::PxHitBuffer<global::SharpPhysX.physx.PxSweepHit>::getTouches L331
        //RET nat: PxSweepHitPtr, man: physx.PxSweepHitPtr, ret: True, kind: PtrStruct
        //PAR nat: PxSweepBufferPtr, man: physx.PxSweepBufferPtr, kind: PtrStruct
        public physx.PxSweepHitPtr getTouches() {
            physx.PxSweepBufferPtr pvk_in_this = this;
            return PxSweepHitPtr_const_PxSweepBufferPtr_getTouchesPtr(pvk_in_this);
        }

        //DBG: MethodNode physx::PxHitBuffer<global::SharpPhysX.physx.PxSweepHit>::getTouch L332
        //RET nat: PxSweepHitPtr, man: physx.PxSweepHitPtr, ret: True, kind: PtrStruct
        //PAR nat: PxSweepBufferPtr, man: physx.PxSweepBufferPtr, kind: PtrStruct
        //PAR nat: PxU32, man: uint, kind: Value
        public physx.PxSweepHitPtr getTouch(uint index) {
            physx.PxSweepBufferPtr pvk_in_this = this;
            uint pvk_in_index = index;
            return PxSweepHitPtr_const_PxSweepBufferPtr_getTouchPtr_uintC(pvk_in_this, pvk_in_index);
        }

        //DBG: MethodNode physx::PxHitBuffer<global::SharpPhysX.physx.PxSweepHit>::getMaxNbTouches L333
        //RET nat: PxU32, man: uint, ret: True, kind: Value
        //PAR nat: PxSweepBufferPtr, man: physx.PxSweepBufferPtr, kind: PtrStruct
        public uint getMaxNbTouches() {
            physx.PxSweepBufferPtr pvk_in_this = this;
            return uint_const_PxSweepBufferPtr_getMaxNbTouchesPtr(pvk_in_this);
        }

        //DBG: MethodNode physx::PxHitBuffer<global::SharpPhysX.physx.PxSweepHit>::~PxHitBuffer L335
        //ERRORS in MethodNode: Destructor

        //DBG: MethodNode physx::PxHitBuffer<global::SharpPhysX.physx.PxSweepHit>::operator= L310
        //ERRORS in MethodNode: Skipping Implicit MethodNode physx::PxHitBuffer<global::SharpPhysX.physx.PxSweepHit>::operator= L310
        public static implicit operator physx.PxSweepCallbackPtr(PxSweepBufferPtr obj) => *(physx.PxSweepCallbackPtr*)&obj;
        public static explicit operator PxSweepBufferPtr(physx.PxSweepCallbackPtr obj) => *(PxSweepBufferPtr*)&obj;

        //DBG: Field: block - 234-234
        public physx.PxSweepHitPtr block {
            get => PxSweepCallbackPtr_GET_block(this);
            set => PxSweepCallbackPtr_SET_block(this, value);
        }

        //DBG: Field: hasBlock - 235-235
        public bool hasBlock {
            get => PxSweepCallbackPtr_GET_hasBlock(this);
            set => PxSweepCallbackPtr_SET_hasBlock(this, value);
        }

        //DBG: Field: touches - 237-237
        public physx.PxSweepHitPtr touches {
            get => PxSweepCallbackPtr_GET_touches(this);
            set => PxSweepCallbackPtr_SET_touches(this, value);
        }

        //DBG: Field: maxNbTouches - 243-243
        public uint maxNbTouches {
            get => PxSweepCallbackPtr_GET_maxNbTouches(this);
            set => PxSweepCallbackPtr_SET_maxNbTouches(this, value);
        }

        //DBG: Field: nbTouches - 248-248
        public uint nbTouches {
            get => PxSweepCallbackPtr_GET_nbTouches(this);
            set => PxSweepCallbackPtr_SET_nbTouches(this, value);
        }

        //PIPING
        public bool processTouches(physx.PxSweepHitPtr buffer, uint nbHits){return((physx.PxSweepCallbackPtr)this).processTouches(buffer, nbHits);}
        public void finalizeQuery(){((physx.PxSweepCallbackPtr)this).finalizeQuery();}
        public bool hasAnyHits(){return((physx.PxSweepCallbackPtr)this).hasAnyHits();}

        //Operators
    }

    //DBG: ClassNode PxHitFlag physx::PxHitFlag L61-86
    public enum PxHitFlagEnum : int {
        ePOSITION = 1,                   // ePOSITION = (1<<0)
        eNORMAL = 2,                     // eNORMAL = (1<<1)
        eUV = 8,                         // eUV = (1<<3)
        eASSUME_NO_INITIAL_OVERLAP = 16, // eASSUME_NO_INITIAL_OVERLAP = (1<<4)
        eMESH_MULTIPLE = 32,             // eMESH_MULTIPLE = (1<<5)
        eMESH_ANY = 64,                  // eMESH_ANY = (1<<6)
        eMESH_BOTH_SIDES = 128,          // eMESH_BOTH_SIDES = (1<<7)
        ePRECISE_SWEEP = 256,            // ePRECISE_SWEEP = (1<<8)
        eMTD = 512,                      // eMTD = (1<<9)
        eFACE_INDEX = 1024,              // eFACE_INDEX = (1<<10)
        eDEFAULT = 1027,                 // eDEFAULT = ePOSITION|eNORMAL|eFACE_INDEX
        eMODIFIABLE_FLAGS = 432,         // eMODIFIABLE_FLAGS = eMESH_MULTIPLE|eMESH_BOTH_SIDES|eASSUME_NO_INITIAL_OVERLAP|ePRECISE_SWEEP
    }
    //Subclasses using this: 5

    public unsafe partial struct PxActorShapePtr : physx.PxActorShapePtr.IPxActorShapePtr {
        private System.IntPtr nativePtr_;

        //DBG: ClassNode PxActorShape physx::PxActorShape L103-110

        //DBG: NewerFreerNode PxActorShape physx::PxActorShape L103-110
        public static void Free(physx.PxActorShapePtr ptr){
            Freer_physx_PxActorShapePtr(ptr);
        }
        public void Free(){
            Freer_physx_PxActorShapePtr(this);
        }

        //DBG: PtrWrapperCtorNode physx::PxActorShape::PxActorShape L105
        //RET nat: PxActorShapePtr, man: physx.PxActorShapePtr, ret: True, kind: PtrStruct
        public static physx.PxActorShapePtr New() {
            return Ctor_PxActorShapePtr_();
        }

        //DBG: PtrWrapperCtorNode physx::PxActorShape::PxActorShape L106
        //RET nat: PxActorShapePtr, man: physx.PxActorShapePtr, ret: True, kind: PtrStruct
        //PAR nat: PxRigidActorPtr, man: physx.PxRigidActorPtr, kind: PtrStruct
        //PAR nat: PxShapePtr, man: physx.PxShapePtr, kind: PtrStruct
        public static physx.PxActorShapePtr New(physx.PxRigidActorPtr a, physx.PxShapePtr s) {
            physx.PxRigidActorPtr pvk_in_a = a;
            physx.PxShapePtr pvk_in_s = s;
            return Ctor_PxActorShapePtr_PxRigidActorPtr_PxShapePtr(pvk_in_a, pvk_in_s);
        }

        //DBG: PtrWrapperCtorNode physx::PxActorShape::PxActorShape L103
        //ERRORS in PtrWrapperCtorNode: Skipping Implicit PtrWrapperCtorNode physx::PxActorShape::PxActorShape L103

        //DBG: PtrWrapperCtorNode physx::PxActorShape::PxActorShape L103
        //ERRORS in PtrWrapperCtorNode: Skipping Implicit PtrWrapperCtorNode physx::PxActorShape::PxActorShape L103

        //DBG: Field: actor - 108-108
        public physx.PxRigidActorPtr actor {
            get => PxActorShapePtr_GET_actor(this);
            set => PxActorShapePtr_SET_actor(this, value);
        }

        //DBG: Field: shape - 109-109
        public physx.PxShapePtr shape {
            get => PxActorShapePtr_GET_shape(this);
            set => PxActorShapePtr_SET_shape(this, value);
        }

        //DBG: MethodNode physx::PxActorShape::~PxActorShape L103
        //ERRORS in MethodNode: Skipping Implicit MethodNode physx::PxActorShape::~PxActorShape L103, Destructor

        //DBG: MethodNode physx::PxActorShape::operator= L103
        //ERRORS in MethodNode: Skipping Implicit MethodNode physx::PxActorShape::operator= L103

        //DBG: MethodNode physx::PxActorShape::operator= L103
        //ERRORS in MethodNode: Skipping Implicit MethodNode physx::PxActorShape::operator= L103

        //INTERFACES
        public unsafe interface IPxActorShapePtr {
            physx.PxRigidActorPtr actor {get;set;}
            physx.PxShapePtr shape {get;set;}
        }

        //Operators
    }
    //Subclasses using this: 4

    public unsafe partial struct PxQueryHitPtr : physx.PxQueryHitPtr.IPxQueryHitPtr, physx.PxActorShapePtr.IPxActorShapePtr {
        private System.IntPtr nativePtr_;

        //DBG: ClassNode PxQueryHit physx::PxQueryHit L116-129Bases: PxActorShapePtr

        //DBG: NewerFreerNode PxQueryHit physx::PxQueryHit L116-129
        public static void Free(physx.PxQueryHitPtr ptr){
            Freer_physx_PxQueryHitPtr(ptr);
        }
        public void Free(){
            Freer_physx_PxQueryHitPtr(this);
        }

        //DBG: PtrWrapperCtorNode physx::PxQueryHit::PxQueryHit L118
        //RET nat: PxQueryHitPtr, man: physx.PxQueryHitPtr, ret: True, kind: PtrStruct
        public static physx.PxQueryHitPtr New() {
            return Ctor_PxQueryHitPtr_();
        }

        //DBG: PtrWrapperCtorNode physx::PxQueryHit::PxQueryHit L116
        //ERRORS in PtrWrapperCtorNode: Skipping Implicit PtrWrapperCtorNode physx::PxQueryHit::PxQueryHit L116

        //DBG: PtrWrapperCtorNode physx::PxQueryHit::PxQueryHit L116
        //ERRORS in PtrWrapperCtorNode: Skipping Implicit PtrWrapperCtorNode physx::PxQueryHit::PxQueryHit L116

        //DBG: Field: faceIndex - 128-128
        public uint faceIndex {
            get => PxQueryHitPtr_GET_faceIndex(this);
            set => PxQueryHitPtr_SET_faceIndex(this, value);
        }

        //DBG: MethodNode physx::PxQueryHit::~PxQueryHit L116
        //ERRORS in MethodNode: Skipping Implicit MethodNode physx::PxQueryHit::~PxQueryHit L116, Destructor

        //DBG: MethodNode physx::PxQueryHit::operator= L116
        //ERRORS in MethodNode: Skipping Implicit MethodNode physx::PxQueryHit::operator= L116

        //DBG: MethodNode physx::PxQueryHit::operator= L116
        //ERRORS in MethodNode: Skipping Implicit MethodNode physx::PxQueryHit::operator= L116
        public static implicit operator physx.PxActorShapePtr(PxQueryHitPtr obj) => *(physx.PxActorShapePtr*)&obj;
        public static explicit operator PxQueryHitPtr(physx.PxActorShapePtr obj) => *(PxQueryHitPtr*)&obj;

        //DBG: Field: actor - 108-108
        public physx.PxRigidActorPtr actor {
            get => PxActorShapePtr_GET_actor(this);
            set => PxActorShapePtr_SET_actor(this, value);
        }

        //DBG: Field: shape - 109-109
        public physx.PxShapePtr shape {
            get => PxActorShapePtr_GET_shape(this);
            set => PxActorShapePtr_SET_shape(this, value);
        }

        //INTERFACES
        public unsafe interface IPxQueryHitPtr {
            uint faceIndex {get;set;}
        }

        //Operators
    }
    //Subclasses using this: 2

    public unsafe partial struct PxLocationHitPtr : physx.PxLocationHitPtr.IPxLocationHitPtr, physx.PxQueryHitPtr.IPxQueryHitPtr, physx.PxActorShapePtr.IPxActorShapePtr {
        private System.IntPtr nativePtr_;

        //DBG: ClassNode PxLocationHit physx::PxLocationHit L137-159Bases: PxQueryHitPtr|PxActorShapePtr

        //DBG: NewerFreerNode PxLocationHit physx::PxLocationHit L137-159
        public static void Free(physx.PxLocationHitPtr ptr){
            Freer_physx_PxLocationHitPtr(ptr);
        }
        public void Free(){
            Freer_physx_PxLocationHitPtr(this);
        }

        //DBG: PtrWrapperCtorNode physx::PxLocationHit::PxLocationHit L139
        //RET nat: PxLocationHitPtr, man: physx.PxLocationHitPtr, ret: True, kind: PtrStruct
        public static physx.PxLocationHitPtr New() {
            return Ctor_PxLocationHitPtr_();
        }

        //DBG: PtrWrapperCtorNode physx::PxLocationHit::PxLocationHit L137
        //ERRORS in PtrWrapperCtorNode: Skipping Implicit PtrWrapperCtorNode physx::PxLocationHit::PxLocationHit L137

        //DBG: PtrWrapperCtorNode physx::PxLocationHit::PxLocationHit L137
        //ERRORS in PtrWrapperCtorNode: Skipping Implicit PtrWrapperCtorNode physx::PxLocationHit::PxLocationHit L137

        //DBG: Field: flags - 150-150
        public physx.PxHitFlagsPtr flags {
            get => PxLocationHitPtr_GET_flags(this);
            set => PxLocationHitPtr_SET_flags(this, value);
        }

        //DBG: Field: position - 151-151
        public physx.PxVec3 position {
            get { physx.PxVec3 GetRetRef; PxLocationHitPtr_GET_position(this, &GetRetRef); return GetRetRef; }
            set => PxLocationHitPtr_SET_position(this, value);
        }

        //DBG: Field: normal - 152-152
        public physx.PxVec3 normal {
            get { physx.PxVec3 GetRetRef; PxLocationHitPtr_GET_normal(this, &GetRetRef); return GetRetRef; }
            set => PxLocationHitPtr_SET_normal(this, value);
        }

        //DBG: Field: distance - 158-158
        public float distance {
            get => PxLocationHitPtr_GET_distance(this);
            set => PxLocationHitPtr_SET_distance(this, value);
        }

        //DBG: MethodNode physx::PxLocationHit::hadInitialOverlap L147
        //RET nat: bool, man: bool, ret: True, kind: Value
        //PAR nat: PxLocationHitPtr, man: physx.PxLocationHitPtr, kind: PtrStruct
        public bool hadInitialOverlap() {
            physx.PxLocationHitPtr pvk_in_this = this;
            return bool_const_PxLocationHitPtr_hadInitialOverlapPtr(pvk_in_this);
        }

        //DBG: MethodNode physx::PxLocationHit::operator= L137
        //ERRORS in MethodNode: Skipping Implicit MethodNode physx::PxLocationHit::operator= L137

        //DBG: MethodNode physx::PxLocationHit::operator= L137
        //ERRORS in MethodNode: Skipping Implicit MethodNode physx::PxLocationHit::operator= L137

        //DBG: MethodNode physx::PxLocationHit::~PxLocationHit L137
        //ERRORS in MethodNode: Skipping Implicit MethodNode physx::PxLocationHit::~PxLocationHit L137, Destructor
        public static implicit operator physx.PxQueryHitPtr(PxLocationHitPtr obj) => *(physx.PxQueryHitPtr*)&obj;
        public static explicit operator PxLocationHitPtr(physx.PxQueryHitPtr obj) => *(PxLocationHitPtr*)&obj;
        public static implicit operator physx.PxActorShapePtr(PxLocationHitPtr obj) => *(physx.PxActorShapePtr*)&obj;
        public static explicit operator PxLocationHitPtr(physx.PxActorShapePtr obj) => *(PxLocationHitPtr*)&obj;

        //DBG: Field: faceIndex - 128-128
        public uint faceIndex {
            get => PxQueryHitPtr_GET_faceIndex(this);
            set => PxQueryHitPtr_SET_faceIndex(this, value);
        }

        //DBG: Field: actor - 108-108
        public physx.PxRigidActorPtr actor {
            get => PxActorShapePtr_GET_actor(this);
            set => PxActorShapePtr_SET_actor(this, value);
        }

        //DBG: Field: shape - 109-109
        public physx.PxShapePtr shape {
            get => PxActorShapePtr_GET_shape(this);
            set => PxActorShapePtr_SET_shape(this, value);
        }

        //INTERFACES
        public unsafe interface IPxLocationHitPtr {
            physx.PxHitFlagsPtr flags {get;set;}
            physx.PxVec3 position {get;set;}
            physx.PxVec3 normal {get;set;}
            float distance {get;set;}
            bool hadInitialOverlap();
        }

        //Operators
    }
    //Subclasses using this: 0

    public unsafe partial struct PxRaycastHitPtr : physx.PxLocationHitPtr.IPxLocationHitPtr, physx.PxQueryHitPtr.IPxQueryHitPtr, physx.PxActorShapePtr.IPxActorShapePtr {
        private System.IntPtr nativePtr_;

        //DBG: ClassNode PxRaycastHit physx::PxRaycastHit L173-183Bases: PxLocationHitPtr|PxQueryHitPtr|PxActorShapePtr

        //DBG: NewerFreerNode PxRaycastHit physx::PxRaycastHit L173-183
        public static void Free(physx.PxRaycastHitPtr ptr){
            Freer_physx_PxRaycastHitPtr(ptr);
        }
        public void Free(){
            Freer_physx_PxRaycastHitPtr(this);
        }

        //DBG: PtrWrapperCtorNode physx::PxRaycastHit::PxRaycastHit L175
        //RET nat: PxRaycastHitPtr, man: physx.PxRaycastHitPtr, ret: True, kind: PtrStruct
        public static physx.PxRaycastHitPtr New() {
            return Ctor_PxRaycastHitPtr_();
        }

        //DBG: PtrWrapperCtorNode physx::PxRaycastHit::PxRaycastHit L173
        //ERRORS in PtrWrapperCtorNode: Skipping Implicit PtrWrapperCtorNode physx::PxRaycastHit::PxRaycastHit L173

        //DBG: PtrWrapperCtorNode physx::PxRaycastHit::PxRaycastHit L173
        //ERRORS in PtrWrapperCtorNode: Skipping Implicit PtrWrapperCtorNode physx::PxRaycastHit::PxRaycastHit L173

        //DBG: Field: u - 179-179
        public float u {
            get => PxRaycastHitPtr_GET_u(this);
            set => PxRaycastHitPtr_SET_u(this, value);
        }

        //DBG: Field: v - 179-179
        public float v {
            get => PxRaycastHitPtr_GET_v(this);
            set => PxRaycastHitPtr_SET_v(this, value);
        }

        //DBG: MethodNode physx::PxRaycastHit::operator= L173
        //ERRORS in MethodNode: Skipping Implicit MethodNode physx::PxRaycastHit::operator= L173

        //DBG: MethodNode physx::PxRaycastHit::operator= L173
        //ERRORS in MethodNode: Skipping Implicit MethodNode physx::PxRaycastHit::operator= L173

        //DBG: MethodNode physx::PxRaycastHit::~PxRaycastHit L173
        //ERRORS in MethodNode: Skipping Implicit MethodNode physx::PxRaycastHit::~PxRaycastHit L173, Destructor
        public static implicit operator physx.PxLocationHitPtr(PxRaycastHitPtr obj) => *(physx.PxLocationHitPtr*)&obj;
        public static explicit operator PxRaycastHitPtr(physx.PxLocationHitPtr obj) => *(PxRaycastHitPtr*)&obj;
        public static implicit operator physx.PxQueryHitPtr(PxRaycastHitPtr obj) => *(physx.PxQueryHitPtr*)&obj;
        public static explicit operator PxRaycastHitPtr(physx.PxQueryHitPtr obj) => *(PxRaycastHitPtr*)&obj;
        public static implicit operator physx.PxActorShapePtr(PxRaycastHitPtr obj) => *(physx.PxActorShapePtr*)&obj;
        public static explicit operator PxRaycastHitPtr(physx.PxActorShapePtr obj) => *(PxRaycastHitPtr*)&obj;

        //DBG: Field: flags - 150-150
        public physx.PxHitFlagsPtr flags {
            get => PxLocationHitPtr_GET_flags(this);
            set => PxLocationHitPtr_SET_flags(this, value);
        }

        //DBG: Field: position - 151-151
        public physx.PxVec3 position {
            get { physx.PxVec3 GetRetRef; PxLocationHitPtr_GET_position(this, &GetRetRef); return GetRetRef; }
            set => PxLocationHitPtr_SET_position(this, value);
        }

        //DBG: Field: normal - 152-152
        public physx.PxVec3 normal {
            get { physx.PxVec3 GetRetRef; PxLocationHitPtr_GET_normal(this, &GetRetRef); return GetRetRef; }
            set => PxLocationHitPtr_SET_normal(this, value);
        }

        //DBG: Field: distance - 158-158
        public float distance {
            get => PxLocationHitPtr_GET_distance(this);
            set => PxLocationHitPtr_SET_distance(this, value);
        }

        //DBG: Field: faceIndex - 128-128
        public uint faceIndex {
            get => PxQueryHitPtr_GET_faceIndex(this);
            set => PxQueryHitPtr_SET_faceIndex(this, value);
        }

        //DBG: Field: actor - 108-108
        public physx.PxRigidActorPtr actor {
            get => PxActorShapePtr_GET_actor(this);
            set => PxActorShapePtr_SET_actor(this, value);
        }

        //DBG: Field: shape - 109-109
        public physx.PxShapePtr shape {
            get => PxActorShapePtr_GET_shape(this);
            set => PxActorShapePtr_SET_shape(this, value);
        }

        //PIPING
        public bool hadInitialOverlap(){return((physx.PxLocationHitPtr)this).hadInitialOverlap();}

        //Operators
    }
    //Subclasses using this: 0

    public unsafe partial struct PxOverlapHitPtr : physx.PxQueryHitPtr.IPxQueryHitPtr, physx.PxActorShapePtr.IPxActorShapePtr {
        private System.IntPtr nativePtr_;

        //DBG: ClassNode PxOverlapHit physx::PxOverlapHit L191Bases: PxQueryHitPtr|PxActorShapePtr

        //DBG: NewerFreerNode PxOverlapHit physx::PxOverlapHit L191
        public static physx.PxOverlapHitPtr New(){
            return Newer_physx_PxOverlapHitPtr();
        }
        public static void Free(physx.PxOverlapHitPtr ptr){
            Freer_physx_PxOverlapHitPtr(ptr);
        }
        public void Free(){
            Freer_physx_PxOverlapHitPtr(this);
        }

        //DBG: PtrWrapperCtorNode physx::PxOverlapHit::PxOverlapHit L191
        //ERRORS in PtrWrapperCtorNode: Skipping Implicit PtrWrapperCtorNode physx::PxOverlapHit::PxOverlapHit L191

        //DBG: PtrWrapperCtorNode physx::PxOverlapHit::PxOverlapHit L191
        //ERRORS in PtrWrapperCtorNode: Skipping Implicit PtrWrapperCtorNode physx::PxOverlapHit::PxOverlapHit L191

        //DBG: PtrWrapperCtorNode physx::PxOverlapHit::PxOverlapHit L191
        //ERRORS in PtrWrapperCtorNode: Skipping Implicit PtrWrapperCtorNode physx::PxOverlapHit::PxOverlapHit L191

        //DBG: Field: padTo16Bytes - 191-191
        public uint padTo16Bytes {
            get => PxOverlapHitPtr_GET_padTo16Bytes(this);
            set => PxOverlapHitPtr_SET_padTo16Bytes(this, value);
        }

        //DBG: MethodNode physx::PxOverlapHit::operator= L191
        //ERRORS in MethodNode: Skipping Implicit MethodNode physx::PxOverlapHit::operator= L191

        //DBG: MethodNode physx::PxOverlapHit::operator= L191
        //ERRORS in MethodNode: Skipping Implicit MethodNode physx::PxOverlapHit::operator= L191

        //DBG: MethodNode physx::PxOverlapHit::~PxOverlapHit L191
        //ERRORS in MethodNode: Skipping Implicit MethodNode physx::PxOverlapHit::~PxOverlapHit L191, Destructor
        public static implicit operator physx.PxQueryHitPtr(PxOverlapHitPtr obj) => *(physx.PxQueryHitPtr*)&obj;
        public static explicit operator PxOverlapHitPtr(physx.PxQueryHitPtr obj) => *(PxOverlapHitPtr*)&obj;
        public static implicit operator physx.PxActorShapePtr(PxOverlapHitPtr obj) => *(physx.PxActorShapePtr*)&obj;
        public static explicit operator PxOverlapHitPtr(physx.PxActorShapePtr obj) => *(PxOverlapHitPtr*)&obj;

        //DBG: Field: faceIndex - 128-128
        public uint faceIndex {
            get => PxQueryHitPtr_GET_faceIndex(this);
            set => PxQueryHitPtr_SET_faceIndex(this, value);
        }

        //DBG: Field: actor - 108-108
        public physx.PxRigidActorPtr actor {
            get => PxActorShapePtr_GET_actor(this);
            set => PxActorShapePtr_SET_actor(this, value);
        }

        //DBG: Field: shape - 109-109
        public physx.PxShapePtr shape {
            get => PxActorShapePtr_GET_shape(this);
            set => PxActorShapePtr_SET_shape(this, value);
        }

        //Operators
    }
    //Subclasses using this: 0

    public unsafe partial struct PxSweepHitPtr : physx.PxLocationHitPtr.IPxLocationHitPtr, physx.PxQueryHitPtr.IPxQueryHitPtr, physx.PxActorShapePtr.IPxActorShapePtr {
        private System.IntPtr nativePtr_;

        //DBG: ClassNode PxSweepHit physx::PxSweepHit L199-204Bases: PxLocationHitPtr|PxQueryHitPtr|PxActorShapePtr

        //DBG: NewerFreerNode PxSweepHit physx::PxSweepHit L199-204
        public static void Free(physx.PxSweepHitPtr ptr){
            Freer_physx_PxSweepHitPtr(ptr);
        }
        public void Free(){
            Freer_physx_PxSweepHitPtr(this);
        }

        //DBG: PtrWrapperCtorNode physx::PxSweepHit::PxSweepHit L201
        //RET nat: PxSweepHitPtr, man: physx.PxSweepHitPtr, ret: True, kind: PtrStruct
        public static physx.PxSweepHitPtr New() {
            return Ctor_PxSweepHitPtr_();
        }

        //DBG: PtrWrapperCtorNode physx::PxSweepHit::PxSweepHit L199
        //ERRORS in PtrWrapperCtorNode: Skipping Implicit PtrWrapperCtorNode physx::PxSweepHit::PxSweepHit L199

        //DBG: PtrWrapperCtorNode physx::PxSweepHit::PxSweepHit L199
        //ERRORS in PtrWrapperCtorNode: Skipping Implicit PtrWrapperCtorNode physx::PxSweepHit::PxSweepHit L199

        //DBG: Field: padTo16Bytes - 203-203
        public uint padTo16Bytes {
            get => PxSweepHitPtr_GET_padTo16Bytes(this);
            set => PxSweepHitPtr_SET_padTo16Bytes(this, value);
        }

        //DBG: MethodNode physx::PxSweepHit::operator= L199
        //ERRORS in MethodNode: Skipping Implicit MethodNode physx::PxSweepHit::operator= L199

        //DBG: MethodNode physx::PxSweepHit::operator= L199
        //ERRORS in MethodNode: Skipping Implicit MethodNode physx::PxSweepHit::operator= L199

        //DBG: MethodNode physx::PxSweepHit::~PxSweepHit L199
        //ERRORS in MethodNode: Skipping Implicit MethodNode physx::PxSweepHit::~PxSweepHit L199, Destructor
        public static implicit operator physx.PxLocationHitPtr(PxSweepHitPtr obj) => *(physx.PxLocationHitPtr*)&obj;
        public static explicit operator PxSweepHitPtr(physx.PxLocationHitPtr obj) => *(PxSweepHitPtr*)&obj;
        public static implicit operator physx.PxQueryHitPtr(PxSweepHitPtr obj) => *(physx.PxQueryHitPtr*)&obj;
        public static explicit operator PxSweepHitPtr(physx.PxQueryHitPtr obj) => *(PxSweepHitPtr*)&obj;
        public static implicit operator physx.PxActorShapePtr(PxSweepHitPtr obj) => *(physx.PxActorShapePtr*)&obj;
        public static explicit operator PxSweepHitPtr(physx.PxActorShapePtr obj) => *(PxSweepHitPtr*)&obj;

        //DBG: Field: flags - 150-150
        public physx.PxHitFlagsPtr flags {
            get => PxLocationHitPtr_GET_flags(this);
            set => PxLocationHitPtr_SET_flags(this, value);
        }

        //DBG: Field: position - 151-151
        public physx.PxVec3 position {
            get { physx.PxVec3 GetRetRef; PxLocationHitPtr_GET_position(this, &GetRetRef); return GetRetRef; }
            set => PxLocationHitPtr_SET_position(this, value);
        }

        //DBG: Field: normal - 152-152
        public physx.PxVec3 normal {
            get { physx.PxVec3 GetRetRef; PxLocationHitPtr_GET_normal(this, &GetRetRef); return GetRetRef; }
            set => PxLocationHitPtr_SET_normal(this, value);
        }

        //DBG: Field: distance - 158-158
        public float distance {
            get => PxLocationHitPtr_GET_distance(this);
            set => PxLocationHitPtr_SET_distance(this, value);
        }

        //DBG: Field: faceIndex - 128-128
        public uint faceIndex {
            get => PxQueryHitPtr_GET_faceIndex(this);
            set => PxQueryHitPtr_SET_faceIndex(this, value);
        }

        //DBG: Field: actor - 108-108
        public physx.PxRigidActorPtr actor {
            get => PxActorShapePtr_GET_actor(this);
            set => PxActorShapePtr_SET_actor(this, value);
        }

        //DBG: Field: shape - 109-109
        public physx.PxShapePtr shape {
            get => PxActorShapePtr_GET_shape(this);
            set => PxActorShapePtr_SET_shape(this, value);
        }

        //PIPING
        public bool hadInitialOverlap(){return((physx.PxLocationHitPtr)this).hadInitialOverlap();}

        //Operators
    }

    //DBG: DeclNode PxHitCallback physx::PxHitCallback L231-293

    //DBG: DeclNode PxHitBuffer physx::PxHitBuffer L309-340

    //DBG: DeclNode PxRaycastBufferN physx::PxRaycastBufferN L362-367

    //DBG: DeclNode PxOverlapBufferN physx::PxOverlapBufferN L370-375

    //DBG: DeclNode PxSweepBufferN physx::PxSweepBufferN L378-383

    //DBG: DeclNode PxAgain physx::PxAgain L215

    //DBG: DeclNode PxHitFlags physx::PxHitFlags L94

    //DBG: DeclNode PxRaycastCallback physx::PxRaycastCallback L344

    //DBG: DeclNode PxSweepCallback physx::PxSweepCallback L350

    //DBG: DeclNode PxOverlapCallback physx::PxOverlapCallback L347

    //DBG: DeclNode PxRaycastBuffer physx::PxRaycastBuffer L353

    //DBG: DeclNode PxOverlapBuffer physx::PxOverlapBuffer L356

    //DBG: DeclNode PxSweepBuffer physx::PxSweepBuffer L359
}
