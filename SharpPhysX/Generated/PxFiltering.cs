// Generated by minBND 5.1.81.43 - Â© github.com/Alan-FGR
//Unit PxFiltering
using System;
using System.Runtime.InteropServices;

public static unsafe partial class physx {
    // physx::operator| [static PxPairFlagsPtr Pipe_New(physx.PxPairFlagEnum a, physx.PxPairFlagEnum b)] will be bound as member operator
    
    // physx::operator& [static PxPairFlagsPtr Amp_New(physx.PxPairFlagEnum a, physx.PxPairFlagEnum b)] will be bound as member operator
    
    // physx::operator~ [static PxPairFlagsPtr Tilde_New(physx.PxPairFlagEnum a)] will be bound as member operator
    
    // physx::operator| [static PxFilterFlagsPtr Pipe_New(physx.PxFilterFlagEnum a, physx.PxFilterFlagEnum b)] will be bound as member operator
    
    // physx::operator& [static PxFilterFlagsPtr Amp_New(physx.PxFilterFlagEnum a, physx.PxFilterFlagEnum b)] will be bound as member operator
    
    // physx::operator~ [static PxFilterFlagsPtr Tilde_New(physx.PxFilterFlagEnum a)] will be bound as member operator
    
    [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern physx.PxFilterObjectTypeEnum physx_PxFilterObjectTypeEnum_physx_PxGetFilterObjectType_uint_(uint pvk_attr);
    
    public static physx.PxFilterObjectTypeEnum PxGetFilterObjectType(uint attr) {
        uint pvk_in_attr = attr;
        return physx_PxFilterObjectTypeEnum_physx_PxGetFilterObjectType_uint_(pvk_in_attr);
    }
    
    [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern bool bool_physx_PxFilterObjectIsKinematic_uint_(uint pvk_attr);
    
    public static bool PxFilterObjectIsKinematic(uint attr) {
        uint pvk_in_attr = attr;
        return bool_physx_PxFilterObjectIsKinematic_uint_(pvk_in_attr);
    }
    
    [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern bool bool_physx_PxFilterObjectIsTrigger_uint_(uint pvk_attr);
    
    public static bool PxFilterObjectIsTrigger(uint attr) {
        uint pvk_in_attr = attr;
        return bool_physx_PxFilterObjectIsTrigger_uint_(pvk_in_attr);
    }
    
    public enum PxPairFlagEnum : int {
        eSOLVE_CONTACT = 1,                     // eSOLVE_CONTACT = (1<<0)
        eMODIFY_CONTACTS = 2,                   // eMODIFY_CONTACTS = (1<<1)
        eNOTIFY_TOUCH_FOUND = 4,                // eNOTIFY_TOUCH_FOUND = (1<<2)
        eNOTIFY_TOUCH_PERSISTS = 8,             // eNOTIFY_TOUCH_PERSISTS = (1<<3)
        eNOTIFY_TOUCH_LOST = 16,                // eNOTIFY_TOUCH_LOST = (1<<4)
        eNOTIFY_TOUCH_CCD = 32,                 // eNOTIFY_TOUCH_CCD = (1<<5)
        eNOTIFY_THRESHOLD_FORCE_FOUND = 64,     // eNOTIFY_THRESHOLD_FORCE_FOUND = (1<<6)
        eNOTIFY_THRESHOLD_FORCE_PERSISTS = 128, // eNOTIFY_THRESHOLD_FORCE_PERSISTS = (1<<7)
        eNOTIFY_THRESHOLD_FORCE_LOST = 256,     // eNOTIFY_THRESHOLD_FORCE_LOST = (1<<8)
        eNOTIFY_CONTACT_POINTS = 512,           // eNOTIFY_CONTACT_POINTS = (1<<9)
        eDETECT_DISCRETE_CONTACT = 1024,        // eDETECT_DISCRETE_CONTACT = (1<<10)
        eDETECT_CCD_CONTACT = 2048,             // eDETECT_CCD_CONTACT = (1<<11)
        ePRE_SOLVER_VELOCITY = 4096,            // ePRE_SOLVER_VELOCITY = (1<<12)
        ePOST_SOLVER_VELOCITY = 8192,           // ePOST_SOLVER_VELOCITY = (1<<13)
        eCONTACT_EVENT_POSE = 16384,            // eCONTACT_EVENT_POSE = (1<<14)
        eNEXT_FREE = 32768,                     // eNEXT_FREE = (1<<15)
        eCONTACT_DEFAULT = 1025,                // eCONTACT_DEFAULT = eSOLVE_CONTACT | eDETECT_DISCRETE_CONTACT
        eTRIGGER_DEFAULT = 1044,                // eTRIGGER_DEFAULT = eNOTIFY_TOUCH_FOUND | eNOTIFY_TOUCH_LOST | eDETECT_DISCRETE_CONTACT
    }
    
    public enum PxFilterFlagEnum : int {
        eKILL = 1,     // eKILL = (1<<0)
        eSUPPRESS = 2, // eSUPPRESS = (1<<1)
        eCALLBACK = 4, // eCALLBACK = (1<<2)
        eNOTIFY = 12,  // eNOTIFY = (1<<3) | eCALLBACK
        eDEFAULT = 0,  // eDEFAULT = 0
    }
    
    public unsafe partial struct PxFilterDataPtr {
        private System.IntPtr nativePtr_;
        
    [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void Freer_physx_PxFilterDataPtr(PxFilterDataPtr ptr);
        
        public static void Free(PxFilterDataPtr ptr){
            Freer_physx_PxFilterDataPtr(ptr);
        }
        public void Free(){
            Freer_physx_PxFilterDataPtr(this);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxFilterDataPtr Ctor_physx_PxFilterDataPtr_physx_PxEMPTY(physx.PxEMPTY pvk__);
        
        public static physx.PxFilterDataPtr New(physx.PxEMPTY _) {
            physx.PxEMPTY pvk_in__ = _;
            return Ctor_physx_PxFilterDataPtr_physx_PxEMPTY(pvk_in__);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxFilterDataPtr Ctor_physx_PxFilterDataPtr_();
        
        public static physx.PxFilterDataPtr New() {
            return Ctor_physx_PxFilterDataPtr_();
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxFilterDataPtr Ctor_physx_PxFilterDataPtr_physx_PxFilterDataPtr(physx.PxFilterDataPtr pvk_fd);
        
        public static physx.PxFilterDataPtr New(physx.PxFilterDataPtr fd) {
            physx.PxFilterDataPtr pvk_in_fd = fd;
            return Ctor_physx_PxFilterDataPtr_physx_PxFilterDataPtr(pvk_in_fd);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxFilterDataPtr Ctor_physx_PxFilterDataPtr_uint_uint_uint_uint(uint pvk_w0, uint pvk_w1, uint pvk_w2, uint pvk_w3);
        
        public static physx.PxFilterDataPtr New(uint w0, uint w1, uint w2, uint w3) {
            uint pvk_in_w0 = w0;
            uint pvk_in_w1 = w1;
            uint pvk_in_w2 = w2;
            uint pvk_in_w3 = w3;
            return Ctor_physx_PxFilterDataPtr_uint_uint_uint_uint(pvk_in_w0, pvk_in_w1, pvk_in_w2, pvk_in_w3);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern uint PxFilterData_GET_word0(PxFilterDataPtr cls);
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void PxFilterData_SET_word0(PxFilterDataPtr cls, uint value);
        
        public uint word0 {
            get => PxFilterData_GET_word0(this);
            set => PxFilterData_SET_word0(this, value);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern uint PxFilterData_GET_word1(PxFilterDataPtr cls);
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void PxFilterData_SET_word1(PxFilterDataPtr cls, uint value);
        
        public uint word1 {
            get => PxFilterData_GET_word1(this);
            set => PxFilterData_SET_word1(this, value);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern uint PxFilterData_GET_word2(PxFilterDataPtr cls);
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void PxFilterData_SET_word2(PxFilterDataPtr cls, uint value);
        
        public uint word2 {
            get => PxFilterData_GET_word2(this);
            set => PxFilterData_SET_word2(this, value);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern uint PxFilterData_GET_word3(PxFilterDataPtr cls);
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void PxFilterData_SET_word3(PxFilterDataPtr cls, uint value);
        
        public uint word3 {
            get => PxFilterData_GET_word3(this);
            set => PxFilterData_SET_word3(this, value);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxFilterData_setToDefault(physx.PxFilterDataPtr pvk_this);
        
        public void setToDefault() {
            physx.PxFilterDataPtr pvk_in_this = this;
            void_physx_PxFilterData_setToDefault(pvk_in_this);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern bool bool_const_physx_PxFilterData_operator_EqualEqual_physx_PxFilterDataPtr_(physx.PxFilterDataPtr pvk_lhs, physx.PxFilterDataPtr pvk_a);
        
        public static bool operator==(physx.PxFilterDataPtr lhs, physx.PxFilterDataPtr a) {
            physx.PxFilterDataPtr pvk_in_lhs = lhs;
            physx.PxFilterDataPtr pvk_in_a = a;
            return bool_const_physx_PxFilterData_operator_EqualEqual_physx_PxFilterDataPtr_(pvk_in_lhs, pvk_in_a);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern bool bool_const_physx_PxFilterData_operator_ExclaimEqual_physx_PxFilterDataPtr_(physx.PxFilterDataPtr pvk_lhs, physx.PxFilterDataPtr pvk_a);
        
        public static bool operator!=(physx.PxFilterDataPtr lhs, physx.PxFilterDataPtr a) {
            physx.PxFilterDataPtr pvk_in_lhs = lhs;
            physx.PxFilterDataPtr pvk_in_a = a;
            return bool_const_physx_PxFilterData_operator_ExclaimEqual_physx_PxFilterDataPtr_(pvk_in_lhs, pvk_in_a);
        }
    }
    
    public enum PxFilterObjectTypeEnum : int {
        eRIGID_STATIC = 0,    // eRIGID_STATIC
        eRIGID_DYNAMIC = 1,   // eRIGID_DYNAMIC
        eARTICULATION = 2,    // eARTICULATION
        eMAX_TYPE_COUNT = 16, // eMAX_TYPE_COUNT = 16
        eUNDEFINED = 15,      // eUNDEFINED = eMAX_TYPE_COUNT-1
    }
    
    public enum PxFilterObjectFlagEnum : int {
        eKINEMATIC = 16, // eKINEMATIC = (1<<4)
        eTRIGGER = 32,   // eTRIGGER = (1<<5)
    }
    
    public unsafe partial struct PxSimulationFilterCallbackPtr {
        private System.IntPtr nativePtr_;
        
    [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern PxFilterFlagsPtr PxFilterFlagsPtr_physx_PxSimulationFilterCallback_pairFound_uint_uint_physx_PxFilterDataPtr_physx_PxActorPtr_physx_PxShapePtr_uint_physx_PxFilterDataPtr_physx_PxActorPtr_physx_PxShapePtr_PxPairFlagsPtr_(physx.PxSimulationFilterCallbackPtr pvk_this, uint pvk_pairID, uint pvk_attributes0, physx.PxFilterDataPtr pvk_filterData0, physx.PxActorPtr pvk_a0, physx.PxShapePtr pvk_s0, uint pvk_attributes1, physx.PxFilterDataPtr pvk_filterData1, physx.PxActorPtr pvk_a1, physx.PxShapePtr pvk_s1, PxPairFlagsPtr pvk_pairFlags);
        
        public PxFilterFlagsPtr pairFound_New(uint pairID, uint attributes0, physx.PxFilterDataPtr filterData0, physx.PxActorPtr a0, physx.PxShapePtr s0, uint attributes1, physx.PxFilterDataPtr filterData1, physx.PxActorPtr a1, physx.PxShapePtr s1, PxPairFlagsPtr pairFlags) {
            physx.PxSimulationFilterCallbackPtr pvk_in_this = this;
            uint pvk_in_pairID = pairID;
            uint pvk_in_attributes0 = attributes0;
            physx.PxFilterDataPtr pvk_in_filterData0 = filterData0;
            physx.PxActorPtr pvk_in_a0 = a0;
            physx.PxShapePtr pvk_in_s0 = s0;
            uint pvk_in_attributes1 = attributes1;
            physx.PxFilterDataPtr pvk_in_filterData1 = filterData1;
            physx.PxActorPtr pvk_in_a1 = a1;
            physx.PxShapePtr pvk_in_s1 = s1;
            PxPairFlagsPtr pvk_in_pairFlags = pairFlags;
            return PxFilterFlagsPtr_physx_PxSimulationFilterCallback_pairFound_uint_uint_physx_PxFilterDataPtr_physx_PxActorPtr_physx_PxShapePtr_uint_physx_PxFilterDataPtr_physx_PxActorPtr_physx_PxShapePtr_PxPairFlagsPtr_(pvk_in_this, pvk_in_pairID, pvk_in_attributes0, pvk_in_filterData0, pvk_in_a0, pvk_in_s0, pvk_in_attributes1, pvk_in_filterData1, pvk_in_a1, pvk_in_s1, pvk_in_pairFlags);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxSimulationFilterCallback_pairLost_uint_uint_physx_PxFilterDataPtr_uint_physx_PxFilterDataPtr_bool_(physx.PxSimulationFilterCallbackPtr pvk_this, uint pvk_pairID, uint pvk_attributes0, physx.PxFilterDataPtr pvk_filterData0, uint pvk_attributes1, physx.PxFilterDataPtr pvk_filterData1, bool pvk_objectRemoved);
        
        public void pairLost(uint pairID, uint attributes0, physx.PxFilterDataPtr filterData0, uint attributes1, physx.PxFilterDataPtr filterData1, bool objectRemoved) {
            physx.PxSimulationFilterCallbackPtr pvk_in_this = this;
            uint pvk_in_pairID = pairID;
            uint pvk_in_attributes0 = attributes0;
            physx.PxFilterDataPtr pvk_in_filterData0 = filterData0;
            uint pvk_in_attributes1 = attributes1;
            physx.PxFilterDataPtr pvk_in_filterData1 = filterData1;
            bool pvk_in_objectRemoved = objectRemoved;
            void_physx_PxSimulationFilterCallback_pairLost_uint_uint_physx_PxFilterDataPtr_uint_physx_PxFilterDataPtr_bool_(pvk_in_this, pvk_in_pairID, pvk_in_attributes0, pvk_in_filterData0, pvk_in_attributes1, pvk_in_filterData1, pvk_in_objectRemoved);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern bool bool_physx_PxSimulationFilterCallback_statusChange_uint_PxPairFlagsPtr_PxFilterFlagsPtr_(physx.PxSimulationFilterCallbackPtr pvk_this, uint* pvk_pairID, PxPairFlagsPtr pvk_pairFlags, PxFilterFlagsPtr pvk_filterFlags);
        
        public bool statusChange(uint* pairID, PxPairFlagsPtr pairFlags, PxFilterFlagsPtr filterFlags) {
            physx.PxSimulationFilterCallbackPtr pvk_in_this = this;
            uint* pvk_in_pairID = pairID;
            PxPairFlagsPtr pvk_in_pairFlags = pairFlags;
            PxFilterFlagsPtr pvk_in_filterFlags = filterFlags;
            return bool_physx_PxSimulationFilterCallback_statusChange_uint_PxPairFlagsPtr_PxFilterFlagsPtr_(pvk_in_this, pvk_in_pairID, pvk_in_pairFlags, pvk_in_filterFlags);
        }
    }
    
    public enum PxPairFilteringModeEnum : int {
        eKEEP = 0,     // eKEEP
        eSUPPRESS = 1, // eSUPPRESS
        eKILL = 2,     // eKILL
        eDEFAULT = 3,  // eDEFAULT
    }
    
}
