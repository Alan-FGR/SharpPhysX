// Generated by minBND 5.1.90.51 - Â© github.com/Alan-FGR
using System;
using System.Runtime.InteropServices;
public static unsafe partial class minBND_pinvokes {

//DBG: FunctionNode physx::operator* L337-340
//Value Converter OpMultiply
//physx::operator* static physx.PxVec2 OpMultiply(float f, physx.PxVec2 v) will also be bound as member operator
//RET nat: physx::PxVec2, man: physx.PxVec2, ret: False, kind: Blittable
//PAR nat: float, man: float, kind: Value
//PAR nat: physx::PxVec2, man: physx.PxVec2, kind: Blittable

//DBG: FunctionNode physx::operator* L337-340
//Value Converter OpMultiply
//physx::operator* static physx.PxVec2 OpMultiply(float f, physx.PxVec2.Ref v) will also be bound as member operator
//RET nat: physx::PxVec2, man: physx.PxVec2, ret: False, kind: Blittable
//PAR nat: float, man: float, kind: Value
//PAR nat: physx::PxVec2, man: physx.PxVec2, kind: Blittable

//DBG: FunctionNode physx::operator* L337-340
//physx::operator* static physx.PxVec2 OpMultiply(float f, physx.PxVec2* v) will also be bound as member operator
//RET nat: physx::PxVec2, man: physx.PxVec2, ret: False, kind: Blittable
//PAR nat: float, man: float, kind: Value
//PAR nat: physx::PxVec2*, man: physx.PxVec2*, kind: Value
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxVec2_operator_Ptr_Star_float_PxVec2_(physx.PxVec2* pvk_RetRef, float pvk_f, physx.PxVec2* pvk_v);
//Subclasses using this: 0

//DBG: ClassNode PxVec2 physx::PxVec2 L49-335

//DBG: DefaultValueCtorNode physx::PxVec2::PxVec2 L55-57
//RET nat: physx::PxVec2, man: physx.PxVec2, ret: False, kind: Blittable
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void Default_PxVec2_(physx.PxVec2* pvk_RetRef);

//DBG: BlittableCtorNode physx::PxVec2::PxVec2 L62-65
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: physx::PxVec2, man: physx.PxVec2, kind: Blittable
//PAR nat: physx::PxZERO, man: physx.PxZERO, kind: Value
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void void_PxVec2_PxVec2Ptr_Ctor_PxZERO_(physx.PxVec2* pvk_this, physx.PxZERO pvk_r);

//DBG: BlittableCtorNode physx::PxVec2::PxVec2 L74-76
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: physx::PxVec2, man: physx.PxVec2, kind: Blittable
//PAR nat: float, man: float, kind: Value
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void void_PxVec2_PxVec2Ptr_Ctor_float_(physx.PxVec2* pvk_this, float pvk_a);

//DBG: BlittableCtorNode physx::PxVec2::PxVec2 L84-86
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: physx::PxVec2, man: physx.PxVec2, kind: Blittable
//PAR nat: float, man: float, kind: Value
//PAR nat: float, man: float, kind: Value
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void void_PxVec2_PxVec2Ptr_Ctor_float_float_(physx.PxVec2* pvk_this, float pvk_nx, float pvk_ny);

//DBG: BlittableCtorNode physx::PxVec2::PxVec2 L91-93
//Value Converter PxVec2
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: physx::PxVec2, man: physx.PxVec2, kind: Blittable
//PAR nat: physx::PxVec2, man: physx.PxVec2, kind: Blittable

//DBG: BlittableCtorNode physx::PxVec2::PxVec2 L91-93
//Value Converter PxVec2
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: physx::PxVec2, man: physx.PxVec2, kind: Blittable
//PAR nat: physx::PxVec2, man: physx.PxVec2, kind: Blittable

//DBG: BlittableCtorNode physx::PxVec2::PxVec2 L91-93
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: physx::PxVec2, man: physx.PxVec2, kind: Blittable
//PAR nat: physx::PxVec2*, man: physx.PxVec2*, kind: Value
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void void_PxVec2_PxVec2Ptr_Ctor_PxVec2_(physx.PxVec2* pvk_this, physx.PxVec2* pvk_v);

//DBG: MethodNode physx::PxVec2::operator= L100-105
//Value Converter OpEqual
//RET nat: physx::PxVec2*, man: physx.PxVec2*, ret: True, kind: Value
//PAR nat: physx::PxVec2, man: physx.PxVec2, kind: Blittable
//PAR nat: physx::PxVec2, man: physx.PxVec2, kind: Blittable

//DBG: MethodNode physx::PxVec2::operator= L100-105
//Value Converter OpEqual
//RET nat: physx::PxVec2*, man: physx.PxVec2*, ret: True, kind: Value
//PAR nat: physx::PxVec2, man: physx.PxVec2, kind: Blittable
//PAR nat: physx::PxVec2, man: physx.PxVec2, kind: Blittable

//DBG: MethodNode physx::PxVec2::operator= L100-105
//RET nat: physx::PxVec2*, man: physx.PxVec2*, ret: True, kind: Value
//PAR nat: physx::PxVec2, man: physx.PxVec2, kind: Blittable
//PAR nat: physx::PxVec2*, man: physx.PxVec2*, kind: Value
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxVec2* PxVec2_PxVec2_operator_Ptr_Equal_PxVec2_(physx.PxVec2* pvk_lhs, physx.PxVec2* pvk_p);

//DBG: MethodNode physx::PxVec2::operator[] L110-115
//RET nat: float*, man: float*, ret: True, kind: Value
//PAR nat: physx::PxVec2, man: physx.PxVec2, kind: Blittable
//PAR nat: int, man: int, kind: Value
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern float* float_PxVec2_operator_Ptr_Subscript_int_(physx.PxVec2* pvk_lhs, int pvk_index);

//DBG: MethodNode physx::PxVec2::operator[] L120-125
//RET nat: float*, man: float*, ret: True, kind: Value
//PAR nat: physx::PxVec2, man: physx.PxVec2, kind: Blittable
//PAR nat: int, man: int, kind: Value
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern float* float_const_PxVec2_operator_Ptr_Subscript_int_(physx.PxVec2* pvk_lhs, int pvk_index);

//DBG: MethodNode physx::PxVec2::operator== L130-133
//Value Converter OpEquals
//RET nat: bool, man: bool, ret: True, kind: Value
//PAR nat: physx::PxVec2, man: physx.PxVec2, kind: Blittable
//PAR nat: physx::PxVec2, man: physx.PxVec2, kind: Blittable

//DBG: MethodNode physx::PxVec2::operator== L130-133
//Value Converter OpEquals
//RET nat: bool, man: bool, ret: True, kind: Value
//PAR nat: physx::PxVec2, man: physx.PxVec2, kind: Blittable
//PAR nat: physx::PxVec2, man: physx.PxVec2, kind: Blittable

//DBG: MethodNode physx::PxVec2::operator== L130-133
//RET nat: bool, man: bool, ret: True, kind: Value
//PAR nat: physx::PxVec2, man: physx.PxVec2, kind: Blittable
//PAR nat: physx::PxVec2*, man: physx.PxVec2*, kind: Value
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern bool bool_const_PxVec2_operator_Ptr_EqualEqual_PxVec2_(physx.PxVec2* pvk_lhs, physx.PxVec2* pvk_v);

//DBG: MethodNode physx::PxVec2::operator!= L138-141
//Value Converter OpExclaimEqual
//RET nat: bool, man: bool, ret: True, kind: Value
//PAR nat: physx::PxVec2, man: physx.PxVec2, kind: Blittable
//PAR nat: physx::PxVec2, man: physx.PxVec2, kind: Blittable

//DBG: MethodNode physx::PxVec2::operator!= L138-141
//Value Converter OpExclaimEqual
//RET nat: bool, man: bool, ret: True, kind: Value
//PAR nat: physx::PxVec2, man: physx.PxVec2, kind: Blittable
//PAR nat: physx::PxVec2, man: physx.PxVec2, kind: Blittable

//DBG: MethodNode physx::PxVec2::operator!= L138-141
//RET nat: bool, man: bool, ret: True, kind: Value
//PAR nat: physx::PxVec2, man: physx.PxVec2, kind: Blittable
//PAR nat: physx::PxVec2*, man: physx.PxVec2*, kind: Value
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern bool bool_const_PxVec2_operator_Ptr_ExclaimEqual_PxVec2_(physx.PxVec2* pvk_lhs, physx.PxVec2* pvk_v);

//DBG: MethodNode physx::PxVec2::isZero L146-149
//RET nat: bool, man: bool, ret: True, kind: Value
//PAR nat: physx::PxVec2, man: physx.PxVec2, kind: Blittable
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern bool bool_const_PxVec2_isZeroPtr(physx.PxVec2* pvk_this);

//DBG: MethodNode physx::PxVec2::isFinite L154-157
//RET nat: bool, man: bool, ret: True, kind: Value
//PAR nat: physx::PxVec2, man: physx.PxVec2, kind: Blittable
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern bool bool_const_PxVec2_isFinitePtr(physx.PxVec2* pvk_this);

//DBG: MethodNode physx::PxVec2::isNormalized L162-166
//RET nat: bool, man: bool, ret: True, kind: Value
//PAR nat: physx::PxVec2, man: physx.PxVec2, kind: Blittable
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern bool bool_const_PxVec2_isNormalizedPtr(physx.PxVec2* pvk_this);

//DBG: MethodNode physx::PxVec2::magnitudeSquared L173-176
//RET nat: float, man: float, ret: True, kind: Value
//PAR nat: physx::PxVec2, man: physx.PxVec2, kind: Blittable
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern float float_const_PxVec2_magnitudeSquaredPtr(physx.PxVec2* pvk_this);

//DBG: MethodNode physx::PxVec2::magnitude L181-184
//RET nat: float, man: float, ret: True, kind: Value
//PAR nat: physx::PxVec2, man: physx.PxVec2, kind: Blittable
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern float float_const_PxVec2_magnitudePtr(physx.PxVec2* pvk_this);

//DBG: MethodNode physx::PxVec2::operator- L189-192
//RET nat: physx::PxVec2, man: physx.PxVec2, ret: False, kind: Blittable
//PAR nat: physx::PxVec2, man: physx.PxVec2, kind: Blittable
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxVec2_const_PxVec2_operator_Ptr_Minus(physx.PxVec2* pvk_RetRef, physx.PxVec2* pvk_lhs);

//DBG: MethodNode physx::PxVec2::operator+ L197-200
//Value Converter OpPlus
//RET nat: physx::PxVec2, man: physx.PxVec2, ret: False, kind: Blittable
//PAR nat: physx::PxVec2, man: physx.PxVec2, kind: Blittable
//PAR nat: physx::PxVec2, man: physx.PxVec2, kind: Blittable

//DBG: MethodNode physx::PxVec2::operator+ L197-200
//Value Converter OpPlus
//RET nat: physx::PxVec2, man: physx.PxVec2, ret: False, kind: Blittable
//PAR nat: physx::PxVec2, man: physx.PxVec2, kind: Blittable
//PAR nat: physx::PxVec2, man: physx.PxVec2, kind: Blittable

//DBG: MethodNode physx::PxVec2::operator+ L197-200
//RET nat: physx::PxVec2, man: physx.PxVec2, ret: False, kind: Blittable
//PAR nat: physx::PxVec2, man: physx.PxVec2, kind: Blittable
//PAR nat: physx::PxVec2*, man: physx.PxVec2*, kind: Value
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxVec2_const_PxVec2_operator_Ptr_Plus_PxVec2_(physx.PxVec2* pvk_RetRef, physx.PxVec2* pvk_lhs, physx.PxVec2* pvk_v);

//DBG: MethodNode physx::PxVec2::operator- L205-208
//Value Converter OpMinus
//RET nat: physx::PxVec2, man: physx.PxVec2, ret: False, kind: Blittable
//PAR nat: physx::PxVec2, man: physx.PxVec2, kind: Blittable
//PAR nat: physx::PxVec2, man: physx.PxVec2, kind: Blittable

//DBG: MethodNode physx::PxVec2::operator- L205-208
//Value Converter OpMinus
//RET nat: physx::PxVec2, man: physx.PxVec2, ret: False, kind: Blittable
//PAR nat: physx::PxVec2, man: physx.PxVec2, kind: Blittable
//PAR nat: physx::PxVec2, man: physx.PxVec2, kind: Blittable

//DBG: MethodNode physx::PxVec2::operator- L205-208
//RET nat: physx::PxVec2, man: physx.PxVec2, ret: False, kind: Blittable
//PAR nat: physx::PxVec2, man: physx.PxVec2, kind: Blittable
//PAR nat: physx::PxVec2*, man: physx.PxVec2*, kind: Value
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxVec2_const_PxVec2_operator_Ptr_Minus_PxVec2_(physx.PxVec2* pvk_RetRef, physx.PxVec2* pvk_lhs, physx.PxVec2* pvk_v);

//DBG: MethodNode physx::PxVec2::operator* L213-216
//RET nat: physx::PxVec2, man: physx.PxVec2, ret: False, kind: Blittable
//PAR nat: physx::PxVec2, man: physx.PxVec2, kind: Blittable
//PAR nat: float, man: float, kind: Value
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxVec2_const_PxVec2_operator_Ptr_Star_float_(physx.PxVec2* pvk_RetRef, physx.PxVec2* pvk_lhs, float pvk_f);

//DBG: MethodNode physx::PxVec2::operator/ L221-225
//RET nat: physx::PxVec2, man: physx.PxVec2, ret: False, kind: Blittable
//PAR nat: physx::PxVec2, man: physx.PxVec2, kind: Blittable
//PAR nat: float, man: float, kind: Value
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxVec2_const_PxVec2_operator_Ptr_Slash_float_(physx.PxVec2* pvk_RetRef, physx.PxVec2* pvk_lhs, float pvk_f);

//DBG: MethodNode physx::PxVec2::operator+= L230-235
//Value Converter OpPlusEqual
//RET nat: physx::PxVec2*, man: physx.PxVec2*, ret: True, kind: Value
//PAR nat: physx::PxVec2, man: physx.PxVec2, kind: Blittable
//PAR nat: physx::PxVec2, man: physx.PxVec2, kind: Blittable

//DBG: MethodNode physx::PxVec2::operator+= L230-235
//Value Converter OpPlusEqual
//RET nat: physx::PxVec2*, man: physx.PxVec2*, ret: True, kind: Value
//PAR nat: physx::PxVec2, man: physx.PxVec2, kind: Blittable
//PAR nat: physx::PxVec2, man: physx.PxVec2, kind: Blittable

//DBG: MethodNode physx::PxVec2::operator+= L230-235
//RET nat: physx::PxVec2*, man: physx.PxVec2*, ret: True, kind: Value
//PAR nat: physx::PxVec2, man: physx.PxVec2, kind: Blittable
//PAR nat: physx::PxVec2*, man: physx.PxVec2*, kind: Value
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxVec2* PxVec2_PxVec2_operator_Ptr_PlusEqual_PxVec2_(physx.PxVec2* pvk_lhs, physx.PxVec2* pvk_v);

//DBG: MethodNode physx::PxVec2::operator-= L240-245
//Value Converter OpMinusEqual
//RET nat: physx::PxVec2*, man: physx.PxVec2*, ret: True, kind: Value
//PAR nat: physx::PxVec2, man: physx.PxVec2, kind: Blittable
//PAR nat: physx::PxVec2, man: physx.PxVec2, kind: Blittable

//DBG: MethodNode physx::PxVec2::operator-= L240-245
//Value Converter OpMinusEqual
//RET nat: physx::PxVec2*, man: physx.PxVec2*, ret: True, kind: Value
//PAR nat: physx::PxVec2, man: physx.PxVec2, kind: Blittable
//PAR nat: physx::PxVec2, man: physx.PxVec2, kind: Blittable

//DBG: MethodNode physx::PxVec2::operator-= L240-245
//RET nat: physx::PxVec2*, man: physx.PxVec2*, ret: True, kind: Value
//PAR nat: physx::PxVec2, man: physx.PxVec2, kind: Blittable
//PAR nat: physx::PxVec2*, man: physx.PxVec2*, kind: Value
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxVec2* PxVec2_PxVec2_operator_Ptr_MinusEqual_PxVec2_(physx.PxVec2* pvk_lhs, physx.PxVec2* pvk_v);

//DBG: MethodNode physx::PxVec2::operator*= L250-255
//RET nat: physx::PxVec2*, man: physx.PxVec2*, ret: True, kind: Value
//PAR nat: physx::PxVec2, man: physx.PxVec2, kind: Blittable
//PAR nat: float, man: float, kind: Value
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxVec2* PxVec2_PxVec2_operator_Ptr_StarEqual_float_(physx.PxVec2* pvk_lhs, float pvk_f);

//DBG: MethodNode physx::PxVec2::operator/= L259-265
//RET nat: physx::PxVec2*, man: physx.PxVec2*, ret: True, kind: Value
//PAR nat: physx::PxVec2, man: physx.PxVec2, kind: Blittable
//PAR nat: float, man: float, kind: Value
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxVec2* PxVec2_PxVec2_operator_Ptr_SlashEqual_float_(physx.PxVec2* pvk_lhs, float pvk_f);

//DBG: MethodNode physx::PxVec2::dot L270-273
//Value Converter dot
//RET nat: float, man: float, ret: True, kind: Value
//PAR nat: physx::PxVec2, man: physx.PxVec2, kind: Blittable
//PAR nat: physx::PxVec2, man: physx.PxVec2, kind: Blittable

//DBG: MethodNode physx::PxVec2::dot L270-273
//Value Converter dot
//RET nat: float, man: float, ret: True, kind: Value
//PAR nat: physx::PxVec2, man: physx.PxVec2, kind: Blittable
//PAR nat: physx::PxVec2, man: physx.PxVec2, kind: Blittable

//DBG: MethodNode physx::PxVec2::dot L270-273
//RET nat: float, man: float, ret: True, kind: Value
//PAR nat: physx::PxVec2, man: physx.PxVec2, kind: Blittable
//PAR nat: physx::PxVec2*, man: physx.PxVec2*, kind: Value
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern float float_const_PxVec2_dotPtr_PxVec2_(physx.PxVec2* pvk_this, physx.PxVec2* pvk_v);

//DBG: MethodNode physx::PxVec2::getNormalized L277-281
//RET nat: physx::PxVec2, man: physx.PxVec2, ret: False, kind: Blittable
//PAR nat: physx::PxVec2, man: physx.PxVec2, kind: Blittable
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxVec2_const_PxVec2_getNormalizedPtr(physx.PxVec2* pvk_RetRef, physx.PxVec2* pvk_this);

//DBG: MethodNode physx::PxVec2::normalize L286-292
//RET nat: float, man: float, ret: True, kind: Value
//PAR nat: physx::PxVec2, man: physx.PxVec2, kind: Blittable
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern float float_PxVec2_normalizePtr(physx.PxVec2* pvk_this);

//DBG: MethodNode physx::PxVec2::multiply L297-300
//Value Converter multiply
//RET nat: physx::PxVec2, man: physx.PxVec2, ret: False, kind: Blittable
//PAR nat: physx::PxVec2, man: physx.PxVec2, kind: Blittable
//PAR nat: physx::PxVec2, man: physx.PxVec2, kind: Blittable

//DBG: MethodNode physx::PxVec2::multiply L297-300
//Value Converter multiply
//RET nat: physx::PxVec2, man: physx.PxVec2, ret: False, kind: Blittable
//PAR nat: physx::PxVec2, man: physx.PxVec2, kind: Blittable
//PAR nat: physx::PxVec2, man: physx.PxVec2, kind: Blittable

//DBG: MethodNode physx::PxVec2::multiply L297-300
//RET nat: physx::PxVec2, man: physx.PxVec2, ret: False, kind: Blittable
//PAR nat: physx::PxVec2, man: physx.PxVec2, kind: Blittable
//PAR nat: physx::PxVec2*, man: physx.PxVec2*, kind: Value
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxVec2_const_PxVec2_multiplyPtr_PxVec2_(physx.PxVec2* pvk_RetRef, physx.PxVec2* pvk_this, physx.PxVec2* pvk_a);

//DBG: MethodNode physx::PxVec2::minimum L305-308
//Value Converter minimum
//RET nat: physx::PxVec2, man: physx.PxVec2, ret: False, kind: Blittable
//PAR nat: physx::PxVec2, man: physx.PxVec2, kind: Blittable
//PAR nat: physx::PxVec2, man: physx.PxVec2, kind: Blittable

//DBG: MethodNode physx::PxVec2::minimum L305-308
//Value Converter minimum
//RET nat: physx::PxVec2, man: physx.PxVec2, ret: False, kind: Blittable
//PAR nat: physx::PxVec2, man: physx.PxVec2, kind: Blittable
//PAR nat: physx::PxVec2, man: physx.PxVec2, kind: Blittable

//DBG: MethodNode physx::PxVec2::minimum L305-308
//RET nat: physx::PxVec2, man: physx.PxVec2, ret: False, kind: Blittable
//PAR nat: physx::PxVec2, man: physx.PxVec2, kind: Blittable
//PAR nat: physx::PxVec2*, man: physx.PxVec2*, kind: Value
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxVec2_const_PxVec2_minimumPtr_PxVec2_(physx.PxVec2* pvk_RetRef, physx.PxVec2* pvk_this, physx.PxVec2* pvk_v);

//DBG: MethodNode physx::PxVec2::minElement L313-316
//RET nat: float, man: float, ret: True, kind: Value
//PAR nat: physx::PxVec2, man: physx.PxVec2, kind: Blittable
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern float float_const_PxVec2_minElementPtr(physx.PxVec2* pvk_this);

//DBG: MethodNode physx::PxVec2::maximum L321-324
//Value Converter maximum
//RET nat: physx::PxVec2, man: physx.PxVec2, ret: False, kind: Blittable
//PAR nat: physx::PxVec2, man: physx.PxVec2, kind: Blittable
//PAR nat: physx::PxVec2, man: physx.PxVec2, kind: Blittable

//DBG: MethodNode physx::PxVec2::maximum L321-324
//Value Converter maximum
//RET nat: physx::PxVec2, man: physx.PxVec2, ret: False, kind: Blittable
//PAR nat: physx::PxVec2, man: physx.PxVec2, kind: Blittable
//PAR nat: physx::PxVec2, man: physx.PxVec2, kind: Blittable

//DBG: MethodNode physx::PxVec2::maximum L321-324
//RET nat: physx::PxVec2, man: physx.PxVec2, ret: False, kind: Blittable
//PAR nat: physx::PxVec2, man: physx.PxVec2, kind: Blittable
//PAR nat: physx::PxVec2*, man: physx.PxVec2*, kind: Value
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxVec2_const_PxVec2_maximumPtr_PxVec2_(physx.PxVec2* pvk_RetRef, physx.PxVec2* pvk_this, physx.PxVec2* pvk_v);

//DBG: MethodNode physx::PxVec2::maxElement L329-332
//RET nat: float, man: float, ret: True, kind: Value
//PAR nat: physx::PxVec2, man: physx.PxVec2, kind: Blittable
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern float float_const_PxVec2_maxElementPtr(physx.PxVec2* pvk_this);

//DBG: MethodNode physx::PxVec2::~PxVec2 L49
//ERRORS in MethodNode: Skipping Implicit MethodNode physx::PxVec2::~PxVec2 L49, Destructor

//REFERENCES

//Operators
//SKIPPED PARAMETER WITH CONVERSION BUT NO ENCLOSING TYPE
}
