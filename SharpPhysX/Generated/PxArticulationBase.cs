// Generated by minBND 5.1.78.26 - Â© github.com/Alan-FGR
//DEBUG: UnitNode  - 0
//Unit PxArticulationBase
using System;
using System.Runtime.InteropServices;

//DEBUG: NamespaceNode physx - 40-333
public static unsafe partial class physx {
    //DEBUG: ClassNode physx::PxArticulationBase - 57-330
    //Bases: PxBasePtr
    //Interface use count: 2
    public unsafe partial struct PxArticulationBasePtr : physx.PxBasePtr.IPxBasePtr{
        private System.IntPtr nativePtr_;
        
    //DEBUG: EnumNode physx::PxArticulationBase::Enum - 61-65
        public enum Enum : int {
            eReducedCoordinate = 0, // eReducedCoordinate = 0
            eMaximumCoordinate = 1, // eMaximumCoordinate = 1
        }
        
        //DEBUG: GetterSetterNode physx::PxArticulationBase - 57-330
        //Field: userData - 317-317
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern IntPtr PxArticulationBase_GET_userData(PxArticulationBasePtr cls);
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void PxArticulationBase_SET_userData(PxArticulationBasePtr cls, IntPtr value);
        
        public IntPtr userData {
            get => PxArticulationBase_GET_userData(this);
            set => PxArticulationBase_SET_userData(this, value);
        }
        
        //DEBUG: MethodNode physx::PxArticulationBase::getScene - 74
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxScenePtr physx_PxScenePtr_const_physx_PxArticulationBase_getScene(physx.PxArticulationBasePtr pvk_this);
        
        public physx.PxScenePtr getScene() {
            //RET nat: physx.PxScenePtr, man: physx.PxScenePtr, stg: PtrStruct, ret: True
            //PAR nat: PxArticulationBasePtr, man: physx.PxArticulationBasePtr, stg: PtrStruct
            physx.PxArticulationBasePtr pvk_in_this = this;
            return physx_PxScenePtr_const_physx_PxArticulationBase_getScene(pvk_in_this);
        }
        
        //DEBUG: MethodNode physx::PxArticulationBase::setSolverIterationCounts - 92
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxArticulationBase_setSolverIterationCounts_uint_uint_(physx.PxArticulationBasePtr pvk_this, uint pvk_minPositionIters, uint pvk_minVelocityIters);
        
        public void setSolverIterationCounts(uint minPositionIters, uint minVelocityIters=1) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: PxArticulationBasePtr, man: physx.PxArticulationBasePtr, stg: PtrStruct
            physx.PxArticulationBasePtr pvk_in_this = this;
            //PAR nat: unsigned int, man: uint, stg: Value
            uint pvk_in_minPositionIters = minPositionIters;
            //PAR nat: unsigned int, man: uint, stg: Value
            uint pvk_in_minVelocityIters = minVelocityIters;
            void_physx_PxArticulationBase_setSolverIterationCounts_uint_uint_(pvk_in_this, pvk_in_minPositionIters, pvk_in_minVelocityIters);
        }
        
        //DEBUG: MethodNode physx::PxArticulationBase::setSolverIterationCounts - 92
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxArticulationBase_setSolverIterationCounts_uint_(physx.PxArticulationBasePtr pvk_this, uint pvk_minPositionIters);
        
        public void setSolverIterationCounts(uint minPositionIters) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: PxArticulationBasePtr, man: physx.PxArticulationBasePtr, stg: PtrStruct
            physx.PxArticulationBasePtr pvk_in_this = this;
            //PAR nat: unsigned int, man: uint, stg: Value
            uint pvk_in_minPositionIters = minPositionIters;
            void_physx_PxArticulationBase_setSolverIterationCounts_uint_(pvk_in_this, pvk_in_minPositionIters);
        }
        
        //DEBUG: MethodNode physx::PxArticulationBase::getSolverIterationCounts - 99
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_const_physx_PxArticulationBase_getSolverIterationCounts_uint_uint_(physx.PxArticulationBasePtr pvk_this, uint* pvk_minPositionIters, uint* pvk_minVelocityIters);
        
        public void getSolverIterationCounts(uint* minPositionIters, uint* minVelocityIters) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: PxArticulationBasePtr, man: physx.PxArticulationBasePtr, stg: PtrStruct
            physx.PxArticulationBasePtr pvk_in_this = this;
            //PAR nat: unsigned int*, man: uint*, stg: Value
            uint* pvk_in_minPositionIters = minPositionIters;
            //PAR nat: unsigned int*, man: uint*, stg: Value
            uint* pvk_in_minVelocityIters = minVelocityIters;
            void_const_physx_PxArticulationBase_getSolverIterationCounts_uint_uint_(pvk_in_this, pvk_in_minPositionIters, pvk_in_minVelocityIters);
        }
        
        //DEBUG: MethodNode physx::PxArticulationBase::isSleeping - 133
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern bool bool_const_physx_PxArticulationBase_isSleeping(physx.PxArticulationBasePtr pvk_this);
        
        public bool isSleeping() {
            //RET nat: bool, man: bool, stg: Value, ret: True
            //PAR nat: PxArticulationBasePtr, man: physx.PxArticulationBasePtr, stg: PtrStruct
            physx.PxArticulationBasePtr pvk_in_this = this;
            return bool_const_physx_PxArticulationBase_isSleeping(pvk_in_this);
        }
        
        //DEBUG: MethodNode physx::PxArticulationBase::setSleepThreshold - 144
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxArticulationBase_setSleepThreshold_float_(physx.PxArticulationBasePtr pvk_this, float pvk_threshold);
        
        public void setSleepThreshold(float threshold) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: PxArticulationBasePtr, man: physx.PxArticulationBasePtr, stg: PtrStruct
            physx.PxArticulationBasePtr pvk_in_this = this;
            //PAR nat: float, man: float, stg: Value
            float pvk_in_threshold = threshold;
            void_physx_PxArticulationBase_setSleepThreshold_float_(pvk_in_this, pvk_in_threshold);
        }
        
        //DEBUG: MethodNode physx::PxArticulationBase::getSleepThreshold - 153
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern float float_const_physx_PxArticulationBase_getSleepThreshold(physx.PxArticulationBasePtr pvk_this);
        
        public float getSleepThreshold() {
            //RET nat: float, man: float, stg: Value, ret: True
            //PAR nat: PxArticulationBasePtr, man: physx.PxArticulationBasePtr, stg: PtrStruct
            physx.PxArticulationBasePtr pvk_in_this = this;
            return float_const_physx_PxArticulationBase_getSleepThreshold(pvk_in_this);
        }
        
        //DEBUG: MethodNode physx::PxArticulationBase::setStabilizationThreshold - 168
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxArticulationBase_setStabilizationThreshold_float_(physx.PxArticulationBasePtr pvk_this, float pvk_threshold);
        
        public void setStabilizationThreshold(float threshold) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: PxArticulationBasePtr, man: physx.PxArticulationBasePtr, stg: PtrStruct
            physx.PxArticulationBasePtr pvk_in_this = this;
            //PAR nat: float, man: float, stg: Value
            float pvk_in_threshold = threshold;
            void_physx_PxArticulationBase_setStabilizationThreshold_float_(pvk_in_this, pvk_in_threshold);
        }
        
        //DEBUG: MethodNode physx::PxArticulationBase::getStabilizationThreshold - 179
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern float float_const_physx_PxArticulationBase_getStabilizationThreshold(physx.PxArticulationBasePtr pvk_this);
        
        public float getStabilizationThreshold() {
            //RET nat: float, man: float, stg: Value, ret: True
            //PAR nat: PxArticulationBasePtr, man: physx.PxArticulationBasePtr, stg: PtrStruct
            physx.PxArticulationBasePtr pvk_in_this = this;
            return float_const_physx_PxArticulationBase_getStabilizationThreshold(pvk_in_this);
        }
        
        //DEBUG: MethodNode physx::PxArticulationBase::setWakeCounter - 196
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxArticulationBase_setWakeCounter_float_(physx.PxArticulationBasePtr pvk_this, float pvk_wakeCounterValue);
        
        public void setWakeCounter(float wakeCounterValue) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: PxArticulationBasePtr, man: physx.PxArticulationBasePtr, stg: PtrStruct
            physx.PxArticulationBasePtr pvk_in_this = this;
            //PAR nat: float, man: float, stg: Value
            float pvk_in_wakeCounterValue = wakeCounterValue;
            void_physx_PxArticulationBase_setWakeCounter_float_(pvk_in_this, pvk_in_wakeCounterValue);
        }
        
        //DEBUG: MethodNode physx::PxArticulationBase::getWakeCounter - 205
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern float float_const_physx_PxArticulationBase_getWakeCounter(physx.PxArticulationBasePtr pvk_this);
        
        public float getWakeCounter() {
            //RET nat: float, man: float, stg: Value, ret: True
            //PAR nat: PxArticulationBasePtr, man: physx.PxArticulationBasePtr, stg: PtrStruct
            physx.PxArticulationBasePtr pvk_in_this = this;
            return float_const_physx_PxArticulationBase_getWakeCounter(pvk_in_this);
        }
        
        //DEBUG: MethodNode physx::PxArticulationBase::wakeUp - 218
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxArticulationBase_wakeUp(physx.PxArticulationBasePtr pvk_this);
        
        public void wakeUp() {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: PxArticulationBasePtr, man: physx.PxArticulationBasePtr, stg: PtrStruct
            physx.PxArticulationBasePtr pvk_in_this = this;
            void_physx_PxArticulationBase_wakeUp(pvk_in_this);
        }
        
        //DEBUG: MethodNode physx::PxArticulationBase::putToSleep - 231
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxArticulationBase_putToSleep(physx.PxArticulationBasePtr pvk_this);
        
        public void putToSleep() {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: PxArticulationBasePtr, man: physx.PxArticulationBasePtr, stg: PtrStruct
            physx.PxArticulationBasePtr pvk_in_this = this;
            void_physx_PxArticulationBase_putToSleep(pvk_in_this);
        }
        
        //DEBUG: MethodNode physx::PxArticulationBase::createLink - 245
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxArticulationLinkPtr physx_PxArticulationLinkPtr_physx_PxArticulationBase_createLink_physx_PxArticulationLinkPtr_physx_PxTransform_(physx.PxArticulationBasePtr pvk_this, physx.PxArticulationLinkPtr pvk_parent, physx.PxTransform* pvk_pose);
        
        public physx.PxArticulationLinkPtr createLink(physx.PxArticulationLinkPtr parent, physx.PxTransform* pose) {
            //RET nat: physx.PxArticulationLinkPtr, man: physx.PxArticulationLinkPtr, stg: PtrStruct, ret: True
            //PAR nat: PxArticulationBasePtr, man: physx.PxArticulationBasePtr, stg: PtrStruct
            physx.PxArticulationBasePtr pvk_in_this = this;
            //PAR nat: PxArticulationLinkPtr, man: physx.PxArticulationLinkPtr, stg: PtrStruct
            physx.PxArticulationLinkPtr pvk_in_parent = parent;
            //PAR nat: physx::PxTransform*, man: physx.PxTransform*, stg: Value
            physx.PxTransform* pvk_in_pose = pose;
            return physx_PxArticulationLinkPtr_physx_PxArticulationBase_createLink_physx_PxArticulationLinkPtr_physx_PxTransform_(pvk_in_this, pvk_in_parent, pvk_in_pose);
        }
        
        //DEBUG: MethodNode physx::PxArticulationBase::getNbLinks - 252
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern uint uint_const_physx_PxArticulationBase_getNbLinks(physx.PxArticulationBasePtr pvk_this);
        
        public uint getNbLinks() {
            //RET nat: uint, man: uint, stg: Value, ret: True
            //PAR nat: PxArticulationBasePtr, man: physx.PxArticulationBasePtr, stg: PtrStruct
            physx.PxArticulationBasePtr pvk_in_this = this;
            return uint_const_physx_PxArticulationBase_getNbLinks(pvk_in_this);
        }
        
        //DEBUG: MethodNode physx::PxArticulationBase::getLinks - 267
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern uint uint_const_physx_PxArticulationBase_getLinks_physx_PxArticulationLinkPtr_uint_uint_(physx.PxArticulationBasePtr pvk_this, physx.PxArticulationLinkPtr* pvk_userBuffer, uint pvk_bufferSize, uint pvk_startIndex);
        
        public uint getLinks(physx.PxArticulationLinkPtr* userBuffer, uint bufferSize, uint startIndex=0) {
            //RET nat: uint, man: uint, stg: Value, ret: True
            //PAR nat: PxArticulationBasePtr, man: physx.PxArticulationBasePtr, stg: PtrStruct
            physx.PxArticulationBasePtr pvk_in_this = this;
            //PAR nat: PxArticulationLinkPtr*, man: physx.PxArticulationLinkPtr*, stg: Value
            physx.PxArticulationLinkPtr* pvk_in_userBuffer = userBuffer;
            //PAR nat: unsigned int, man: uint, stg: Value
            uint pvk_in_bufferSize = bufferSize;
            //PAR nat: unsigned int, man: uint, stg: Value
            uint pvk_in_startIndex = startIndex;
            return uint_const_physx_PxArticulationBase_getLinks_physx_PxArticulationLinkPtr_uint_uint_(pvk_in_this, pvk_in_userBuffer, pvk_in_bufferSize, pvk_in_startIndex);
        }
        
        //DEBUG: MethodNode physx::PxArticulationBase::getLinks - 267
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern uint uint_const_physx_PxArticulationBase_getLinks_physx_PxArticulationLinkPtr_uint_(physx.PxArticulationBasePtr pvk_this, physx.PxArticulationLinkPtr* pvk_userBuffer, uint pvk_bufferSize);
        
        public uint getLinks(physx.PxArticulationLinkPtr* userBuffer, uint bufferSize) {
            //RET nat: uint, man: uint, stg: Value, ret: True
            //PAR nat: PxArticulationBasePtr, man: physx.PxArticulationBasePtr, stg: PtrStruct
            physx.PxArticulationBasePtr pvk_in_this = this;
            //PAR nat: PxArticulationLinkPtr*, man: physx.PxArticulationLinkPtr*, stg: Value
            physx.PxArticulationLinkPtr* pvk_in_userBuffer = userBuffer;
            //PAR nat: unsigned int, man: uint, stg: Value
            uint pvk_in_bufferSize = bufferSize;
            return uint_const_physx_PxArticulationBase_getLinks_physx_PxArticulationLinkPtr_uint_(pvk_in_this, pvk_in_userBuffer, pvk_in_bufferSize);
        }
        
        //DEBUG: MethodNode physx::PxArticulationBase::setName - 280
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxArticulationBase_setName_string_(physx.PxArticulationBasePtr pvk_this, string pvk_name);
        
        public void setName(string name) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: PxArticulationBasePtr, man: physx.PxArticulationBasePtr, stg: PtrStruct
            physx.PxArticulationBasePtr pvk_in_this = this;
            //PAR nat: char*, man: string, stg: Value
            string pvk_in_name = name;
            void_physx_PxArticulationBase_setName_string_(pvk_in_this, pvk_in_name);
        }
        
        //DEBUG: MethodNode physx::PxArticulationBase::getName - 289
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern string string_const_physx_PxArticulationBase_getName(physx.PxArticulationBasePtr pvk_this);
        
        public string getName() {
            //RET nat: string, man: string, stg: Value, ret: True
            //PAR nat: PxArticulationBasePtr, man: physx.PxArticulationBasePtr, stg: PtrStruct
            physx.PxArticulationBasePtr pvk_in_this = this;
            return string_const_physx_PxArticulationBase_getName(pvk_in_this);
        }
        
        //DEBUG: MethodNode physx::PxArticulationBase::getWorldBounds - 300
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void physx_PxBounds3_const_physx_PxArticulationBase_getWorldBounds_float_(physx.PxBounds3* RetRef, physx.PxArticulationBasePtr pvk_this, float pvk_inflation);
        
        public physx.PxBounds3 getWorldBounds(float inflation=1.01f) {
            //RET nat: physx.PxBounds3, man: physx.PxBounds3, stg: Blittable, ret: False
            physx.PxBounds3 RetRef;
            //PAR nat: PxArticulationBasePtr, man: physx.PxArticulationBasePtr, stg: PtrStruct
            physx.PxArticulationBasePtr pvk_in_this = this;
            //PAR nat: float, man: float, stg: Value
            float pvk_in_inflation = inflation;
            physx_PxBounds3_const_physx_PxArticulationBase_getWorldBounds_float_(&RetRef, pvk_in_this, pvk_in_inflation);
            return RetRef;
        }
        
        //DEBUG: MethodNode physx::PxArticulationBase::getWorldBounds - 300
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void physx_PxBounds3_const_physx_PxArticulationBase_getWorldBounds(physx.PxBounds3* RetRef, physx.PxArticulationBasePtr pvk_this);
        
        public physx.PxBounds3 getWorldBounds() {
            //RET nat: physx.PxBounds3, man: physx.PxBounds3, stg: Blittable, ret: False
            physx.PxBounds3 RetRef;
            //PAR nat: PxArticulationBasePtr, man: physx.PxArticulationBasePtr, stg: PtrStruct
            physx.PxArticulationBasePtr pvk_in_this = this;
            physx_PxBounds3_const_physx_PxArticulationBase_getWorldBounds(&RetRef, pvk_in_this);
            return RetRef;
        }
        
        //DEBUG: MethodNode physx::PxArticulationBase::getAggregate - 309
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxAggregatePtr physx_PxAggregatePtr_const_physx_PxArticulationBase_getAggregate(physx.PxArticulationBasePtr pvk_this);
        
        public physx.PxAggregatePtr getAggregate() {
            //RET nat: physx.PxAggregatePtr, man: physx.PxAggregatePtr, stg: PtrStruct, ret: True
            //PAR nat: PxArticulationBasePtr, man: physx.PxArticulationBasePtr, stg: PtrStruct
            physx.PxArticulationBasePtr pvk_in_this = this;
            return physx_PxAggregatePtr_const_physx_PxArticulationBase_getAggregate(pvk_in_this);
        }
        
        //DEBUG: MethodNode physx::PxArticulationBase::getImpl - 311
        //ERRORS OCCURED IN physx::PxArticulationBase::getImpl
        ////Type PxArticulationImplPtr explicitly forbidden by user configuration
        
        //DEBUG: MethodNode physx::PxArticulationBase::getImpl - 313
        //ERRORS OCCURED IN physx::PxArticulationBase::getImpl
        ////Type PxArticulationImplPtr explicitly forbidden by user configuration
        
        //DEBUG: MethodNode physx::PxArticulationBase::getType - 315
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxArticulationBasePtr.Enum physx_PxArticulationBasePtr_Enum_const_physx_PxArticulationBase_getType(physx.PxArticulationBasePtr pvk_this);
        
        public physx.PxArticulationBasePtr.Enum getType() {
            //RET nat: physx.PxArticulationBasePtr.Enum, man: physx.PxArticulationBasePtr.Enum, stg: Value, ret: True
            //PAR nat: PxArticulationBasePtr, man: physx.PxArticulationBasePtr, stg: PtrStruct
            physx.PxArticulationBasePtr pvk_in_this = this;
            return physx_PxArticulationBasePtr_Enum_const_physx_PxArticulationBase_getType(pvk_in_this);
        }
        
        //DEBUG: MethodNode physx::PxArticulationBase::~PxArticulationBase - 319
        //ERRORS OCCURED IN physx::PxArticulationBase::~PxArticulationBase
        //Destructor
        
        //DEBUG: MethodNode physx::PxArticulationBase::createArticulationJoint - 325-328
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxArticulationJointBasePtr physx_PxArticulationJointBasePtr_physx_PxArticulationBase_createArticulationJoint_physx_PxArticulationLinkPtr_physx_PxTransform_physx_PxArticulationLinkPtr_physx_PxTransform_(physx.PxArticulationBasePtr pvk_this, physx.PxArticulationLinkPtr pvk_parent, physx.PxTransform* pvk_parentFrame, physx.PxArticulationLinkPtr pvk_child, physx.PxTransform* pvk_childFrame);
        
        public physx.PxArticulationJointBasePtr createArticulationJoint(physx.PxArticulationLinkPtr parent, physx.PxTransform* parentFrame, physx.PxArticulationLinkPtr child, physx.PxTransform* childFrame) {
            //RET nat: physx.PxArticulationJointBasePtr, man: physx.PxArticulationJointBasePtr, stg: PtrStruct, ret: True
            //PAR nat: PxArticulationBasePtr, man: physx.PxArticulationBasePtr, stg: PtrStruct
            physx.PxArticulationBasePtr pvk_in_this = this;
            //PAR nat: PxArticulationLinkPtr, man: physx.PxArticulationLinkPtr, stg: PtrStruct
            physx.PxArticulationLinkPtr pvk_in_parent = parent;
            //PAR nat: physx::PxTransform*, man: physx.PxTransform*, stg: Value
            physx.PxTransform* pvk_in_parentFrame = parentFrame;
            //PAR nat: PxArticulationLinkPtr, man: physx.PxArticulationLinkPtr, stg: PtrStruct
            physx.PxArticulationLinkPtr pvk_in_child = child;
            //PAR nat: physx::PxTransform*, man: physx.PxTransform*, stg: Value
            physx.PxTransform* pvk_in_childFrame = childFrame;
            return physx_PxArticulationJointBasePtr_physx_PxArticulationBase_createArticulationJoint_physx_PxArticulationLinkPtr_physx_PxTransform_physx_PxArticulationLinkPtr_physx_PxTransform_(pvk_in_this, pvk_in_parent, pvk_in_parentFrame, pvk_in_child, pvk_in_childFrame);
        }
        
        //DEBUG: MethodNode physx::PxArticulationBase::releaseArticulationJoint - 329
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxArticulationBase_releaseArticulationJoint_physx_PxArticulationJointBasePtr_(physx.PxArticulationBasePtr pvk_this, physx.PxArticulationJointBasePtr pvk_joint);
        
        public void releaseArticulationJoint(physx.PxArticulationJointBasePtr joint) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: PxArticulationBasePtr, man: physx.PxArticulationBasePtr, stg: PtrStruct
            physx.PxArticulationBasePtr pvk_in_this = this;
            //PAR nat: PxArticulationJointBasePtr, man: physx.PxArticulationJointBasePtr, stg: PtrStruct
            physx.PxArticulationJointBasePtr pvk_in_joint = joint;
            void_physx_PxArticulationBase_releaseArticulationJoint_physx_PxArticulationJointBasePtr_(pvk_in_this, pvk_in_joint);
        }
        
        //DEBUG: MethodNode physx::PxArticulationBase::operator= - 57
        //ERRORS OCCURED IN physx::PxArticulationBase::operator=
        //Implicit Function/Method
        //Unbindable Operator: Equal
        public static implicit operator physx.PxBasePtr(PxArticulationBasePtr obj) => *(physx.PxBasePtr*)&obj;
        public static explicit operator PxArticulationBasePtr(physx.PxBasePtr obj) => *(PxArticulationBasePtr*)&obj;
    
        // PIPING
        public void release(){((physx.PxBasePtr)this).release();}
        public string getConcreteTypeName(){return((physx.PxBasePtr)this).getConcreteTypeName();}
        ////################################################################## FIXME
        //Unparsed type ( TODO ): T*
        ////################################################################## FIXME
        //Unparsed type ( TODO ): T*
        public ushort getConcreteType(){return((physx.PxBasePtr)this).getConcreteType();}
        public void setBaseFlag(physx.PxBaseFlagEnum flag, bool value){((physx.PxBasePtr)this).setBaseFlag(flag, value);}
        public void setBaseFlags(PxBaseFlagsPtr inFlags){((physx.PxBasePtr)this).setBaseFlags(inFlags);}
        public PxBaseFlagsPtr getBaseFlags_New(){return((physx.PxBasePtr)this).getBaseFlags_New();}
        public bool isReleasable(){return((physx.PxBasePtr)this).isReleasable();}
    
        public unsafe interface IPxArticulationBasePtr {
            physx.PxScenePtr getScene();
            void setSolverIterationCounts(uint minPositionIters, uint minVelocityIters=1);
            void getSolverIterationCounts(uint* minPositionIters, uint* minVelocityIters);
            bool isSleeping();
            void setSleepThreshold(float threshold);
            float getSleepThreshold();
            void setStabilizationThreshold(float threshold);
            float getStabilizationThreshold();
            void setWakeCounter(float wakeCounterValue);
            float getWakeCounter();
            void wakeUp();
            void putToSleep();
            physx.PxArticulationLinkPtr createLink(physx.PxArticulationLinkPtr parent, physx.PxTransform* pose);
            uint getNbLinks();
            uint getLinks(physx.PxArticulationLinkPtr* userBuffer, uint bufferSize, uint startIndex=0);
            void setName(string name);
            string getName();
            physx.PxBounds3 getWorldBounds(float inflation=1.01f);
            physx.PxAggregatePtr getAggregate();
            //////Type PxArticulationImplPtr explicitly forbidden by user configuration | physx.PxArticulationImplPtr getImpl();
            //////Type PxArticulationImplPtr explicitly forbidden by user configuration | physx.PxArticulationImplPtr getImplConst();
            physx.PxArticulationBasePtr.Enum getType();
            physx.PxArticulationJointBasePtr createArticulationJoint(physx.PxArticulationLinkPtr parent, physx.PxTransform* parentFrame, physx.PxArticulationLinkPtr child, physx.PxTransform* childFrame);
            void releaseArticulationJoint(physx.PxArticulationJointBasePtr joint);
        }
    }
    
}
