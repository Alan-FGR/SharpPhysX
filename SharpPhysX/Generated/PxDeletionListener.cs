// Generated by minBND 5.1.90.51 - Â© github.com/Alan-FGR
using System;
using System.Runtime.InteropServices;
using static minBND_pinvokes;

public static unsafe partial class physx {

    //DBG: FunctionNode physx::operator| L66
    //physx::operator| static physx.PxDeletionEventFlagsPtr OpPipe_New(physx.PxDeletionEventFlagEnum a, physx.PxDeletionEventFlagEnum b) will also be bound as member operator
    //RET nat: PxDeletionEventFlagsPtr, man: physx.PxDeletionEventFlagsPtr, ret: True, kind: PtrStruct
    //PAR nat: physx::PxDeletionEventFlag::Enum, man: physx.PxDeletionEventFlagEnum, kind: Value
    //PAR nat: physx::PxDeletionEventFlag::Enum, man: physx.PxDeletionEventFlagEnum, kind: Value
    public static physx.PxDeletionEventFlagsPtr OpPipe_New(physx.PxDeletionEventFlagEnum a, physx.PxDeletionEventFlagEnum b) {
        physx.PxDeletionEventFlagEnum pvk_in_a = a;
        physx.PxDeletionEventFlagEnum pvk_in_b = b;
        return PxDeletionEventFlagsPtr_operator_Ptr_Pipe_PxDeletionEventFlagEnum_PxDeletionEventFlagEnum_(pvk_in_a, pvk_in_b);
    }

    //DBG: FunctionNode physx::operator& L66
    //physx::operator& static physx.PxDeletionEventFlagsPtr OpAnd_New(physx.PxDeletionEventFlagEnum a, physx.PxDeletionEventFlagEnum b) will also be bound as member operator
    //RET nat: PxDeletionEventFlagsPtr, man: physx.PxDeletionEventFlagsPtr, ret: True, kind: PtrStruct
    //PAR nat: physx::PxDeletionEventFlag::Enum, man: physx.PxDeletionEventFlagEnum, kind: Value
    //PAR nat: physx::PxDeletionEventFlag::Enum, man: physx.PxDeletionEventFlagEnum, kind: Value
    public static physx.PxDeletionEventFlagsPtr OpAnd_New(physx.PxDeletionEventFlagEnum a, physx.PxDeletionEventFlagEnum b) {
        physx.PxDeletionEventFlagEnum pvk_in_a = a;
        physx.PxDeletionEventFlagEnum pvk_in_b = b;
        return PxDeletionEventFlagsPtr_operator_Ptr_Amp_PxDeletionEventFlagEnum_PxDeletionEventFlagEnum_(pvk_in_a, pvk_in_b);
    }

    //DBG: FunctionNode physx::operator~ L66
    //physx::operator~ static physx.PxDeletionEventFlagsPtr OpTilde_New(physx.PxDeletionEventFlagEnum a) will also be bound as member operator
    //RET nat: PxDeletionEventFlagsPtr, man: physx.PxDeletionEventFlagsPtr, ret: True, kind: PtrStruct
    //PAR nat: physx::PxDeletionEventFlag::Enum, man: physx.PxDeletionEventFlagEnum, kind: Value
    public static physx.PxDeletionEventFlagsPtr OpTilde_New(physx.PxDeletionEventFlagEnum a) {
        physx.PxDeletionEventFlagEnum pvk_in_a = a;
        return PxDeletionEventFlagsPtr_operator_Ptr_Tilde_PxDeletionEventFlagEnum_(pvk_in_a);
    }

    //DBG: ClassNode PxDeletionEventFlag physx::PxDeletionEventFlag L51-58
    public enum PxDeletionEventFlagEnum : int {
        eUSER_RELEASE = 1,   // eUSER_RELEASE = (1<<0)
        eMEMORY_RELEASE = 2, // eMEMORY_RELEASE = (1<<1)
    }
    //Subclasses using this: 0

    public unsafe partial struct PxDeletionListenerPtr {
        private System.IntPtr nativePtr_;

        //DBG: ClassNode PxDeletionListener physx::PxDeletionListener L73-98

        //DBG: MethodNode physx::PxDeletionListener::onRelease L93
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxDeletionListenerPtr, man: physx.PxDeletionListenerPtr, kind: PtrStruct
        //PAR nat: PxBasePtr, man: physx.PxBasePtr, kind: PtrStruct
        //PAR nat: void*, man: IntPtr, kind: Value
        //PAR nat: physx::PxDeletionEventFlag::Enum, man: physx.PxDeletionEventFlagEnum, kind: Value
        public void onRelease(physx.PxBasePtr observed, IntPtr userData, physx.PxDeletionEventFlagEnum deletionEvent) {
            physx.PxDeletionListenerPtr pvk_in_this = this;
            physx.PxBasePtr pvk_in_observed = observed;
            IntPtr pvk_in_userData = userData;
            physx.PxDeletionEventFlagEnum pvk_in_deletionEvent = deletionEvent;
            void_PxDeletionListenerPtr_onReleasePtr_PxBasePtr_IntPtr_PxDeletionEventFlagEnum_(pvk_in_this, pvk_in_observed, pvk_in_userData, pvk_in_deletionEvent);
        }

        //DBG: MethodNode physx::PxDeletionListener::operator= L73
        //ERRORS in MethodNode: Skipping Implicit MethodNode physx::PxDeletionListener::operator= L73

        //Operators
    }

    //DBG: DeclNode PxDeletionEventFlags physx::PxDeletionEventFlags L65
}
