// Generated by minBND 5.1.91.17 - Â© github.com/Alan-FGR
using System;
using System.Runtime.InteropServices;
using static minBND_pinvokes;

public static unsafe partial class physx {
    public static unsafe partial class intrinsics {

        public static float abs(float a) {
            float pvk_in_a = a;
            return float_intrinsics_absPtr_float_(pvk_in_a);
        }

        public static float fsel(float a, float b, float c) {
            float pvk_in_a = a;
            float pvk_in_b = b;
            float pvk_in_c = c;
            return float_intrinsics_fselPtr_float_float_float_(pvk_in_a, pvk_in_b, pvk_in_c);
        }

        public static float sign(float a) {
            float pvk_in_a = a;
            return float_intrinsics_signPtr_float_(pvk_in_a);
        }

        public static float recip(float a) {
            float pvk_in_a = a;
            return float_intrinsics_recipPtr_float_(pvk_in_a);
        }

        public static float recipFast(float a) {
            float pvk_in_a = a;
            return float_intrinsics_recipFastPtr_float_(pvk_in_a);
        }

        public static float sqrt(float a) {
            float pvk_in_a = a;
            return float_intrinsics_sqrtPtr_float_(pvk_in_a);
        }

        public static float recipSqrt(float a) {
            float pvk_in_a = a;
            return float_intrinsics_recipSqrtPtr_float_(pvk_in_a);
        }

        public static float recipSqrtFast(float a) {
            float pvk_in_a = a;
            return float_intrinsics_recipSqrtFastPtr_float_(pvk_in_a);
        }

        public static float sin(float a) {
            float pvk_in_a = a;
            return float_intrinsics_sinPtr_float_(pvk_in_a);
        }

        public static float cos(float a) {
            float pvk_in_a = a;
            return float_intrinsics_cosPtr_float_(pvk_in_a);
        }

        public static float selectMin(float a, float b) {
            float pvk_in_a = a;
            float pvk_in_b = b;
            return float_intrinsics_selectMinPtr_float_float_(pvk_in_a, pvk_in_b);
        }

        public static float selectMax(float a, float b) {
            float pvk_in_a = a;
            float pvk_in_b = b;
            return float_intrinsics_selectMaxPtr_float_float_(pvk_in_a, pvk_in_b);
        }

        public static bool isFinite(float a) {
            float pvk_in_a = a;
            return bool_intrinsics_isFinitePtr_float_(pvk_in_a);
        }

        public static bool isFinite(double a) {
            double pvk_in_a = a;
            return bool_intrinsics_isFinitePtr_double_(pvk_in_a);
        }

        public static IntPtr memZero(IntPtr dest, uint count) {
            IntPtr pvk_in_dest = dest;
            uint pvk_in_count = count;
            return IntPtr_intrinsics_memZeroPtr_IntPtr_uint_(pvk_in_dest, pvk_in_count);
        }

        public static IntPtr memSet(IntPtr dest, int c, uint count) {
            IntPtr pvk_in_dest = dest;
            int pvk_in_c = c;
            uint pvk_in_count = count;
            return IntPtr_intrinsics_memSetPtr_IntPtr_int_uint_(pvk_in_dest, pvk_in_c, pvk_in_count);
        }

        public static IntPtr memCopy(IntPtr dest, IntPtr src, uint count) {
            IntPtr pvk_in_dest = dest;
            IntPtr pvk_in_src = src;
            uint pvk_in_count = count;
            return IntPtr_intrinsics_memCopyPtr_IntPtr_IntPtr_uint_(pvk_in_dest, pvk_in_src, pvk_in_count);
        }

        public static IntPtr memMove(IntPtr dest, IntPtr src, uint count) {
            IntPtr pvk_in_dest = dest;
            IntPtr pvk_in_src = src;
            uint pvk_in_count = count;
            return IntPtr_intrinsics_memMovePtr_IntPtr_IntPtr_uint_(pvk_in_dest, pvk_in_src, pvk_in_count);
        }

        public static void memZero128(IntPtr dest) {
            IntPtr pvk_in_dest = dest;
            void_intrinsics_memZero128Ptr_IntPtr_(pvk_in_dest);
        }

        public static void memZero128(IntPtr dest, uint offset=0) {
            IntPtr pvk_in_dest = dest;
            uint pvk_in_offset = offset;
            void_intrinsics_memZero128Ptr_IntPtr_uint_(pvk_in_dest, pvk_in_offset);
        }
    }
}
