//Generated by MinBinder.
using System.Runtime.InteropServices;
public partial class PxWindowsIntrinsics {
[DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
static extern float __abs(float a);

}
public partial class PxWindowsIntrinsics {
[DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
static extern float __fsel(float a, float b, float c);

}
public partial class PxWindowsIntrinsics {
[DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
static extern float __sign(float a);

}
public partial class PxWindowsIntrinsics {
[DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
static extern float __recip(float a);

}
public partial class PxWindowsIntrinsics {
[DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
static extern float __recipFast(float a);

}
public partial class PxWindowsIntrinsics {
[DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
static extern float __sqrt(float a);

}
public partial class PxWindowsIntrinsics {
[DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
static extern float __recipSqrt(float a);

}
public partial class PxWindowsIntrinsics {
[DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
static extern float __recipSqrtFast(float a);

}
public partial class PxWindowsIntrinsics {
[DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
static extern float __sin(float a);

}
public partial class PxWindowsIntrinsics {
[DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
static extern float __cos(float a);

}
public partial class PxWindowsIntrinsics {
[DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
static extern float __selectMin(float a, float b);

}
public partial class PxWindowsIntrinsics {
[DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
static extern float __selectMax(float a, float b);

}
public partial class PxWindowsIntrinsics {
[DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
static extern bool __isFinite(float a);

}
public partial class PxWindowsIntrinsics {
[DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
static extern bool __isFinite(double a);

}
public partial class PxWindowsIntrinsics {
[DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
static extern voidPtr __memZero(voidPtr dest, uint32_t count);

}
public partial class PxWindowsIntrinsics {
[DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
static extern voidPtr __memSet(voidPtr dest, int32_t c, uint32_t count);

}
public partial class PxWindowsIntrinsics {
[DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
static extern voidPtr __memCopy(voidPtr dest, voidPtr src, uint32_t count);

}
public partial class PxWindowsIntrinsics {
[DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
static extern voidPtr __memMove(voidPtr dest, voidPtr src, uint32_t count);

}
public partial class PxWindowsIntrinsics {
[DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
static extern void __memZero128(voidPtr dest, uint32_t offset);

}
