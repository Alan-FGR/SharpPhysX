// Generated by minBND 5.1.81.43 - Â© github.com/Alan-FGR
//Unit PxMath
using System;
using System.Runtime.InteropServices;

public static unsafe partial class physx {
    [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern float float_physx_PxMax_float_float_(float pvk_a, float pvk_b);
    
    public static float PxMax(float a, float b) {
        float pvk_in_a = a;
        float pvk_in_b = b;
        return float_physx_PxMax_float_float_(pvk_in_a, pvk_in_b);
    }
    
    [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern float float_physx_PxMin_float_float_(float pvk_a, float pvk_b);
    
    public static float PxMin(float a, float b) {
        float pvk_in_a = a;
        float pvk_in_b = b;
        return float_physx_PxMin_float_float_(pvk_in_a, pvk_in_b);
    }
    
    [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern float float_physx_PxAbs_float_(float pvk_a);
    
    public static float PxAbs(float a) {
        float pvk_in_a = a;
        return float_physx_PxAbs_float_(pvk_in_a);
    }
    
    [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern bool bool_physx_PxEquals_float_float_float_(float pvk_a, float pvk_b, float pvk_eps);
    
    public static bool PxEquals(float a, float b, float eps) {
        float pvk_in_a = a;
        float pvk_in_b = b;
        float pvk_in_eps = eps;
        return bool_physx_PxEquals_float_float_float_(pvk_in_a, pvk_in_b, pvk_in_eps);
    }
    
    [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern double double_physx_PxAbs_double_(double pvk_a);
    
    public static double PxAbs(double a) {
        double pvk_in_a = a;
        return double_physx_PxAbs_double_(pvk_in_a);
    }
    
    [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern int int_physx_PxAbs_int_(int pvk_a);
    
    public static int PxAbs(int a) {
        int pvk_in_a = a;
        return int_physx_PxAbs_int_(pvk_in_a);
    }
    
    [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern float float_physx_PxSqrt_float_(float pvk_a);
    
    public static float PxSqrt(float a) {
        float pvk_in_a = a;
        return float_physx_PxSqrt_float_(pvk_in_a);
    }
    
    [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern double double_physx_PxSqrt_double_(double pvk_a);
    
    public static double PxSqrt(double a) {
        double pvk_in_a = a;
        return double_physx_PxSqrt_double_(pvk_in_a);
    }
    
    [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern float float_physx_PxRecipSqrt_float_(float pvk_a);
    
    public static float PxRecipSqrt(float a) {
        float pvk_in_a = a;
        return float_physx_PxRecipSqrt_float_(pvk_in_a);
    }
    
    [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern double double_physx_PxRecipSqrt_double_(double pvk_a);
    
    public static double PxRecipSqrt(double a) {
        double pvk_in_a = a;
        return double_physx_PxRecipSqrt_double_(pvk_in_a);
    }
    
    [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern float float_physx_PxSin_float_(float pvk_a);
    
    public static float PxSin(float a) {
        float pvk_in_a = a;
        return float_physx_PxSin_float_(pvk_in_a);
    }
    
    [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern double double_physx_PxSin_double_(double pvk_a);
    
    public static double PxSin(double a) {
        double pvk_in_a = a;
        return double_physx_PxSin_double_(pvk_in_a);
    }
    
    [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern float float_physx_PxCos_float_(float pvk_a);
    
    public static float PxCos(float a) {
        float pvk_in_a = a;
        return float_physx_PxCos_float_(pvk_in_a);
    }
    
    [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern double double_physx_PxCos_double_(double pvk_a);
    
    public static double PxCos(double a) {
        double pvk_in_a = a;
        return double_physx_PxCos_double_(pvk_in_a);
    }
    
    [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern float float_physx_PxTan_float_(float pvk_a);
    
    public static float PxTan(float a) {
        float pvk_in_a = a;
        return float_physx_PxTan_float_(pvk_in_a);
    }
    
    [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern double double_physx_PxTan_double_(double pvk_a);
    
    public static double PxTan(double a) {
        double pvk_in_a = a;
        return double_physx_PxTan_double_(pvk_in_a);
    }
    
    [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern float float_physx_PxAsin_float_(float pvk_f);
    
    public static float PxAsin(float f) {
        float pvk_in_f = f;
        return float_physx_PxAsin_float_(pvk_in_f);
    }
    
    [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern double double_physx_PxAsin_double_(double pvk_f);
    
    public static double PxAsin(double f) {
        double pvk_in_f = f;
        return double_physx_PxAsin_double_(pvk_in_f);
    }
    
    [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern float float_physx_PxAcos_float_(float pvk_f);
    
    public static float PxAcos(float f) {
        float pvk_in_f = f;
        return float_physx_PxAcos_float_(pvk_in_f);
    }
    
    [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern double double_physx_PxAcos_double_(double pvk_f);
    
    public static double PxAcos(double f) {
        double pvk_in_f = f;
        return double_physx_PxAcos_double_(pvk_in_f);
    }
    
    [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern float float_physx_PxAtan_float_(float pvk_a);
    
    public static float PxAtan(float a) {
        float pvk_in_a = a;
        return float_physx_PxAtan_float_(pvk_in_a);
    }
    
    [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern double double_physx_PxAtan_double_(double pvk_a);
    
    public static double PxAtan(double a) {
        double pvk_in_a = a;
        return double_physx_PxAtan_double_(pvk_in_a);
    }
    
    [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern float float_physx_PxAtan2_float_float_(float pvk_x, float pvk_y);
    
    public static float PxAtan2(float x, float y) {
        float pvk_in_x = x;
        float pvk_in_y = y;
        return float_physx_PxAtan2_float_float_(pvk_in_x, pvk_in_y);
    }
    
    [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern double double_physx_PxAtan2_double_double_(double pvk_x, double pvk_y);
    
    public static double PxAtan2(double x, double y) {
        double pvk_in_x = x;
        double pvk_in_y = y;
        return double_physx_PxAtan2_double_double_(pvk_in_x, pvk_in_y);
    }
    
    [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern bool bool_physx_PxIsFinite_float_(float pvk_f);
    
    public static bool PxIsFinite(float f) {
        float pvk_in_f = f;
        return bool_physx_PxIsFinite_float_(pvk_in_f);
    }
    
    [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern bool bool_physx_PxIsFinite_double_(double pvk_f);
    
    public static bool PxIsFinite(double f) {
        double pvk_in_f = f;
        return bool_physx_PxIsFinite_double_(pvk_in_f);
    }
    
    [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern float float_physx_PxFloor_float_(float pvk_a);
    
    public static float PxFloor(float a) {
        float pvk_in_a = a;
        return float_physx_PxFloor_float_(pvk_in_a);
    }
    
    [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern float float_physx_PxExp_float_(float pvk_a);
    
    public static float PxExp(float a) {
        float pvk_in_a = a;
        return float_physx_PxExp_float_(pvk_in_a);
    }
    
    [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern float float_physx_PxCeil_float_(float pvk_a);
    
    public static float PxCeil(float a) {
        float pvk_in_a = a;
        return float_physx_PxCeil_float_(pvk_in_a);
    }
    
    [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern float float_physx_PxSign_float_(float pvk_a);
    
    public static float PxSign(float a) {
        float pvk_in_a = a;
        return float_physx_PxSign_float_(pvk_in_a);
    }
    
    [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern float float_physx_PxPow_float_float_(float pvk_x, float pvk_y);
    
    public static float PxPow(float x, float y) {
        float pvk_in_x = x;
        float pvk_in_y = y;
        return float_physx_PxPow_float_float_(pvk_in_x, pvk_in_y);
    }
    
    [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern float float_physx_PxLog_float_(float pvk_x);
    
    public static float PxLog(float x) {
        float pvk_in_x = x;
        return float_physx_PxLog_float_(pvk_in_x);
    }
    
}
