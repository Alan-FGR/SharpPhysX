//Generated by MinBinder.
using System;
using System.Runtime.InteropServices;

public static partial class physx{
    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern float C_PxMax(float a,float b);
    public static float PxMax(float a,float b){
        return C_PxMax(a,b);    
    }


    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern float C_PxMin(float a,float b);
    public static float PxMin(float a,float b){
        return C_PxMin(a,b);    
    }


    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern float C_PxAbs(float a);
    public static float PxAbs(float a){
        return C_PxAbs(a);    
    }


    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern bool C_PxEquals(float a,float b,float eps);
    public static bool PxEquals(float a,float b,float eps){
        return C_PxEquals(a,b,eps);    
    }


    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern double C_PxAbs(double a);
    public static double PxAbs(double a){
        return C_PxAbs(a);    
    }


    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern int C_PxAbs(int a);
    public static int PxAbs(int a){
        return C_PxAbs(a);    
    }


    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern float C_PxSqrt(float a);
    public static float PxSqrt(float a){
        return C_PxSqrt(a);    
    }


    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern double C_PxSqrt(double a);
    public static double PxSqrt(double a){
        return C_PxSqrt(a);    
    }


    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern float C_PxRecipSqrt(float a);
    public static float PxRecipSqrt(float a){
        return C_PxRecipSqrt(a);    
    }


    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern double C_PxRecipSqrt(double a);
    public static double PxRecipSqrt(double a){
        return C_PxRecipSqrt(a);    
    }


    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern float C_PxSin(float a);
    public static float PxSin(float a){
        return C_PxSin(a);    
    }


    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern double C_PxSin(double a);
    public static double PxSin(double a){
        return C_PxSin(a);    
    }


    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern float C_PxCos(float a);
    public static float PxCos(float a){
        return C_PxCos(a);    
    }


    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern double C_PxCos(double a);
    public static double PxCos(double a){
        return C_PxCos(a);    
    }


    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern float C_PxTan(float a);
    public static float PxTan(float a){
        return C_PxTan(a);    
    }


    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern double C_PxTan(double a);
    public static double PxTan(double a){
        return C_PxTan(a);    
    }


    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern float C_PxAsin(float f);
    public static float PxAsin(float f){
        return C_PxAsin(f);    
    }


    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern double C_PxAsin(double f);
    public static double PxAsin(double f){
        return C_PxAsin(f);    
    }


    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern float C_PxAcos(float f);
    public static float PxAcos(float f){
        return C_PxAcos(f);    
    }


    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern double C_PxAcos(double f);
    public static double PxAcos(double f){
        return C_PxAcos(f);    
    }


    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern float C_PxAtan(float a);
    public static float PxAtan(float a){
        return C_PxAtan(a);    
    }


    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern double C_PxAtan(double a);
    public static double PxAtan(double a){
        return C_PxAtan(a);    
    }


    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern float C_PxAtan2(float x,float y);
    public static float PxAtan2(float x,float y){
        return C_PxAtan2(x,y);    
    }


    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern double C_PxAtan2(double x,double y);
    public static double PxAtan2(double x,double y){
        return C_PxAtan2(x,y);    
    }


    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern bool C_PxIsFinite(float f);
    public static bool PxIsFinite(float f){
        return C_PxIsFinite(f);    
    }


    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern bool C_PxIsFinite(double f);
    public static bool PxIsFinite(double f){
        return C_PxIsFinite(f);    
    }


    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern float C_PxFloor(float a);
    public static float PxFloor(float a){
        return C_PxFloor(a);    
    }


    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern float C_PxExp(float a);
    public static float PxExp(float a){
        return C_PxExp(a);    
    }


    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern float C_PxCeil(float a);
    public static float PxCeil(float a){
        return C_PxCeil(a);    
    }


    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern float C_PxSign(float a);
    public static float PxSign(float a){
        return C_PxSign(a);    
    }


    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern float C_PxPow(float x,float y);
    public static float PxPow(float x,float y){
        return C_PxPow(x,y);    
    }


    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern float C_PxLog(float x);
    public static float PxLog(float x){
        return C_PxLog(x);    
    }


}

