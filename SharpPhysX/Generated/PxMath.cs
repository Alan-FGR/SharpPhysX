// Generated by minBND 5.1.93.2 - Â© github.com/Alan-FGR
using System;
using System.Runtime.InteropServices;
using static minBND_pinvokes;

public static unsafe partial class physx {

    public static float PxMax(float a, float b) {
        float pvk_in_a = a;
        float pvk_in_b = b;
        return float_PxMaxPtr_float_float_(pvk_in_a, pvk_in_b);
    }

    public static float PxMin(float a, float b) {
        float pvk_in_a = a;
        float pvk_in_b = b;
        return float_PxMinPtr_float_float_(pvk_in_a, pvk_in_b);
    }

    public static float PxAbs(float a) {
        float pvk_in_a = a;
        return float_PxAbsPtr_float_(pvk_in_a);
    }

    public static bool PxEquals(float a, float b, float eps) {
        float pvk_in_a = a;
        float pvk_in_b = b;
        float pvk_in_eps = eps;
        return bool_PxEqualsPtr_float_float_float_(pvk_in_a, pvk_in_b, pvk_in_eps);
    }

    public static double PxAbs(double a) {
        double pvk_in_a = a;
        return double_PxAbsPtr_double_(pvk_in_a);
    }

    public static int PxAbs(int a) {
        int pvk_in_a = a;
        return int_PxAbsPtr_int_(pvk_in_a);
    }

    public static float PxSqrt(float a) {
        float pvk_in_a = a;
        return float_PxSqrtPtr_float_(pvk_in_a);
    }

    public static double PxSqrt(double a) {
        double pvk_in_a = a;
        return double_PxSqrtPtr_double_(pvk_in_a);
    }

    public static float PxRecipSqrt(float a) {
        float pvk_in_a = a;
        return float_PxRecipSqrtPtr_float_(pvk_in_a);
    }

    public static double PxRecipSqrt(double a) {
        double pvk_in_a = a;
        return double_PxRecipSqrtPtr_double_(pvk_in_a);
    }

    public static float PxSin(float a) {
        float pvk_in_a = a;
        return float_PxSinPtr_float_(pvk_in_a);
    }

    public static double PxSin(double a) {
        double pvk_in_a = a;
        return double_PxSinPtr_double_(pvk_in_a);
    }

    public static float PxCos(float a) {
        float pvk_in_a = a;
        return float_PxCosPtr_float_(pvk_in_a);
    }

    public static double PxCos(double a) {
        double pvk_in_a = a;
        return double_PxCosPtr_double_(pvk_in_a);
    }

    public static float PxTan(float a) {
        float pvk_in_a = a;
        return float_PxTanPtr_float_(pvk_in_a);
    }

    public static double PxTan(double a) {
        double pvk_in_a = a;
        return double_PxTanPtr_double_(pvk_in_a);
    }

    public static float PxAsin(float f) {
        float pvk_in_f = f;
        return float_PxAsinPtr_float_(pvk_in_f);
    }

    public static double PxAsin(double f) {
        double pvk_in_f = f;
        return double_PxAsinPtr_double_(pvk_in_f);
    }

    public static float PxAcos(float f) {
        float pvk_in_f = f;
        return float_PxAcosPtr_float_(pvk_in_f);
    }

    public static double PxAcos(double f) {
        double pvk_in_f = f;
        return double_PxAcosPtr_double_(pvk_in_f);
    }

    public static float PxAtan(float a) {
        float pvk_in_a = a;
        return float_PxAtanPtr_float_(pvk_in_a);
    }

    public static double PxAtan(double a) {
        double pvk_in_a = a;
        return double_PxAtanPtr_double_(pvk_in_a);
    }

    public static float PxAtan2(float x, float y) {
        float pvk_in_x = x;
        float pvk_in_y = y;
        return float_PxAtan2Ptr_float_float_(pvk_in_x, pvk_in_y);
    }

    public static double PxAtan2(double x, double y) {
        double pvk_in_x = x;
        double pvk_in_y = y;
        return double_PxAtan2Ptr_double_double_(pvk_in_x, pvk_in_y);
    }

    public static bool PxIsFinite(float f) {
        float pvk_in_f = f;
        return bool_PxIsFinitePtr_float_(pvk_in_f);
    }

    public static bool PxIsFinite(double f) {
        double pvk_in_f = f;
        return bool_PxIsFinitePtr_double_(pvk_in_f);
    }

    public static float PxFloor(float a) {
        float pvk_in_a = a;
        return float_PxFloorPtr_float_(pvk_in_a);
    }

    public static float PxExp(float a) {
        float pvk_in_a = a;
        return float_PxExpPtr_float_(pvk_in_a);
    }

    public static float PxCeil(float a) {
        float pvk_in_a = a;
        return float_PxCeilPtr_float_(pvk_in_a);
    }

    public static float PxSign(float a) {
        float pvk_in_a = a;
        return float_PxSignPtr_float_(pvk_in_a);
    }

    public static float PxPow(float x, float y) {
        float pvk_in_x = x;
        float pvk_in_y = y;
        return float_PxPowPtr_float_float_(pvk_in_x, pvk_in_y);
    }

    public static float PxLog(float x) {
        float pvk_in_x = x;
        return float_PxLogPtr_float_(pvk_in_x);
    }

}
