// Generated by minBND 5.1.90.51 - Â© github.com/Alan-FGR
using System;
using System.Runtime.InteropServices;
using static minBND_pinvokes;

public static unsafe partial class physx {

    //DBG: FunctionNode physx::PxTransformFromPlaneEquation L87
    //Value Converter PxTransformFromPlaneEquation
    //RET nat: physx::PxTransform, man: physx.PxTransform, ret: False, kind: Blittable
    //PAR nat: physx::PxPlane, man: physx.PxPlane, kind: Blittable
    public static physx.PxTransform PxTransformFromPlaneEquation(physx.PxPlane plane) {
        return PxTransformFromPlaneEquation((physx.PxPlane*)&plane);
    }

    //DBG: FunctionNode physx::PxTransformFromPlaneEquation L87
    //Value Converter PxTransformFromPlaneEquation
    //RET nat: physx::PxTransform, man: physx.PxTransform, ret: False, kind: Blittable
    //PAR nat: physx::PxPlane, man: physx.PxPlane, kind: Blittable
    public static physx.PxTransform PxTransformFromPlaneEquation(physx.PxPlane.Ref plane) {
        return PxTransformFromPlaneEquation((physx.PxPlane*)(*((IntPtr*)(&plane))));
    }

    //DBG: FunctionNode physx::PxTransformFromPlaneEquation L87
    //RET nat: physx::PxTransform, man: physx.PxTransform, ret: False, kind: Blittable
    //PAR nat: physx::PxPlane*, man: physx.PxPlane*, kind: Value
    public static physx.PxTransform PxTransformFromPlaneEquation(physx.PxPlane* plane) {
        physx.PxTransform RetRef;
        physx.PxPlane* pvk_in_plane = plane;
        PxTransform_PxTransformFromPlaneEquationPtr_PxPlane_(&RetRef, pvk_in_plane);
        return RetRef;
    }

    //DBG: FunctionNode physx::PxPlaneEquationFromTransform L96-99
    //Value Converter PxPlaneEquationFromTransform
    //RET nat: physx::PxPlane, man: physx.PxPlane, ret: False, kind: Blittable
    //PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable
    public static physx.PxPlane PxPlaneEquationFromTransform(physx.PxTransform transform) {
        return PxPlaneEquationFromTransform((physx.PxTransform*)&transform);
    }

    //DBG: FunctionNode physx::PxPlaneEquationFromTransform L96-99
    //Value Converter PxPlaneEquationFromTransform
    //RET nat: physx::PxPlane, man: physx.PxPlane, ret: False, kind: Blittable
    //PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable
    public static physx.PxPlane PxPlaneEquationFromTransform(physx.PxTransform.Ref transform) {
        return PxPlaneEquationFromTransform((physx.PxTransform*)(*((IntPtr*)(&transform))));
    }

    //DBG: FunctionNode physx::PxPlaneEquationFromTransform L96-99
    //RET nat: physx::PxPlane, man: physx.PxPlane, ret: False, kind: Blittable
    //PAR nat: physx::PxTransform*, man: physx.PxTransform*, kind: Value
    public static physx.PxPlane PxPlaneEquationFromTransform(physx.PxTransform* transform) {
        physx.PxPlane RetRef;
        physx.PxTransform* pvk_in_transform = transform;
        PxPlane_PxPlaneEquationFromTransformPtr_PxTransform_(&RetRef, pvk_in_transform);
        return RetRef;
    }
    //Subclasses using this: 0

    [StructLayout(LayoutKind.Sequential, Size = 4)]
    public unsafe partial struct PxPlaneGeometry : physx.PxGeometry.IPxGeometry {
        internal physx.PxGeometryTypeEnum mType;

        //DBG: ClassNode PxPlaneGeometry physx::PxPlaneGeometry L58-69Bases: PxGeometry

        //DBG: DefaultValueCtorNode physx::PxPlaneGeometry::PxPlaneGeometry L61
        //RET nat: physx::PxPlaneGeometry, man: physx.PxPlaneGeometry, ret: False, kind: Blittable
        public static physx.PxPlaneGeometry Default() {
            physx.PxPlaneGeometry RetRef;
            Default_PxPlaneGeometry_(&RetRef);
            return RetRef;
        }

        //DBG: MethodNode physx::PxPlaneGeometry::isValid L68
        //RET nat: bool, man: bool, ret: True, kind: Value
        //PAR nat: physx::PxPlaneGeometry, man: physx.PxPlaneGeometry, kind: Blittable
        public bool isValid() {

            fixed (PxPlaneGeometry* pvk_in_this = &this){
              return bool_const_PxPlaneGeometry_isValidPtr(pvk_in_this);
            }
        }

        //DBG: MethodNode physx::PxPlaneGeometry::operator= L58
        //ERRORS in MethodNode: Skipping Implicit MethodNode physx::PxPlaneGeometry::operator= L58

        //DBG: MethodNode physx::PxPlaneGeometry::operator= L58
        //ERRORS in MethodNode: Skipping Implicit MethodNode physx::PxPlaneGeometry::operator= L58

        //DBG: BlittableCtorNode physx::PxPlaneGeometry::PxPlaneGeometry L58
        //ERRORS in BlittableCtorNode: Skipping Implicit BlittableCtorNode physx::PxPlaneGeometry::PxPlaneGeometry L58

        //DBG: BlittableCtorNode physx::PxPlaneGeometry::PxPlaneGeometry L58
        //ERRORS in BlittableCtorNode: Skipping Implicit BlittableCtorNode physx::PxPlaneGeometry::PxPlaneGeometry L58

        //DBG: MethodNode physx::PxPlaneGeometry::~PxPlaneGeometry L58
        //ERRORS in MethodNode: Skipping Implicit MethodNode physx::PxPlaneGeometry::~PxPlaneGeometry L58, Destructor
        public static explicit operator physx.PxGeometry(PxPlaneGeometry obj) => *(physx.PxGeometry*)&obj;

        //PIPING
        public physx.PxGeometryTypeEnum getType(){return((physx.PxGeometry)this).getType();}

        //REFERENCES
        public struct Ref {
            private IntPtr nativePtr_;
            public static implicit operator Ref(in physx.PxPlaneGeometry obj)
            {fixed (void* f = &obj) return new Ref {nativePtr_ = (IntPtr)f};}
        }

        //Operators
    }
}
