//Generated by MinBinder.
using System;
using System.Runtime.InteropServices;

public static partial class physx{
    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern PxTransform C_PxTransformFromPlaneEquation(PxPlanePtr plane);
    public static PxTransform PxTransformFromPlaneEquation(PxPlanePtr plane){
        return C_PxTransformFromPlaneEquation(plane);    
    }


    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern PxPlane C_PxPlaneEquationFromTransform(PxTransformPtr transform);
    public static PxPlane PxPlaneEquationFromTransform(PxTransformPtr transform){
        return C_PxPlaneEquationFromTransform(transform);    
    }


}

public partial class PxPlaneGeometry {
    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern PxPlaneGeometry C_PxPlaneGeometry_PxPlaneGeometry();
    public unsafe PxPlaneGeometry(){
        var _new = C_PxPlaneGeometry_PxPlaneGeometry();        fixed (void* ptr = &this)
          Buffer.MemoryCopy(&_new, ptr, Marshal.SizeOf(this), Marshal.SizeOf(this));    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern bool C_CONST_PxPlaneGeometry_isValid(PxPlaneGeometry cls);
    public bool isValid(){
        return C_CONST_PxPlaneGeometry_isValid(this);    
    }


}
