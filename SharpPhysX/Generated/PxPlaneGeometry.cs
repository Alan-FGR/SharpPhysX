// Generated by minBND 5.1.91.1 - Â© github.com/Alan-FGR
using System;
using System.Runtime.InteropServices;
using static minBND_pinvokes;

public static unsafe partial class physx {

    public static physx.PxTransform PxTransformFromPlaneEquation(physx.PxPlane plane) {
        return PxTransformFromPlaneEquation((physx.PxPlane*)&plane);
    }

    public static physx.PxTransform PxTransformFromPlaneEquation(physx.PxPlane.Ref plane) {
        return PxTransformFromPlaneEquation((physx.PxPlane*)(*((IntPtr*)(&plane))));
    }

    public static physx.PxTransform PxTransformFromPlaneEquation(physx.PxPlane* plane) {
        physx.PxTransform RetRef;
        physx.PxPlane* pvk_in_plane = plane;
        PxTransform_PxTransformFromPlaneEquationPtr_PxPlane_(&RetRef, pvk_in_plane);
        return RetRef;
    }

    public static physx.PxPlane PxPlaneEquationFromTransform(physx.PxTransform transform) {
        return PxPlaneEquationFromTransform((physx.PxTransform*)&transform);
    }

    public static physx.PxPlane PxPlaneEquationFromTransform(physx.PxTransform.Ref transform) {
        return PxPlaneEquationFromTransform((physx.PxTransform*)(*((IntPtr*)(&transform))));
    }

    public static physx.PxPlane PxPlaneEquationFromTransform(physx.PxTransform* transform) {
        physx.PxPlane RetRef;
        physx.PxTransform* pvk_in_transform = transform;
        PxPlane_PxPlaneEquationFromTransformPtr_PxTransform_(&RetRef, pvk_in_transform);
        return RetRef;
    }

    [StructLayout(LayoutKind.Sequential, Size = 4)]
    public unsafe partial struct PxPlaneGeometry : physx.PxGeometry.IPxGeometry {
        internal physx.PxGeometryTypeEnum mType;

        public static physx.PxPlaneGeometry Default() {
            physx.PxPlaneGeometry RetRef;
            Default_PxPlaneGeometry_(&RetRef);
            return RetRef;
        }

        public bool isValid() {

            fixed (PxPlaneGeometry* pvk_in_this = &this){
              return bool_const_PxPlaneGeometry_isValidPtr(pvk_in_this);
            }
        }

        public static explicit operator physx.PxGeometry(PxPlaneGeometry obj) => *(physx.PxGeometry*)&obj;

        public physx.PxGeometryTypeEnum getType(){return((physx.PxGeometry)this).getType();}
        public struct Ref {
            private IntPtr nativePtr_;
            public static implicit operator Ref(in physx.PxPlaneGeometry obj)
            {fixed (void* f = &obj) return new Ref {nativePtr_ = (IntPtr)f};}
        }
    }
}
