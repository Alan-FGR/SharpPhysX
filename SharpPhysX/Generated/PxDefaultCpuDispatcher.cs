// Generated by minBND 5.1.93.2 - Â© github.com/Alan-FGR
using System;
using System.Runtime.InteropServices;
using static minBND_pinvokes;

public static unsafe partial class physx {

    public static physx.PxDefaultCpuDispatcherPtr PxDefaultCpuDispatcherCreate(uint numThreads) {
        uint pvk_in_numThreads = numThreads;
        return PxDefaultCpuDispatcherPtr_PxDefaultCpuDispatcherCreatePtr_uint_(pvk_in_numThreads);
    }

    public static physx.PxDefaultCpuDispatcherPtr PxDefaultCpuDispatcherCreate(uint numThreads, uint* affinityMasks=default(uint*)) {
        uint pvk_in_numThreads = numThreads;
        uint* pvk_in_affinityMasks = affinityMasks;
        return PxDefaultCpuDispatcherPtr_PxDefaultCpuDispatcherCreatePtr_uint_uint_(pvk_in_numThreads, pvk_in_affinityMasks);
    }

    public unsafe partial struct PxDefaultCpuDispatcherPtr : physx.PxCpuDispatcherPtr.IPxCpuDispatcherPtr {
        private System.IntPtr nativePtr_;

        public void release() {
            physx.PxDefaultCpuDispatcherPtr pvk_in_this = this;
            void_PxDefaultCpuDispatcherPtr_releasePtr(pvk_in_this);
        }

        public void setRunProfiled(bool runProfiled) {
            physx.PxDefaultCpuDispatcherPtr pvk_in_this = this;
            bool pvk_in_runProfiled = runProfiled;
            void_PxDefaultCpuDispatcherPtr_setRunProfiledPtr_bool_(pvk_in_this, pvk_in_runProfiled);
        }

        public bool getRunProfiled() {
            physx.PxDefaultCpuDispatcherPtr pvk_in_this = this;
            return bool_const_PxDefaultCpuDispatcherPtr_getRunProfiledPtr(pvk_in_this);
        }

        public static implicit operator physx.PxCpuDispatcherPtr(PxDefaultCpuDispatcherPtr obj) => *(physx.PxCpuDispatcherPtr*)&obj;
        public static explicit operator PxDefaultCpuDispatcherPtr(physx.PxCpuDispatcherPtr obj) => *(PxDefaultCpuDispatcherPtr*)&obj;

        public void submitTask(physx.PxBaseTaskPtr task){((physx.PxCpuDispatcherPtr)this).submitTask(task);}
        public uint getWorkerCount(){return((physx.PxCpuDispatcherPtr)this).getWorkerCount();}
    }
}
