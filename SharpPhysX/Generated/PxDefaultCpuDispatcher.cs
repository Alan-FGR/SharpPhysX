// Generated by minBND 5.1.78.26 - Â© github.com/Alan-FGR
//DEBUG: UnitNode  - 0
//Unit PxDefaultCpuDispatcher
using System;
using System.Runtime.InteropServices;

//DEBUG: NamespaceNode physx - 41-94
public static unsafe partial class physx {
    //DEBUG: FunctionNode physx::PxDefaultCpuDispatcherCreate - 91
    [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern physx.PxDefaultCpuDispatcherPtr physx_PxDefaultCpuDispatcherPtr_physx_PxDefaultCpuDispatcherCreate_uint_uint_(uint pvk_numThreads, uint* pvk_affinityMasks);
    
    public static physx.PxDefaultCpuDispatcherPtr PxDefaultCpuDispatcherCreate(uint numThreads, uint* affinityMasks=default(uint*)) {
        //RET nat: physx.PxDefaultCpuDispatcherPtr, man: physx.PxDefaultCpuDispatcherPtr, stg: PtrStruct, ret: True
        //PAR nat: unsigned int, man: uint, stg: Value
        uint pvk_in_numThreads = numThreads;
        //PAR nat: unsigned int*, man: uint*, stg: Value
        uint* pvk_in_affinityMasks = affinityMasks;
        return physx_PxDefaultCpuDispatcherPtr_physx_PxDefaultCpuDispatcherCreate_uint_uint_(pvk_in_numThreads, pvk_in_affinityMasks);
    }
    
    //DEBUG: FunctionNode physx::PxDefaultCpuDispatcherCreate - 91
    [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern physx.PxDefaultCpuDispatcherPtr physx_PxDefaultCpuDispatcherPtr_physx_PxDefaultCpuDispatcherCreate_uint_(uint pvk_numThreads);
    
    public static physx.PxDefaultCpuDispatcherPtr PxDefaultCpuDispatcherCreate(uint numThreads) {
        //RET nat: physx.PxDefaultCpuDispatcherPtr, man: physx.PxDefaultCpuDispatcherPtr, stg: PtrStruct, ret: True
        //PAR nat: unsigned int, man: uint, stg: Value
        uint pvk_in_numThreads = numThreads;
        return physx_PxDefaultCpuDispatcherPtr_physx_PxDefaultCpuDispatcherCreate_uint_(pvk_in_numThreads);
    }
    
    //DEBUG: ClassNode physx::PxDefaultCpuDispatcher - 50-77
    //Bases: PxCpuDispatcherPtr
    //Interface use count: 0
    public unsafe partial struct PxDefaultCpuDispatcherPtr : physx.PxCpuDispatcherPtr.IPxCpuDispatcherPtr{
        private System.IntPtr nativePtr_;
        
    //DEBUG: MethodNode physx::PxDefaultCpuDispatcher::release - 60
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxDefaultCpuDispatcher_release(physx.PxDefaultCpuDispatcherPtr pvk_this);
        
        public void release() {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: PxDefaultCpuDispatcherPtr, man: physx.PxDefaultCpuDispatcherPtr, stg: PtrStruct
            physx.PxDefaultCpuDispatcherPtr pvk_in_this = this;
            void_physx_PxDefaultCpuDispatcher_release(pvk_in_this);
        }
        
        //DEBUG: MethodNode physx::PxDefaultCpuDispatcher::setRunProfiled - 69
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxDefaultCpuDispatcher_setRunProfiled_bool_(physx.PxDefaultCpuDispatcherPtr pvk_this, bool pvk_runProfiled);
        
        public void setRunProfiled(bool runProfiled) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: PxDefaultCpuDispatcherPtr, man: physx.PxDefaultCpuDispatcherPtr, stg: PtrStruct
            physx.PxDefaultCpuDispatcherPtr pvk_in_this = this;
            //PAR nat: bool, man: bool, stg: Value
            bool pvk_in_runProfiled = runProfiled;
            void_physx_PxDefaultCpuDispatcher_setRunProfiled_bool_(pvk_in_this, pvk_in_runProfiled);
        }
        
        //DEBUG: MethodNode physx::PxDefaultCpuDispatcher::getRunProfiled - 76
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern bool bool_const_physx_PxDefaultCpuDispatcher_getRunProfiled(physx.PxDefaultCpuDispatcherPtr pvk_this);
        
        public bool getRunProfiled() {
            //RET nat: bool, man: bool, stg: Value, ret: True
            //PAR nat: PxDefaultCpuDispatcherPtr, man: physx.PxDefaultCpuDispatcherPtr, stg: PtrStruct
            physx.PxDefaultCpuDispatcherPtr pvk_in_this = this;
            return bool_const_physx_PxDefaultCpuDispatcher_getRunProfiled(pvk_in_this);
        }
        
        //DEBUG: MethodNode physx::PxDefaultCpuDispatcher::operator= - 50
        //ERRORS OCCURED IN physx::PxDefaultCpuDispatcher::operator=
        //Implicit Function/Method
        //Unbindable Operator: Equal
        
        //DEBUG: MethodNode physx::PxDefaultCpuDispatcher::operator= - 50
        //ERRORS OCCURED IN physx::PxDefaultCpuDispatcher::operator=
        //Implicit Function/Method
        //Unbindable Operator: Equal
        
        //DEBUG: MethodNode physx::PxDefaultCpuDispatcher::~PxDefaultCpuDispatcher - 50
        //ERRORS OCCURED IN physx::PxDefaultCpuDispatcher::~PxDefaultCpuDispatcher
        //Implicit Function/Method
        //Destructor
        public static implicit operator physx.PxCpuDispatcherPtr(PxDefaultCpuDispatcherPtr obj) => *(physx.PxCpuDispatcherPtr*)&obj;
        public static explicit operator PxDefaultCpuDispatcherPtr(physx.PxCpuDispatcherPtr obj) => *(PxDefaultCpuDispatcherPtr*)&obj;
    
        // PIPING
        public void submitTask(physx.PxBaseTaskPtr task){((physx.PxCpuDispatcherPtr)this).submitTask(task);}
        public uint getWorkerCount(){return((physx.PxCpuDispatcherPtr)this).getWorkerCount();}
    }
    
}
