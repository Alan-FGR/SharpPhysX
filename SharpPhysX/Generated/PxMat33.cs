// Generated by minBND 5.1.81.43 - Â© github.com/Alan-FGR
//Unit PxMat33
using System;
using System.Runtime.InteropServices;

public static unsafe partial class physx {
    public unsafe partial struct PxMat33 {
        public physx.PxVec3 column0;
        public physx.PxVec3 column1;
        public physx.PxVec3 column2;
        
    [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void Default_physx_PxMat33_(physx.PxMat33* RetRef);
        
        public static physx.PxMat33 Default() {
            physx.PxMat33 RetRef;
            Default_physx_PxMat33_(&RetRef);
            return RetRef;
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxMat33_PxMat33_Ctor_physx_PxIDENTITY_(physx.PxMat33* pvk_this, physx.PxIDENTITY pvk_r);
        
        public  PxMat33(physx.PxIDENTITY r) {
            physx.PxIDENTITY pvk_in_r = r;
            PxMat33 toInit;
            var pvk_in_this = &toInit;
            void_physx_PxMat33_PxMat33_Ctor_physx_PxIDENTITY_(pvk_in_this, pvk_in_r);
            this = toInit;
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxMat33_PxMat33_Ctor_physx_PxZERO_(physx.PxMat33* pvk_this, physx.PxZERO pvk_r);
        
        public  PxMat33(physx.PxZERO r) {
            physx.PxZERO pvk_in_r = r;
            PxMat33 toInit;
            var pvk_in_this = &toInit;
            void_physx_PxMat33_PxMat33_Ctor_physx_PxZERO_(pvk_in_this, pvk_in_r);
            this = toInit;
        }
        
        public  PxMat33(physx.PxVec3 col0, physx.PxVec3 col1, physx.PxVec3 col2) : this(&col0, &col1, &col2) {
            //ctor piping;
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxMat33_PxMat33_Ctor_physx_PxVec3_physx_PxVec3_physx_PxVec3_(physx.PxMat33* pvk_this, physx.PxVec3* pvk_col0, physx.PxVec3* pvk_col1, physx.PxVec3* pvk_col2);
        
        public  PxMat33(physx.PxVec3* col0, physx.PxVec3* col1, physx.PxVec3* col2) {
            physx.PxVec3* pvk_in_col0 = col0;
            physx.PxVec3* pvk_in_col1 = col1;
            physx.PxVec3* pvk_in_col2 = col2;
            PxMat33 toInit;
            var pvk_in_this = &toInit;
            void_physx_PxMat33_PxMat33_Ctor_physx_PxVec3_physx_PxVec3_physx_PxVec3_(pvk_in_this, pvk_in_col0, pvk_in_col1, pvk_in_col2);
            this = toInit;
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxMat33_PxMat33_Ctor_float_(physx.PxMat33* pvk_this, float pvk_r);
        
        public  PxMat33(float r) {
            float pvk_in_r = r;
            PxMat33 toInit;
            var pvk_in_this = &toInit;
            void_physx_PxMat33_PxMat33_Ctor_float_(pvk_in_this, pvk_in_r);
            this = toInit;
        }
        
        public  PxMat33(physx.PxQuat q) : this(&q) {
            //ctor piping;
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxMat33_PxMat33_Ctor_physx_PxQuat_(physx.PxMat33* pvk_this, physx.PxQuat* pvk_q);
        
        public  PxMat33(physx.PxQuat* q) {
            physx.PxQuat* pvk_in_q = q;
            PxMat33 toInit;
            var pvk_in_this = &toInit;
            void_physx_PxMat33_PxMat33_Ctor_physx_PxQuat_(pvk_in_this, pvk_in_q);
            this = toInit;
        }
        
        public  PxMat33(physx.PxMat33 other) : this(&other) {
            //ctor piping;
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxMat33_PxMat33_Ctor_physx_PxMat33_(physx.PxMat33* pvk_this, physx.PxMat33* pvk_other);
        
        public  PxMat33(physx.PxMat33* other) {
            physx.PxMat33* pvk_in_other = other;
            PxMat33 toInit;
            var pvk_in_this = &toInit;
            void_physx_PxMat33_PxMat33_Ctor_physx_PxMat33_(pvk_in_this, pvk_in_other);
            this = toInit;
        }
        
        public physx.PxMat33 createDiagonal(physx.PxVec3 d) {
            return createDiagonal(&d);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void physx_PxMat33_physx_PxMat33_createDiagonal_physx_PxVec3_(physx.PxMat33* RetRef, physx.PxMat33* pvk_this, physx.PxVec3* pvk_d);
        
        public physx.PxMat33 createDiagonal(physx.PxVec3* d) {
            physx.PxMat33 RetRef;
            
            physx.PxVec3* pvk_in_d = d;
            fixed (PxMat33* pvk_in_this = &this){
                physx_PxMat33_physx_PxMat33_createDiagonal_physx_PxVec3_(&RetRef, pvk_in_this, pvk_in_d);
            }
            return RetRef;
        }
        
        public static bool operator==(physx.PxMat33 lhs, physx.PxMat33 m) {
            return lhs==&m;
        }
        
        public static bool operator!=(physx.PxMat33 lhs, physx.PxMat33 m){return !(lhs==m);} // Generated Matching Operator
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern bool bool_const_physx_PxMat33_operator_EqualEqual_physx_PxMat33_(physx.PxMat33* pvk_lhs, physx.PxMat33* pvk_m);
        
        public static bool operator==(physx.PxMat33 lhs, physx.PxMat33* m) {
            physx.PxMat33* pvk_in_lhs = &lhs;
            physx.PxMat33* pvk_in_m = m;
            return bool_const_physx_PxMat33_operator_EqualEqual_physx_PxMat33_(pvk_in_lhs, pvk_in_m);
        }
        public static bool operator!=(physx.PxMat33 lhs, physx.PxMat33* m){return !(lhs==m);} // Generated Matching Operator
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void physx_PxMat33_const_physx_PxMat33_getTranspose(physx.PxMat33* RetRef, physx.PxMat33* pvk_this);
        
        public physx.PxMat33 getTranspose() {
            physx.PxMat33 RetRef;
            
            fixed (PxMat33* pvk_in_this = &this){
                physx_PxMat33_const_physx_PxMat33_getTranspose(&RetRef, pvk_in_this);
            }
            return RetRef;
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void physx_PxMat33_const_physx_PxMat33_getInverse(physx.PxMat33* RetRef, physx.PxMat33* pvk_this);
        
        public physx.PxMat33 getInverse() {
            physx.PxMat33 RetRef;
            
            fixed (PxMat33* pvk_in_this = &this){
                physx_PxMat33_const_physx_PxMat33_getInverse(&RetRef, pvk_in_this);
            }
            return RetRef;
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern float float_const_physx_PxMat33_getDeterminant(physx.PxMat33* pvk_this);
        
        public float getDeterminant() {
            fixed (PxMat33* pvk_in_this = &this){
                return float_const_physx_PxMat33_getDeterminant(pvk_in_this);
            }
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void physx_PxMat33_const_physx_PxMat33_operator_Minus(physx.PxMat33* RetRef, physx.PxMat33* pvk_lhs);
        
        public static physx.PxMat33 operator-(physx.PxMat33 lhs) {
            physx.PxMat33 RetRef;
            physx.PxMat33* pvk_in_lhs = &lhs;
            physx_PxMat33_const_physx_PxMat33_operator_Minus(&RetRef, pvk_in_lhs);
            return RetRef;
        }
        
        public static physx.PxMat33 operator+(physx.PxMat33 lhs, physx.PxMat33 other) {
            return lhs+&other;
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void physx_PxMat33_const_physx_PxMat33_operator_Plus_physx_PxMat33_(physx.PxMat33* RetRef, physx.PxMat33* pvk_lhs, physx.PxMat33* pvk_other);
        
        public static physx.PxMat33 operator+(physx.PxMat33 lhs, physx.PxMat33* other) {
            physx.PxMat33 RetRef;
            physx.PxMat33* pvk_in_lhs = &lhs;
            physx.PxMat33* pvk_in_other = other;
            physx_PxMat33_const_physx_PxMat33_operator_Plus_physx_PxMat33_(&RetRef, pvk_in_lhs, pvk_in_other);
            return RetRef;
        }
        
        public static physx.PxMat33 operator-(physx.PxMat33 lhs, physx.PxMat33 other) {
            return lhs-&other;
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void physx_PxMat33_const_physx_PxMat33_operator_Minus_physx_PxMat33_(physx.PxMat33* RetRef, physx.PxMat33* pvk_lhs, physx.PxMat33* pvk_other);
        
        public static physx.PxMat33 operator-(physx.PxMat33 lhs, physx.PxMat33* other) {
            physx.PxMat33 RetRef;
            physx.PxMat33* pvk_in_lhs = &lhs;
            physx.PxMat33* pvk_in_other = other;
            physx_PxMat33_const_physx_PxMat33_operator_Minus_physx_PxMat33_(&RetRef, pvk_in_lhs, pvk_in_other);
            return RetRef;
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void physx_PxMat33_const_physx_PxMat33_operator_Star_float_(physx.PxMat33* RetRef, physx.PxMat33* pvk_lhs, float pvk_scalar);
        
        public static physx.PxMat33 operator*(physx.PxMat33 lhs, float scalar) {
            physx.PxMat33 RetRef;
            physx.PxMat33* pvk_in_lhs = &lhs;
            float pvk_in_scalar = scalar;
            physx_PxMat33_const_physx_PxMat33_operator_Star_float_(&RetRef, pvk_in_lhs, pvk_in_scalar);
            return RetRef;
        }
        
        public static physx.PxVec3 operator*(physx.PxMat33 lhs, physx.PxVec3 vec) {
            return lhs*&vec;
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void physx_PxVec3_const_physx_PxMat33_operator_Star_physx_PxVec3_(physx.PxVec3* RetRef, physx.PxMat33* pvk_lhs, physx.PxVec3* pvk_vec);
        
        public static physx.PxVec3 operator*(physx.PxMat33 lhs, physx.PxVec3* vec) {
            physx.PxVec3 RetRef;
            physx.PxMat33* pvk_in_lhs = &lhs;
            physx.PxVec3* pvk_in_vec = vec;
            physx_PxVec3_const_physx_PxMat33_operator_Star_physx_PxVec3_(&RetRef, pvk_in_lhs, pvk_in_vec);
            return RetRef;
        }
        
        public static physx.PxMat33 operator*(physx.PxMat33 lhs, physx.PxMat33 other) {
            return lhs*&other;
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void physx_PxMat33_const_physx_PxMat33_operator_Star_physx_PxMat33_(physx.PxMat33* RetRef, physx.PxMat33* pvk_lhs, physx.PxMat33* pvk_other);
        
        public static physx.PxMat33 operator*(physx.PxMat33 lhs, physx.PxMat33* other) {
            physx.PxMat33 RetRef;
            physx.PxMat33* pvk_in_lhs = &lhs;
            physx.PxMat33* pvk_in_other = other;
            physx_PxMat33_const_physx_PxMat33_operator_Star_physx_PxMat33_(&RetRef, pvk_in_lhs, pvk_in_other);
            return RetRef;
        }
        
        public physx.PxVec3 transform(physx.PxVec3 other) {
            return transform(&other);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void physx_PxVec3_const_physx_PxMat33_transform_physx_PxVec3_(physx.PxVec3* RetRef, physx.PxMat33* pvk_this, physx.PxVec3* pvk_other);
        
        public physx.PxVec3 transform(physx.PxVec3* other) {
            physx.PxVec3 RetRef;
            
            physx.PxVec3* pvk_in_other = other;
            fixed (PxMat33* pvk_in_this = &this){
                physx_PxVec3_const_physx_PxMat33_transform_physx_PxVec3_(&RetRef, pvk_in_this, pvk_in_other);
            }
            return RetRef;
        }
        
        public physx.PxVec3 transformTranspose(physx.PxVec3 other) {
            return transformTranspose(&other);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void physx_PxVec3_const_physx_PxMat33_transformTranspose_physx_PxVec3_(physx.PxVec3* RetRef, physx.PxMat33* pvk_this, physx.PxVec3* pvk_other);
        
        public physx.PxVec3 transformTranspose(physx.PxVec3* other) {
            physx.PxVec3 RetRef;
            
            physx.PxVec3* pvk_in_other = other;
            fixed (PxMat33* pvk_in_this = &this){
                physx_PxVec3_const_physx_PxMat33_transformTranspose_physx_PxVec3_(&RetRef, pvk_in_this, pvk_in_other);
            }
            return RetRef;
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern float* float_const_physx_PxMat33_front(physx.PxMat33* pvk_this);
        
        public float* front() {
            fixed (PxMat33* pvk_in_this = &this){
                return float_const_physx_PxMat33_front(pvk_in_this);
            }
        }
    }
    
}
