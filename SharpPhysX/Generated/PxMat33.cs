// Generated by minBND 5.1.78.10 - Â© github.com/Alan-FGR
//Unit PxMat33
using System;
using System.Runtime.InteropServices;

public static unsafe partial class physx {
    public unsafe partial struct PxMat33Ptr{
        private System.IntPtr nativePtr_;
        
    [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void Freer_physx_PxMat33Ptr(PxMat33Ptr ptr);
        
        public static void Free(PxMat33Ptr ptr){
            Freer_physx_PxMat33Ptr(ptr);
        }
        public void Free(){
            Freer_physx_PxMat33Ptr(this);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxMat33Ptr Ctor_physx_PxMat33Ptr_();
        
        public static physx.PxMat33Ptr New() {
            return Ctor_physx_PxMat33Ptr_();
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxMat33Ptr Ctor_physx_PxMat33Ptr_physx_PxIDENTITY(physx.PxIDENTITY pvk_r);
        
        public static physx.PxMat33Ptr New(physx.PxIDENTITY r) {
            physx.PxIDENTITY pvk_in_r = r;
            return Ctor_physx_PxMat33Ptr_physx_PxIDENTITY(pvk_in_r);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxMat33Ptr Ctor_physx_PxMat33Ptr_physx_PxZERO(physx.PxZERO pvk_r);
        
        public static physx.PxMat33Ptr New(physx.PxZERO r) {
            physx.PxZERO pvk_in_r = r;
            return Ctor_physx_PxMat33Ptr_physx_PxZERO(pvk_in_r);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxMat33Ptr Ctor_physx_PxMat33Ptr_physx_PxVec3Ptr_physx_PxVec3Ptr_physx_PxVec3Ptr(physx.PxVec3Ptr pvk_col0, physx.PxVec3Ptr pvk_col1, physx.PxVec3Ptr pvk_col2);
        
        public static physx.PxMat33Ptr New(physx.PxVec3Ptr col0, physx.PxVec3Ptr col1, physx.PxVec3Ptr col2) {
            physx.PxVec3Ptr pvk_in_col0 = col0;
            physx.PxVec3Ptr pvk_in_col1 = col1;
            physx.PxVec3Ptr pvk_in_col2 = col2;
            return Ctor_physx_PxMat33Ptr_physx_PxVec3Ptr_physx_PxVec3Ptr_physx_PxVec3Ptr(pvk_in_col0, pvk_in_col1, pvk_in_col2);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxMat33Ptr Ctor_physx_PxMat33Ptr_float(float pvk_r);
        
        public static physx.PxMat33Ptr New(float r) {
            float pvk_in_r = r;
            return Ctor_physx_PxMat33Ptr_float(pvk_in_r);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxMat33Ptr Ctor_physx_PxMat33Ptr_physx_PxQuatPtr(physx.PxQuatPtr pvk_q);
        
        public static physx.PxMat33Ptr New(physx.PxQuatPtr q) {
            physx.PxQuatPtr pvk_in_q = q;
            return Ctor_physx_PxMat33Ptr_physx_PxQuatPtr(pvk_in_q);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxMat33Ptr Ctor_physx_PxMat33Ptr_physx_PxMat33Ptr(physx.PxMat33Ptr pvk_other);
        
        public static physx.PxMat33Ptr New(physx.PxMat33Ptr other) {
            physx.PxMat33Ptr pvk_in_other = other;
            return Ctor_physx_PxMat33Ptr_physx_PxMat33Ptr(pvk_in_other);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxVec3Ptr PxMat33_GET_column0(PxMat33Ptr cls);
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void PxMat33_SET_column0(PxMat33Ptr cls, physx.PxVec3Ptr value);
        
        public physx.PxVec3Ptr column0 {
            get => PxMat33_GET_column0(this);
            set => PxMat33_SET_column0(this, value);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxVec3Ptr PxMat33_GET_column1(PxMat33Ptr cls);
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void PxMat33_SET_column1(PxMat33Ptr cls, physx.PxVec3Ptr value);
        
        public physx.PxVec3Ptr column1 {
            get => PxMat33_GET_column1(this);
            set => PxMat33_SET_column1(this, value);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxVec3Ptr PxMat33_GET_column2(PxMat33Ptr cls);
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void PxMat33_SET_column2(PxMat33Ptr cls, physx.PxVec3Ptr value);
        
        public physx.PxVec3Ptr column2 {
            get => PxMat33_GET_column2(this);
            set => PxMat33_SET_column2(this, value);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern bool bool_const_physx_PxMat33_operator_EqualEqual_physx_PxMat33Ptr_(physx.PxMat33Ptr pvk_lhs, physx.PxMat33Ptr pvk_m);
        
        public static bool operator==(physx.PxMat33Ptr lhs, physx.PxMat33Ptr m) {
            physx.PxMat33Ptr pvk_in_lhs = lhs;
            physx.PxMat33Ptr pvk_in_m = m;
            return bool_const_physx_PxMat33_operator_EqualEqual_physx_PxMat33Ptr_(pvk_in_lhs, pvk_in_m);
        }
        public static bool operator!=(physx.PxMat33Ptr lhs, physx.PxMat33Ptr m){return !(lhs==m);} // Generated Matching Operator
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxMat33Ptr physx_PxMat33Ptr_const_physx_PxMat33_getTranspose(physx.PxMat33Ptr pvk_this);
        
        public physx.PxMat33Ptr getTranspose_New() {
            physx.PxMat33Ptr pvk_in_this = this;
            return physx_PxMat33Ptr_const_physx_PxMat33_getTranspose(pvk_in_this);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxMat33Ptr physx_PxMat33Ptr_const_physx_PxMat33_getInverse(physx.PxMat33Ptr pvk_this);
        
        public physx.PxMat33Ptr getInverse_New() {
            physx.PxMat33Ptr pvk_in_this = this;
            return physx_PxMat33Ptr_const_physx_PxMat33_getInverse(pvk_in_this);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern float float_const_physx_PxMat33_getDeterminant(physx.PxMat33Ptr pvk_this);
        
        public float getDeterminant() {
            physx.PxMat33Ptr pvk_in_this = this;
            return float_const_physx_PxMat33_getDeterminant(pvk_in_this);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxMat33Ptr physx_PxMat33Ptr_const_physx_PxMat33_operator_Minus(physx.PxMat33Ptr pvk_lhs);
        
        public static physx.PxMat33Ptr operator-(physx.PxMat33Ptr lhs) {
            physx.PxMat33Ptr pvk_in_lhs = lhs;
            return physx_PxMat33Ptr_const_physx_PxMat33_operator_Minus(pvk_in_lhs);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxMat33Ptr physx_PxMat33Ptr_const_physx_PxMat33_operator_Plus_physx_PxMat33Ptr_(physx.PxMat33Ptr pvk_lhs, physx.PxMat33Ptr pvk_other);
        
        public static physx.PxMat33Ptr operator+(physx.PxMat33Ptr lhs, physx.PxMat33Ptr other) {
            physx.PxMat33Ptr pvk_in_lhs = lhs;
            physx.PxMat33Ptr pvk_in_other = other;
            return physx_PxMat33Ptr_const_physx_PxMat33_operator_Plus_physx_PxMat33Ptr_(pvk_in_lhs, pvk_in_other);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxMat33Ptr physx_PxMat33Ptr_const_physx_PxMat33_operator_Minus_physx_PxMat33Ptr_(physx.PxMat33Ptr pvk_lhs, physx.PxMat33Ptr pvk_other);
        
        public static physx.PxMat33Ptr operator-(physx.PxMat33Ptr lhs, physx.PxMat33Ptr other) {
            physx.PxMat33Ptr pvk_in_lhs = lhs;
            physx.PxMat33Ptr pvk_in_other = other;
            return physx_PxMat33Ptr_const_physx_PxMat33_operator_Minus_physx_PxMat33Ptr_(pvk_in_lhs, pvk_in_other);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxMat33Ptr physx_PxMat33Ptr_const_physx_PxMat33_operator_Star_float_(physx.PxMat33Ptr pvk_lhs, float pvk_scalar);
        
        public static physx.PxMat33Ptr operator*(physx.PxMat33Ptr lhs, float scalar) {
            physx.PxMat33Ptr pvk_in_lhs = lhs;
            float pvk_in_scalar = scalar;
            return physx_PxMat33Ptr_const_physx_PxMat33_operator_Star_float_(pvk_in_lhs, pvk_in_scalar);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxVec3Ptr physx_PxVec3Ptr_const_physx_PxMat33_operator_Star_physx_PxVec3Ptr_(physx.PxMat33Ptr pvk_lhs, physx.PxVec3Ptr pvk_vec);
        
        public static physx.PxVec3Ptr operator*(physx.PxMat33Ptr lhs, physx.PxVec3Ptr vec) {
            physx.PxMat33Ptr pvk_in_lhs = lhs;
            physx.PxVec3Ptr pvk_in_vec = vec;
            return physx_PxVec3Ptr_const_physx_PxMat33_operator_Star_physx_PxVec3Ptr_(pvk_in_lhs, pvk_in_vec);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxMat33Ptr physx_PxMat33Ptr_const_physx_PxMat33_operator_Star_physx_PxMat33Ptr_(physx.PxMat33Ptr pvk_lhs, physx.PxMat33Ptr pvk_other);
        
        public static physx.PxMat33Ptr operator*(physx.PxMat33Ptr lhs, physx.PxMat33Ptr other) {
            physx.PxMat33Ptr pvk_in_lhs = lhs;
            physx.PxMat33Ptr pvk_in_other = other;
            return physx_PxMat33Ptr_const_physx_PxMat33_operator_Star_physx_PxMat33Ptr_(pvk_in_lhs, pvk_in_other);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxVec3Ptr physx_PxVec3Ptr_const_physx_PxMat33_transform_physx_PxVec3Ptr_(physx.PxMat33Ptr pvk_this, physx.PxVec3Ptr pvk_other);
        
        public physx.PxVec3Ptr transform_New(physx.PxVec3Ptr other) {
            physx.PxMat33Ptr pvk_in_this = this;
            physx.PxVec3Ptr pvk_in_other = other;
            return physx_PxVec3Ptr_const_physx_PxMat33_transform_physx_PxVec3Ptr_(pvk_in_this, pvk_in_other);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxVec3Ptr physx_PxVec3Ptr_const_physx_PxMat33_transformTranspose_physx_PxVec3Ptr_(physx.PxMat33Ptr pvk_this, physx.PxVec3Ptr pvk_other);
        
        public physx.PxVec3Ptr transformTranspose_New(physx.PxVec3Ptr other) {
            physx.PxMat33Ptr pvk_in_this = this;
            physx.PxVec3Ptr pvk_in_other = other;
            return physx_PxVec3Ptr_const_physx_PxMat33_transformTranspose_physx_PxVec3Ptr_(pvk_in_this, pvk_in_other);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern float* float_const_physx_PxMat33_front(physx.PxMat33Ptr pvk_this);
        
        public float* front() {
            physx.PxMat33Ptr pvk_in_this = this;
            return float_const_physx_PxMat33_front(pvk_in_this);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxMat33Ptr physx_PxMat33Ptr_physx_PxMat33_createDiagonal_physx_PxVec3Ptr_(physx.PxVec3Ptr pvk_d);
        
        public static physx.PxMat33Ptr createDiagonal_New(physx.PxVec3Ptr d) {
            physx.PxVec3Ptr pvk_in_d = d;
            return physx_PxMat33Ptr_physx_PxMat33_createDiagonal_physx_PxVec3Ptr_(pvk_in_d);
        }
    }
    
}
