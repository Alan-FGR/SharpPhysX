// Generated by minBND 5.1.91.17 - Â© github.com/Alan-FGR
using System;
using System.Runtime.InteropServices;
public static unsafe partial class minBND_pinvokes {

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void void_PxDebugPoint_PxDebugPointPtr_Ctor_PxVec3_uint_(physx.PxDebugPoint* pvk_this, physx.PxVec3* pvk_p, uint* pvk_c);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void void_PxDebugLine_PxDebugLinePtr_Ctor_PxVec3_PxVec3_uint_(physx.PxDebugLine* pvk_this, physx.PxVec3* pvk_p0, physx.PxVec3* pvk_p1, uint* pvk_c);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void void_PxDebugTriangle_PxDebugTrianglePtr_Ctor_PxVec3_PxVec3_PxVec3_uint_(physx.PxDebugTriangle* pvk_this, physx.PxVec3* pvk_p0, physx.PxVec3* pvk_p1, physx.PxVec3* pvk_p2, uint* pvk_c);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void Freer_physx_PxDebugTextPtr(physx.PxDebugTextPtr ptr);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxDebugTextPtr Ctor_PxDebugTextPtr_();

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxDebugTextPtr Ctor_PxDebugTextPtr_PxVec3_float_uint_string(physx.PxVec3* pvk_p, float* pvk_s, uint* pvk_c, string pvk_str);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxDebugTextPtr_GET_position(physx.PxDebugTextPtr cls, physx.PxVec3* GetRetRef);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxDebugTextPtr_SET_position(physx.PxDebugTextPtr cls, physx.PxVec3 value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern float PxDebugTextPtr_GET_size(physx.PxDebugTextPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxDebugTextPtr_SET_size(physx.PxDebugTextPtr cls, float value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern uint PxDebugTextPtr_GET_color(physx.PxDebugTextPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxDebugTextPtr_SET_color(physx.PxDebugTextPtr cls, uint value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern string PxDebugTextPtr_GET_string(physx.PxDebugTextPtr cls);
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void PxDebugTextPtr_SET_string(physx.PxDebugTextPtr cls, string value);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern uint uint_const_PxRenderBufferPtr_getNbPointsPtr(physx.PxRenderBufferPtr pvk_this);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxDebugPoint* PxDebugPoint_const_PxRenderBufferPtr_getPointsPtr(physx.PxRenderBufferPtr pvk_this);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern uint uint_const_PxRenderBufferPtr_getNbLinesPtr(physx.PxRenderBufferPtr pvk_this);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxDebugLine* PxDebugLine_const_PxRenderBufferPtr_getLinesPtr(physx.PxRenderBufferPtr pvk_this);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern uint uint_const_PxRenderBufferPtr_getNbTrianglesPtr(physx.PxRenderBufferPtr pvk_this);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxDebugTriangle* PxDebugTriangle_const_PxRenderBufferPtr_getTrianglesPtr(physx.PxRenderBufferPtr pvk_this);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern uint uint_const_PxRenderBufferPtr_getNbTextsPtr(physx.PxRenderBufferPtr pvk_this);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxDebugTextPtr PxDebugTextPtr_const_PxRenderBufferPtr_getTextsPtr(physx.PxRenderBufferPtr pvk_this);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void void_PxRenderBufferPtr_appendPtr_PxRenderBufferPtr_(physx.PxRenderBufferPtr pvk_this, physx.PxRenderBufferPtr pvk_other);

[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void void_PxRenderBufferPtr_clearPtr(physx.PxRenderBufferPtr pvk_this);

}
