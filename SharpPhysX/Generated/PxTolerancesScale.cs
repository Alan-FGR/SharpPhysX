// Generated by minBND 5.1.78.10 - Â© github.com/Alan-FGR
//Unit PxTolerancesScale
using System;
using System.Runtime.InteropServices;

public static unsafe partial class physx {
    public unsafe partial struct PxTolerancesScalePtr{
        private System.IntPtr nativePtr_;
        
    [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void Freer_physx_PxTolerancesScalePtr(PxTolerancesScalePtr ptr);
        
        public static void Free(PxTolerancesScalePtr ptr){
            Freer_physx_PxTolerancesScalePtr(ptr);
        }
        public void Free(){
            Freer_physx_PxTolerancesScalePtr(this);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxTolerancesScalePtr Ctor_physx_PxTolerancesScalePtr_();
        
        public static physx.PxTolerancesScalePtr New() {
            return Ctor_physx_PxTolerancesScalePtr_();
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern float PxTolerancesScale_GET_length(PxTolerancesScalePtr cls);
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void PxTolerancesScale_SET_length(PxTolerancesScalePtr cls, float value);
        
        public float length {
            get => PxTolerancesScale_GET_length(this);
            set => PxTolerancesScale_SET_length(this, value);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern float PxTolerancesScale_GET_speed(PxTolerancesScalePtr cls);
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void PxTolerancesScale_SET_speed(PxTolerancesScalePtr cls, float value);
        
        public float speed {
            get => PxTolerancesScale_GET_speed(this);
            set => PxTolerancesScale_SET_speed(this, value);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern bool bool_const_physx_PxTolerancesScale_isValid(physx.PxTolerancesScalePtr pvk_this);
        
        public bool isValid() {
            physx.PxTolerancesScalePtr pvk_in_this = this;
            return bool_const_physx_PxTolerancesScale_isValid(pvk_in_this);
        }
    }
    
}
