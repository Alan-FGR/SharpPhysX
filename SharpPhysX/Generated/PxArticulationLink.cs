// Generated by minBND 5.1.90.51 - Â© github.com/Alan-FGR
using System;
using System.Runtime.InteropServices;
using static minBND_pinvokes;

public static unsafe partial class physx {
    //Subclasses using this: 0

    public unsafe partial struct PxArticulationLinkPtr : physx.PxRigidBodyPtr.IPxRigidBodyPtr, physx.PxRigidActorPtr.IPxRigidActorPtr, physx.PxActorPtr.IPxActorPtr, physx.PxBasePtr.IPxBasePtr {
        private System.IntPtr nativePtr_;

        //DBG: ClassNode PxArticulationLink physx::PxArticulationLink L57-135Bases: PxRigidBodyPtr|PxRigidActorPtr|PxActorPtr|PxBasePtr

        //DBG: MethodNode physx::PxArticulationLink::release L69
        //RET nat: void, man: void, ret: True, kind: Value
        //PAR nat: PxArticulationLinkPtr, man: physx.PxArticulationLinkPtr, kind: PtrStruct
        public void release() {
            physx.PxArticulationLinkPtr pvk_in_this = this;
            void_PxArticulationLinkPtr_releasePtr(pvk_in_this);
        }

        //DBG: MethodNode physx::PxArticulationLink::getArticulation L78
        //RET nat: PxArticulationBasePtr, man: physx.PxArticulationBasePtr, ret: True, kind: PtrStruct
        //PAR nat: PxArticulationLinkPtr, man: physx.PxArticulationLinkPtr, kind: PtrStruct
        public physx.PxArticulationBasePtr getArticulation() {
            physx.PxArticulationLinkPtr pvk_in_this = this;
            return PxArticulationBasePtr_const_PxArticulationLinkPtr_getArticulationPtr(pvk_in_this);
        }

        //DBG: MethodNode physx::PxArticulationLink::getInboundJoint L88
        //RET nat: PxArticulationJointBasePtr, man: physx.PxArticulationJointBasePtr, ret: True, kind: PtrStruct
        //PAR nat: PxArticulationLinkPtr, man: physx.PxArticulationLinkPtr, kind: PtrStruct
        public physx.PxArticulationJointBasePtr getInboundJoint() {
            physx.PxArticulationLinkPtr pvk_in_this = this;
            return PxArticulationJointBasePtr_const_PxArticulationLinkPtr_getInboundJointPtr(pvk_in_this);
        }

        //DBG: MethodNode physx::PxArticulationLink::getInboundJointDof L97
        //RET nat: PxU32, man: uint, ret: True, kind: Value
        //PAR nat: PxArticulationLinkPtr, man: physx.PxArticulationLinkPtr, kind: PtrStruct
        public uint getInboundJointDof() {
            physx.PxArticulationLinkPtr pvk_in_this = this;
            return uint_const_PxArticulationLinkPtr_getInboundJointDofPtr(pvk_in_this);
        }

        //DBG: MethodNode physx::PxArticulationLink::getNbChildren L106
        //RET nat: PxU32, man: uint, ret: True, kind: Value
        //PAR nat: PxArticulationLinkPtr, man: physx.PxArticulationLinkPtr, kind: PtrStruct
        public uint getNbChildren() {
            physx.PxArticulationLinkPtr pvk_in_this = this;
            return uint_const_PxArticulationLinkPtr_getNbChildrenPtr(pvk_in_this);
        }

        //DBG: MethodNode physx::PxArticulationLink::getLinkIndex L114
        //RET nat: PxU32, man: uint, ret: True, kind: Value
        //PAR nat: PxArticulationLinkPtr, man: physx.PxArticulationLinkPtr, kind: PtrStruct
        public uint getLinkIndex() {
            physx.PxArticulationLinkPtr pvk_in_this = this;
            return uint_const_PxArticulationLinkPtr_getLinkIndexPtr(pvk_in_this);
        }

        //DBG: MethodNode physx::PxArticulationLink::getChildren L126
        //RET nat: PxU32, man: uint, ret: True, kind: Value
        //PAR nat: PxArticulationLinkPtr, man: physx.PxArticulationLinkPtr, kind: PtrStruct
        //PAR nat: PxArticulationLinkPtr*, man: physx.PxArticulationLinkPtr*, kind: Value
        //PAR nat: PxU32, man: uint, kind: Value
        //PAR nat: PxU32, man: uint, kind: Value
        public uint getChildren(physx.PxArticulationLinkPtr* userBuffer, uint bufferSize, uint startIndex=0) {
            physx.PxArticulationLinkPtr pvk_in_this = this;
            physx.PxArticulationLinkPtr* pvk_in_userBuffer = userBuffer;
            uint pvk_in_bufferSize = bufferSize;
            uint pvk_in_startIndex = startIndex;
            return uint_const_PxArticulationLinkPtr_getChildrenPtr_PxArticulationLinkPtr_uint_uint_(pvk_in_this, pvk_in_userBuffer, pvk_in_bufferSize, pvk_in_startIndex);
        }

        //DBG: MethodNode physx::PxArticulationLink::getConcreteTypeName L128
        //RET nat: char*, man: string, ret: True, kind: Value
        //PAR nat: PxArticulationLinkPtr, man: physx.PxArticulationLinkPtr, kind: PtrStruct
        public string getConcreteTypeName() {
            physx.PxArticulationLinkPtr pvk_in_this = this;
            return string_const_PxArticulationLinkPtr_getConcreteTypeNamePtr(pvk_in_this);
        }

        //DBG: MethodNode physx::PxArticulationLink::operator= L57
        //ERRORS in MethodNode: Skipping Implicit MethodNode physx::PxArticulationLink::operator= L57

        //DBG: MethodNode physx::PxArticulationLink::getChildren L126
        //RET nat: PxU32, man: uint, ret: True, kind: Value
        //PAR nat: PxArticulationLinkPtr, man: physx.PxArticulationLinkPtr, kind: PtrStruct
        //PAR nat: PxArticulationLinkPtr*, man: physx.PxArticulationLinkPtr*, kind: Value
        //PAR nat: PxU32, man: uint, kind: Value
        public uint getChildren(physx.PxArticulationLinkPtr* userBuffer, uint bufferSize) {
            physx.PxArticulationLinkPtr pvk_in_this = this;
            physx.PxArticulationLinkPtr* pvk_in_userBuffer = userBuffer;
            uint pvk_in_bufferSize = bufferSize;
            return uint_const_PxArticulationLinkPtr_getChildrenPtr_PxArticulationLinkPtr_uint_(pvk_in_this, pvk_in_userBuffer, pvk_in_bufferSize);
        }
        public static implicit operator physx.PxRigidBodyPtr(PxArticulationLinkPtr obj) => *(physx.PxRigidBodyPtr*)&obj;
        public static explicit operator PxArticulationLinkPtr(physx.PxRigidBodyPtr obj) => *(PxArticulationLinkPtr*)&obj;
        public static implicit operator physx.PxRigidActorPtr(PxArticulationLinkPtr obj) => *(physx.PxRigidActorPtr*)&obj;
        public static explicit operator PxArticulationLinkPtr(physx.PxRigidActorPtr obj) => *(PxArticulationLinkPtr*)&obj;
        public static implicit operator physx.PxActorPtr(PxArticulationLinkPtr obj) => *(physx.PxActorPtr*)&obj;
        public static explicit operator PxArticulationLinkPtr(physx.PxActorPtr obj) => *(PxArticulationLinkPtr*)&obj;
        public static implicit operator physx.PxBasePtr(PxArticulationLinkPtr obj) => *(physx.PxBasePtr*)&obj;
        public static explicit operator PxArticulationLinkPtr(physx.PxBasePtr obj) => *(PxArticulationLinkPtr*)&obj;

        //DBG: Field: userData - 314-314
        public IntPtr userData {
            get => PxActorPtr_GET_userData(this);
            set => PxActorPtr_SET_userData(this, value);
        }

        //PIPING
        public void setCMassLocalPose(physx.PxTransform* pose){((physx.PxRigidBodyPtr)this).setCMassLocalPose(pose);}
        public physx.PxTransform getCMassLocalPose(){return((physx.PxRigidBodyPtr)this).getCMassLocalPose();}
        public void setMass(float mass){((physx.PxRigidBodyPtr)this).setMass(mass);}
        public float getMass(){return((physx.PxRigidBodyPtr)this).getMass();}
        public float getInvMass(){return((physx.PxRigidBodyPtr)this).getInvMass();}
        public void setMassSpaceInertiaTensor(physx.PxVec3* m){((physx.PxRigidBodyPtr)this).setMassSpaceInertiaTensor(m);}
        public physx.PxVec3 getMassSpaceInertiaTensor(){return((physx.PxRigidBodyPtr)this).getMassSpaceInertiaTensor();}
        public physx.PxVec3 getMassSpaceInvInertiaTensor(){return((physx.PxRigidBodyPtr)this).getMassSpaceInvInertiaTensor();}
        public void setLinearDamping(float linDamp){((physx.PxRigidBodyPtr)this).setLinearDamping(linDamp);}
        public float getLinearDamping(){return((physx.PxRigidBodyPtr)this).getLinearDamping();}
        public void setAngularDamping(float angDamp){((physx.PxRigidBodyPtr)this).setAngularDamping(angDamp);}
        public float getAngularDamping(){return((physx.PxRigidBodyPtr)this).getAngularDamping();}
        public physx.PxVec3 getLinearVelocity(){return((physx.PxRigidBodyPtr)this).getLinearVelocity();}
        public void setLinearVelocity(physx.PxVec3* linVel, bool autowake=true){((physx.PxRigidBodyPtr)this).setLinearVelocity(linVel, autowake);}
        public physx.PxVec3 getAngularVelocity(){return((physx.PxRigidBodyPtr)this).getAngularVelocity();}
        public void setAngularVelocity(physx.PxVec3* angVel, bool autowake=true){((physx.PxRigidBodyPtr)this).setAngularVelocity(angVel, autowake);}
        public void setMaxAngularVelocity(float maxAngVel){((physx.PxRigidBodyPtr)this).setMaxAngularVelocity(maxAngVel);}
        public float getMaxAngularVelocity(){return((physx.PxRigidBodyPtr)this).getMaxAngularVelocity();}
        public void setMaxLinearVelocity(float maxLinVel){((physx.PxRigidBodyPtr)this).setMaxLinearVelocity(maxLinVel);}
        public float getMaxLinearVelocity(){return((physx.PxRigidBodyPtr)this).getMaxLinearVelocity();}
        public void addForce(physx.PxVec3* force, physx.PxForceModeEnum mode, bool autowake=true){((physx.PxRigidBodyPtr)this).addForce(force, mode, autowake);}
        public void addTorque(physx.PxVec3* torque, physx.PxForceModeEnum mode, bool autowake=true){((physx.PxRigidBodyPtr)this).addTorque(torque, mode, autowake);}
        public void clearForce(physx.PxForceModeEnum mode){((physx.PxRigidBodyPtr)this).clearForce(mode);}
        public void clearTorque(physx.PxForceModeEnum mode){((physx.PxRigidBodyPtr)this).clearTorque(mode);}
        public void setForceAndTorque(physx.PxVec3* force, physx.PxVec3* torque, physx.PxForceModeEnum mode){((physx.PxRigidBodyPtr)this).setForceAndTorque(force, torque, mode);}
        public void setRigidBodyFlag(physx.PxRigidBodyFlagEnum flag, bool value){((physx.PxRigidBodyPtr)this).setRigidBodyFlag(flag, value);}
        public void setRigidBodyFlags(physx.PxRigidBodyFlagsPtr inFlags){((physx.PxRigidBodyPtr)this).setRigidBodyFlags(inFlags);}
        public physx.PxRigidBodyFlagsPtr getRigidBodyFlags_New(){return((physx.PxRigidBodyPtr)this).getRigidBodyFlags_New();}
        public void setMinCCDAdvanceCoefficient(float advanceCoefficient){((physx.PxRigidBodyPtr)this).setMinCCDAdvanceCoefficient(advanceCoefficient);}
        public float getMinCCDAdvanceCoefficient(){return((physx.PxRigidBodyPtr)this).getMinCCDAdvanceCoefficient();}
        public void setMaxDepenetrationVelocity(float biasClamp){((physx.PxRigidBodyPtr)this).setMaxDepenetrationVelocity(biasClamp);}
        public float getMaxDepenetrationVelocity(){return((physx.PxRigidBodyPtr)this).getMaxDepenetrationVelocity();}
        public void setMaxContactImpulse(float maxImpulse){((physx.PxRigidBodyPtr)this).setMaxContactImpulse(maxImpulse);}
        public float getMaxContactImpulse(){return((physx.PxRigidBodyPtr)this).getMaxContactImpulse();}
        public uint getInternalIslandNodeIndex(){return((physx.PxRigidBodyPtr)this).getInternalIslandNodeIndex();}
        public void setCMassLocalPose(physx.PxTransform pose){((physx.PxRigidBodyPtr)this).setCMassLocalPose((physx.PxTransform*)&pose);}
        public void setCMassLocalPose(physx.PxTransform.Ref pose){((physx.PxRigidBodyPtr)this).setCMassLocalPose((physx.PxTransform*)(*((IntPtr*)(&pose))));}
        public void setMassSpaceInertiaTensor(physx.PxVec3 m){((physx.PxRigidBodyPtr)this).setMassSpaceInertiaTensor((physx.PxVec3*)&m);}
        public void setMassSpaceInertiaTensor(physx.PxVec3.Ref m){((physx.PxRigidBodyPtr)this).setMassSpaceInertiaTensor((physx.PxVec3*)(*((IntPtr*)(&m))));}
        public void setLinearVelocity(physx.PxVec3 linVel){((physx.PxRigidBodyPtr)this).setLinearVelocity((physx.PxVec3*)&linVel);}
        public void setLinearVelocity(physx.PxVec3.Ref linVel){((physx.PxRigidBodyPtr)this).setLinearVelocity((physx.PxVec3*)(*((IntPtr*)(&linVel))));}
        public void setLinearVelocity(physx.PxVec3* linVel){((physx.PxRigidBodyPtr)this).setLinearVelocity(linVel);}
        public void setLinearVelocity(physx.PxVec3 linVel, bool autowake=true){((physx.PxRigidBodyPtr)this).setLinearVelocity((physx.PxVec3*)&linVel, autowake);}
        public void setLinearVelocity(physx.PxVec3.Ref linVel, bool autowake=true){((physx.PxRigidBodyPtr)this).setLinearVelocity((physx.PxVec3*)(*((IntPtr*)(&linVel))), autowake);}
        public void setAngularVelocity(physx.PxVec3 angVel){((physx.PxRigidBodyPtr)this).setAngularVelocity((physx.PxVec3*)&angVel);}
        public void setAngularVelocity(physx.PxVec3.Ref angVel){((physx.PxRigidBodyPtr)this).setAngularVelocity((physx.PxVec3*)(*((IntPtr*)(&angVel))));}
        public void setAngularVelocity(physx.PxVec3* angVel){((physx.PxRigidBodyPtr)this).setAngularVelocity(angVel);}
        public void setAngularVelocity(physx.PxVec3 angVel, bool autowake=true){((physx.PxRigidBodyPtr)this).setAngularVelocity((physx.PxVec3*)&angVel, autowake);}
        public void setAngularVelocity(physx.PxVec3.Ref angVel, bool autowake=true){((physx.PxRigidBodyPtr)this).setAngularVelocity((physx.PxVec3*)(*((IntPtr*)(&angVel))), autowake);}
        public void addForce(physx.PxVec3 force){((physx.PxRigidBodyPtr)this).addForce((physx.PxVec3*)&force);}
        public void addForce(physx.PxVec3.Ref force){((physx.PxRigidBodyPtr)this).addForce((physx.PxVec3*)(*((IntPtr*)(&force))));}
        public void addForce(physx.PxVec3* force){((physx.PxRigidBodyPtr)this).addForce(force);}
        public void addForce(physx.PxVec3 force, physx.PxForceModeEnum mode){((physx.PxRigidBodyPtr)this).addForce((physx.PxVec3*)&force, mode);}
        public void addForce(physx.PxVec3.Ref force, physx.PxForceModeEnum mode){((physx.PxRigidBodyPtr)this).addForce((physx.PxVec3*)(*((IntPtr*)(&force))), mode);}
        public void addForce(physx.PxVec3* force, physx.PxForceModeEnum mode){((physx.PxRigidBodyPtr)this).addForce(force, mode);}
        public void addForce(physx.PxVec3 force, physx.PxForceModeEnum mode, bool autowake=true){((physx.PxRigidBodyPtr)this).addForce((physx.PxVec3*)&force, mode, autowake);}
        public void addForce(physx.PxVec3.Ref force, physx.PxForceModeEnum mode, bool autowake=true){((physx.PxRigidBodyPtr)this).addForce((physx.PxVec3*)(*((IntPtr*)(&force))), mode, autowake);}
        public void addTorque(physx.PxVec3 torque){((physx.PxRigidBodyPtr)this).addTorque((physx.PxVec3*)&torque);}
        public void addTorque(physx.PxVec3.Ref torque){((physx.PxRigidBodyPtr)this).addTorque((physx.PxVec3*)(*((IntPtr*)(&torque))));}
        public void addTorque(physx.PxVec3* torque){((physx.PxRigidBodyPtr)this).addTorque(torque);}
        public void addTorque(physx.PxVec3 torque, physx.PxForceModeEnum mode){((physx.PxRigidBodyPtr)this).addTorque((physx.PxVec3*)&torque, mode);}
        public void addTorque(physx.PxVec3.Ref torque, physx.PxForceModeEnum mode){((physx.PxRigidBodyPtr)this).addTorque((physx.PxVec3*)(*((IntPtr*)(&torque))), mode);}
        public void addTorque(physx.PxVec3* torque, physx.PxForceModeEnum mode){((physx.PxRigidBodyPtr)this).addTorque(torque, mode);}
        public void addTorque(physx.PxVec3 torque, physx.PxForceModeEnum mode, bool autowake=true){((physx.PxRigidBodyPtr)this).addTorque((physx.PxVec3*)&torque, mode, autowake);}
        public void addTorque(physx.PxVec3.Ref torque, physx.PxForceModeEnum mode, bool autowake=true){((physx.PxRigidBodyPtr)this).addTorque((physx.PxVec3*)(*((IntPtr*)(&torque))), mode, autowake);}
        public void clearForce(){((physx.PxRigidBodyPtr)this).clearForce();}
        public void clearTorque(){((physx.PxRigidBodyPtr)this).clearTorque();}
        public void setForceAndTorque(physx.PxVec3 force, physx.PxVec3 torque){((physx.PxRigidBodyPtr)this).setForceAndTorque((physx.PxVec3*)&force, (physx.PxVec3*)&torque);}
        public void setForceAndTorque(physx.PxVec3.Ref force, physx.PxVec3.Ref torque){((physx.PxRigidBodyPtr)this).setForceAndTorque((physx.PxVec3*)(*((IntPtr*)(&force))), (physx.PxVec3*)(*((IntPtr*)(&torque))));}
        public void setForceAndTorque(physx.PxVec3* force, physx.PxVec3* torque){((physx.PxRigidBodyPtr)this).setForceAndTorque(force, torque);}
        public void setForceAndTorque(physx.PxVec3 force, physx.PxVec3 torque, physx.PxForceModeEnum mode){((physx.PxRigidBodyPtr)this).setForceAndTorque((physx.PxVec3*)&force, (physx.PxVec3*)&torque, mode);}
        public void setForceAndTorque(physx.PxVec3.Ref force, physx.PxVec3.Ref torque, physx.PxForceModeEnum mode){((physx.PxRigidBodyPtr)this).setForceAndTorque((physx.PxVec3*)(*((IntPtr*)(&force))), (physx.PxVec3*)(*((IntPtr*)(&torque))), mode);}
        public physx.PxTransform getGlobalPose(){return((physx.PxRigidActorPtr)this).getGlobalPose();}
        public void setGlobalPose(physx.PxTransform* pose, bool autowake=true){((physx.PxRigidActorPtr)this).setGlobalPose(pose, autowake);}
        public bool attachShape(physx.PxShapePtr shape){return((physx.PxRigidActorPtr)this).attachShape(shape);}
        public void detachShape(physx.PxShapePtr shape, bool wakeOnLostTouch=true){((physx.PxRigidActorPtr)this).detachShape(shape, wakeOnLostTouch);}
        public uint getNbShapes(){return((physx.PxRigidActorPtr)this).getNbShapes();}
        public uint getShapes(physx.PxShapePtr* userBuffer, uint bufferSize, uint startIndex=0){return((physx.PxRigidActorPtr)this).getShapes(userBuffer, bufferSize, startIndex);}
        public uint getNbConstraints(){return((physx.PxRigidActorPtr)this).getNbConstraints();}
        public uint getConstraints(physx.PxConstraintPtr* userBuffer, uint bufferSize, uint startIndex=0){return((physx.PxRigidActorPtr)this).getConstraints(userBuffer, bufferSize, startIndex);}
        public void setGlobalPose(physx.PxTransform pose){((physx.PxRigidActorPtr)this).setGlobalPose((physx.PxTransform*)&pose);}
        public void setGlobalPose(physx.PxTransform.Ref pose){((physx.PxRigidActorPtr)this).setGlobalPose((physx.PxTransform*)(*((IntPtr*)(&pose))));}
        public void setGlobalPose(physx.PxTransform* pose){((physx.PxRigidActorPtr)this).setGlobalPose(pose);}
        public void setGlobalPose(physx.PxTransform pose, bool autowake=true){((physx.PxRigidActorPtr)this).setGlobalPose((physx.PxTransform*)&pose, autowake);}
        public void setGlobalPose(physx.PxTransform.Ref pose, bool autowake=true){((physx.PxRigidActorPtr)this).setGlobalPose((physx.PxTransform*)(*((IntPtr*)(&pose))), autowake);}
        public void detachShape(physx.PxShapePtr shape){((physx.PxRigidActorPtr)this).detachShape(shape);}
        public uint getShapes(physx.PxShapePtr* userBuffer, uint bufferSize){return((physx.PxRigidActorPtr)this).getShapes(userBuffer, bufferSize);}
        public uint getConstraints(physx.PxConstraintPtr* userBuffer, uint bufferSize){return((physx.PxRigidActorPtr)this).getConstraints(userBuffer, bufferSize);}
        public physx.PxActorTypeEnum getType(){return((physx.PxActorPtr)this).getType();}
        public physx.PxScenePtr getScene(){return((physx.PxActorPtr)this).getScene();}
        public void setName(string name){((physx.PxActorPtr)this).setName(name);}
        public string getName(){return((physx.PxActorPtr)this).getName();}
        public physx.PxBounds3 getWorldBounds(float inflation=1.01f){return((physx.PxActorPtr)this).getWorldBounds(inflation);}
        public void setActorFlag(physx.PxActorFlagEnum flag, bool value){((physx.PxActorPtr)this).setActorFlag(flag, value);}
        public void setActorFlags(physx.PxActorFlagsPtr inFlags){((physx.PxActorPtr)this).setActorFlags(inFlags);}
        public physx.PxActorFlagsPtr getActorFlags_New(){return((physx.PxActorPtr)this).getActorFlags_New();}
        public void setDominanceGroup(byte dominanceGroup){((physx.PxActorPtr)this).setDominanceGroup(dominanceGroup);}
        public byte getDominanceGroup(){return((physx.PxActorPtr)this).getDominanceGroup();}
        public void setOwnerClient(byte inClient){((physx.PxActorPtr)this).setOwnerClient(inClient);}
        public byte getOwnerClient(){return((physx.PxActorPtr)this).getOwnerClient();}
        public physx.PxAggregatePtr getAggregate(){return((physx.PxActorPtr)this).getAggregate();}
        public physx.PxBounds3 getWorldBounds(){return((physx.PxActorPtr)this).getWorldBounds();}
        //Skipping: SKIPPING! MethodNode physx::PxBase::is L101 is | 
        //Skipping: SKIPPING! MethodNode physx::PxBase::is L111 isConst | 
        public ushort getConcreteType(){return((physx.PxBasePtr)this).getConcreteType();}
        public void setBaseFlag(physx.PxBaseFlagEnum flag, bool value){((physx.PxBasePtr)this).setBaseFlag(flag, value);}
        public void setBaseFlags(physx.PxBaseFlagsPtr inFlags){((physx.PxBasePtr)this).setBaseFlags(inFlags);}
        public physx.PxBaseFlagsPtr getBaseFlags_New(){return((physx.PxBasePtr)this).getBaseFlags_New();}
        public bool isReleasable(){return((physx.PxBasePtr)this).isReleasable();}

        //Operators
    }
}
