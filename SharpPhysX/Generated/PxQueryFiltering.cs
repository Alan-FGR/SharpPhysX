// Generated by minBND 5.1.78.26 - Â© github.com/Alan-FGR
//DEBUG: UnitNode  - 0
//Unit PxQueryFiltering
using System;
using System.Runtime.InteropServices;

//DEBUG: NamespaceNode physx - 43-272
public static unsafe partial class physx {
    //DEBUG: FunctionNode physx::operator| - 86
    // physx::operator| [static PxQueryFlagsPtr Pipe_New(physx.PxQueryFlagEnum a, physx.PxQueryFlagEnum b)] will be bound as member operator
    
    //DEBUG: FunctionNode physx::operator& - 86
    // physx::operator& [static PxQueryFlagsPtr Amp_New(physx.PxQueryFlagEnum a, physx.PxQueryFlagEnum b)] will be bound as member operator
    
    //DEBUG: FunctionNode physx::operator~ - 86
    // physx::operator~ [static PxQueryFlagsPtr Tilde_New(physx.PxQueryFlagEnum a)] will be bound as member operator
    
    //DEBUG: ClassNode physx::PxQueryFlag - 57-77
    //DEBUG: EnumNode physx::PxQueryFlag::Enum - 59-76
    public enum PxQueryFlagEnum : int {
        eSTATIC = 1,       // eSTATIC = (1<<0)
        eDYNAMIC = 2,      // eDYNAMIC = (1<<1)
        ePREFILTER = 4,    // ePREFILTER = (1<<2)
        ePOSTFILTER = 8,   // ePOSTFILTER = (1<<3)
        eANY_HIT = 16,     // eANY_HIT = (1<<4)
        eNO_BLOCK = 32,    // eNO_BLOCK = (1<<5)
        eRESERVED = 32768, // eRESERVED = (1<<15)
    }
    
    //DEBUG: ClassNode physx::PxQueryHitType - 108-116
    //DEBUG: EnumNode physx::PxQueryHitType::Enum - 110-115
    public enum PxQueryHitTypeEnum : int {
        eNONE = 0,  // eNONE = 0
        eTOUCH = 1, // eTOUCH = 1
        eBLOCK = 2, // eBLOCK = 2
    }
    
    //DEBUG: ClassNode physx::PxQueryFilterData - 132-145
    //Interface use count: 0
    public unsafe partial struct PxQueryFilterDataPtr{
        private System.IntPtr nativePtr_;
        
    //DEBUG: NewerFreerNode physx::PxQueryFilterData - 132-145
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void Freer_physx_PxQueryFilterDataPtr(PxQueryFilterDataPtr ptr);
        
        public static void Free(PxQueryFilterDataPtr ptr){
            Freer_physx_PxQueryFilterDataPtr(ptr);
        }
        public void Free(){
            Freer_physx_PxQueryFilterDataPtr(this);
        }
        
        //DEBUG: PtrStructCtorNode physx::PxQueryFilterData::PxQueryFilterData - 135
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxQueryFilterDataPtr Ctor_physx_PxQueryFilterDataPtr_();
        
        public static physx.PxQueryFilterDataPtr New() {
            //RET nat: physx.PxQueryFilterDataPtr, man: physx.PxQueryFilterDataPtr, stg: PtrStruct, ret: True
            return Ctor_physx_PxQueryFilterDataPtr_();
        }
        
        //DEBUG: PtrStructCtorNode physx::PxQueryFilterData::PxQueryFilterData - 138
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxQueryFilterDataPtr Ctor_physx_PxQueryFilterDataPtr_physx_PxFilterDataPtr_PxQueryFlagsPtr(physx.PxFilterDataPtr pvk_fd, PxQueryFlagsPtr pvk_f);
        
        public static physx.PxQueryFilterDataPtr New(physx.PxFilterDataPtr fd, PxQueryFlagsPtr f) {
            //RET nat: physx.PxQueryFilterDataPtr, man: physx.PxQueryFilterDataPtr, stg: PtrStruct, ret: True
            //PAR nat: PxFilterDataPtr, man: physx.PxFilterDataPtr, stg: PtrStruct
            physx.PxFilterDataPtr pvk_in_fd = fd;
            //PAR nat: PxQueryFlagsPtr, man: PxQueryFlagsPtr, stg: PtrStruct
            PxQueryFlagsPtr pvk_in_f = f;
            return Ctor_physx_PxQueryFilterDataPtr_physx_PxFilterDataPtr_PxQueryFlagsPtr(pvk_in_fd, pvk_in_f);
        }
        
        //DEBUG: PtrStructCtorNode physx::PxQueryFilterData::PxQueryFilterData - 141
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxQueryFilterDataPtr Ctor_physx_PxQueryFilterDataPtr_PxQueryFlagsPtr(PxQueryFlagsPtr pvk_f);
        
        public static physx.PxQueryFilterDataPtr New(PxQueryFlagsPtr f) {
            //RET nat: physx.PxQueryFilterDataPtr, man: physx.PxQueryFilterDataPtr, stg: PtrStruct, ret: True
            //PAR nat: PxQueryFlagsPtr, man: PxQueryFlagsPtr, stg: PtrStruct
            PxQueryFlagsPtr pvk_in_f = f;
            return Ctor_physx_PxQueryFilterDataPtr_PxQueryFlagsPtr(pvk_in_f);
        }
        
        //DEBUG: PtrStructCtorNode physx::PxQueryFilterData::PxQueryFilterData - 132
        //ERRORS OCCURED IN physx::PxQueryFilterData::PxQueryFilterData
        //Implicit Function/Method
        
        //DEBUG: PtrStructCtorNode physx::PxQueryFilterData::PxQueryFilterData - 132
        //ERRORS OCCURED IN physx::PxQueryFilterData::PxQueryFilterData
        //Implicit Function/Method
        
        //DEBUG: GetterSetterNode physx::PxQueryFilterData - 132-145
        //Field: data - 143-143
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxFilterDataPtr PxQueryFilterData_GET_data(PxQueryFilterDataPtr cls);
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void PxQueryFilterData_SET_data(PxQueryFilterDataPtr cls, physx.PxFilterDataPtr value);
        
        public physx.PxFilterDataPtr data {
            get => PxQueryFilterData_GET_data(this);
            set => PxQueryFilterData_SET_data(this, value);
        }
        
        //DEBUG: GetterSetterNode physx::PxQueryFilterData - 132-145
        //Field: flags - 144-144
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern PxQueryFlagsPtr PxQueryFilterData_GET_flags(PxQueryFilterDataPtr cls);
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void PxQueryFilterData_SET_flags(PxQueryFilterDataPtr cls, PxQueryFlagsPtr value);
        
        public PxQueryFlagsPtr flags {
            get => PxQueryFilterData_GET_flags(this);
            set => PxQueryFilterData_SET_flags(this, value);
        }
        
        //DEBUG: MethodNode physx::PxQueryFilterData::operator= - 132
        //ERRORS OCCURED IN physx::PxQueryFilterData::operator=
        //Implicit Function/Method
        //Unbindable Operator: Equal
        
        //DEBUG: MethodNode physx::PxQueryFilterData::~PxQueryFilterData - 132
        //ERRORS OCCURED IN physx::PxQueryFilterData::~PxQueryFilterData
        //Implicit Function/Method
        //Destructor
        
        //DEBUG: MethodNode physx::PxQueryFilterData::operator= - 132
        //ERRORS OCCURED IN physx::PxQueryFilterData::operator=
        //Implicit Function/Method
        //Unbindable Operator: Equal
    }
    
    //DEBUG: ClassNode physx::PxQueryFilterCallback - 169-198
    //Interface use count: 0
    public unsafe partial struct PxQueryFilterCallbackPtr{
        private System.IntPtr nativePtr_;
        
    //DEBUG: MethodNode physx::PxQueryFilterCallback::preFilter - 182-183
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxQueryHitTypeEnum physx_PxQueryHitTypeEnum_physx_PxQueryFilterCallback_preFilter_physx_PxFilterDataPtr_physx_PxShapePtr_physx_PxRigidActorPtr_PxHitFlagsPtr_(physx.PxQueryFilterCallbackPtr pvk_this, physx.PxFilterDataPtr pvk_filterData, physx.PxShapePtr pvk_shape, physx.PxRigidActorPtr pvk_actor, PxHitFlagsPtr pvk_queryFlags);
        
        public physx.PxQueryHitTypeEnum preFilter(physx.PxFilterDataPtr filterData, physx.PxShapePtr shape, physx.PxRigidActorPtr actor, PxHitFlagsPtr queryFlags) {
            //RET nat: physx.PxQueryHitTypeEnum, man: physx.PxQueryHitTypeEnum, stg: Value, ret: True
            //PAR nat: PxQueryFilterCallbackPtr, man: physx.PxQueryFilterCallbackPtr, stg: PtrStruct
            physx.PxQueryFilterCallbackPtr pvk_in_this = this;
            //PAR nat: PxFilterDataPtr, man: physx.PxFilterDataPtr, stg: PtrStruct
            physx.PxFilterDataPtr pvk_in_filterData = filterData;
            //PAR nat: PxShapePtr, man: physx.PxShapePtr, stg: PtrStruct
            physx.PxShapePtr pvk_in_shape = shape;
            //PAR nat: PxRigidActorPtr, man: physx.PxRigidActorPtr, stg: PtrStruct
            physx.PxRigidActorPtr pvk_in_actor = actor;
            //PAR nat: PxHitFlagsPtr, man: PxHitFlagsPtr, stg: PtrStruct
            PxHitFlagsPtr pvk_in_queryFlags = queryFlags;
            return physx_PxQueryHitTypeEnum_physx_PxQueryFilterCallback_preFilter_physx_PxFilterDataPtr_physx_PxShapePtr_physx_PxRigidActorPtr_PxHitFlagsPtr_(pvk_in_this, pvk_in_filterData, pvk_in_shape, pvk_in_actor, pvk_in_queryFlags);
        }
        
        //DEBUG: MethodNode physx::PxQueryFilterCallback::postFilter - 192
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxQueryHitTypeEnum physx_PxQueryHitTypeEnum_physx_PxQueryFilterCallback_postFilter_physx_PxFilterDataPtr_physx_PxQueryHitPtr_(physx.PxQueryFilterCallbackPtr pvk_this, physx.PxFilterDataPtr pvk_filterData, physx.PxQueryHitPtr pvk_hit);
        
        public physx.PxQueryHitTypeEnum postFilter(physx.PxFilterDataPtr filterData, physx.PxQueryHitPtr hit) {
            //RET nat: physx.PxQueryHitTypeEnum, man: physx.PxQueryHitTypeEnum, stg: Value, ret: True
            //PAR nat: PxQueryFilterCallbackPtr, man: physx.PxQueryFilterCallbackPtr, stg: PtrStruct
            physx.PxQueryFilterCallbackPtr pvk_in_this = this;
            //PAR nat: PxFilterDataPtr, man: physx.PxFilterDataPtr, stg: PtrStruct
            physx.PxFilterDataPtr pvk_in_filterData = filterData;
            //PAR nat: PxQueryHitPtr, man: physx.PxQueryHitPtr, stg: PtrStruct
            physx.PxQueryHitPtr pvk_in_hit = hit;
            return physx_PxQueryHitTypeEnum_physx_PxQueryFilterCallback_postFilter_physx_PxFilterDataPtr_physx_PxQueryHitPtr_(pvk_in_this, pvk_in_filterData, pvk_in_hit);
        }
        
        //DEBUG: MethodNode physx::PxQueryFilterCallback::~PxQueryFilterCallback - 197
        //ERRORS OCCURED IN physx::PxQueryFilterCallback::~PxQueryFilterCallback
        //Destructor
        
        //DEBUG: MethodNode physx::PxQueryFilterCallback::operator= - 169
        //ERRORS OCCURED IN physx::PxQueryFilterCallback::operator=
        //Implicit Function/Method
        //Unbindable Operator: Equal
    }
    
    //DEBUG: DeclNode physx::PxQueryFlags - 85
    // TODO DeclNode.GenBinding()
    
    //DEBUG: DeclNode physx::PxCompileTimeAssert_Dummy - 78
    // TODO DeclNode.GenBinding()
    
    //DEBUG: DeclNode physx::PxBatchQueryPreFilterShader - 233-236
    // TODO DeclNode.GenBinding()
    
    //DEBUG: DeclNode physx::PxBatchQueryPostFilterShader - 266-269
    // TODO DeclNode.GenBinding()
    
}
