// Generated by minBND 5.1.90.51 - Â© github.com/Alan-FGR
using System;
using System.Runtime.InteropServices;
public static unsafe partial class minBND_pinvokes {

//Subclasses using this: 0

//DBG: ClassNode PxBitAndDataT physx::PxBitAndDataT<byte, > L-1

//DBG: NewerFreerNode PxBitAndDataT physx::PxBitAndDataT<byte, > L-1
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void Freer_physx_PxBitAndBytePtr(physx.PxBitAndBytePtr ptr);

//DBG: PtrWrapperCtorNode physx::PxBitAndDataT<byte, >::PxBitAndDataT L47
//RET nat: PxBitAndBytePtr, man: physx.PxBitAndBytePtr, ret: True, kind: PtrStruct
//PAR nat: physx::PxEMPTY, man: physx.PxEMPTY, kind: Value
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxBitAndBytePtr Ctor_PxBitAndBytePtr_PxEMPTY(physx.PxEMPTY pvk__);

//DBG: PtrWrapperCtorNode physx::PxBitAndDataT<byte, >::PxBitAndDataT L50
//RET nat: PxBitAndBytePtr, man: physx.PxBitAndBytePtr, ret: True, kind: PtrStruct
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxBitAndBytePtr Ctor_PxBitAndBytePtr_();

//DBG: PtrWrapperCtorNode physx::PxBitAndDataT<byte, >::PxBitAndDataT L53
//RET nat: PxBitAndBytePtr, man: physx.PxBitAndBytePtr, ret: True, kind: PtrStruct
//PAR nat: unsigned char, man: byte, kind: Value
//PAR nat: bool, man: bool, kind: Value
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxBitAndBytePtr Ctor_PxBitAndBytePtr_byte_bool(byte pvk_data, bool pvk_bit);

//DBG: PtrWrapperCtorNode physx::PxBitAndDataT<byte, >::PxBitAndDataT L44
//ERRORS in PtrWrapperCtorNode: Skipping Implicit PtrWrapperCtorNode physx::PxBitAndDataT<byte, >::PxBitAndDataT L44

//DBG: PtrWrapperCtorNode physx::PxBitAndDataT<byte, >::PxBitAndDataT L44
//ERRORS in PtrWrapperCtorNode: Skipping Implicit PtrWrapperCtorNode physx::PxBitAndDataT<byte, >::PxBitAndDataT L44

//DBG: PtrWrapperCtorNode physx::PxBitAndDataT<byte, >::PxBitAndDataT L53
//RET nat: PxBitAndBytePtr, man: physx.PxBitAndBytePtr, ret: True, kind: PtrStruct
//PAR nat: unsigned char, man: byte, kind: Value
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern physx.PxBitAndBytePtr Ctor_PxBitAndBytePtr_byte(byte pvk_data);

//DBG: MethodNode physx::PxBitAndDataT<byte, >::operator unsigned char L58
//RET nat: unsigned char, man: byte, ret: True, kind: Value
//PAR nat: PxBitAndBytePtr, man: physx.PxBitAndBytePtr, kind: PtrStruct
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern byte byte_const_PxBitAndBytePtr_operator_unsigned_charPtr_Conversion(physx.PxBitAndBytePtr pvk_lhs);

//DBG: MethodNode physx::PxBitAndDataT<byte, >::setBit L62-65
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: PxBitAndBytePtr, man: physx.PxBitAndBytePtr, kind: PtrStruct
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void void_PxBitAndBytePtr_setBitPtr(physx.PxBitAndBytePtr pvk_this);

//DBG: MethodNode physx::PxBitAndDataT<byte, >::clearBit L66-69
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: PxBitAndBytePtr, man: physx.PxBitAndBytePtr, kind: PtrStruct
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void void_PxBitAndBytePtr_clearBitPtr(physx.PxBitAndBytePtr pvk_this);

//DBG: MethodNode physx::PxBitAndDataT<byte, >::isBitSet L70-73
//RET nat: unsigned char, man: byte, ret: True, kind: Value
//PAR nat: PxBitAndBytePtr, man: physx.PxBitAndBytePtr, kind: PtrStruct
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern byte byte_const_PxBitAndBytePtr_isBitSetPtr(physx.PxBitAndBytePtr pvk_this);

//DBG: MethodNode physx::PxBitAndDataT<byte, >::~PxBitAndDataT L44
//ERRORS in MethodNode: Skipping Implicit MethodNode physx::PxBitAndDataT<byte, >::~PxBitAndDataT L44, Destructor

//DBG: MethodNode physx::PxBitAndDataT<byte, >::operator= L44
//ERRORS in MethodNode: Skipping Implicit MethodNode physx::PxBitAndDataT<byte, >::operator= L44

//DBG: MethodNode physx::PxBitAndDataT<byte, >::operator= L44
//ERRORS in MethodNode: Skipping Implicit MethodNode physx::PxBitAndDataT<byte, >::operator= L44

//Operators
//Subclasses using this: 0

//DBG: ClassNode PxBitAndDataT physx::PxBitAndDataT<ushort, > L-1

//DBG: NewerFreerNode PxBitAndDataT physx::PxBitAndDataT<ushort, > L-1
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void Freer_physx_PxBitAndWordPtr(physx.PxBitAndWordPtr ptr);

//Operators
//Subclasses using this: 0

//DBG: ClassNode PxBitAndDataT physx::PxBitAndDataT<uint, > L-1

//DBG: NewerFreerNode PxBitAndDataT physx::PxBitAndDataT<uint, > L-1
[DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
internal static extern void Freer_physx_PxBitAndDwordPtr(physx.PxBitAndDwordPtr ptr);

//Operators

//DBG: DeclNode PxBitAndDataT physx::PxBitAndDataT L43-77

//DBG: DeclNode PxBitAndByte physx::PxBitAndByte L78

//DBG: DeclNode PxBitAndWord physx::PxBitAndWord L79

//DBG: DeclNode PxBitAndDword physx::PxBitAndDword L80
}
