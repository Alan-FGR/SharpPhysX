// Generated by minBND 5.1.78.26 - Â© github.com/Alan-FGR
//DEBUG: UnitNode  - 0
//Unit PxQuat
using System;
using System.Runtime.InteropServices;

//DEBUG: NamespaceNode physx - 39-399
public static unsafe partial class physx {
    //DEBUG: ClassNode physx::PxQuat - 49-396
    public unsafe partial struct PxQuat{
        public float x;
        public float y;
        public float z;
        public float w;
        
    //DEBUG: DefaulterNode physx::PxQuat::PxQuat - 55-57
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void Default_physx_PxQuat_(physx.PxQuat* RetRef);
        
        public static physx.PxQuat Default() {
            //RET nat: physx.PxQuat, man: physx.PxQuat, stg: Blittable, ret: False
            physx.PxQuat RetRef;
            Default_physx_PxQuat_(&RetRef);
            return RetRef;
        }
        
        //DEBUG: BlittableCtorNode physx::PxQuat::PxQuat - 60-63
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxQuat_PxQuat_Ctor_physx_PxIDENTITY_(physx.PxQuat* pvk_this, physx.PxIDENTITY pvk_r);
        
        public PxQuat(physx.PxIDENTITY r) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: physx::PxQuat, man: physx.PxQuat, stg: Blittable
            
            //PAR nat: physx::PxIDENTITY, man: physx.PxIDENTITY, stg: Value
            physx.PxIDENTITY pvk_in_r = r;
            PxQuat toInit;
            var pvk_in_this = &toInit;
            void_physx_PxQuat_PxQuat_Ctor_physx_PxIDENTITY_(pvk_in_this, pvk_in_r);
            this = toInit;
        }
        
        //DEBUG: BlittableCtorNode physx::PxQuat::PxQuat - 68-70
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxQuat_PxQuat_Ctor_float_(physx.PxQuat* pvk_this, float pvk_r);
        
        public PxQuat(float r) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: physx::PxQuat, man: physx.PxQuat, stg: Blittable
            
            //PAR nat: float, man: float, stg: Value
            float pvk_in_r = r;
            PxQuat toInit;
            var pvk_in_this = &toInit;
            void_physx_PxQuat_PxQuat_Ctor_float_(pvk_in_this, pvk_in_r);
            this = toInit;
        }
        
        //DEBUG: BlittableCtorNode physx::PxQuat::PxQuat - 75-77
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxQuat_PxQuat_Ctor_float_float_float_float_(physx.PxQuat* pvk_this, float pvk_nx, float pvk_ny, float pvk_nz, float pvk_nw);
        
        public PxQuat(float nx, float ny, float nz, float nw) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: physx::PxQuat, man: physx.PxQuat, stg: Blittable
            
            //PAR nat: float, man: float, stg: Value
            float pvk_in_nx = nx;
            //PAR nat: float, man: float, stg: Value
            float pvk_in_ny = ny;
            //PAR nat: float, man: float, stg: Value
            float pvk_in_nz = nz;
            //PAR nat: float, man: float, stg: Value
            float pvk_in_nw = nw;
            PxQuat toInit;
            var pvk_in_this = &toInit;
            void_physx_PxQuat_PxQuat_Ctor_float_float_float_float_(pvk_in_this, pvk_in_nx, pvk_in_ny, pvk_in_nz, pvk_in_nw);
            this = toInit;
        }
        
        //DEBUG: BlittableCtorNode physx::PxQuat::PxQuat - 88-97
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxQuat_PxQuat_Ctor_float_physx_PxVec3_(physx.PxQuat* pvk_this, float pvk_angleRadians, physx.PxVec3* pvk_unitAxis);
        
        public PxQuat(float angleRadians, physx.PxVec3* unitAxis) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: physx::PxQuat, man: physx.PxQuat, stg: Blittable
            
            //PAR nat: float, man: float, stg: Value
            float pvk_in_angleRadians = angleRadians;
            //PAR nat: physx::PxVec3*, man: physx.PxVec3*, stg: Value
            physx.PxVec3* pvk_in_unitAxis = unitAxis;
            PxQuat toInit;
            var pvk_in_this = &toInit;
            void_physx_PxQuat_PxQuat_Ctor_float_physx_PxVec3_(pvk_in_this, pvk_in_angleRadians, pvk_in_unitAxis);
            this = toInit;
        }
        
        //DEBUG: BlittableCtorNode physx::PxQuat::PxQuat - 102-104
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxQuat_PxQuat_Ctor_physx_PxQuat_(physx.PxQuat* pvk_this, physx.PxQuat* pvk_v);
        
        public PxQuat(physx.PxQuat* v) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: physx::PxQuat, man: physx.PxQuat, stg: Blittable
            
            //PAR nat: physx::PxQuat*, man: physx.PxQuat*, stg: Value
            physx.PxQuat* pvk_in_v = v;
            PxQuat toInit;
            var pvk_in_this = &toInit;
            void_physx_PxQuat_PxQuat_Ctor_physx_PxQuat_(pvk_in_this, pvk_in_v);
            this = toInit;
        }
        
        //DEBUG: BlittableCtorNode physx::PxQuat::PxQuat - 111
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxQuat_PxQuat_Ctor_physx_PxMat33_(physx.PxQuat* pvk_this, physx.PxMat33* pvk_m);
        
        public PxQuat(physx.PxMat33* m) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: physx::PxQuat, man: physx.PxQuat, stg: Blittable
            
            //PAR nat: physx::PxMat33*, man: physx.PxMat33*, stg: Value
            physx.PxMat33* pvk_in_m = m;
            PxQuat toInit;
            var pvk_in_this = &toInit;
            void_physx_PxQuat_PxQuat_Ctor_physx_PxMat33_(pvk_in_this, pvk_in_m);
            this = toInit;
        }
        
        //DEBUG: MethodNode physx::PxQuat::isIdentity - 116-119
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern bool bool_const_physx_PxQuat_isIdentity(physx.PxQuat* pvk_this);
        
        public bool isIdentity() {
            //RET nat: bool, man: bool, stg: Value, ret: True
            //PAR nat: physx::PxQuat, man: physx.PxQuat, stg: Blittable
            
            fixed (PxQuat* pvk_in_this = &this){
                return bool_const_physx_PxQuat_isIdentity(pvk_in_this);
            }
        }
        
        //DEBUG: MethodNode physx::PxQuat::isFinite - 124-127
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern bool bool_const_physx_PxQuat_isFinite(physx.PxQuat* pvk_this);
        
        public bool isFinite() {
            //RET nat: bool, man: bool, stg: Value, ret: True
            //PAR nat: physx::PxQuat, man: physx.PxQuat, stg: Blittable
            
            fixed (PxQuat* pvk_in_this = &this){
                return bool_const_physx_PxQuat_isFinite(pvk_in_this);
            }
        }
        
        //DEBUG: MethodNode physx::PxQuat::isUnit - 132-136
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern bool bool_const_physx_PxQuat_isUnit(physx.PxQuat* pvk_this);
        
        public bool isUnit() {
            //RET nat: bool, man: bool, stg: Value, ret: True
            //PAR nat: physx::PxQuat, man: physx.PxQuat, stg: Blittable
            
            fixed (PxQuat* pvk_in_this = &this){
                return bool_const_physx_PxQuat_isUnit(pvk_in_this);
            }
        }
        
        //DEBUG: MethodNode physx::PxQuat::isSane - 142-146
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern bool bool_const_physx_PxQuat_isSane(physx.PxQuat* pvk_this);
        
        public bool isSane() {
            //RET nat: bool, man: bool, stg: Value, ret: True
            //PAR nat: physx::PxQuat, man: physx.PxQuat, stg: Blittable
            
            fixed (PxQuat* pvk_in_this = &this){
                return bool_const_physx_PxQuat_isSane(pvk_in_this);
            }
        }
        
        //DEBUG: MethodNode physx::PxQuat::operator== - 151-154
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern bool bool_const_physx_PxQuat_operator_EqualEqual_physx_PxQuat_(physx.PxQuat* pvk_lhs, physx.PxQuat* pvk_q);
        
        public static bool operator==(physx.PxQuat lhs, physx.PxQuat* q) {
            //RET nat: bool, man: bool, stg: Value, ret: True
            //PAR nat: physx::PxQuat, man: physx.PxQuat, stg: Blittable
            physx.PxQuat* pvk_in_lhs = &lhs;
            //PAR nat: physx::PxQuat*, man: physx.PxQuat*, stg: Value
            physx.PxQuat* pvk_in_q = q;
            return bool_const_physx_PxQuat_operator_EqualEqual_physx_PxQuat_(pvk_in_lhs, pvk_in_q);
        }
        public static bool operator!=(physx.PxQuat lhs, physx.PxQuat* q){return !(lhs==q);} // Generated Matching Operator
        
        //DEBUG: MethodNode physx::PxQuat::toRadiansAndUnitAxis - 159-174
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_const_physx_PxQuat_toRadiansAndUnitAxis_float_physx_PxVec3_(physx.PxQuat* pvk_this, float* pvk_angle, physx.PxVec3* pvk_axis);
        
        public void toRadiansAndUnitAxis(float* angle, physx.PxVec3* axis) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: physx::PxQuat, man: physx.PxQuat, stg: Blittable
            
            //PAR nat: float*, man: float*, stg: Value
            float* pvk_in_angle = angle;
            //PAR nat: physx::PxVec3*, man: physx.PxVec3*, stg: Value
            physx.PxVec3* pvk_in_axis = axis;
            fixed (PxQuat* pvk_in_this = &this){
                void_const_physx_PxQuat_toRadiansAndUnitAxis_float_physx_PxVec3_(pvk_in_this, pvk_in_angle, pvk_in_axis);
            }
        }
        
        //DEBUG: MethodNode physx::PxQuat::getAngle - 181-184
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern float float_const_physx_PxQuat_getAngle(physx.PxQuat* pvk_this);
        
        public float getAngle() {
            //RET nat: float, man: float, stg: Value, ret: True
            //PAR nat: physx::PxQuat, man: physx.PxQuat, stg: Blittable
            
            fixed (PxQuat* pvk_in_this = &this){
                return float_const_physx_PxQuat_getAngle(pvk_in_this);
            }
        }
        
        //DEBUG: MethodNode physx::PxQuat::getAngle - 191-194
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern float float_const_physx_PxQuat_getAngle_physx_PxQuat_(physx.PxQuat* pvk_this, physx.PxQuat* pvk_q);
        
        public float getAngle(physx.PxQuat* q) {
            //RET nat: float, man: float, stg: Value, ret: True
            //PAR nat: physx::PxQuat, man: physx.PxQuat, stg: Blittable
            
            //PAR nat: physx::PxQuat*, man: physx.PxQuat*, stg: Value
            physx.PxQuat* pvk_in_q = q;
            fixed (PxQuat* pvk_in_this = &this){
                return float_const_physx_PxQuat_getAngle_physx_PxQuat_(pvk_in_this, pvk_in_q);
            }
        }
        
        //DEBUG: MethodNode physx::PxQuat::magnitudeSquared - 199-202
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern float float_const_physx_PxQuat_magnitudeSquared(physx.PxQuat* pvk_this);
        
        public float magnitudeSquared() {
            //RET nat: float, man: float, stg: Value, ret: True
            //PAR nat: physx::PxQuat, man: physx.PxQuat, stg: Blittable
            
            fixed (PxQuat* pvk_in_this = &this){
                return float_const_physx_PxQuat_magnitudeSquared(pvk_in_this);
            }
        }
        
        //DEBUG: MethodNode physx::PxQuat::dot - 207-210
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern float float_const_physx_PxQuat_dot_physx_PxQuat_(physx.PxQuat* pvk_this, physx.PxQuat* pvk_v);
        
        public float dot(physx.PxQuat* v) {
            //RET nat: float, man: float, stg: Value, ret: True
            //PAR nat: physx::PxQuat, man: physx.PxQuat, stg: Blittable
            
            //PAR nat: physx::PxQuat*, man: physx.PxQuat*, stg: Value
            physx.PxQuat* pvk_in_v = v;
            fixed (PxQuat* pvk_in_this = &this){
                return float_const_physx_PxQuat_dot_physx_PxQuat_(pvk_in_this, pvk_in_v);
            }
        }
        
        //DEBUG: MethodNode physx::PxQuat::getNormalized - 212-216
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void physx_PxQuat_const_physx_PxQuat_getNormalized(physx.PxQuat* RetRef, physx.PxQuat* pvk_this);
        
        public physx.PxQuat getNormalized() {
            //RET nat: physx.PxQuat, man: physx.PxQuat, stg: Blittable, ret: False
            physx.PxQuat RetRef;
            //PAR nat: physx::PxQuat, man: physx.PxQuat, stg: Blittable
            
            fixed (PxQuat* pvk_in_this = &this){
                physx_PxQuat_const_physx_PxQuat_getNormalized(&RetRef, pvk_in_this);
            }
            return RetRef;
        }
        
        //DEBUG: MethodNode physx::PxQuat::magnitude - 218-221
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern float float_const_physx_PxQuat_magnitude(physx.PxQuat* pvk_this);
        
        public float magnitude() {
            //RET nat: float, man: float, stg: Value, ret: True
            //PAR nat: physx::PxQuat, man: physx.PxQuat, stg: Blittable
            
            fixed (PxQuat* pvk_in_this = &this){
                return float_const_physx_PxQuat_magnitude(pvk_in_this);
            }
        }
        
        //DEBUG: MethodNode physx::PxQuat::normalize - 227-240
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern float float_physx_PxQuat_normalize(physx.PxQuat* pvk_this);
        
        public float normalize() {
            //RET nat: float, man: float, stg: Value, ret: True
            //PAR nat: physx::PxQuat, man: physx.PxQuat, stg: Blittable
            
            fixed (PxQuat* pvk_in_this = &this){
                return float_physx_PxQuat_normalize(pvk_in_this);
            }
        }
        
        //DEBUG: MethodNode physx::PxQuat::getConjugate - 247-250
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void physx_PxQuat_const_physx_PxQuat_getConjugate(physx.PxQuat* RetRef, physx.PxQuat* pvk_this);
        
        public physx.PxQuat getConjugate() {
            //RET nat: physx.PxQuat, man: physx.PxQuat, stg: Blittable, ret: False
            physx.PxQuat RetRef;
            //PAR nat: physx::PxQuat, man: physx.PxQuat, stg: Blittable
            
            fixed (PxQuat* pvk_in_this = &this){
                physx_PxQuat_const_physx_PxQuat_getConjugate(&RetRef, pvk_in_this);
            }
            return RetRef;
        }
        
        //DEBUG: MethodNode physx::PxQuat::getImaginaryPart - 255-258
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void physx_PxVec3_const_physx_PxQuat_getImaginaryPart(physx.PxVec3* RetRef, physx.PxQuat* pvk_this);
        
        public physx.PxVec3 getImaginaryPart() {
            //RET nat: physx.PxVec3, man: physx.PxVec3, stg: Blittable, ret: False
            physx.PxVec3 RetRef;
            //PAR nat: physx::PxQuat, man: physx.PxQuat, stg: Blittable
            
            fixed (PxQuat* pvk_in_this = &this){
                physx_PxVec3_const_physx_PxQuat_getImaginaryPart(&RetRef, pvk_in_this);
            }
            return RetRef;
        }
        
        //DEBUG: MethodNode physx::PxQuat::getBasisVector0 - 261-266
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void physx_PxVec3_const_physx_PxQuat_getBasisVector0(physx.PxVec3* RetRef, physx.PxQuat* pvk_this);
        
        public physx.PxVec3 getBasisVector0() {
            //RET nat: physx.PxVec3, man: physx.PxVec3, stg: Blittable, ret: False
            physx.PxVec3 RetRef;
            //PAR nat: physx::PxQuat, man: physx.PxQuat, stg: Blittable
            
            fixed (PxQuat* pvk_in_this = &this){
                physx_PxVec3_const_physx_PxQuat_getBasisVector0(&RetRef, pvk_in_this);
            }
            return RetRef;
        }
        
        //DEBUG: MethodNode physx::PxQuat::getBasisVector1 - 269-274
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void physx_PxVec3_const_physx_PxQuat_getBasisVector1(physx.PxVec3* RetRef, physx.PxQuat* pvk_this);
        
        public physx.PxVec3 getBasisVector1() {
            //RET nat: physx.PxVec3, man: physx.PxVec3, stg: Blittable, ret: False
            physx.PxVec3 RetRef;
            //PAR nat: physx::PxQuat, man: physx.PxQuat, stg: Blittable
            
            fixed (PxQuat* pvk_in_this = &this){
                physx_PxVec3_const_physx_PxQuat_getBasisVector1(&RetRef, pvk_in_this);
            }
            return RetRef;
        }
        
        //DEBUG: MethodNode physx::PxQuat::getBasisVector2 - 277-282
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void physx_PxVec3_const_physx_PxQuat_getBasisVector2(physx.PxVec3* RetRef, physx.PxQuat* pvk_this);
        
        public physx.PxVec3 getBasisVector2() {
            //RET nat: physx.PxVec3, man: physx.PxVec3, stg: Blittable, ret: False
            physx.PxVec3 RetRef;
            //PAR nat: physx::PxQuat, man: physx.PxQuat, stg: Blittable
            
            fixed (PxQuat* pvk_in_this = &this){
                physx_PxVec3_const_physx_PxQuat_getBasisVector2(&RetRef, pvk_in_this);
            }
            return RetRef;
        }
        
        //DEBUG: MethodNode physx::PxQuat::rotate - 287-296
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void physx_PxVec3_const_physx_PxQuat_rotate_physx_PxVec3_(physx.PxVec3* RetRef, physx.PxQuat* pvk_this, physx.PxVec3* pvk_v);
        
        public physx.PxVec3 rotate(physx.PxVec3* v) {
            //RET nat: physx.PxVec3, man: physx.PxVec3, stg: Blittable, ret: False
            physx.PxVec3 RetRef;
            //PAR nat: physx::PxQuat, man: physx.PxQuat, stg: Blittable
            
            //PAR nat: physx::PxVec3*, man: physx.PxVec3*, stg: Value
            physx.PxVec3* pvk_in_v = v;
            fixed (PxQuat* pvk_in_this = &this){
                physx_PxVec3_const_physx_PxQuat_rotate_physx_PxVec3_(&RetRef, pvk_in_this, pvk_in_v);
            }
            return RetRef;
        }
        
        //DEBUG: MethodNode physx::PxQuat::rotateInv - 301-310
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void physx_PxVec3_const_physx_PxQuat_rotateInv_physx_PxVec3_(physx.PxVec3* RetRef, physx.PxQuat* pvk_this, physx.PxVec3* pvk_v);
        
        public physx.PxVec3 rotateInv(physx.PxVec3* v) {
            //RET nat: physx.PxVec3, man: physx.PxVec3, stg: Blittable, ret: False
            physx.PxVec3 RetRef;
            //PAR nat: physx::PxQuat, man: physx.PxQuat, stg: Blittable
            
            //PAR nat: physx::PxVec3*, man: physx.PxVec3*, stg: Value
            physx.PxVec3* pvk_in_v = v;
            fixed (PxQuat* pvk_in_this = &this){
                physx_PxVec3_const_physx_PxQuat_rotateInv_physx_PxVec3_(&RetRef, pvk_in_this, pvk_in_v);
            }
            return RetRef;
        }
        
        //DEBUG: MethodNode physx::PxQuat::operator= - 315-322
        //ERRORS OCCURED IN physx::PxQuat::operator=
        //Unbindable Operator: Equal
        
        //DEBUG: MethodNode physx::PxQuat::operator*= - 324-336
        //ERRORS OCCURED IN physx::PxQuat::operator*=
        //Unbindable Operator: StarEqual
        
        //DEBUG: MethodNode physx::PxQuat::operator+= - 338-345
        //ERRORS OCCURED IN physx::PxQuat::operator+=
        //Unbindable Operator: PlusEqual
        
        //DEBUG: MethodNode physx::PxQuat::operator-= - 347-354
        //ERRORS OCCURED IN physx::PxQuat::operator-=
        //Unbindable Operator: MinusEqual
        
        //DEBUG: MethodNode physx::PxQuat::operator*= - 356-363
        //ERRORS OCCURED IN physx::PxQuat::operator*=
        //Unbindable Operator: StarEqual
        
        //DEBUG: MethodNode physx::PxQuat::operator* - 366-370
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void physx_PxQuat_const_physx_PxQuat_operator_Star_physx_PxQuat_(physx.PxQuat* RetRef, physx.PxQuat* pvk_lhs, physx.PxQuat* pvk_q);
        
        public static physx.PxQuat operator*(physx.PxQuat lhs, physx.PxQuat* q) {
            //RET nat: physx.PxQuat, man: physx.PxQuat, stg: Blittable, ret: False
            physx.PxQuat RetRef;
            //PAR nat: physx::PxQuat, man: physx.PxQuat, stg: Blittable
            physx.PxQuat* pvk_in_lhs = &lhs;
            //PAR nat: physx::PxQuat*, man: physx.PxQuat*, stg: Value
            physx.PxQuat* pvk_in_q = q;
            physx_PxQuat_const_physx_PxQuat_operator_Star_physx_PxQuat_(&RetRef, pvk_in_lhs, pvk_in_q);
            return RetRef;
        }
        
        //DEBUG: MethodNode physx::PxQuat::operator+ - 373-376
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void physx_PxQuat_const_physx_PxQuat_operator_Plus_physx_PxQuat_(physx.PxQuat* RetRef, physx.PxQuat* pvk_lhs, physx.PxQuat* pvk_q);
        
        public static physx.PxQuat operator+(physx.PxQuat lhs, physx.PxQuat* q) {
            //RET nat: physx.PxQuat, man: physx.PxQuat, stg: Blittable, ret: False
            physx.PxQuat RetRef;
            //PAR nat: physx::PxQuat, man: physx.PxQuat, stg: Blittable
            physx.PxQuat* pvk_in_lhs = &lhs;
            //PAR nat: physx::PxQuat*, man: physx.PxQuat*, stg: Value
            physx.PxQuat* pvk_in_q = q;
            physx_PxQuat_const_physx_PxQuat_operator_Plus_physx_PxQuat_(&RetRef, pvk_in_lhs, pvk_in_q);
            return RetRef;
        }
        
        //DEBUG: MethodNode physx::PxQuat::operator- - 379-382
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void physx_PxQuat_const_physx_PxQuat_operator_Minus(physx.PxQuat* RetRef, physx.PxQuat* pvk_lhs);
        
        public static physx.PxQuat operator-(physx.PxQuat lhs) {
            //RET nat: physx.PxQuat, man: physx.PxQuat, stg: Blittable, ret: False
            physx.PxQuat RetRef;
            //PAR nat: physx::PxQuat, man: physx.PxQuat, stg: Blittable
            physx.PxQuat* pvk_in_lhs = &lhs;
            physx_PxQuat_const_physx_PxQuat_operator_Minus(&RetRef, pvk_in_lhs);
            return RetRef;
        }
        
        //DEBUG: MethodNode physx::PxQuat::operator- - 384-387
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void physx_PxQuat_const_physx_PxQuat_operator_Minus_physx_PxQuat_(physx.PxQuat* RetRef, physx.PxQuat* pvk_lhs, physx.PxQuat* pvk_q);
        
        public static physx.PxQuat operator-(physx.PxQuat lhs, physx.PxQuat* q) {
            //RET nat: physx.PxQuat, man: physx.PxQuat, stg: Blittable, ret: False
            physx.PxQuat RetRef;
            //PAR nat: physx::PxQuat, man: physx.PxQuat, stg: Blittable
            physx.PxQuat* pvk_in_lhs = &lhs;
            //PAR nat: physx::PxQuat*, man: physx.PxQuat*, stg: Value
            physx.PxQuat* pvk_in_q = q;
            physx_PxQuat_const_physx_PxQuat_operator_Minus_physx_PxQuat_(&RetRef, pvk_in_lhs, pvk_in_q);
            return RetRef;
        }
        
        //DEBUG: MethodNode physx::PxQuat::operator* - 389-392
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void physx_PxQuat_const_physx_PxQuat_operator_Star_float_(physx.PxQuat* RetRef, physx.PxQuat* pvk_lhs, float pvk_r);
        
        public static physx.PxQuat operator*(physx.PxQuat lhs, float r) {
            //RET nat: physx.PxQuat, man: physx.PxQuat, stg: Blittable, ret: False
            physx.PxQuat RetRef;
            //PAR nat: physx::PxQuat, man: physx.PxQuat, stg: Blittable
            physx.PxQuat* pvk_in_lhs = &lhs;
            //PAR nat: float, man: float, stg: Value
            float pvk_in_r = r;
            physx_PxQuat_const_physx_PxQuat_operator_Star_float_(&RetRef, pvk_in_lhs, pvk_in_r);
            return RetRef;
        }
        
        //DEBUG: MethodNode physx::PxQuat::~PxQuat - 49
        //ERRORS OCCURED IN physx::PxQuat::~PxQuat
        //Implicit Function/Method
        //Destructor
    }
    
}
