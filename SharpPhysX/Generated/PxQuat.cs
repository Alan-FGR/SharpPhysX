//Generated by MinBinder.
using System;
using System.Runtime.InteropServices;
using PxBaseFlags = System.UInt32;
using PxActorFlags = System.UInt32;

public partial struct PxQuat { // blittable


    public float x;
    public float y;
    public float z;
    public float w;

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern PxQuat C_PxQuat_PxQuat(float r);
    public unsafe PxQuat(float r){
        var _new = C_PxQuat_PxQuat(r);        
        fixed (void* ptr = &this)
          Buffer.MemoryCopy(&_new, ptr, Marshal.SizeOf(this), Marshal.SizeOf(this));    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern PxQuat C_PxQuat_PxQuat_2(float nx,float ny,float nz,float nw);
    public unsafe PxQuat(float nx,float ny,float nz,float nw){
        var _new = C_PxQuat_PxQuat_2(nx,ny,nz,nw);        
        fixed (void* ptr = &this)
          Buffer.MemoryCopy(&_new, ptr, Marshal.SizeOf(this), Marshal.SizeOf(this));    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern PxQuat C_PxQuat_PxQuat_3(float angleRadians,PxVec3 unitAxis);
    public unsafe PxQuat(float angleRadians,PxVec3 unitAxis){
        var _new = C_PxQuat_PxQuat_3(angleRadians,unitAxis);        
        fixed (void* ptr = &this)
          Buffer.MemoryCopy(&_new, ptr, Marshal.SizeOf(this), Marshal.SizeOf(this));    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern PxQuat C_PxQuat_PxQuat_4(PxQuat v);
    public unsafe PxQuat(PxQuat v){
        var _new = C_PxQuat_PxQuat_4(v);        
        fixed (void* ptr = &this)
          Buffer.MemoryCopy(&_new, ptr, Marshal.SizeOf(this), Marshal.SizeOf(this));    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern PxQuat C_PxQuat_PxQuat_5(PxMat33 m);
    public unsafe PxQuat(PxMat33 m){
        var _new = C_PxQuat_PxQuat_5(m);        
        fixed (void* ptr = &this)
          Buffer.MemoryCopy(&_new, ptr, Marshal.SizeOf(this), Marshal.SizeOf(this));    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern bool C_CONST_PxQuat_isIdentity(PxQuat cls);
    public bool isIdentity(){
        return C_CONST_PxQuat_isIdentity(this);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern bool C_CONST_PxQuat_isFinite(PxQuat cls);
    public bool isFinite(){
        return C_CONST_PxQuat_isFinite(this);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern bool C_CONST_PxQuat_isUnit(PxQuat cls);
    public bool isUnit(){
        return C_CONST_PxQuat_isUnit(this);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern bool C_CONST_PxQuat_isSane(PxQuat cls);
    public bool isSane(){
        return C_CONST_PxQuat_isSane(this);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern bool C_CONST_PxQuat_OP_EqualEqual(PxQuat cls,PxQuat q);
    public static bool operator==(PxQuat cls,PxQuat q){
        return C_CONST_PxQuat_OP_EqualEqual(cls,q);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern float C_CONST_PxQuat_getAngle(PxQuat cls);
    public float getAngle(){
        return C_CONST_PxQuat_getAngle(this);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern float C_CONST_PxQuat_getAngle_2(PxQuat cls,PxQuat q);
    public float getAngle(PxQuat q){
        return C_CONST_PxQuat_getAngle_2(this,q);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern float C_CONST_PxQuat_magnitudeSquared(PxQuat cls);
    public float magnitudeSquared(){
        return C_CONST_PxQuat_magnitudeSquared(this);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern float C_CONST_PxQuat_dot(PxQuat cls,PxQuat v);
    public float dot(PxQuat v){
        return C_CONST_PxQuat_dot(this,v);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern PxQuat C_CONST_PxQuat_getNormalized(PxQuat cls);
    public PxQuat getNormalized(){
        return C_CONST_PxQuat_getNormalized(this);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern float C_CONST_PxQuat_magnitude(PxQuat cls);
    public float magnitude(){
        return C_CONST_PxQuat_magnitude(this);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern float C_PxQuat_normalize(PxQuat cls);
    public float normalize(){
        return C_PxQuat_normalize(this);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern PxQuat C_CONST_PxQuat_getConjugate(PxQuat cls);
    public PxQuat getConjugate(){
        return C_CONST_PxQuat_getConjugate(this);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern PxVec3 C_CONST_PxQuat_getImaginaryPart(PxQuat cls);
    public PxVec3 getImaginaryPart(){
        return C_CONST_PxQuat_getImaginaryPart(this);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern PxVec3 C_CONST_PxQuat_getBasisVector0(PxQuat cls);
    public PxVec3 getBasisVector0(){
        return C_CONST_PxQuat_getBasisVector0(this);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern PxVec3 C_CONST_PxQuat_getBasisVector1(PxQuat cls);
    public PxVec3 getBasisVector1(){
        return C_CONST_PxQuat_getBasisVector1(this);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern PxVec3 C_CONST_PxQuat_getBasisVector2(PxQuat cls);
    public PxVec3 getBasisVector2(){
        return C_CONST_PxQuat_getBasisVector2(this);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern PxVec3 C_CONST_PxQuat_rotate(PxQuat cls,PxVec3 v);
    public PxVec3 rotate(PxVec3 v){
        return C_CONST_PxQuat_rotate(this,v);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern PxVec3 C_CONST_PxQuat_rotateInv(PxQuat cls,PxVec3 v);
    public PxVec3 rotateInv(PxVec3 v){
        return C_CONST_PxQuat_rotateInv(this,v);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern PxQuat C_CONST_PxQuat_OP_Star(PxQuat cls,PxQuat q);
    public static PxQuat operator*(PxQuat cls,PxQuat q){
        return C_CONST_PxQuat_OP_Star(cls,q);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern PxQuat C_CONST_PxQuat_OP_Plus(PxQuat cls,PxQuat q);
    public static PxQuat operator+(PxQuat cls,PxQuat q){
        return C_CONST_PxQuat_OP_Plus(cls,q);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern PxQuat C_CONST_PxQuat_OP_Minus(PxQuat cls);
    public static PxQuat Minus(PxQuat cls){
        return C_CONST_PxQuat_OP_Minus(cls);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern PxQuat C_CONST_PxQuat_OP_Minus_2(PxQuat cls,PxQuat q);
    public static PxQuat operator-(PxQuat cls,PxQuat q){
        return C_CONST_PxQuat_OP_Minus_2(cls,q);    
    }

    [DllImport(PhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
    static extern PxQuat C_CONST_PxQuat_OP_Star_2(PxQuat cls,float r);
    public static PxQuat Star(PxQuat cls,float r){
        return C_CONST_PxQuat_OP_Star_2(cls,r);    
    }


}
