// Generated by minBND 5.1.78.26 - Â© github.com/Alan-FGR
//DEBUG: UnitNode  - 0
//Unit PxMassProperties
using System;
using System.Runtime.InteropServices;

//DEBUG: NamespaceNode physx - 52-330
public static unsafe partial class physx {
    //DEBUG: ClassNode physx::PxMassProperties - 63-327
    //Interface use count: 0
    public unsafe partial struct PxMassPropertiesPtr{
        private System.IntPtr nativePtr_;
        
    //DEBUG: NewerFreerNode physx::PxMassProperties - 63-327
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void Freer_physx_PxMassPropertiesPtr(PxMassPropertiesPtr ptr);
        
        public static void Free(PxMassPropertiesPtr ptr){
            Freer_physx_PxMassPropertiesPtr(ptr);
        }
        public void Free(){
            Freer_physx_PxMassPropertiesPtr(this);
        }
        
        //DEBUG: PtrStructCtorNode physx::PxMassProperties::PxMassProperties - 69
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxMassPropertiesPtr Ctor_physx_PxMassPropertiesPtr_();
        
        public static physx.PxMassPropertiesPtr New() {
            //RET nat: physx.PxMassPropertiesPtr, man: physx.PxMassPropertiesPtr, stg: PtrStruct, ret: True
            return Ctor_physx_PxMassPropertiesPtr_();
        }
        
        //DEBUG: PtrStructCtorNode physx::PxMassProperties::PxMassProperties - 74
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxMassPropertiesPtr Ctor_physx_PxMassPropertiesPtr_float_physx_PxMat33_physx_PxVec3_(float pvk_m, physx.PxMat33* pvk_inertiaT, physx.PxVec3* pvk_com);
        
        public static physx.PxMassPropertiesPtr New(float m, physx.PxMat33* inertiaT, physx.PxVec3* com) {
            //RET nat: physx.PxMassPropertiesPtr, man: physx.PxMassPropertiesPtr, stg: PtrStruct, ret: True
            //PAR nat: float, man: float, stg: Value
            float pvk_in_m = m;
            //PAR nat: physx::PxMat33*, man: physx.PxMat33*, stg: Value
            physx.PxMat33* pvk_in_inertiaT = inertiaT;
            //PAR nat: physx::PxVec3*, man: physx.PxVec3*, stg: Value
            physx.PxVec3* pvk_in_com = com;
            return Ctor_physx_PxMassPropertiesPtr_float_physx_PxMat33_physx_PxVec3_(pvk_in_m, pvk_in_inertiaT, pvk_in_com);
        }
        
        //DEBUG: PtrStructCtorNode physx::PxMassProperties::PxMassProperties - 83-157
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxMassPropertiesPtr Ctor_physx_PxMassPropertiesPtr_physx_PxGeometryPtr(physx.PxGeometryPtr pvk_geometry);
        
        public static physx.PxMassPropertiesPtr New(physx.PxGeometryPtr geometry) {
            //RET nat: physx.PxMassPropertiesPtr, man: physx.PxMassPropertiesPtr, stg: PtrStruct, ret: True
            //PAR nat: PxGeometryPtr, man: physx.PxGeometryPtr, stg: PtrStruct
            physx.PxGeometryPtr pvk_in_geometry = geometry;
            return Ctor_physx_PxMassPropertiesPtr_physx_PxGeometryPtr(pvk_in_geometry);
        }
        
        //DEBUG: PtrStructCtorNode physx::PxMassProperties::PxMassProperties - 63
        //ERRORS OCCURED IN physx::PxMassProperties::PxMassProperties
        //Implicit Function/Method
        
        //DEBUG: PtrStructCtorNode physx::PxMassProperties::PxMassProperties - 63
        //ERRORS OCCURED IN physx::PxMassProperties::PxMassProperties
        //Implicit Function/Method
        
        //DEBUG: GetterSetterNode physx::PxMassProperties - 63-327
        //Field: inertiaTensor - 324-324
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void PxMassProperties_GET_inertiaTensor(PxMassPropertiesPtr cls, physx.PxMat33* GetRetRef);
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void PxMassProperties_SET_inertiaTensor(PxMassPropertiesPtr cls, physx.PxMat33 value);
        
        public physx.PxMat33 inertiaTensor {
            get { physx.PxMat33 GetRetRef; PxMassProperties_GET_inertiaTensor(this, &GetRetRef); return GetRetRef; }
            set => PxMassProperties_SET_inertiaTensor(this, value);
        }
        
        //DEBUG: GetterSetterNode physx::PxMassProperties - 63-327
        //Field: centerOfMass - 325-325
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void PxMassProperties_GET_centerOfMass(PxMassPropertiesPtr cls, physx.PxVec3* GetRetRef);
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void PxMassProperties_SET_centerOfMass(PxMassPropertiesPtr cls, physx.PxVec3 value);
        
        public physx.PxVec3 centerOfMass {
            get { physx.PxVec3 GetRetRef; PxMassProperties_GET_centerOfMass(this, &GetRetRef); return GetRetRef; }
            set => PxMassProperties_SET_centerOfMass(this, value);
        }
        
        //DEBUG: GetterSetterNode physx::PxMassProperties - 63-327
        //Field: mass - 326-326
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern float PxMassProperties_GET_mass(PxMassPropertiesPtr cls);
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void PxMassProperties_SET_mass(PxMassPropertiesPtr cls, float value);
        
        public float mass {
            get => PxMassProperties_GET_mass(this);
            set => PxMassProperties_SET_mass(this, value);
        }
        
        //DEBUG: MethodNode physx::PxMassProperties::operator* - 165-170
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxMassPropertiesPtr physx_PxMassPropertiesPtr_const_physx_PxMassProperties_operator_Star_floatC(physx.PxMassPropertiesPtr pvk_lhs, float pvk_scale);
        
        public static physx.PxMassPropertiesPtr operator*(physx.PxMassPropertiesPtr lhs, float scale) {
            //RET nat: physx.PxMassPropertiesPtr, man: physx.PxMassPropertiesPtr, stg: PtrStruct, ret: True
            //PAR nat: PxMassPropertiesPtr, man: physx.PxMassPropertiesPtr, stg: PtrStruct
            physx.PxMassPropertiesPtr pvk_in_lhs = lhs;
            //PAR nat: float, man: float, stg: Value
            float pvk_in_scale = scale;
            return physx_PxMassPropertiesPtr_const_physx_PxMassProperties_operator_Star_floatC(pvk_in_lhs, pvk_in_scale);
        }
        
        //DEBUG: MethodNode physx::PxMassProperties::translate - 177-186
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxMassProperties_translate_physx_PxVec3_(physx.PxMassPropertiesPtr pvk_this, physx.PxVec3* pvk_t);
        
        public void translate(physx.PxVec3* t) {
            //RET nat: void, man: void, stg: Value, ret: True
            //PAR nat: PxMassPropertiesPtr, man: physx.PxMassPropertiesPtr, stg: PtrStruct
            physx.PxMassPropertiesPtr pvk_in_this = this;
            //PAR nat: physx::PxVec3*, man: physx.PxVec3*, stg: Value
            physx.PxVec3* pvk_in_t = t;
            void_physx_PxMassProperties_translate_physx_PxVec3_(pvk_in_this, pvk_in_t);
        }
        
        //DEBUG: MethodNode physx::PxMassProperties::operator= - 63
        //ERRORS OCCURED IN physx::PxMassProperties::operator=
        //Implicit Function/Method
        //Unbindable Operator: Equal
        
        //DEBUG: MethodNode physx::PxMassProperties::~PxMassProperties - 63
        //ERRORS OCCURED IN physx::PxMassProperties::~PxMassProperties
        //Implicit Function/Method
        //Destructor
        
        //DEBUG: MethodNode physx::PxMassProperties::operator= - 63
        //ERRORS OCCURED IN physx::PxMassProperties::operator=
        //Implicit Function/Method
        //Unbindable Operator: Equal
        
        //DEBUG: FunctionNode physx::PxMassProperties::getMassSpaceInertia - 195-203
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void physx_PxVec3_physx_PxMassProperties_getMassSpaceInertia_physx_PxMat33_physx_PxQuat_(physx.PxVec3* RetRef, physx.PxMat33* pvk_inertia, physx.PxQuat* pvk_massFrame);
        
        public static physx.PxVec3 getMassSpaceInertia(physx.PxMat33* inertia, physx.PxQuat* massFrame) {
            //RET nat: physx.PxVec3, man: physx.PxVec3, stg: Blittable, ret: False
            physx.PxVec3 RetRef;
            //PAR nat: physx::PxMat33*, man: physx.PxMat33*, stg: Value
            physx.PxMat33* pvk_in_inertia = inertia;
            //PAR nat: physx::PxQuat*, man: physx.PxQuat*, stg: Value
            physx.PxQuat* pvk_in_massFrame = massFrame;
            physx_PxVec3_physx_PxMassProperties_getMassSpaceInertia_physx_PxMat33_physx_PxQuat_(&RetRef, pvk_in_inertia, pvk_in_massFrame);
            return RetRef;
        }
        
        //DEBUG: FunctionNode physx::PxMassProperties::translateInertia - 213-226
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void physx_PxMat33_physx_PxMassProperties_translateInertia_physx_PxMat33_float_physx_PxVec3_C_(physx.PxMat33* RetRef, physx.PxMat33* pvk_inertia, float pvk_mass, physx.PxVec3* pvk_t);
        
        public static physx.PxMat33 translateInertia(physx.PxMat33* inertia, float mass, physx.PxVec3* t) {
            //RET nat: physx.PxMat33, man: physx.PxMat33, stg: Blittable, ret: False
            physx.PxMat33 RetRef;
            //PAR nat: physx::PxMat33*, man: physx.PxMat33*, stg: Value
            physx.PxMat33* pvk_in_inertia = inertia;
            //PAR nat: float, man: float, stg: Value
            float pvk_in_mass = mass;
            //PAR nat: physx::PxVec3*, man: physx.PxVec3*, stg: Value
            physx.PxVec3* pvk_in_t = t;
            physx_PxMat33_physx_PxMassProperties_translateInertia_physx_PxMat33_float_physx_PxVec3_C_(&RetRef, pvk_in_inertia, pvk_in_mass, pvk_in_t);
            return RetRef;
        }
        
        //DEBUG: FunctionNode physx::PxMassProperties::rotateInertia - 235-244
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void physx_PxMat33_physx_PxMassProperties_rotateInertia_physx_PxMat33_physx_PxQuat_(physx.PxMat33* RetRef, physx.PxMat33* pvk_inertia, physx.PxQuat* pvk_q);
        
        public static physx.PxMat33 rotateInertia(physx.PxMat33* inertia, physx.PxQuat* q) {
            //RET nat: physx.PxMat33, man: physx.PxMat33, stg: Blittable, ret: False
            physx.PxMat33 RetRef;
            //PAR nat: physx::PxMat33*, man: physx.PxMat33*, stg: Value
            physx.PxMat33* pvk_in_inertia = inertia;
            //PAR nat: physx::PxQuat*, man: physx.PxQuat*, stg: Value
            physx.PxQuat* pvk_in_q = q;
            physx_PxMat33_physx_PxMassProperties_rotateInertia_physx_PxMat33_physx_PxQuat_(&RetRef, pvk_in_inertia, pvk_in_q);
            return RetRef;
        }
        
        //DEBUG: FunctionNode physx::PxMassProperties::scaleInertia - 254-281
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void physx_PxMat33_physx_PxMassProperties_scaleInertia_physx_PxMat33_physx_PxQuat_physx_PxVec3_(physx.PxMat33* RetRef, physx.PxMat33* pvk_inertia, physx.PxQuat* pvk_scaleRotation, physx.PxVec3* pvk_scale);
        
        public static physx.PxMat33 scaleInertia(physx.PxMat33* inertia, physx.PxQuat* scaleRotation, physx.PxVec3* scale) {
            //RET nat: physx.PxMat33, man: physx.PxMat33, stg: Blittable, ret: False
            physx.PxMat33 RetRef;
            //PAR nat: physx::PxMat33*, man: physx.PxMat33*, stg: Value
            physx.PxMat33* pvk_in_inertia = inertia;
            //PAR nat: physx::PxQuat*, man: physx.PxQuat*, stg: Value
            physx.PxQuat* pvk_in_scaleRotation = scaleRotation;
            //PAR nat: physx::PxVec3*, man: physx.PxVec3*, stg: Value
            physx.PxVec3* pvk_in_scale = scale;
            physx_PxMat33_physx_PxMassProperties_scaleInertia_physx_PxMat33_physx_PxQuat_physx_PxVec3_(&RetRef, pvk_in_inertia, pvk_in_scaleRotation, pvk_in_scale);
            return RetRef;
        }
        
        //DEBUG: FunctionNode physx::PxMassProperties::sum - 291-321
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxMassPropertiesPtr physx_PxMassPropertiesPtr_physx_PxMassProperties_sum_physx_PxMassPropertiesPtr_physx_PxTransform_uint_C(physx.PxMassPropertiesPtr pvk_props, physx.PxTransform* pvk_transforms, uint pvk_count);
        
        public static physx.PxMassPropertiesPtr sum_New(physx.PxMassPropertiesPtr props, physx.PxTransform* transforms, uint count) {
            //RET nat: physx.PxMassPropertiesPtr, man: physx.PxMassPropertiesPtr, stg: PtrStruct, ret: True
            //PAR nat: PxMassPropertiesPtr, man: physx.PxMassPropertiesPtr, stg: PtrStruct
            physx.PxMassPropertiesPtr pvk_in_props = props;
            //PAR nat: physx::PxTransform*, man: physx.PxTransform*, stg: Value
            physx.PxTransform* pvk_in_transforms = transforms;
            //PAR nat: unsigned int, man: uint, stg: Value
            uint pvk_in_count = count;
            return physx_PxMassPropertiesPtr_physx_PxMassProperties_sum_physx_PxMassPropertiesPtr_physx_PxTransform_uint_C(pvk_in_props, pvk_in_transforms, pvk_in_count);
        }
    }
    
}
