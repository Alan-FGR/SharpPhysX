// Generated by minBND 5.1.78.10 - Â© github.com/Alan-FGR
//Unit PxMassProperties
using System;
using System.Runtime.InteropServices;

public static unsafe partial class physx {
    public unsafe partial struct PxMassPropertiesPtr{
        private System.IntPtr nativePtr_;
        
    [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void Freer_physx_PxMassPropertiesPtr(PxMassPropertiesPtr ptr);
        
        public static void Free(PxMassPropertiesPtr ptr){
            Freer_physx_PxMassPropertiesPtr(ptr);
        }
        public void Free(){
            Freer_physx_PxMassPropertiesPtr(this);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxMassPropertiesPtr Ctor_physx_PxMassPropertiesPtr_();
        
        public static physx.PxMassPropertiesPtr New() {
            return Ctor_physx_PxMassPropertiesPtr_();
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxMassPropertiesPtr Ctor_physx_PxMassPropertiesPtr_float_physx_PxMat33Ptr_physx_PxVec3Ptr(float pvk_m, physx.PxMat33Ptr pvk_inertiaT, physx.PxVec3Ptr pvk_com);
        
        public static physx.PxMassPropertiesPtr New(float m, physx.PxMat33Ptr inertiaT, physx.PxVec3Ptr com) {
            float pvk_in_m = m;
            physx.PxMat33Ptr pvk_in_inertiaT = inertiaT;
            physx.PxVec3Ptr pvk_in_com = com;
            return Ctor_physx_PxMassPropertiesPtr_float_physx_PxMat33Ptr_physx_PxVec3Ptr(pvk_in_m, pvk_in_inertiaT, pvk_in_com);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxMassPropertiesPtr Ctor_physx_PxMassPropertiesPtr_physx_PxGeometryPtr(physx.PxGeometryPtr pvk_geometry);
        
        public static physx.PxMassPropertiesPtr New(physx.PxGeometryPtr geometry) {
            physx.PxGeometryPtr pvk_in_geometry = geometry;
            return Ctor_physx_PxMassPropertiesPtr_physx_PxGeometryPtr(pvk_in_geometry);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxMat33Ptr PxMassProperties_GET_inertiaTensor(PxMassPropertiesPtr cls);
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void PxMassProperties_SET_inertiaTensor(PxMassPropertiesPtr cls, physx.PxMat33Ptr value);
        
        public physx.PxMat33Ptr inertiaTensor {
            get => PxMassProperties_GET_inertiaTensor(this);
            set => PxMassProperties_SET_inertiaTensor(this, value);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxVec3Ptr PxMassProperties_GET_centerOfMass(PxMassPropertiesPtr cls);
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void PxMassProperties_SET_centerOfMass(PxMassPropertiesPtr cls, physx.PxVec3Ptr value);
        
        public physx.PxVec3Ptr centerOfMass {
            get => PxMassProperties_GET_centerOfMass(this);
            set => PxMassProperties_SET_centerOfMass(this, value);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern float PxMassProperties_GET_mass(PxMassPropertiesPtr cls);
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void PxMassProperties_SET_mass(PxMassPropertiesPtr cls, float value);
        
        public float mass {
            get => PxMassProperties_GET_mass(this);
            set => PxMassProperties_SET_mass(this, value);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxMassPropertiesPtr physx_PxMassPropertiesPtr_const_physx_PxMassProperties_operator_Star_floatC(physx.PxMassPropertiesPtr pvk_lhs, float pvk_scale);
        
        public static physx.PxMassPropertiesPtr operator*(physx.PxMassPropertiesPtr lhs, float scale) {
            physx.PxMassPropertiesPtr pvk_in_lhs = lhs;
            float pvk_in_scale = scale;
            return physx_PxMassPropertiesPtr_const_physx_PxMassProperties_operator_Star_floatC(pvk_in_lhs, pvk_in_scale);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern void void_physx_PxMassProperties_translate_physx_PxVec3Ptr_(physx.PxMassPropertiesPtr pvk_this, physx.PxVec3Ptr pvk_t);
        
        public void translate(physx.PxVec3Ptr t) {
            physx.PxMassPropertiesPtr pvk_in_this = this;
            physx.PxVec3Ptr pvk_in_t = t;
            void_physx_PxMassProperties_translate_physx_PxVec3Ptr_(pvk_in_this, pvk_in_t);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxVec3Ptr physx_PxVec3Ptr_physx_PxMassProperties_getMassSpaceInertia_physx_PxMat33Ptr_physx_PxQuatPtr_(physx.PxMat33Ptr pvk_inertia, physx.PxQuatPtr pvk_massFrame);
        
        public static physx.PxVec3Ptr getMassSpaceInertia_New(physx.PxMat33Ptr inertia, physx.PxQuatPtr massFrame) {
            physx.PxMat33Ptr pvk_in_inertia = inertia;
            physx.PxQuatPtr pvk_in_massFrame = massFrame;
            return physx_PxVec3Ptr_physx_PxMassProperties_getMassSpaceInertia_physx_PxMat33Ptr_physx_PxQuatPtr_(pvk_in_inertia, pvk_in_massFrame);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxMat33Ptr physx_PxMat33Ptr_physx_PxMassProperties_translateInertia_physx_PxMat33Ptr_float_physx_PxVec3Ptr_C_(physx.PxMat33Ptr pvk_inertia, float pvk_mass, physx.PxVec3Ptr pvk_t);
        
        public static physx.PxMat33Ptr translateInertia_New(physx.PxMat33Ptr inertia, float mass, physx.PxVec3Ptr t) {
            physx.PxMat33Ptr pvk_in_inertia = inertia;
            float pvk_in_mass = mass;
            physx.PxVec3Ptr pvk_in_t = t;
            return physx_PxMat33Ptr_physx_PxMassProperties_translateInertia_physx_PxMat33Ptr_float_physx_PxVec3Ptr_C_(pvk_in_inertia, pvk_in_mass, pvk_in_t);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxMat33Ptr physx_PxMat33Ptr_physx_PxMassProperties_rotateInertia_physx_PxMat33Ptr_physx_PxQuatPtr_(physx.PxMat33Ptr pvk_inertia, physx.PxQuatPtr pvk_q);
        
        public static physx.PxMat33Ptr rotateInertia_New(physx.PxMat33Ptr inertia, physx.PxQuatPtr q) {
            physx.PxMat33Ptr pvk_in_inertia = inertia;
            physx.PxQuatPtr pvk_in_q = q;
            return physx_PxMat33Ptr_physx_PxMassProperties_rotateInertia_physx_PxMat33Ptr_physx_PxQuatPtr_(pvk_in_inertia, pvk_in_q);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxMat33Ptr physx_PxMat33Ptr_physx_PxMassProperties_scaleInertia_physx_PxMat33Ptr_physx_PxQuatPtr_physx_PxVec3Ptr_(physx.PxMat33Ptr pvk_inertia, physx.PxQuatPtr pvk_scaleRotation, physx.PxVec3Ptr pvk_scale);
        
        public static physx.PxMat33Ptr scaleInertia_New(physx.PxMat33Ptr inertia, physx.PxQuatPtr scaleRotation, physx.PxVec3Ptr scale) {
            physx.PxMat33Ptr pvk_in_inertia = inertia;
            physx.PxQuatPtr pvk_in_scaleRotation = scaleRotation;
            physx.PxVec3Ptr pvk_in_scale = scale;
            return physx_PxMat33Ptr_physx_PxMassProperties_scaleInertia_physx_PxMat33Ptr_physx_PxQuatPtr_physx_PxVec3Ptr_(pvk_in_inertia, pvk_in_scaleRotation, pvk_in_scale);
        }
        
        [DllImport(SharpPhysX.Lib, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl)]
        static extern physx.PxMassPropertiesPtr physx_PxMassPropertiesPtr_physx_PxMassProperties_sum_physx_PxMassPropertiesPtr_physx_PxTransformPtr_uint_C(physx.PxMassPropertiesPtr pvk_props, physx.PxTransformPtr pvk_transforms, uint pvk_count);
        
        public static physx.PxMassPropertiesPtr sum_New(physx.PxMassPropertiesPtr props, physx.PxTransformPtr transforms, uint count) {
            physx.PxMassPropertiesPtr pvk_in_props = props;
            physx.PxTransformPtr pvk_in_transforms = transforms;
            uint pvk_in_count = count;
            return physx_PxMassPropertiesPtr_physx_PxMassProperties_sum_physx_PxMassPropertiesPtr_physx_PxTransformPtr_uint_C(pvk_in_props, pvk_in_transforms, pvk_in_count);
        }
    }
    
}
