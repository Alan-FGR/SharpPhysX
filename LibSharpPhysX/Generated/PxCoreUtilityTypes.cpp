// Generated by minBND 5.1.94.90 - Â© github.com/Alan-FGR

ES void Freer_physx_PxPadding_intVal3Ptr(PxPadding_intVal3Ptr ptr){
    delete ptr;
}

ES PxPadding_intVal3Ptr Ctor_PxPadding_intVal3Ptr_(){
    auto ret = *(new std::remove_pointer<PxPadding_intVal3Ptr>::type());
    auto heap = new char[sizeof PxPadding<3>];
    std::memcpy(heap, &ret, sizeof PxPadding<3>);
    return (PxPadding_intVal3Ptr) heap;
}

ES void Freer_physx_PxStridedDataPtr(PxStridedDataPtr ptr){
    delete ptr;
}

ES PxStridedDataPtr Ctor_PxStridedDataPtr_(){
    auto ret = *(new std::remove_pointer<PxStridedDataPtr>::type());
    auto heap = new char[sizeof PxStridedData];
    std::memcpy(heap, &ret, sizeof PxStridedData);
    return (PxStridedDataPtr) heap;
}

ES PxU32 PxStridedDataPtr_GET_stride(PxStridedDataPtr cls) {return (PxU32)cls->stride;}
ES void PxStridedDataPtr_SET_stride(PxStridedDataPtr cls, PxU32 value) {cls->stride = value;}

ES void* PxStridedDataPtr_GET_data(PxStridedDataPtr cls) {return (void*)cls->data;}
ES void PxStridedDataPtr_SET_data(PxStridedDataPtr cls, void* value) {cls->data = value;}

ES void Freer_physx_PxBoundedDataPtr(PxBoundedDataPtr ptr){
    delete ptr;
}

ES PxBoundedDataPtr Ctor_PxBoundedDataPtr_(){
    auto ret = *(new std::remove_pointer<PxBoundedDataPtr>::type());
    auto heap = new char[sizeof PxBoundedData];
    std::memcpy(heap, &ret, sizeof PxBoundedData);
    return (PxBoundedDataPtr) heap;
}

ES PxU32 PxBoundedDataPtr_GET_count(PxBoundedDataPtr cls) {return (PxU32)cls->count;}
ES void PxBoundedDataPtr_SET_count(PxBoundedDataPtr cls, PxU32 value) {cls->count = value;}

