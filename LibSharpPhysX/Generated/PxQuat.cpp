// Generated by minBND 5.1.81.43 - Â© github.com/Alan-FGR
ES void Default_physx_PxQuat_(physx::PxQuat* RetRef){
    *RetRef = *RetRef = physx::PxQuat();
}

ES void void_physx_PxQuat_PxQuat_Ctor_physx_PxIDENTITY_(physx::PxQuat* wrp_this, physx::PxIDENTITY wrp_r){
    *wrp_this = physx::PxQuat::PxQuat(wrp_r);
}

ES void void_physx_PxQuat_PxQuat_Ctor_float_(physx::PxQuat* wrp_this, float wrp_r){
    *wrp_this = physx::PxQuat::PxQuat(wrp_r);
}

ES void void_physx_PxQuat_PxQuat_Ctor_float_float_float_float_(physx::PxQuat* wrp_this, float wrp_nx, float wrp_ny, float wrp_nz, float wrp_nw){
    *wrp_this = physx::PxQuat::PxQuat(wrp_nx, wrp_ny, wrp_nz, wrp_nw);
}

ES void void_physx_PxQuat_PxQuat_Ctor_float_physx_PxVec3_(physx::PxQuat* wrp_this, float wrp_angleRadians, physx::PxVec3* wrp_unitAxis){
    *wrp_this = physx::PxQuat::PxQuat(wrp_angleRadians, *wrp_unitAxis);
}

ES void void_physx_PxQuat_PxQuat_Ctor_physx_PxQuat_(physx::PxQuat* wrp_this, physx::PxQuat* wrp_v){
    *wrp_this = physx::PxQuat::PxQuat(*wrp_v);
}

ES void void_physx_PxQuat_PxQuat_Ctor_physx_PxMat33_(physx::PxQuat* wrp_this, physx::PxMat33* wrp_m){
    *wrp_this = physx::PxQuat::PxQuat(*wrp_m);
}

ES bool bool_const_physx_PxQuat_isIdentity(physx::PxQuat* wrp_this){
    return (bool) wrp_this->isIdentity();
}

ES bool bool_const_physx_PxQuat_isFinite(physx::PxQuat* wrp_this){
    return (bool) wrp_this->isFinite();
}

ES bool bool_const_physx_PxQuat_isUnit(physx::PxQuat* wrp_this){
    return (bool) wrp_this->isUnit();
}

ES bool bool_const_physx_PxQuat_isSane(physx::PxQuat* wrp_this){
    return (bool) wrp_this->isSane();
}

ES bool bool_const_physx_PxQuat_operator_EqualEqual_physx_PxQuat_(physx::PxQuat* wrp_lhs, physx::PxQuat* wrp_q){
    return (bool) wrp_lhs->operator==(*wrp_q);
}

ES void void_const_physx_PxQuat_toRadiansAndUnitAxis_float_physx_PxVec3_(physx::PxQuat* wrp_this, float* wrp_angle, physx::PxVec3* wrp_axis){
    wrp_this->toRadiansAndUnitAxis(*wrp_angle, *wrp_axis);
}

ES float float_const_physx_PxQuat_getAngle(physx::PxQuat* wrp_this){
    return (float) wrp_this->getAngle();
}

ES float float_const_physx_PxQuat_getAngle_physx_PxQuat_(physx::PxQuat* wrp_this, physx::PxQuat* wrp_q){
    return (float) wrp_this->getAngle(*wrp_q);
}

ES float float_const_physx_PxQuat_magnitudeSquared(physx::PxQuat* wrp_this){
    return (float) wrp_this->magnitudeSquared();
}

ES float float_const_physx_PxQuat_dot_physx_PxQuat_(physx::PxQuat* wrp_this, physx::PxQuat* wrp_v){
    return (float) wrp_this->dot(*wrp_v);
}

ES void physx_PxQuat_const_physx_PxQuat_getNormalized(physx::PxQuat* RetRef, physx::PxQuat* wrp_this){
    *RetRef = wrp_this->getNormalized();
}

ES float float_const_physx_PxQuat_magnitude(physx::PxQuat* wrp_this){
    return (float) wrp_this->magnitude();
}

ES float float_physx_PxQuat_normalize(physx::PxQuat* wrp_this){
    return (float) wrp_this->normalize();
}

ES void physx_PxQuat_const_physx_PxQuat_getConjugate(physx::PxQuat* RetRef, physx::PxQuat* wrp_this){
    *RetRef = wrp_this->getConjugate();
}

ES void physx_PxVec3_const_physx_PxQuat_getImaginaryPart(physx::PxVec3* RetRef, physx::PxQuat* wrp_this){
    *RetRef = wrp_this->getImaginaryPart();
}

ES void physx_PxVec3_const_physx_PxQuat_getBasisVector0(physx::PxVec3* RetRef, physx::PxQuat* wrp_this){
    *RetRef = wrp_this->getBasisVector0();
}

ES void physx_PxVec3_const_physx_PxQuat_getBasisVector1(physx::PxVec3* RetRef, physx::PxQuat* wrp_this){
    *RetRef = wrp_this->getBasisVector1();
}

ES void physx_PxVec3_const_physx_PxQuat_getBasisVector2(physx::PxVec3* RetRef, physx::PxQuat* wrp_this){
    *RetRef = wrp_this->getBasisVector2();
}

ES void physx_PxVec3_const_physx_PxQuat_rotate_physx_PxVec3_(physx::PxVec3* RetRef, physx::PxQuat* wrp_this, physx::PxVec3* wrp_v){
    *RetRef = wrp_this->rotate(*wrp_v);
}

ES void physx_PxVec3_const_physx_PxQuat_rotateInv_physx_PxVec3_(physx::PxVec3* RetRef, physx::PxQuat* wrp_this, physx::PxVec3* wrp_v){
    *RetRef = wrp_this->rotateInv(*wrp_v);
}

ES void physx_PxQuat_const_physx_PxQuat_operator_Star_physx_PxQuat_(physx::PxQuat* RetRef, physx::PxQuat* wrp_lhs, physx::PxQuat* wrp_q){
    *RetRef = wrp_lhs->operator*(*wrp_q);
}

ES void physx_PxQuat_const_physx_PxQuat_operator_Plus_physx_PxQuat_(physx::PxQuat* RetRef, physx::PxQuat* wrp_lhs, physx::PxQuat* wrp_q){
    *RetRef = wrp_lhs->operator+(*wrp_q);
}

ES void physx_PxQuat_const_physx_PxQuat_operator_Minus(physx::PxQuat* RetRef, physx::PxQuat* wrp_lhs){
    *RetRef = wrp_lhs->operator-();
}

ES void physx_PxQuat_const_physx_PxQuat_operator_Minus_physx_PxQuat_(physx::PxQuat* RetRef, physx::PxQuat* wrp_lhs, physx::PxQuat* wrp_q){
    *RetRef = wrp_lhs->operator-(*wrp_q);
}

ES void physx_PxQuat_const_physx_PxQuat_operator_Star_float_(physx::PxQuat* RetRef, physx::PxQuat* wrp_lhs, float wrp_r){
    *RetRef = wrp_lhs->operator*(wrp_r);
}
