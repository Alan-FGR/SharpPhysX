// Generated by minBND 5.1.90.51 - Â© github.com/Alan-FGR

//DBG: FunctionNode physx::operator| L149
//physx::operator| static physx.PxRigidBodyFlagsPtr OpPipe_New(physx.PxRigidBodyFlagEnum a, physx.PxRigidBodyFlagEnum b) will also be bound as member operator
//RET nat: PxRigidBodyFlagsPtr, man: physx.PxRigidBodyFlagsPtr, ret: True, kind: PtrStruct
//PAR nat: physx::PxRigidBodyFlag::Enum, man: physx.PxRigidBodyFlagEnum, kind: Value
//PAR nat: physx::PxRigidBodyFlag::Enum, man: physx.PxRigidBodyFlagEnum, kind: Value
ES PxRigidBodyFlagsPtr PxRigidBodyFlagsPtr_operator_Ptr_Pipe_PxRigidBodyFlagEnum_PxRigidBodyFlagEnum_(physx::PxRigidBodyFlag::Enum wrp_a, physx::PxRigidBodyFlag::Enum wrp_b){
    auto ret = ::physx::operator|(wrp_a, wrp_b);
    auto heap = new char[sizeof PxRigidBodyFlags];
    std::memcpy(heap, &ret, sizeof PxRigidBodyFlags);
    return (PxRigidBodyFlagsPtr) heap;
}

//DBG: FunctionNode physx::operator& L149
//physx::operator& static physx.PxRigidBodyFlagsPtr OpAnd_New(physx.PxRigidBodyFlagEnum a, physx.PxRigidBodyFlagEnum b) will also be bound as member operator
//RET nat: PxRigidBodyFlagsPtr, man: physx.PxRigidBodyFlagsPtr, ret: True, kind: PtrStruct
//PAR nat: physx::PxRigidBodyFlag::Enum, man: physx.PxRigidBodyFlagEnum, kind: Value
//PAR nat: physx::PxRigidBodyFlag::Enum, man: physx.PxRigidBodyFlagEnum, kind: Value
ES PxRigidBodyFlagsPtr PxRigidBodyFlagsPtr_operator_Ptr_Amp_PxRigidBodyFlagEnum_PxRigidBodyFlagEnum_(physx::PxRigidBodyFlag::Enum wrp_a, physx::PxRigidBodyFlag::Enum wrp_b){
    auto ret = ::physx::operator&(wrp_a, wrp_b);
    auto heap = new char[sizeof PxRigidBodyFlags];
    std::memcpy(heap, &ret, sizeof PxRigidBodyFlags);
    return (PxRigidBodyFlagsPtr) heap;
}

//DBG: FunctionNode physx::operator~ L149
//physx::operator~ static physx.PxRigidBodyFlagsPtr OpTilde_New(physx.PxRigidBodyFlagEnum a) will also be bound as member operator
//RET nat: PxRigidBodyFlagsPtr, man: physx.PxRigidBodyFlagsPtr, ret: True, kind: PtrStruct
//PAR nat: physx::PxRigidBodyFlag::Enum, man: physx.PxRigidBodyFlagEnum, kind: Value
ES PxRigidBodyFlagsPtr PxRigidBodyFlagsPtr_operator_Ptr_Tilde_PxRigidBodyFlagEnum_(physx::PxRigidBodyFlag::Enum wrp_a){
    auto ret = ::physx::operator~(wrp_a);
    auto heap = new char[sizeof PxRigidBodyFlags];
    std::memcpy(heap, &ret, sizeof PxRigidBodyFlags);
    return (PxRigidBodyFlagsPtr) heap;
}

//DBG: ClassNode PxRigidBodyFlag physx::PxRigidBodyFlag L52-141
//Subclasses using this: 2

//DBG: ClassNode PxRigidBody physx::PxRigidBody L157-693Bases: PxRigidActorPtr|PxActorPtr|PxBasePtr

//DBG: MethodNode physx::PxRigidBody::setCMassLocalPose L180
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
//PAR nat: physx::PxTransform*, man: physx.PxTransform*, kind: Value
ES void void_PxRigidBodyPtr_setCMassLocalPosePtr_PxTransform_(PxRigidBodyPtr wrp_this, physx::PxTransform* wrp_pose){
    wrp_this->setCMassLocalPose(*wrp_pose);
}

//DBG: MethodNode physx::PxRigidBody::getCMassLocalPose L190
//RET nat: physx::PxTransform, man: physx.PxTransform, ret: False, kind: Blittable
//PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
ES void PxTransform_const_PxRigidBodyPtr_getCMassLocalPosePtr(physx::PxTransform* nRetRef, PxRigidBodyPtr wrp_this){
    *nRetRef = wrp_this->getCMassLocalPose();
}

//DBG: MethodNode physx::PxRigidBody::setMass L212
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
//PAR nat: PxReal, man: float, kind: Value
ES void void_PxRigidBodyPtr_setMassPtr_float_(PxRigidBodyPtr wrp_this, PxReal wrp_mass){
    wrp_this->setMass(wrp_mass);
}

//DBG: MethodNode physx::PxRigidBody::getMass L223
//RET nat: PxReal, man: float, ret: True, kind: Value
//PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
ES PxReal float_const_PxRigidBodyPtr_getMassPtr(PxRigidBodyPtr wrp_this){
    return (PxReal) wrp_this->getMass();
}

//DBG: MethodNode physx::PxRigidBody::getInvMass L232
//RET nat: PxReal, man: float, ret: True, kind: Value
//PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
ES PxReal float_const_PxRigidBodyPtr_getInvMassPtr(PxRigidBodyPtr wrp_this){
    return (PxReal) wrp_this->getInvMass();
}

//DBG: MethodNode physx::PxRigidBody::setMassSpaceInertiaTensor L255
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
//PAR nat: physx::PxVec3*, man: physx.PxVec3*, kind: Value
ES void void_PxRigidBodyPtr_setMassSpaceInertiaTensorPtr_PxVec3_(PxRigidBodyPtr wrp_this, physx::PxVec3* wrp_m){
    wrp_this->setMassSpaceInertiaTensor(*wrp_m);
}

//DBG: MethodNode physx::PxRigidBody::getMassSpaceInertiaTensor L268
//RET nat: physx::PxVec3, man: physx.PxVec3, ret: False, kind: Blittable
//PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
ES void PxVec3_const_PxRigidBodyPtr_getMassSpaceInertiaTensorPtr(physx::PxVec3* nRetRef, PxRigidBodyPtr wrp_this){
    *nRetRef = wrp_this->getMassSpaceInertiaTensor();
}

//DBG: MethodNode physx::PxRigidBody::getMassSpaceInvInertiaTensor L281
//RET nat: physx::PxVec3, man: physx.PxVec3, ret: False, kind: Blittable
//PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
ES void PxVec3_const_PxRigidBodyPtr_getMassSpaceInvInertiaTensorPtr(physx::PxVec3* nRetRef, PxRigidBodyPtr wrp_this){
    *nRetRef = wrp_this->getMassSpaceInvInertiaTensor();
}

//DBG: MethodNode physx::PxRigidBody::setLinearDamping L298
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
//PAR nat: PxReal, man: float, kind: Value
ES void void_PxRigidBodyPtr_setLinearDampingPtr_float_(PxRigidBodyPtr wrp_this, PxReal wrp_linDamp){
    wrp_this->setLinearDamping(wrp_linDamp);
}

//DBG: MethodNode physx::PxRigidBody::getLinearDamping L307
//RET nat: PxReal, man: float, ret: True, kind: Value
//PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
ES PxReal float_const_PxRigidBodyPtr_getLinearDampingPtr(PxRigidBodyPtr wrp_this){
    return (PxReal) wrp_this->getLinearDamping();
}

//DBG: MethodNode physx::PxRigidBody::setAngularDamping L322
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
//PAR nat: PxReal, man: float, kind: Value
ES void void_PxRigidBodyPtr_setAngularDampingPtr_float_(PxRigidBodyPtr wrp_this, PxReal wrp_angDamp){
    wrp_this->setAngularDamping(wrp_angDamp);
}

//DBG: MethodNode physx::PxRigidBody::getAngularDamping L331
//RET nat: PxReal, man: float, ret: True, kind: Value
//PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
ES PxReal float_const_PxRigidBodyPtr_getAngularDampingPtr(PxRigidBodyPtr wrp_this){
    return (PxReal) wrp_this->getAngularDamping();
}

//DBG: MethodNode physx::PxRigidBody::getLinearVelocity L346
//RET nat: physx::PxVec3, man: physx.PxVec3, ret: False, kind: Blittable
//PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
ES void PxVec3_const_PxRigidBodyPtr_getLinearVelocityPtr(physx::PxVec3* nRetRef, PxRigidBodyPtr wrp_this){
    *nRetRef = wrp_this->getLinearVelocity();
}

//DBG: MethodNode physx::PxRigidBody::setLinearVelocity L367
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
//PAR nat: physx::PxVec3*, man: physx.PxVec3*, kind: Value
//PAR nat: bool, man: bool, kind: Value
ES void void_PxRigidBodyPtr_setLinearVelocityPtr_PxVec3_bool_(PxRigidBodyPtr wrp_this, physx::PxVec3* wrp_linVel, bool wrp_autowake){
    wrp_this->setLinearVelocity(*wrp_linVel, wrp_autowake);
}

//DBG: MethodNode physx::PxRigidBody::getAngularVelocity L378
//RET nat: physx::PxVec3, man: physx.PxVec3, ret: False, kind: Blittable
//PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
ES void PxVec3_const_PxRigidBodyPtr_getAngularVelocityPtr(physx::PxVec3* nRetRef, PxRigidBodyPtr wrp_this){
    *nRetRef = wrp_this->getAngularVelocity();
}

//DBG: MethodNode physx::PxRigidBody::setAngularVelocity L400
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
//PAR nat: physx::PxVec3*, man: physx.PxVec3*, kind: Value
//PAR nat: bool, man: bool, kind: Value
ES void void_PxRigidBodyPtr_setAngularVelocityPtr_PxVec3_bool_(PxRigidBodyPtr wrp_this, physx::PxVec3* wrp_angVel, bool wrp_autowake){
    wrp_this->setAngularVelocity(*wrp_angVel, wrp_autowake);
}

//DBG: MethodNode physx::PxRigidBody::setMaxAngularVelocity L420
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
//PAR nat: PxReal, man: float, kind: Value
ES void void_PxRigidBodyPtr_setMaxAngularVelocityPtr_float_(PxRigidBodyPtr wrp_this, PxReal wrp_maxAngVel){
    wrp_this->setMaxAngularVelocity(wrp_maxAngVel);
}

//DBG: MethodNode physx::PxRigidBody::getMaxAngularVelocity L429
//RET nat: PxReal, man: float, ret: True, kind: Value
//PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
ES PxReal float_const_PxRigidBodyPtr_getMaxAngularVelocityPtr(PxRigidBodyPtr wrp_this){
    return (PxReal) wrp_this->getMaxAngularVelocity();
}

//DBG: MethodNode physx::PxRigidBody::setMaxLinearVelocity L447
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
//PAR nat: PxReal, man: float, kind: Value
ES void void_PxRigidBodyPtr_setMaxLinearVelocityPtr_float_(PxRigidBodyPtr wrp_this, PxReal wrp_maxLinVel){
    wrp_this->setMaxLinearVelocity(wrp_maxLinVel);
}

//DBG: MethodNode physx::PxRigidBody::getMaxLinearVelocity L456
//RET nat: PxReal, man: float, ret: True, kind: Value
//PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
ES PxReal float_const_PxRigidBodyPtr_getMaxLinearVelocityPtr(PxRigidBodyPtr wrp_this){
    return (PxReal) wrp_this->getMaxLinearVelocity();
}

//DBG: MethodNode physx::PxRigidBody::addForce L493
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
//PAR nat: physx::PxVec3*, man: physx.PxVec3*, kind: Value
//PAR nat: physx::PxForceMode::Enum, man: physx.PxForceModeEnum, kind: Value
//PAR nat: bool, man: bool, kind: Value
ES void void_PxRigidBodyPtr_addForcePtr_PxVec3_PxForceModeEnum_bool_(PxRigidBodyPtr wrp_this, physx::PxVec3* wrp_force, physx::PxForceMode::Enum wrp_mode, bool wrp_autowake){
    wrp_this->addForce(*wrp_force, wrp_mode, wrp_autowake);
}

//DBG: MethodNode physx::PxRigidBody::addTorque L523
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
//PAR nat: physx::PxVec3*, man: physx.PxVec3*, kind: Value
//PAR nat: physx::PxForceMode::Enum, man: physx.PxForceModeEnum, kind: Value
//PAR nat: bool, man: bool, kind: Value
ES void void_PxRigidBodyPtr_addTorquePtr_PxVec3_PxForceModeEnum_bool_(PxRigidBodyPtr wrp_this, physx::PxVec3* wrp_torque, physx::PxForceMode::Enum wrp_mode, bool wrp_autowake){
    wrp_this->addTorque(*wrp_torque, wrp_mode, wrp_autowake);
}

//DBG: MethodNode physx::PxRigidBody::clearForce L544
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
//PAR nat: physx::PxForceMode::Enum, man: physx.PxForceModeEnum, kind: Value
ES void void_PxRigidBodyPtr_clearForcePtr_PxForceModeEnum_(PxRigidBodyPtr wrp_this, physx::PxForceMode::Enum wrp_mode){
    wrp_this->clearForce(wrp_mode);
}

//DBG: MethodNode physx::PxRigidBody::clearTorque L565
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
//PAR nat: physx::PxForceMode::Enum, man: physx.PxForceModeEnum, kind: Value
ES void void_PxRigidBodyPtr_clearTorquePtr_PxForceModeEnum_(PxRigidBodyPtr wrp_this, physx::PxForceMode::Enum wrp_mode){
    wrp_this->clearTorque(wrp_mode);
}

//DBG: MethodNode physx::PxRigidBody::setForceAndTorque L579
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
//PAR nat: physx::PxVec3*, man: physx.PxVec3*, kind: Value
//PAR nat: physx::PxVec3*, man: physx.PxVec3*, kind: Value
//PAR nat: physx::PxForceMode::Enum, man: physx.PxForceModeEnum, kind: Value
ES void void_PxRigidBodyPtr_setForceAndTorquePtr_PxVec3_PxVec3_PxForceModeEnum_(PxRigidBodyPtr wrp_this, physx::PxVec3* wrp_force, physx::PxVec3* wrp_torque, physx::PxForceMode::Enum wrp_mode){
    wrp_this->setForceAndTorque(*wrp_force, *wrp_torque, wrp_mode);
}

//DBG: MethodNode physx::PxRigidBody::setRigidBodyFlag L596
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
//PAR nat: physx::PxRigidBodyFlag::Enum, man: physx.PxRigidBodyFlagEnum, kind: Value
//PAR nat: bool, man: bool, kind: Value
ES void void_PxRigidBodyPtr_setRigidBodyFlagPtr_PxRigidBodyFlagEnum_bool_(PxRigidBodyPtr wrp_this, physx::PxRigidBodyFlag::Enum wrp_flag, bool wrp_value){
    wrp_this->setRigidBodyFlag(wrp_flag, wrp_value);
}

//DBG: MethodNode physx::PxRigidBody::setRigidBodyFlags L597
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
//PAR nat: PxRigidBodyFlagsPtr, man: physx.PxRigidBodyFlagsPtr, kind: PtrStruct
ES void void_PxRigidBodyPtr_setRigidBodyFlagsPtr_PxRigidBodyFlagsPtr_(PxRigidBodyPtr wrp_this, PxRigidBodyFlagsPtr wrp_inFlags){
    wrp_this->setRigidBodyFlags(*wrp_inFlags);
}

//DBG: MethodNode physx::PxRigidBody::getRigidBodyFlags L608
//RET nat: PxRigidBodyFlagsPtr, man: physx.PxRigidBodyFlagsPtr, ret: True, kind: PtrStruct
//PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
ES PxRigidBodyFlagsPtr PxRigidBodyFlagsPtr_const_PxRigidBodyPtr_getRigidBodyFlagsPtr(PxRigidBodyPtr wrp_this){
    auto ret = wrp_this->getRigidBodyFlags();
    auto heap = new char[sizeof PxRigidBodyFlags];
    std::memcpy(heap, &ret, sizeof PxRigidBodyFlags);
    return (PxRigidBodyFlagsPtr) heap;
}

//DBG: MethodNode physx::PxRigidBody::setMinCCDAdvanceCoefficient L631
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
//PAR nat: PxReal, man: float, kind: Value
ES void void_PxRigidBodyPtr_setMinCCDAdvanceCoefficientPtr_float_(PxRigidBodyPtr wrp_this, PxReal wrp_advanceCoefficient){
    wrp_this->setMinCCDAdvanceCoefficient(wrp_advanceCoefficient);
}

//DBG: MethodNode physx::PxRigidBody::getMinCCDAdvanceCoefficient L642
//RET nat: PxReal, man: float, ret: True, kind: Value
//PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
ES PxReal float_const_PxRigidBodyPtr_getMinCCDAdvanceCoefficientPtr(PxRigidBodyPtr wrp_this){
    return (PxReal) wrp_this->getMinCCDAdvanceCoefficient();
}

//DBG: MethodNode physx::PxRigidBody::setMaxDepenetrationVelocity L650
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
//PAR nat: PxReal, man: float, kind: Value
ES void void_PxRigidBodyPtr_setMaxDepenetrationVelocityPtr_float_(PxRigidBodyPtr wrp_this, PxReal wrp_biasClamp){
    wrp_this->setMaxDepenetrationVelocity(wrp_biasClamp);
}

//DBG: MethodNode physx::PxRigidBody::getMaxDepenetrationVelocity L657
//RET nat: PxReal, man: float, ret: True, kind: Value
//PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
ES PxReal float_const_PxRigidBodyPtr_getMaxDepenetrationVelocityPtr(PxRigidBodyPtr wrp_this){
    return (PxReal) wrp_this->getMaxDepenetrationVelocity();
}

//DBG: MethodNode physx::PxRigidBody::setMaxContactImpulse L669
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
//PAR nat: PxReal, man: float, kind: Value
ES void void_PxRigidBodyPtr_setMaxContactImpulsePtr_float_(PxRigidBodyPtr wrp_this, PxReal wrp_maxImpulse){
    wrp_this->setMaxContactImpulse(wrp_maxImpulse);
}

//DBG: MethodNode physx::PxRigidBody::getMaxContactImpulse L678
//RET nat: PxReal, man: float, ret: True, kind: Value
//PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
ES PxReal float_const_PxRigidBodyPtr_getMaxContactImpulsePtr(PxRigidBodyPtr wrp_this){
    return (PxReal) wrp_this->getMaxContactImpulse();
}

//DBG: MethodNode physx::PxRigidBody::getInternalIslandNodeIndex L685
//RET nat: PxU32, man: uint, ret: True, kind: Value
//PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
ES PxU32 uint_const_PxRigidBodyPtr_getInternalIslandNodeIndexPtr(PxRigidBodyPtr wrp_this){
    return (PxU32) wrp_this->getInternalIslandNodeIndex();
}

//DBG: MethodNode physx::PxRigidBody::operator= L157
//ERRORS in MethodNode: Skipping Implicit MethodNode physx::PxRigidBody::operator= L157

//DBG: MethodNode physx::PxRigidBody::setCMassLocalPose L180
//Value Converter setCMassLocalPose
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
//PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable

//DBG: MethodNode physx::PxRigidBody::setCMassLocalPose L180
//Value Converter setCMassLocalPose
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
//PAR nat: physx::PxTransform, man: physx.PxTransform, kind: Blittable

//DBG: MethodNode physx::PxRigidBody::setMassSpaceInertiaTensor L255
//Value Converter setMassSpaceInertiaTensor
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable

//DBG: MethodNode physx::PxRigidBody::setMassSpaceInertiaTensor L255
//Value Converter setMassSpaceInertiaTensor
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable

//DBG: MethodNode physx::PxRigidBody::setLinearVelocity L367
//Value Converter setLinearVelocity
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable

//DBG: MethodNode physx::PxRigidBody::setLinearVelocity L367
//Value Converter setLinearVelocity
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable

//DBG: MethodNode physx::PxRigidBody::setLinearVelocity L367
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
//PAR nat: physx::PxVec3*, man: physx.PxVec3*, kind: Value
ES void void_PxRigidBodyPtr_setLinearVelocityPtr_PxVec3_(PxRigidBodyPtr wrp_this, physx::PxVec3* wrp_linVel){
    wrp_this->setLinearVelocity(*wrp_linVel);
}

//DBG: MethodNode physx::PxRigidBody::setLinearVelocity L367
//Value Converter setLinearVelocity
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
//PAR nat: bool, man: bool, kind: Value

//DBG: MethodNode physx::PxRigidBody::setLinearVelocity L367
//Value Converter setLinearVelocity
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
//PAR nat: bool, man: bool, kind: Value

//DBG: MethodNode physx::PxRigidBody::setAngularVelocity L400
//Value Converter setAngularVelocity
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable

//DBG: MethodNode physx::PxRigidBody::setAngularVelocity L400
//Value Converter setAngularVelocity
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable

//DBG: MethodNode physx::PxRigidBody::setAngularVelocity L400
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
//PAR nat: physx::PxVec3*, man: physx.PxVec3*, kind: Value
ES void void_PxRigidBodyPtr_setAngularVelocityPtr_PxVec3_(PxRigidBodyPtr wrp_this, physx::PxVec3* wrp_angVel){
    wrp_this->setAngularVelocity(*wrp_angVel);
}

//DBG: MethodNode physx::PxRigidBody::setAngularVelocity L400
//Value Converter setAngularVelocity
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
//PAR nat: bool, man: bool, kind: Value

//DBG: MethodNode physx::PxRigidBody::setAngularVelocity L400
//Value Converter setAngularVelocity
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
//PAR nat: bool, man: bool, kind: Value

//DBG: MethodNode physx::PxRigidBody::addForce L493
//Value Converter addForce
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable

//DBG: MethodNode physx::PxRigidBody::addForce L493
//Value Converter addForce
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable

//DBG: MethodNode physx::PxRigidBody::addForce L493
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
//PAR nat: physx::PxVec3*, man: physx.PxVec3*, kind: Value
ES void void_PxRigidBodyPtr_addForcePtr_PxVec3_(PxRigidBodyPtr wrp_this, physx::PxVec3* wrp_force){
    wrp_this->addForce(*wrp_force);
}

//DBG: MethodNode physx::PxRigidBody::addForce L493
//Value Converter addForce
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
//PAR nat: physx::PxForceMode::Enum, man: physx.PxForceModeEnum, kind: Value

//DBG: MethodNode physx::PxRigidBody::addForce L493
//Value Converter addForce
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
//PAR nat: physx::PxForceMode::Enum, man: physx.PxForceModeEnum, kind: Value

//DBG: MethodNode physx::PxRigidBody::addForce L493
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
//PAR nat: physx::PxVec3*, man: physx.PxVec3*, kind: Value
//PAR nat: physx::PxForceMode::Enum, man: physx.PxForceModeEnum, kind: Value
ES void void_PxRigidBodyPtr_addForcePtr_PxVec3_PxForceModeEnum_(PxRigidBodyPtr wrp_this, physx::PxVec3* wrp_force, physx::PxForceMode::Enum wrp_mode){
    wrp_this->addForce(*wrp_force, wrp_mode);
}

//DBG: MethodNode physx::PxRigidBody::addForce L493
//Value Converter addForce
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
//PAR nat: physx::PxForceMode::Enum, man: physx.PxForceModeEnum, kind: Value
//PAR nat: bool, man: bool, kind: Value

//DBG: MethodNode physx::PxRigidBody::addForce L493
//Value Converter addForce
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
//PAR nat: physx::PxForceMode::Enum, man: physx.PxForceModeEnum, kind: Value
//PAR nat: bool, man: bool, kind: Value

//DBG: MethodNode physx::PxRigidBody::addTorque L523
//Value Converter addTorque
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable

//DBG: MethodNode physx::PxRigidBody::addTorque L523
//Value Converter addTorque
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable

//DBG: MethodNode physx::PxRigidBody::addTorque L523
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
//PAR nat: physx::PxVec3*, man: physx.PxVec3*, kind: Value
ES void void_PxRigidBodyPtr_addTorquePtr_PxVec3_(PxRigidBodyPtr wrp_this, physx::PxVec3* wrp_torque){
    wrp_this->addTorque(*wrp_torque);
}

//DBG: MethodNode physx::PxRigidBody::addTorque L523
//Value Converter addTorque
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
//PAR nat: physx::PxForceMode::Enum, man: physx.PxForceModeEnum, kind: Value

//DBG: MethodNode physx::PxRigidBody::addTorque L523
//Value Converter addTorque
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
//PAR nat: physx::PxForceMode::Enum, man: physx.PxForceModeEnum, kind: Value

//DBG: MethodNode physx::PxRigidBody::addTorque L523
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
//PAR nat: physx::PxVec3*, man: physx.PxVec3*, kind: Value
//PAR nat: physx::PxForceMode::Enum, man: physx.PxForceModeEnum, kind: Value
ES void void_PxRigidBodyPtr_addTorquePtr_PxVec3_PxForceModeEnum_(PxRigidBodyPtr wrp_this, physx::PxVec3* wrp_torque, physx::PxForceMode::Enum wrp_mode){
    wrp_this->addTorque(*wrp_torque, wrp_mode);
}

//DBG: MethodNode physx::PxRigidBody::addTorque L523
//Value Converter addTorque
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
//PAR nat: physx::PxForceMode::Enum, man: physx.PxForceModeEnum, kind: Value
//PAR nat: bool, man: bool, kind: Value

//DBG: MethodNode physx::PxRigidBody::addTorque L523
//Value Converter addTorque
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
//PAR nat: physx::PxForceMode::Enum, man: physx.PxForceModeEnum, kind: Value
//PAR nat: bool, man: bool, kind: Value

//DBG: MethodNode physx::PxRigidBody::clearForce L544
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
ES void void_PxRigidBodyPtr_clearForcePtr(PxRigidBodyPtr wrp_this){
    wrp_this->clearForce();
}

//DBG: MethodNode physx::PxRigidBody::clearTorque L565
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
ES void void_PxRigidBodyPtr_clearTorquePtr(PxRigidBodyPtr wrp_this){
    wrp_this->clearTorque();
}

//DBG: MethodNode physx::PxRigidBody::setForceAndTorque L579
//Value Converter setForceAndTorque
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable

//DBG: MethodNode physx::PxRigidBody::setForceAndTorque L579
//Value Converter setForceAndTorque
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable

//DBG: MethodNode physx::PxRigidBody::setForceAndTorque L579
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
//PAR nat: physx::PxVec3*, man: physx.PxVec3*, kind: Value
//PAR nat: physx::PxVec3*, man: physx.PxVec3*, kind: Value
ES void void_PxRigidBodyPtr_setForceAndTorquePtr_PxVec3_PxVec3_(PxRigidBodyPtr wrp_this, physx::PxVec3* wrp_force, physx::PxVec3* wrp_torque){
    wrp_this->setForceAndTorque(*wrp_force, *wrp_torque);
}

//DBG: MethodNode physx::PxRigidBody::setForceAndTorque L579
//Value Converter setForceAndTorque
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
//PAR nat: physx::PxForceMode::Enum, man: physx.PxForceModeEnum, kind: Value

//DBG: MethodNode physx::PxRigidBody::setForceAndTorque L579
//Value Converter setForceAndTorque
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
//PAR nat: physx::PxForceMode::Enum, man: physx.PxForceModeEnum, kind: Value

//DBG: Field: userData - 314-314
//PIPING
//Skipping: SKIPPING! MethodNode physx::PxBase::is L101 is | 
//Skipping: SKIPPING! MethodNode physx::PxBase::is L111 isConst | 
//INTERFACES

//Operators

//DBG: DeclNode PxRigidBodyFlags physx::PxRigidBodyFlags L148
