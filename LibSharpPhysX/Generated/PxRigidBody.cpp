// Generated by minBND 5.1.78.26 - Â© github.com/Alan-FGR
//DEBUG: UnitNode  - 0
//DEBUG: NamespaceNode physx - 41-697
//DEBUG: FunctionNode physx::operator| - 149
//Internal Op

//DEBUG: FunctionNode physx::operator& - 149
//Internal Op

//DEBUG: FunctionNode physx::operator~ - 149
//Internal Op

//DEBUG: ClassNode physx::PxRigidBodyFlag - 52-141
//DEBUG: EnumNode physx::PxRigidBodyFlag::Enum - 54-140
// TODO EnumNode.GenWrapper()

//DEBUG: ClassNode physx::PxRigidBody - 157-693
//Bases: PxRigidActorPtr|PxActorPtr|PxBasePtr
//DEBUG: MethodNode physx::PxRigidBody::setCMassLocalPose - 180
ES void void_physx_PxRigidBody_setCMassLocalPose_physx_PxTransform_(PxRigidBodyPtr wrp_this, physx::PxTransform* wrp_pose){
    //RET nat: void, man: void, ret: True, kind: Value
    //PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
    //PAR nat: physx::PxTransform*, man: physx.PxTransform*, kind: Value
    wrp_this->setCMassLocalPose(*wrp_pose);
}

//DEBUG: MethodNode physx::PxRigidBody::getCMassLocalPose - 190
ES void physx_PxTransform_const_physx_PxRigidBody_getCMassLocalPose(physx::PxTransform* RetRef, PxRigidBodyPtr wrp_this){
    //RET nat: physx::PxTransform, man: physx.PxTransform, ret: False, kind: Blittable
    //PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
    *RetRef = wrp_this->getCMassLocalPose();
}

//DEBUG: MethodNode physx::PxRigidBody::setMass - 212
ES void void_physx_PxRigidBody_setMass_float_(PxRigidBodyPtr wrp_this, float wrp_mass){
    //RET nat: void, man: void, ret: True, kind: Value
    //PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
    //PAR nat: float, man: float, kind: Value
    wrp_this->setMass(wrp_mass);
}

//DEBUG: MethodNode physx::PxRigidBody::getMass - 223
ES float float_const_physx_PxRigidBody_getMass(PxRigidBodyPtr wrp_this){
    //RET nat: float, man: float, ret: True, kind: Value
    //PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
    return (float) wrp_this->getMass();
}

//DEBUG: MethodNode physx::PxRigidBody::getInvMass - 232
ES float float_const_physx_PxRigidBody_getInvMass(PxRigidBodyPtr wrp_this){
    //RET nat: float, man: float, ret: True, kind: Value
    //PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
    return (float) wrp_this->getInvMass();
}

//DEBUG: MethodNode physx::PxRigidBody::setMassSpaceInertiaTensor - 255
ES void void_physx_PxRigidBody_setMassSpaceInertiaTensor_physx_PxVec3_(PxRigidBodyPtr wrp_this, physx::PxVec3* wrp_m){
    //RET nat: void, man: void, ret: True, kind: Value
    //PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
    //PAR nat: physx::PxVec3*, man: physx.PxVec3*, kind: Value
    wrp_this->setMassSpaceInertiaTensor(*wrp_m);
}

//DEBUG: MethodNode physx::PxRigidBody::getMassSpaceInertiaTensor - 268
ES void physx_PxVec3_const_physx_PxRigidBody_getMassSpaceInertiaTensor(physx::PxVec3* RetRef, PxRigidBodyPtr wrp_this){
    //RET nat: physx::PxVec3, man: physx.PxVec3, ret: False, kind: Blittable
    //PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
    *RetRef = wrp_this->getMassSpaceInertiaTensor();
}

//DEBUG: MethodNode physx::PxRigidBody::getMassSpaceInvInertiaTensor - 281
ES void physx_PxVec3_const_physx_PxRigidBody_getMassSpaceInvInertiaTensor(physx::PxVec3* RetRef, PxRigidBodyPtr wrp_this){
    //RET nat: physx::PxVec3, man: physx.PxVec3, ret: False, kind: Blittable
    //PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
    *RetRef = wrp_this->getMassSpaceInvInertiaTensor();
}

//DEBUG: MethodNode physx::PxRigidBody::setLinearDamping - 298
ES void void_physx_PxRigidBody_setLinearDamping_float_(PxRigidBodyPtr wrp_this, float wrp_linDamp){
    //RET nat: void, man: void, ret: True, kind: Value
    //PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
    //PAR nat: float, man: float, kind: Value
    wrp_this->setLinearDamping(wrp_linDamp);
}

//DEBUG: MethodNode physx::PxRigidBody::getLinearDamping - 307
ES float float_const_physx_PxRigidBody_getLinearDamping(PxRigidBodyPtr wrp_this){
    //RET nat: float, man: float, ret: True, kind: Value
    //PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
    return (float) wrp_this->getLinearDamping();
}

//DEBUG: MethodNode physx::PxRigidBody::setAngularDamping - 322
ES void void_physx_PxRigidBody_setAngularDamping_float_(PxRigidBodyPtr wrp_this, float wrp_angDamp){
    //RET nat: void, man: void, ret: True, kind: Value
    //PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
    //PAR nat: float, man: float, kind: Value
    wrp_this->setAngularDamping(wrp_angDamp);
}

//DEBUG: MethodNode physx::PxRigidBody::getAngularDamping - 331
ES float float_const_physx_PxRigidBody_getAngularDamping(PxRigidBodyPtr wrp_this){
    //RET nat: float, man: float, ret: True, kind: Value
    //PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
    return (float) wrp_this->getAngularDamping();
}

//DEBUG: MethodNode physx::PxRigidBody::getLinearVelocity - 346
ES void physx_PxVec3_const_physx_PxRigidBody_getLinearVelocity(physx::PxVec3* RetRef, PxRigidBodyPtr wrp_this){
    //RET nat: physx::PxVec3, man: physx.PxVec3, ret: False, kind: Blittable
    //PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
    *RetRef = wrp_this->getLinearVelocity();
}

//DEBUG: MethodNode physx::PxRigidBody::setLinearVelocity - 367
ES void void_physx_PxRigidBody_setLinearVelocity_physx_PxVec3_bool_(PxRigidBodyPtr wrp_this, physx::PxVec3* wrp_linVel, bool wrp_autowake){
    //RET nat: void, man: void, ret: True, kind: Value
    //PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
    //PAR nat: physx::PxVec3*, man: physx.PxVec3*, kind: Value
    //PAR nat: bool, man: bool, kind: Value
    wrp_this->setLinearVelocity(*wrp_linVel, wrp_autowake);
}

//DEBUG: MethodNode physx::PxRigidBody::setLinearVelocity - 367
ES void void_physx_PxRigidBody_setLinearVelocity_physx_PxVec3_(PxRigidBodyPtr wrp_this, physx::PxVec3* wrp_linVel){
    //RET nat: void, man: void, ret: True, kind: Value
    //PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
    //PAR nat: physx::PxVec3*, man: physx.PxVec3*, kind: Value
    wrp_this->setLinearVelocity(*wrp_linVel);
}

//DEBUG: MethodNode physx::PxRigidBody::getAngularVelocity - 378
ES void physx_PxVec3_const_physx_PxRigidBody_getAngularVelocity(physx::PxVec3* RetRef, PxRigidBodyPtr wrp_this){
    //RET nat: physx::PxVec3, man: physx.PxVec3, ret: False, kind: Blittable
    //PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
    *RetRef = wrp_this->getAngularVelocity();
}

//DEBUG: MethodNode physx::PxRigidBody::setAngularVelocity - 400
ES void void_physx_PxRigidBody_setAngularVelocity_physx_PxVec3_bool_(PxRigidBodyPtr wrp_this, physx::PxVec3* wrp_angVel, bool wrp_autowake){
    //RET nat: void, man: void, ret: True, kind: Value
    //PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
    //PAR nat: physx::PxVec3*, man: physx.PxVec3*, kind: Value
    //PAR nat: bool, man: bool, kind: Value
    wrp_this->setAngularVelocity(*wrp_angVel, wrp_autowake);
}

//DEBUG: MethodNode physx::PxRigidBody::setAngularVelocity - 400
ES void void_physx_PxRigidBody_setAngularVelocity_physx_PxVec3_(PxRigidBodyPtr wrp_this, physx::PxVec3* wrp_angVel){
    //RET nat: void, man: void, ret: True, kind: Value
    //PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
    //PAR nat: physx::PxVec3*, man: physx.PxVec3*, kind: Value
    wrp_this->setAngularVelocity(*wrp_angVel);
}

//DEBUG: MethodNode physx::PxRigidBody::setMaxAngularVelocity - 420
ES void void_physx_PxRigidBody_setMaxAngularVelocity_float_(PxRigidBodyPtr wrp_this, float wrp_maxAngVel){
    //RET nat: void, man: void, ret: True, kind: Value
    //PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
    //PAR nat: float, man: float, kind: Value
    wrp_this->setMaxAngularVelocity(wrp_maxAngVel);
}

//DEBUG: MethodNode physx::PxRigidBody::getMaxAngularVelocity - 429
ES float float_const_physx_PxRigidBody_getMaxAngularVelocity(PxRigidBodyPtr wrp_this){
    //RET nat: float, man: float, ret: True, kind: Value
    //PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
    return (float) wrp_this->getMaxAngularVelocity();
}

//DEBUG: MethodNode physx::PxRigidBody::setMaxLinearVelocity - 447
ES void void_physx_PxRigidBody_setMaxLinearVelocity_float_(PxRigidBodyPtr wrp_this, float wrp_maxLinVel){
    //RET nat: void, man: void, ret: True, kind: Value
    //PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
    //PAR nat: float, man: float, kind: Value
    wrp_this->setMaxLinearVelocity(wrp_maxLinVel);
}

//DEBUG: MethodNode physx::PxRigidBody::getMaxLinearVelocity - 456
ES float float_const_physx_PxRigidBody_getMaxLinearVelocity(PxRigidBodyPtr wrp_this){
    //RET nat: float, man: float, ret: True, kind: Value
    //PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
    return (float) wrp_this->getMaxLinearVelocity();
}

//DEBUG: MethodNode physx::PxRigidBody::addForce - 493
ES void void_physx_PxRigidBody_addForce_physx_PxVec3_physx_PxForceModeEnum_bool_(PxRigidBodyPtr wrp_this, physx::PxVec3* wrp_force, physx::PxForceMode::Enum wrp_mode, bool wrp_autowake){
    //RET nat: void, man: void, ret: True, kind: Value
    //PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
    //PAR nat: physx::PxVec3*, man: physx.PxVec3*, kind: Value
    //PAR nat: physx::PxForceMode::Enum, man: physx.PxForceModeEnum, kind: Value
    //PAR nat: bool, man: bool, kind: Value
    wrp_this->addForce(*wrp_force, wrp_mode, wrp_autowake);
}

//DEBUG: MethodNode physx::PxRigidBody::addForce - 493
ES void void_physx_PxRigidBody_addForce_physx_PxVec3_physx_PxForceModeEnum_(PxRigidBodyPtr wrp_this, physx::PxVec3* wrp_force, physx::PxForceMode::Enum wrp_mode){
    //RET nat: void, man: void, ret: True, kind: Value
    //PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
    //PAR nat: physx::PxVec3*, man: physx.PxVec3*, kind: Value
    //PAR nat: physx::PxForceMode::Enum, man: physx.PxForceModeEnum, kind: Value
    wrp_this->addForce(*wrp_force, wrp_mode);
}

//DEBUG: MethodNode physx::PxRigidBody::addForce - 493
ES void void_physx_PxRigidBody_addForce_physx_PxVec3_(PxRigidBodyPtr wrp_this, physx::PxVec3* wrp_force){
    //RET nat: void, man: void, ret: True, kind: Value
    //PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
    //PAR nat: physx::PxVec3*, man: physx.PxVec3*, kind: Value
    wrp_this->addForce(*wrp_force);
}

//DEBUG: MethodNode physx::PxRigidBody::addTorque - 523
ES void void_physx_PxRigidBody_addTorque_physx_PxVec3_physx_PxForceModeEnum_bool_(PxRigidBodyPtr wrp_this, physx::PxVec3* wrp_torque, physx::PxForceMode::Enum wrp_mode, bool wrp_autowake){
    //RET nat: void, man: void, ret: True, kind: Value
    //PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
    //PAR nat: physx::PxVec3*, man: physx.PxVec3*, kind: Value
    //PAR nat: physx::PxForceMode::Enum, man: physx.PxForceModeEnum, kind: Value
    //PAR nat: bool, man: bool, kind: Value
    wrp_this->addTorque(*wrp_torque, wrp_mode, wrp_autowake);
}

//DEBUG: MethodNode physx::PxRigidBody::addTorque - 523
ES void void_physx_PxRigidBody_addTorque_physx_PxVec3_physx_PxForceModeEnum_(PxRigidBodyPtr wrp_this, physx::PxVec3* wrp_torque, physx::PxForceMode::Enum wrp_mode){
    //RET nat: void, man: void, ret: True, kind: Value
    //PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
    //PAR nat: physx::PxVec3*, man: physx.PxVec3*, kind: Value
    //PAR nat: physx::PxForceMode::Enum, man: physx.PxForceModeEnum, kind: Value
    wrp_this->addTorque(*wrp_torque, wrp_mode);
}

//DEBUG: MethodNode physx::PxRigidBody::addTorque - 523
ES void void_physx_PxRigidBody_addTorque_physx_PxVec3_(PxRigidBodyPtr wrp_this, physx::PxVec3* wrp_torque){
    //RET nat: void, man: void, ret: True, kind: Value
    //PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
    //PAR nat: physx::PxVec3*, man: physx.PxVec3*, kind: Value
    wrp_this->addTorque(*wrp_torque);
}

//DEBUG: MethodNode physx::PxRigidBody::clearForce - 544
ES void void_physx_PxRigidBody_clearForce_physx_PxForceModeEnum_(PxRigidBodyPtr wrp_this, physx::PxForceMode::Enum wrp_mode){
    //RET nat: void, man: void, ret: True, kind: Value
    //PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
    //PAR nat: physx::PxForceMode::Enum, man: physx.PxForceModeEnum, kind: Value
    wrp_this->clearForce(wrp_mode);
}

//DEBUG: MethodNode physx::PxRigidBody::clearForce - 544
ES void void_physx_PxRigidBody_clearForce(PxRigidBodyPtr wrp_this){
    //RET nat: void, man: void, ret: True, kind: Value
    //PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
    wrp_this->clearForce();
}

//DEBUG: MethodNode physx::PxRigidBody::clearTorque - 565
ES void void_physx_PxRigidBody_clearTorque_physx_PxForceModeEnum_(PxRigidBodyPtr wrp_this, physx::PxForceMode::Enum wrp_mode){
    //RET nat: void, man: void, ret: True, kind: Value
    //PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
    //PAR nat: physx::PxForceMode::Enum, man: physx.PxForceModeEnum, kind: Value
    wrp_this->clearTorque(wrp_mode);
}

//DEBUG: MethodNode physx::PxRigidBody::clearTorque - 565
ES void void_physx_PxRigidBody_clearTorque(PxRigidBodyPtr wrp_this){
    //RET nat: void, man: void, ret: True, kind: Value
    //PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
    wrp_this->clearTorque();
}

//DEBUG: MethodNode physx::PxRigidBody::setForceAndTorque - 579
ES void void_physx_PxRigidBody_setForceAndTorque_physx_PxVec3_physx_PxVec3_physx_PxForceModeEnum_(PxRigidBodyPtr wrp_this, physx::PxVec3* wrp_force, physx::PxVec3* wrp_torque, physx::PxForceMode::Enum wrp_mode){
    //RET nat: void, man: void, ret: True, kind: Value
    //PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
    //PAR nat: physx::PxVec3*, man: physx.PxVec3*, kind: Value
    //PAR nat: physx::PxVec3*, man: physx.PxVec3*, kind: Value
    //PAR nat: physx::PxForceMode::Enum, man: physx.PxForceModeEnum, kind: Value
    wrp_this->setForceAndTorque(*wrp_force, *wrp_torque, wrp_mode);
}

//DEBUG: MethodNode physx::PxRigidBody::setForceAndTorque - 579
ES void void_physx_PxRigidBody_setForceAndTorque_physx_PxVec3_physx_PxVec3_(PxRigidBodyPtr wrp_this, physx::PxVec3* wrp_force, physx::PxVec3* wrp_torque){
    //RET nat: void, man: void, ret: True, kind: Value
    //PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
    //PAR nat: physx::PxVec3*, man: physx.PxVec3*, kind: Value
    //PAR nat: physx::PxVec3*, man: physx.PxVec3*, kind: Value
    wrp_this->setForceAndTorque(*wrp_force, *wrp_torque);
}

//DEBUG: MethodNode physx::PxRigidBody::setRigidBodyFlag - 596
ES void void_physx_PxRigidBody_setRigidBodyFlag_physx_PxRigidBodyFlagEnum_bool_(PxRigidBodyPtr wrp_this, physx::PxRigidBodyFlag::Enum wrp_flag, bool wrp_value){
    //RET nat: void, man: void, ret: True, kind: Value
    //PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
    //PAR nat: physx::PxRigidBodyFlag::Enum, man: physx.PxRigidBodyFlagEnum, kind: Value
    //PAR nat: bool, man: bool, kind: Value
    wrp_this->setRigidBodyFlag(wrp_flag, wrp_value);
}

//DEBUG: MethodNode physx::PxRigidBody::setRigidBodyFlags - 597
ES void void_physx_PxRigidBody_setRigidBodyFlags_PxRigidBodyFlagsPtr_(PxRigidBodyPtr wrp_this, PxRigidBodyFlagsPtr wrp_inFlags){
    //RET nat: void, man: void, ret: True, kind: Value
    //PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
    //PAR nat: PxRigidBodyFlagsPtr, man: PxRigidBodyFlagsPtr, kind: PtrStruct
    wrp_this->setRigidBodyFlags(*wrp_inFlags);
}

//DEBUG: MethodNode physx::PxRigidBody::getRigidBodyFlags - 608
ES PxRigidBodyFlagsPtr PxRigidBodyFlagsPtr_const_physx_PxRigidBody_getRigidBodyFlags(PxRigidBodyPtr wrp_this){
    //RET nat: PxRigidBodyFlagsPtr, man: PxRigidBodyFlagsPtr, ret: True, kind: PtrStruct
    //PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
    auto ret = wrp_this->getRigidBodyFlags();
    auto heap = new char[sizeof PxRigidBodyFlags];
    std::memcpy(heap, &ret, sizeof PxRigidBodyFlags);
    return (PxRigidBodyFlagsPtr) heap;
}

//DEBUG: MethodNode physx::PxRigidBody::setMinCCDAdvanceCoefficient - 631
ES void void_physx_PxRigidBody_setMinCCDAdvanceCoefficient_float_(PxRigidBodyPtr wrp_this, float wrp_advanceCoefficient){
    //RET nat: void, man: void, ret: True, kind: Value
    //PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
    //PAR nat: float, man: float, kind: Value
    wrp_this->setMinCCDAdvanceCoefficient(wrp_advanceCoefficient);
}

//DEBUG: MethodNode physx::PxRigidBody::getMinCCDAdvanceCoefficient - 642
ES float float_const_physx_PxRigidBody_getMinCCDAdvanceCoefficient(PxRigidBodyPtr wrp_this){
    //RET nat: float, man: float, ret: True, kind: Value
    //PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
    return (float) wrp_this->getMinCCDAdvanceCoefficient();
}

//DEBUG: MethodNode physx::PxRigidBody::setMaxDepenetrationVelocity - 650
ES void void_physx_PxRigidBody_setMaxDepenetrationVelocity_float_(PxRigidBodyPtr wrp_this, float wrp_biasClamp){
    //RET nat: void, man: void, ret: True, kind: Value
    //PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
    //PAR nat: float, man: float, kind: Value
    wrp_this->setMaxDepenetrationVelocity(wrp_biasClamp);
}

//DEBUG: MethodNode physx::PxRigidBody::getMaxDepenetrationVelocity - 657
ES float float_const_physx_PxRigidBody_getMaxDepenetrationVelocity(PxRigidBodyPtr wrp_this){
    //RET nat: float, man: float, ret: True, kind: Value
    //PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
    return (float) wrp_this->getMaxDepenetrationVelocity();
}

//DEBUG: MethodNode physx::PxRigidBody::setMaxContactImpulse - 669
ES void void_physx_PxRigidBody_setMaxContactImpulse_float_(PxRigidBodyPtr wrp_this, float wrp_maxImpulse){
    //RET nat: void, man: void, ret: True, kind: Value
    //PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
    //PAR nat: float, man: float, kind: Value
    wrp_this->setMaxContactImpulse(wrp_maxImpulse);
}

//DEBUG: MethodNode physx::PxRigidBody::getMaxContactImpulse - 678
ES float float_const_physx_PxRigidBody_getMaxContactImpulse(PxRigidBodyPtr wrp_this){
    //RET nat: float, man: float, ret: True, kind: Value
    //PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
    return (float) wrp_this->getMaxContactImpulse();
}

//DEBUG: MethodNode physx::PxRigidBody::getInternalIslandNodeIndex - 685
ES unsigned int uint_const_physx_PxRigidBody_getInternalIslandNodeIndex(PxRigidBodyPtr wrp_this){
    //RET nat: unsigned int, man: uint, ret: True, kind: Value
    //PAR nat: PxRigidBodyPtr, man: physx.PxRigidBodyPtr, kind: PtrStruct
    return (unsigned int) wrp_this->getInternalIslandNodeIndex();
}

//DEBUG: MethodNode physx::PxRigidBody::operator= - 157
//ERRORS OCCURED IN physx::PxRigidBody::operator=
//Implicit Function/Method
//Unbindable Operator: Equal

//DEBUG: DeclNode physx::PxRigidBodyFlags - 148
// TODO DeclNode.GenWrapper()
