// Generated by minBND 5.1.81.43 - Â© github.com/Alan-FGR
ES void Default_physx_PxBounds3_(physx::PxBounds3* RetRef){
    *RetRef = *RetRef = physx::PxBounds3();
}

ES void void_physx_PxBounds3_PxBounds3_Ctor_physx_PxVec3_physx_PxVec3_(physx::PxBounds3* wrp_this, physx::PxVec3* wrp_minimum, physx::PxVec3* wrp_maximum){
    *wrp_this = physx::PxBounds3::PxBounds3(*wrp_minimum, *wrp_maximum);
}

ES void physx_PxBounds3_physx_PxBounds3_empty(physx::PxBounds3* RetRef, physx::PxBounds3* wrp_this){
    *RetRef = wrp_this->empty();
}

ES void physx_PxBounds3_physx_PxBounds3_boundsOfPoints_physx_PxVec3_physx_PxVec3_(physx::PxBounds3* RetRef, physx::PxBounds3* wrp_this, physx::PxVec3* wrp_v0, physx::PxVec3* wrp_v1){
    *RetRef = wrp_this->boundsOfPoints(*wrp_v0, *wrp_v1);
}

ES void physx_PxBounds3_physx_PxBounds3_centerExtents_physx_PxVec3_physx_PxVec3_(physx::PxBounds3* RetRef, physx::PxBounds3* wrp_this, physx::PxVec3* wrp_center, physx::PxVec3* wrp_extent){
    *RetRef = wrp_this->centerExtents(*wrp_center, *wrp_extent);
}

ES void physx_PxBounds3_physx_PxBounds3_basisExtent_physx_PxVec3_physx_PxMat33_physx_PxVec3_(physx::PxBounds3* RetRef, physx::PxBounds3* wrp_this, physx::PxVec3* wrp_center, physx::PxMat33* wrp_basis, physx::PxVec3* wrp_extent){
    *RetRef = wrp_this->basisExtent(*wrp_center, *wrp_basis, *wrp_extent);
}

ES void physx_PxBounds3_physx_PxBounds3_poseExtent_physx_PxTransform_physx_PxVec3_(physx::PxBounds3* RetRef, physx::PxBounds3* wrp_this, physx::PxTransform* wrp_pose, physx::PxVec3* wrp_extent){
    *RetRef = wrp_this->poseExtent(*wrp_pose, *wrp_extent);
}

ES void physx_PxBounds3_physx_PxBounds3_transformSafe_physx_PxMat33_physx_PxBounds3_(physx::PxBounds3* RetRef, physx::PxBounds3* wrp_this, physx::PxMat33* wrp_matrix, physx::PxBounds3* wrp_bounds){
    *RetRef = wrp_this->transformSafe(*wrp_matrix, *wrp_bounds);
}

ES void physx_PxBounds3_physx_PxBounds3_transformFast_physx_PxMat33_physx_PxBounds3_(physx::PxBounds3* RetRef, physx::PxBounds3* wrp_this, physx::PxMat33* wrp_matrix, physx::PxBounds3* wrp_bounds){
    *RetRef = wrp_this->transformFast(*wrp_matrix, *wrp_bounds);
}

ES void physx_PxBounds3_physx_PxBounds3_transformSafe_physx_PxTransform_physx_PxBounds3_(physx::PxBounds3* RetRef, physx::PxBounds3* wrp_this, physx::PxTransform* wrp_transform, physx::PxBounds3* wrp_bounds){
    *RetRef = wrp_this->transformSafe(*wrp_transform, *wrp_bounds);
}

ES void physx_PxBounds3_physx_PxBounds3_transformFast_physx_PxTransform_physx_PxBounds3_(physx::PxBounds3* RetRef, physx::PxBounds3* wrp_this, physx::PxTransform* wrp_transform, physx::PxBounds3* wrp_bounds){
    *RetRef = wrp_this->transformFast(*wrp_transform, *wrp_bounds);
}

ES void void_physx_PxBounds3_setEmpty(physx::PxBounds3* wrp_this){
    wrp_this->setEmpty();
}

ES void void_physx_PxBounds3_setMaximal(physx::PxBounds3* wrp_this){
    wrp_this->setMaximal();
}

ES void void_physx_PxBounds3_include_physx_PxVec3_(physx::PxBounds3* wrp_this, physx::PxVec3* wrp_v){
    wrp_this->include(*wrp_v);
}

ES void void_physx_PxBounds3_include_physx_PxBounds3_(physx::PxBounds3* wrp_this, physx::PxBounds3* wrp_b){
    wrp_this->include(*wrp_b);
}

ES bool bool_const_physx_PxBounds3_isEmpty(physx::PxBounds3* wrp_this){
    return (bool) wrp_this->isEmpty();
}

ES bool bool_const_physx_PxBounds3_intersects_physx_PxBounds3_(physx::PxBounds3* wrp_this, physx::PxBounds3* wrp_b){
    return (bool) wrp_this->intersects(*wrp_b);
}

ES bool bool_const_physx_PxBounds3_intersects1D_physx_PxBounds3_uint_(physx::PxBounds3* wrp_this, physx::PxBounds3* wrp_a, unsigned int wrp_axis){
    return (bool) wrp_this->intersects1D(*wrp_a, wrp_axis);
}

ES bool bool_const_physx_PxBounds3_contains_physx_PxVec3_(physx::PxBounds3* wrp_this, physx::PxVec3* wrp_v){
    return (bool) wrp_this->contains(*wrp_v);
}

ES bool bool_const_physx_PxBounds3_isInside_physx_PxBounds3_(physx::PxBounds3* wrp_this, physx::PxBounds3* wrp_box){
    return (bool) wrp_this->isInside(*wrp_box);
}

ES void physx_PxVec3_const_physx_PxBounds3_getCenter(physx::PxVec3* RetRef, physx::PxBounds3* wrp_this){
    *RetRef = wrp_this->getCenter();
}

ES float float_const_physx_PxBounds3_getCenter_uint_(physx::PxBounds3* wrp_this, unsigned int wrp_axis){
    return (float) wrp_this->getCenter(wrp_axis);
}

ES float float_const_physx_PxBounds3_getExtents_uint_(physx::PxBounds3* wrp_this, unsigned int wrp_axis){
    return (float) wrp_this->getExtents(wrp_axis);
}

ES void physx_PxVec3_const_physx_PxBounds3_getDimensions(physx::PxVec3* RetRef, physx::PxBounds3* wrp_this){
    *RetRef = wrp_this->getDimensions();
}

ES void physx_PxVec3_const_physx_PxBounds3_getExtents(physx::PxVec3* RetRef, physx::PxBounds3* wrp_this){
    *RetRef = wrp_this->getExtents();
}

ES void void_physx_PxBounds3_scaleSafe_float_(physx::PxBounds3* wrp_this, float wrp_scale){
    wrp_this->scaleSafe(wrp_scale);
}

ES void void_physx_PxBounds3_scaleFast_float_(physx::PxBounds3* wrp_this, float wrp_scale){
    wrp_this->scaleFast(wrp_scale);
}

ES void void_physx_PxBounds3_fattenSafe_float_(physx::PxBounds3* wrp_this, float wrp_distance){
    wrp_this->fattenSafe(wrp_distance);
}

ES void void_physx_PxBounds3_fattenFast_float_(physx::PxBounds3* wrp_this, float wrp_distance){
    wrp_this->fattenFast(wrp_distance);
}

ES bool bool_const_physx_PxBounds3_isFinite(physx::PxBounds3* wrp_this){
    return (bool) wrp_this->isFinite();
}

ES bool bool_const_physx_PxBounds3_isValid(physx::PxBounds3* wrp_this){
    return (bool) wrp_this->isValid();
}
