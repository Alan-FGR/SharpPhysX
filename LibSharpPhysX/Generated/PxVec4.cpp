// Generated by minBND 5.1.78.26 - Â© github.com/Alan-FGR
//DEBUG: UnitNode  - 0
//DEBUG: NamespaceNode physx - 45-372
//DEBUG: FunctionNode physx::operator* - 366-369
//Internal Op

//DEBUG: ClassNode physx::PxVec4 - 49-364
//DEBUG: DefaulterNode physx::PxVec4::PxVec4 - 55-57
ES void Default_physx_PxVec4_(physx::PxVec4* RetRef){
    //RET nat: physx::PxVec4, man: physx.PxVec4, ret: False, kind: Blittable
    *RetRef = *RetRef = physx::PxVec4();
}

//DEBUG: BlittableCtorNode physx::PxVec4::PxVec4 - 62-65
ES void void_physx_PxVec4_PxVec4_Ctor_physx_PxZERO_(physx::PxVec4* wrp_this, physx::PxZERO wrp_r){
    //RET nat: void, man: void, ret: True, kind: Value
    //PAR nat: physx::PxVec4, man: physx.PxVec4, kind: Blittable
    //PAR nat: physx::PxZERO, man: physx.PxZERO, kind: Value
    *wrp_this = physx::PxVec4::PxVec4(wrp_r);
}

//DEBUG: BlittableCtorNode physx::PxVec4::PxVec4 - 74-76
ES void void_physx_PxVec4_PxVec4_Ctor_float_(physx::PxVec4* wrp_this, float wrp_a){
    //RET nat: void, man: void, ret: True, kind: Value
    //PAR nat: physx::PxVec4, man: physx.PxVec4, kind: Blittable
    //PAR nat: float, man: float, kind: Value
    *wrp_this = physx::PxVec4::PxVec4(wrp_a);
}

//DEBUG: BlittableCtorNode physx::PxVec4::PxVec4 - 86-88
ES void void_physx_PxVec4_PxVec4_Ctor_float_float_float_float_(physx::PxVec4* wrp_this, float wrp_nx, float wrp_ny, float wrp_nz, float wrp_nw){
    //RET nat: void, man: void, ret: True, kind: Value
    //PAR nat: physx::PxVec4, man: physx.PxVec4, kind: Blittable
    //PAR nat: float, man: float, kind: Value
    //PAR nat: float, man: float, kind: Value
    //PAR nat: float, man: float, kind: Value
    //PAR nat: float, man: float, kind: Value
    *wrp_this = physx::PxVec4::PxVec4(wrp_nx, wrp_ny, wrp_nz, wrp_nw);
}

//DEBUG: BlittableCtorNode physx::PxVec4::PxVec4 - 96-98
ES void void_physx_PxVec4_PxVec4_Ctor_physx_PxVec3_float_(physx::PxVec4* wrp_this, physx::PxVec3* wrp_v, float wrp_nw){
    //RET nat: void, man: void, ret: True, kind: Value
    //PAR nat: physx::PxVec4, man: physx.PxVec4, kind: Blittable
    //PAR nat: physx::PxVec3*, man: physx.PxVec3*, kind: Value
    //PAR nat: float, man: float, kind: Value
    *wrp_this = physx::PxVec4::PxVec4(*wrp_v, wrp_nw);
}

//DEBUG: BlittableCtorNode physx::PxVec4::PxVec4 - 105-107
//ERRORS OCCURED IN physx::PxVec4::PxVec4
//////################################################################## FIXME
//Unparsed type ( TODO ): float[]

//DEBUG: BlittableCtorNode physx::PxVec4::PxVec4 - 112-114
ES void void_physx_PxVec4_PxVec4_Ctor_physx_PxVec4_(physx::PxVec4* wrp_this, physx::PxVec4* wrp_v){
    //RET nat: void, man: void, ret: True, kind: Value
    //PAR nat: physx::PxVec4, man: physx.PxVec4, kind: Blittable
    //PAR nat: physx::PxVec4*, man: physx.PxVec4*, kind: Value
    *wrp_this = physx::PxVec4::PxVec4(*wrp_v);
}

//DEBUG: MethodNode physx::PxVec4::operator= - 121-128
//ERRORS OCCURED IN physx::PxVec4::operator=
//Unbindable Operator: Equal

//DEBUG: MethodNode physx::PxVec4::operator[] - 133-138
//ERRORS OCCURED IN physx::PxVec4::operator[]
//Unbindable Operator: Subscript

//DEBUG: MethodNode physx::PxVec4::operator[] - 143-148
//ERRORS OCCURED IN physx::PxVec4::operator[]
//Unbindable Operator: Subscript

//DEBUG: MethodNode physx::PxVec4::operator== - 153-156
ES bool bool_const_physx_PxVec4_operator_EqualEqual_physx_PxVec4_(physx::PxVec4* wrp_lhs, physx::PxVec4* wrp_v){
    //RET nat: bool, man: bool, ret: True, kind: Value
    //PAR nat: physx::PxVec4, man: physx.PxVec4, kind: Blittable
    //PAR nat: physx::PxVec4*, man: physx.PxVec4*, kind: Value
    return (bool) wrp_lhs->operator==(*wrp_v);
}

//DEBUG: MethodNode physx::PxVec4::operator!= - 161-164
ES bool bool_const_physx_PxVec4_operator_ExclaimEqual_physx_PxVec4_(physx::PxVec4* wrp_lhs, physx::PxVec4* wrp_v){
    //RET nat: bool, man: bool, ret: True, kind: Value
    //PAR nat: physx::PxVec4, man: physx.PxVec4, kind: Blittable
    //PAR nat: physx::PxVec4*, man: physx.PxVec4*, kind: Value
    return (bool) wrp_lhs->operator!=(*wrp_v);
}

//DEBUG: MethodNode physx::PxVec4::isZero - 169-172
ES bool bool_const_physx_PxVec4_isZero(physx::PxVec4* wrp_this){
    //RET nat: bool, man: bool, ret: True, kind: Value
    //PAR nat: physx::PxVec4, man: physx.PxVec4, kind: Blittable
    return (bool) wrp_this->isZero();
}

//DEBUG: MethodNode physx::PxVec4::isFinite - 177-180
ES bool bool_const_physx_PxVec4_isFinite(physx::PxVec4* wrp_this){
    //RET nat: bool, man: bool, ret: True, kind: Value
    //PAR nat: physx::PxVec4, man: physx.PxVec4, kind: Blittable
    return (bool) wrp_this->isFinite();
}

//DEBUG: MethodNode physx::PxVec4::isNormalized - 185-189
ES bool bool_const_physx_PxVec4_isNormalized(physx::PxVec4* wrp_this){
    //RET nat: bool, man: bool, ret: True, kind: Value
    //PAR nat: physx::PxVec4, man: physx.PxVec4, kind: Blittable
    return (bool) wrp_this->isNormalized();
}

//DEBUG: MethodNode physx::PxVec4::magnitudeSquared - 196-199
ES float float_const_physx_PxVec4_magnitudeSquared(physx::PxVec4* wrp_this){
    //RET nat: float, man: float, ret: True, kind: Value
    //PAR nat: physx::PxVec4, man: physx.PxVec4, kind: Blittable
    return (float) wrp_this->magnitudeSquared();
}

//DEBUG: MethodNode physx::PxVec4::magnitude - 204-207
ES float float_const_physx_PxVec4_magnitude(physx::PxVec4* wrp_this){
    //RET nat: float, man: float, ret: True, kind: Value
    //PAR nat: physx::PxVec4, man: physx.PxVec4, kind: Blittable
    return (float) wrp_this->magnitude();
}

//DEBUG: MethodNode physx::PxVec4::operator- - 212-215
ES void physx_PxVec4_const_physx_PxVec4_operator_Minus(physx::PxVec4* RetRef, physx::PxVec4* wrp_lhs){
    //RET nat: physx::PxVec4, man: physx.PxVec4, ret: False, kind: Blittable
    //PAR nat: physx::PxVec4, man: physx.PxVec4, kind: Blittable
    *RetRef = wrp_lhs->operator-();
}

//DEBUG: MethodNode physx::PxVec4::operator+ - 220-223
ES void physx_PxVec4_const_physx_PxVec4_operator_Plus_physx_PxVec4_(physx::PxVec4* RetRef, physx::PxVec4* wrp_lhs, physx::PxVec4* wrp_v){
    //RET nat: physx::PxVec4, man: physx.PxVec4, ret: False, kind: Blittable
    //PAR nat: physx::PxVec4, man: physx.PxVec4, kind: Blittable
    //PAR nat: physx::PxVec4*, man: physx.PxVec4*, kind: Value
    *RetRef = wrp_lhs->operator+(*wrp_v);
}

//DEBUG: MethodNode physx::PxVec4::operator- - 228-231
ES void physx_PxVec4_const_physx_PxVec4_operator_Minus_physx_PxVec4_(physx::PxVec4* RetRef, physx::PxVec4* wrp_lhs, physx::PxVec4* wrp_v){
    //RET nat: physx::PxVec4, man: physx.PxVec4, ret: False, kind: Blittable
    //PAR nat: physx::PxVec4, man: physx.PxVec4, kind: Blittable
    //PAR nat: physx::PxVec4*, man: physx.PxVec4*, kind: Value
    *RetRef = wrp_lhs->operator-(*wrp_v);
}

//DEBUG: MethodNode physx::PxVec4::operator* - 237-240
ES void physx_PxVec4_const_physx_PxVec4_operator_Star_float_(physx::PxVec4* RetRef, physx::PxVec4* wrp_lhs, float wrp_f){
    //RET nat: physx::PxVec4, man: physx.PxVec4, ret: False, kind: Blittable
    //PAR nat: physx::PxVec4, man: physx.PxVec4, kind: Blittable
    //PAR nat: float, man: float, kind: Value
    *RetRef = wrp_lhs->operator*(wrp_f);
}

//DEBUG: MethodNode physx::PxVec4::operator/ - 245-249
ES void physx_PxVec4_const_physx_PxVec4_operator_Slash_float_(physx::PxVec4* RetRef, physx::PxVec4* wrp_lhs, float wrp_f){
    //RET nat: physx::PxVec4, man: physx.PxVec4, ret: False, kind: Blittable
    //PAR nat: physx::PxVec4, man: physx.PxVec4, kind: Blittable
    //PAR nat: float, man: float, kind: Value
    *RetRef = wrp_lhs->operator/(wrp_f);
}

//DEBUG: MethodNode physx::PxVec4::operator+= - 254-261
//ERRORS OCCURED IN physx::PxVec4::operator+=
//Unbindable Operator: PlusEqual

//DEBUG: MethodNode physx::PxVec4::operator-= - 266-273
//ERRORS OCCURED IN physx::PxVec4::operator-=
//Unbindable Operator: MinusEqual

//DEBUG: MethodNode physx::PxVec4::operator*= - 278-285
//ERRORS OCCURED IN physx::PxVec4::operator*=
//Unbindable Operator: StarEqual

//DEBUG: MethodNode physx::PxVec4::operator/= - 289-297
//ERRORS OCCURED IN physx::PxVec4::operator/=
//Unbindable Operator: SlashEqual

//DEBUG: MethodNode physx::PxVec4::dot - 302-305
ES float float_const_physx_PxVec4_dot_physx_PxVec4_(physx::PxVec4* wrp_this, physx::PxVec4* wrp_v){
    //RET nat: float, man: float, ret: True, kind: Value
    //PAR nat: physx::PxVec4, man: physx.PxVec4, kind: Blittable
    //PAR nat: physx::PxVec4*, man: physx.PxVec4*, kind: Value
    return (float) wrp_this->dot(*wrp_v);
}

//DEBUG: MethodNode physx::PxVec4::getNormalized - 309-313
ES void physx_PxVec4_const_physx_PxVec4_getNormalized(physx::PxVec4* RetRef, physx::PxVec4* wrp_this){
    //RET nat: physx::PxVec4, man: physx.PxVec4, ret: False, kind: Blittable
    //PAR nat: physx::PxVec4, man: physx.PxVec4, kind: Blittable
    *RetRef = wrp_this->getNormalized();
}

//DEBUG: MethodNode physx::PxVec4::normalize - 318-324
ES float float_physx_PxVec4_normalize(physx::PxVec4* wrp_this){
    //RET nat: float, man: float, ret: True, kind: Value
    //PAR nat: physx::PxVec4, man: physx.PxVec4, kind: Blittable
    return (float) wrp_this->normalize();
}

//DEBUG: MethodNode physx::PxVec4::multiply - 329-332
ES void physx_PxVec4_const_physx_PxVec4_multiply_physx_PxVec4_(physx::PxVec4* RetRef, physx::PxVec4* wrp_this, physx::PxVec4* wrp_a){
    //RET nat: physx::PxVec4, man: physx.PxVec4, ret: False, kind: Blittable
    //PAR nat: physx::PxVec4, man: physx.PxVec4, kind: Blittable
    //PAR nat: physx::PxVec4*, man: physx.PxVec4*, kind: Value
    *RetRef = wrp_this->multiply(*wrp_a);
}

//DEBUG: MethodNode physx::PxVec4::minimum - 337-340
ES void physx_PxVec4_const_physx_PxVec4_minimum_physx_PxVec4_(physx::PxVec4* RetRef, physx::PxVec4* wrp_this, physx::PxVec4* wrp_v){
    //RET nat: physx::PxVec4, man: physx.PxVec4, ret: False, kind: Blittable
    //PAR nat: physx::PxVec4, man: physx.PxVec4, kind: Blittable
    //PAR nat: physx::PxVec4*, man: physx.PxVec4*, kind: Value
    *RetRef = wrp_this->minimum(*wrp_v);
}

//DEBUG: MethodNode physx::PxVec4::maximum - 345-348
ES void physx_PxVec4_const_physx_PxVec4_maximum_physx_PxVec4_(physx::PxVec4* RetRef, physx::PxVec4* wrp_this, physx::PxVec4* wrp_v){
    //RET nat: physx::PxVec4, man: physx.PxVec4, ret: False, kind: Blittable
    //PAR nat: physx::PxVec4, man: physx.PxVec4, kind: Blittable
    //PAR nat: physx::PxVec4*, man: physx.PxVec4*, kind: Value
    *RetRef = wrp_this->maximum(*wrp_v);
}

//DEBUG: MethodNode physx::PxVec4::getXYZ - 350-353
ES void physx_PxVec3_const_physx_PxVec4_getXYZ(physx::PxVec3* RetRef, physx::PxVec4* wrp_this){
    //RET nat: physx::PxVec3, man: physx.PxVec3, ret: False, kind: Blittable
    //PAR nat: physx::PxVec4, man: physx.PxVec4, kind: Blittable
    *RetRef = wrp_this->getXYZ();
}

//DEBUG: MethodNode physx::PxVec4::setZero - 358-361
ES void void_physx_PxVec4_setZero(physx::PxVec4* wrp_this){
    //RET nat: void, man: void, ret: True, kind: Value
    //PAR nat: physx::PxVec4, man: physx.PxVec4, kind: Blittable
    wrp_this->setZero();
}

//DEBUG: MethodNode physx::PxVec4::~PxVec4 - 49
//ERRORS OCCURED IN physx::PxVec4::~PxVec4
//Implicit Function/Method
//Destructor
    //DEBUG: ExternalOpNode physx::operator* - 366-369
    ES void physx_PxVec4_physx_operator_Star_float_physx_PxVec4_(physx::PxVec4* RetRef, float wrp_f, physx::PxVec4* wrp_v){
        //RET nat: physx::PxVec4, man: physx.PxVec4, ret: False, kind: Blittable
        //PAR nat: float, man: float, kind: Value
        //PAR nat: physx::PxVec4*, man: physx.PxVec4*, kind: Value
        *RetRef = operator*(wrp_f, *wrp_v);
    }
