// Generated by minBND 5.1.78.10 - Â© github.com/Alan-FGR
ES float float_physx_PxMax_float_float_(float wrp_a, float wrp_b){
    return (float) physx::PxMax(wrp_a, wrp_b);
}

ES float float_physx_PxMin_float_float_(float wrp_a, float wrp_b){
    return (float) physx::PxMin(wrp_a, wrp_b);
}

ES float float_physx_PxAbs_float_(float wrp_a){
    return (float) physx::PxAbs(wrp_a);
}

ES bool bool_physx_PxEquals_float_float_float_(float wrp_a, float wrp_b, float wrp_eps){
    return (bool) physx::PxEquals(wrp_a, wrp_b, wrp_eps);
}

ES double double_physx_PxAbs_double_(double wrp_a){
    return (double) physx::PxAbs(wrp_a);
}

ES int int_physx_PxAbs_int_(int wrp_a){
    return (int) physx::PxAbs(wrp_a);
}

ES float float_physx_PxSqrt_float_(float wrp_a){
    return (float) physx::PxSqrt(wrp_a);
}

ES double double_physx_PxSqrt_double_(double wrp_a){
    return (double) physx::PxSqrt(wrp_a);
}

ES float float_physx_PxRecipSqrt_float_(float wrp_a){
    return (float) physx::PxRecipSqrt(wrp_a);
}

ES double double_physx_PxRecipSqrt_double_(double wrp_a){
    return (double) physx::PxRecipSqrt(wrp_a);
}

ES float float_physx_PxSin_float_(float wrp_a){
    return (float) physx::PxSin(wrp_a);
}

ES double double_physx_PxSin_double_(double wrp_a){
    return (double) physx::PxSin(wrp_a);
}

ES float float_physx_PxCos_float_(float wrp_a){
    return (float) physx::PxCos(wrp_a);
}

ES double double_physx_PxCos_double_(double wrp_a){
    return (double) physx::PxCos(wrp_a);
}

ES float float_physx_PxTan_float_(float wrp_a){
    return (float) physx::PxTan(wrp_a);
}

ES double double_physx_PxTan_double_(double wrp_a){
    return (double) physx::PxTan(wrp_a);
}

ES float float_physx_PxAsin_float_(float wrp_f){
    return (float) physx::PxAsin(wrp_f);
}

ES double double_physx_PxAsin_double_(double wrp_f){
    return (double) physx::PxAsin(wrp_f);
}

ES float float_physx_PxAcos_float_(float wrp_f){
    return (float) physx::PxAcos(wrp_f);
}

ES double double_physx_PxAcos_double_(double wrp_f){
    return (double) physx::PxAcos(wrp_f);
}

ES float float_physx_PxAtan_float_(float wrp_a){
    return (float) physx::PxAtan(wrp_a);
}

ES double double_physx_PxAtan_double_(double wrp_a){
    return (double) physx::PxAtan(wrp_a);
}

ES float float_physx_PxAtan2_float_float_(float wrp_x, float wrp_y){
    return (float) physx::PxAtan2(wrp_x, wrp_y);
}

ES double double_physx_PxAtan2_double_double_(double wrp_x, double wrp_y){
    return (double) physx::PxAtan2(wrp_x, wrp_y);
}

ES bool bool_physx_PxIsFinite_float_(float wrp_f){
    return (bool) physx::PxIsFinite(wrp_f);
}

ES bool bool_physx_PxIsFinite_double_(double wrp_f){
    return (bool) physx::PxIsFinite(wrp_f);
}

ES float float_physx_PxFloor_float_(float wrp_a){
    return (float) physx::PxFloor(wrp_a);
}

ES float float_physx_PxExp_float_(float wrp_a){
    return (float) physx::PxExp(wrp_a);
}

ES float float_physx_PxCeil_float_(float wrp_a){
    return (float) physx::PxCeil(wrp_a);
}

ES float float_physx_PxSign_float_(float wrp_a){
    return (float) physx::PxSign(wrp_a);
}

ES float float_physx_PxPow_float_float_(float wrp_x, float wrp_y){
    return (float) physx::PxPow(wrp_x, wrp_y);
}

ES float float_physx_PxLog_float_(float wrp_x){
    return (float) physx::PxLog(wrp_x);
}
