// Generated by minBND 5.1.81.43 - Â© github.com/Alan-FGR
ES void void_physx_PxGpuDispatcher_startSimulation(PxGpuDispatcherPtr wrp_this){
    wrp_this->startSimulation();
}

ES void void_physx_PxGpuDispatcher_startGroup(PxGpuDispatcherPtr wrp_this){
    wrp_this->startGroup();
}

ES void void_physx_PxGpuDispatcher_submitTask_physx_PxTaskPtr_(PxGpuDispatcherPtr wrp_this, PxTaskPtr wrp_task){
    wrp_this->submitTask(*wrp_task);
}

ES void void_physx_PxGpuDispatcher_finishGroup(PxGpuDispatcherPtr wrp_this){
    wrp_this->finishGroup();
}

ES void void_physx_PxGpuDispatcher_addCompletionPrereq_physx_PxBaseTaskPtr_(PxGpuDispatcherPtr wrp_this, PxBaseTaskPtr wrp_task){
    wrp_this->addCompletionPrereq(*wrp_task);
}

ES void void_physx_PxGpuDispatcher_stopSimulation(PxGpuDispatcherPtr wrp_this){
    wrp_this->stopSimulation();
}

ES bool bool_const_physx_PxGpuDispatcher_failureDetected(PxGpuDispatcherPtr wrp_this){
    return (bool) wrp_this->failureDetected();
}

ES void void_physx_PxGpuDispatcher_forceFailureMode(PxGpuDispatcherPtr wrp_this){
    wrp_this->forceFailureMode();
}

ES void void_physx_PxGpuDispatcher_launchCopyKernel_physx_PxGpuCopyDescPtr_uint_CUstream_(PxGpuDispatcherPtr wrp_this, PxGpuCopyDescPtr wrp_desc, unsigned int wrp_count, CUstream wrp_stream){
    wrp_this->launchCopyKernel(wrp_desc, wrp_count, wrp_stream);
}

ES PxBaseTaskPtr physx_PxBaseTaskPtr_physx_PxGpuDispatcher_getPreLaunchTask(PxGpuDispatcherPtr wrp_this){
    return (PxBaseTaskPtr) &wrp_this->getPreLaunchTask();
}

ES void void_physx_PxGpuDispatcher_addPreLaunchDependent_physx_PxBaseTaskPtr_(PxGpuDispatcherPtr wrp_this, PxBaseTaskPtr wrp_dependent){
    wrp_this->addPreLaunchDependent(*wrp_dependent);
}

ES PxBaseTaskPtr physx_PxBaseTaskPtr_physx_PxGpuDispatcher_getPostLaunchTask(PxGpuDispatcherPtr wrp_this){
    return (PxBaseTaskPtr) &wrp_this->getPostLaunchTask();
}

ES void void_physx_PxGpuDispatcher_addPostLaunchDependent_physx_PxBaseTaskPtr_(PxGpuDispatcherPtr wrp_this, PxBaseTaskPtr wrp_dependent){
    wrp_this->addPostLaunchDependent(*wrp_dependent);
}
