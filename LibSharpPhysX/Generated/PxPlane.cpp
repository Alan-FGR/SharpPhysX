// Generated by minBND 5.1.78.26 - Â© github.com/Alan-FGR
//DEBUG: UnitNode  - 0
//DEBUG: NamespaceNode physx - 41-141
//DEBUG: ClassNode physx::PxPlane - 50-138
//DEBUG: DefaulterNode physx::PxPlane::PxPlane - 56-58
ES void Default_physx_PxPlane_(physx::PxPlane* RetRef){
    //RET nat: physx::PxPlane, man: physx.PxPlane, ret: False, kind: Blittable
    *RetRef = *RetRef = physx::PxPlane();
}

//DEBUG: BlittableCtorNode physx::PxPlane::PxPlane - 63-65
ES void void_physx_PxPlane_PxPlane_Ctor_float_float_float_float_(physx::PxPlane* wrp_this, float wrp_nx, float wrp_ny, float wrp_nz, float wrp_distance){
    //RET nat: void, man: void, ret: True, kind: Value
    //PAR nat: physx::PxPlane, man: physx.PxPlane, kind: Blittable
    //PAR nat: float, man: float, kind: Value
    //PAR nat: float, man: float, kind: Value
    //PAR nat: float, man: float, kind: Value
    //PAR nat: float, man: float, kind: Value
    *wrp_this = physx::PxPlane::PxPlane(wrp_nx, wrp_ny, wrp_nz, wrp_distance);
}

//DEBUG: BlittableCtorNode physx::PxPlane::PxPlane - 70-72
ES void void_physx_PxPlane_PxPlane_Ctor_physx_PxVec3_float_(physx::PxPlane* wrp_this, physx::PxVec3* wrp_normal, float wrp_distance){
    //RET nat: void, man: void, ret: True, kind: Value
    //PAR nat: physx::PxPlane, man: physx.PxPlane, kind: Blittable
    //PAR nat: physx::PxVec3*, man: physx.PxVec3*, kind: Value
    //PAR nat: float, man: float, kind: Value
    *wrp_this = physx::PxPlane::PxPlane(*wrp_normal, wrp_distance);
}

//DEBUG: BlittableCtorNode physx::PxPlane::PxPlane - 77-80
ES void void_physx_PxPlane_PxPlane_Ctor_physx_PxVec3_physx_PxVec3_(physx::PxPlane* wrp_this, physx::PxVec3* wrp_point, physx::PxVec3* wrp_normal){
    //RET nat: void, man: void, ret: True, kind: Value
    //PAR nat: physx::PxPlane, man: physx.PxPlane, kind: Blittable
    //PAR nat: physx::PxVec3*, man: physx.PxVec3*, kind: Value
    //PAR nat: physx::PxVec3*, man: physx.PxVec3*, kind: Value
    *wrp_this = physx::PxPlane::PxPlane(*wrp_point, *wrp_normal);
}

//DEBUG: BlittableCtorNode physx::PxPlane::PxPlane - 85-89
ES void void_physx_PxPlane_PxPlane_Ctor_physx_PxVec3_physx_PxVec3_physx_PxVec3_(physx::PxPlane* wrp_this, physx::PxVec3* wrp_p0, physx::PxVec3* wrp_p1, physx::PxVec3* wrp_p2){
    //RET nat: void, man: void, ret: True, kind: Value
    //PAR nat: physx::PxPlane, man: physx.PxPlane, kind: Blittable
    //PAR nat: physx::PxVec3*, man: physx.PxVec3*, kind: Value
    //PAR nat: physx::PxVec3*, man: physx.PxVec3*, kind: Value
    //PAR nat: physx::PxVec3*, man: physx.PxVec3*, kind: Value
    *wrp_this = physx::PxPlane::PxPlane(*wrp_p0, *wrp_p1, *wrp_p2);
}

//DEBUG: MethodNode physx::PxPlane::operator== - 94-97
ES bool bool_const_physx_PxPlane_operator_EqualEqual_physx_PxPlane_(physx::PxPlane* wrp_lhs, physx::PxPlane* wrp_p){
    //RET nat: bool, man: bool, ret: True, kind: Value
    //PAR nat: physx::PxPlane, man: physx.PxPlane, kind: Blittable
    //PAR nat: physx::PxPlane*, man: physx.PxPlane*, kind: Value
    return (bool) wrp_lhs->operator==(*wrp_p);
}

//DEBUG: MethodNode physx::PxPlane::distance - 99-102
ES float float_const_physx_PxPlane_distance_physx_PxVec3_(physx::PxPlane* wrp_this, physx::PxVec3* wrp_p){
    //RET nat: float, man: float, ret: True, kind: Value
    //PAR nat: physx::PxPlane, man: physx.PxPlane, kind: Blittable
    //PAR nat: physx::PxVec3*, man: physx.PxVec3*, kind: Value
    return (float) wrp_this->distance(*wrp_p);
}

//DEBUG: MethodNode physx::PxPlane::contains - 104-107
ES bool bool_const_physx_PxPlane_contains_physx_PxVec3_(physx::PxPlane* wrp_this, physx::PxVec3* wrp_p){
    //RET nat: bool, man: bool, ret: True, kind: Value
    //PAR nat: physx::PxPlane, man: physx.PxPlane, kind: Blittable
    //PAR nat: physx::PxVec3*, man: physx.PxVec3*, kind: Value
    return (bool) wrp_this->contains(*wrp_p);
}

//DEBUG: MethodNode physx::PxPlane::project - 112-115
ES void physx_PxVec3_const_physx_PxPlane_project_physx_PxVec3_(physx::PxVec3* RetRef, physx::PxPlane* wrp_this, physx::PxVec3* wrp_p){
    //RET nat: physx::PxVec3, man: physx.PxVec3, ret: False, kind: Blittable
    //PAR nat: physx::PxPlane, man: physx.PxPlane, kind: Blittable
    //PAR nat: physx::PxVec3*, man: physx.PxVec3*, kind: Value
    *RetRef = wrp_this->project(*wrp_p);
}

//DEBUG: MethodNode physx::PxPlane::pointInPlane - 120-123
ES void physx_PxVec3_const_physx_PxPlane_pointInPlane(physx::PxVec3* RetRef, physx::PxPlane* wrp_this){
    //RET nat: physx::PxVec3, man: physx.PxVec3, ret: False, kind: Blittable
    //PAR nat: physx::PxPlane, man: physx.PxPlane, kind: Blittable
    *RetRef = wrp_this->pointInPlane();
}

//DEBUG: MethodNode physx::PxPlane::normalize - 129-134
ES void void_physx_PxPlane_normalize(physx::PxPlane* wrp_this){
    //RET nat: void, man: void, ret: True, kind: Value
    //PAR nat: physx::PxPlane, man: physx.PxPlane, kind: Blittable
    wrp_this->normalize();
}

//DEBUG: BlittableCtorNode physx::PxPlane::PxPlane - 50
//ERRORS OCCURED IN physx::PxPlane::PxPlane
//Implicit Function/Method

//DEBUG: BlittableCtorNode physx::PxPlane::PxPlane - 50
//ERRORS OCCURED IN physx::PxPlane::PxPlane
//Implicit Function/Method

//DEBUG: MethodNode physx::PxPlane::operator= - 50
//ERRORS OCCURED IN physx::PxPlane::operator=
//Implicit Function/Method
//Unbindable Operator: Equal

//DEBUG: MethodNode physx::PxPlane::~PxPlane - 50
//ERRORS OCCURED IN physx::PxPlane::~PxPlane
//Implicit Function/Method
//Destructor

//DEBUG: MethodNode physx::PxPlane::operator= - 50
//ERRORS OCCURED IN physx::PxPlane::operator=
//Implicit Function/Method
//Unbindable Operator: Equal
