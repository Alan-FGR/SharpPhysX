// Generated by minBND 5.1.78.26 - Â© github.com/Alan-FGR
//DEBUG: UnitNode  - 0
//DEBUG: NamespaceNode physx - 41-320
//DEBUG: FunctionNode physx::operator| - 90
//Internal Op

//DEBUG: FunctionNode physx::operator& - 90
//Internal Op

//DEBUG: FunctionNode physx::operator~ - 90
//Internal Op

//DEBUG: ClassNode physx::PxMaterialFlag - 52-82
//DEBUG: EnumNode physx::PxMaterialFlag::Enum - 54-81
// TODO EnumNode.GenWrapper()

//DEBUG: ClassNode physx::PxCombineMode - 112-123
//DEBUG: EnumNode physx::PxCombineMode::Enum - 114-122
// TODO EnumNode.GenWrapper()

//DEBUG: ClassNode physx::PxMaterial - 130-317
//Bases: PxBasePtr
//DEBUG: GetterSetterNode physx::PxMaterial - 130-317
//Field: userData - 307-307
ES void* PxMaterial_GET_userData(PxMaterialPtr cls) {return (void*)cls->userData;}
ES void PxMaterial_SET_userData(PxMaterialPtr cls, void* value) {cls->userData = value;}

//DEBUG: MethodNode physx::PxMaterial::release - 139
ES void void_physx_PxMaterial_release(PxMaterialPtr wrp_this){
    //RET nat: void, man: void, ret: True, kind: Value
    //PAR nat: PxMaterialPtr, man: physx.PxMaterialPtr, kind: PtrStruct
    wrp_this->release();
}

//DEBUG: MethodNode physx::PxMaterial::getReferenceCount - 149
ES unsigned int uint_const_physx_PxMaterial_getReferenceCount(PxMaterialPtr wrp_this){
    //RET nat: unsigned int, man: uint, ret: True, kind: Value
    //PAR nat: PxMaterialPtr, man: physx.PxMaterialPtr, kind: PtrStruct
    return (unsigned int) wrp_this->getReferenceCount();
}

//DEBUG: MethodNode physx::PxMaterial::acquireReference - 156
ES void void_physx_PxMaterial_acquireReference(PxMaterialPtr wrp_this){
    //RET nat: void, man: void, ret: True, kind: Value
    //PAR nat: PxMaterialPtr, man: physx.PxMaterialPtr, kind: PtrStruct
    wrp_this->acquireReference();
}

//DEBUG: MethodNode physx::PxMaterial::setDynamicFriction - 169
ES void void_physx_PxMaterial_setDynamicFriction_float_(PxMaterialPtr wrp_this, float wrp_coef){
    //RET nat: void, man: void, ret: True, kind: Value
    //PAR nat: PxMaterialPtr, man: physx.PxMaterialPtr, kind: PtrStruct
    //PAR nat: float, man: float, kind: Value
    wrp_this->setDynamicFriction(wrp_coef);
}

//DEBUG: MethodNode physx::PxMaterial::getDynamicFriction - 178
ES float float_const_physx_PxMaterial_getDynamicFriction(PxMaterialPtr wrp_this){
    //RET nat: float, man: float, ret: True, kind: Value
    //PAR nat: PxMaterialPtr, man: physx.PxMaterialPtr, kind: PtrStruct
    return (float) wrp_this->getDynamicFriction();
}

//DEBUG: MethodNode physx::PxMaterial::setStaticFriction - 191
ES void void_physx_PxMaterial_setStaticFriction_float_(PxMaterialPtr wrp_this, float wrp_coef){
    //RET nat: void, man: void, ret: True, kind: Value
    //PAR nat: PxMaterialPtr, man: physx.PxMaterialPtr, kind: PtrStruct
    //PAR nat: float, man: float, kind: Value
    wrp_this->setStaticFriction(wrp_coef);
}

//DEBUG: MethodNode physx::PxMaterial::getStaticFriction - 199
ES float float_const_physx_PxMaterial_getStaticFriction(PxMaterialPtr wrp_this){
    //RET nat: float, man: float, ret: True, kind: Value
    //PAR nat: PxMaterialPtr, man: physx.PxMaterialPtr, kind: PtrStruct
    return (float) wrp_this->getStaticFriction();
}

//DEBUG: MethodNode physx::PxMaterial::setRestitution - 212
ES void void_physx_PxMaterial_setRestitution_float_(PxMaterialPtr wrp_this, float wrp_rest){
    //RET nat: void, man: void, ret: True, kind: Value
    //PAR nat: PxMaterialPtr, man: physx.PxMaterialPtr, kind: PtrStruct
    //PAR nat: float, man: float, kind: Value
    wrp_this->setRestitution(wrp_rest);
}

//DEBUG: MethodNode physx::PxMaterial::getRestitution - 223
ES float float_const_physx_PxMaterial_getRestitution(PxMaterialPtr wrp_this){
    //RET nat: float, man: float, ret: True, kind: Value
    //PAR nat: PxMaterialPtr, man: physx.PxMaterialPtr, kind: PtrStruct
    return (float) wrp_this->getRestitution();
}

//DEBUG: MethodNode physx::PxMaterial::setFlag - 236
ES void void_physx_PxMaterial_setFlag_physx_PxMaterialFlagEnum_bool_(PxMaterialPtr wrp_this, physx::PxMaterialFlag::Enum wrp_flag, bool wrp__2){
    //RET nat: void, man: void, ret: True, kind: Value
    //PAR nat: PxMaterialPtr, man: physx.PxMaterialPtr, kind: PtrStruct
    //PAR nat: physx::PxMaterialFlag::Enum, man: physx.PxMaterialFlagEnum, kind: Value
    //PAR nat: bool, man: bool, kind: Value
    wrp_this->setFlag(wrp_flag, wrp__2);
}

//DEBUG: MethodNode physx::PxMaterial::setFlags - 247
ES void void_physx_PxMaterial_setFlags_PxMaterialFlagsPtr_(PxMaterialPtr wrp_this, PxMaterialFlagsPtr wrp_inFlags){
    //RET nat: void, man: void, ret: True, kind: Value
    //PAR nat: PxMaterialPtr, man: physx.PxMaterialPtr, kind: PtrStruct
    //PAR nat: PxMaterialFlagsPtr, man: PxMaterialFlagsPtr, kind: PtrStruct
    wrp_this->setFlags(*wrp_inFlags);
}

//DEBUG: MethodNode physx::PxMaterial::getFlags - 256
ES PxMaterialFlagsPtr PxMaterialFlagsPtr_const_physx_PxMaterial_getFlags(PxMaterialPtr wrp_this){
    //RET nat: PxMaterialFlagsPtr, man: PxMaterialFlagsPtr, ret: True, kind: PtrStruct
    //PAR nat: PxMaterialPtr, man: physx.PxMaterialPtr, kind: PtrStruct
    auto ret = wrp_this->getFlags();
    auto heap = new char[sizeof PxMaterialFlags];
    std::memcpy(heap, &ret, sizeof PxMaterialFlags);
    return (PxMaterialFlagsPtr) heap;
}

//DEBUG: MethodNode physx::PxMaterial::setFrictionCombineMode - 269
ES void void_physx_PxMaterial_setFrictionCombineMode_physx_PxCombineModeEnum_(PxMaterialPtr wrp_this, physx::PxCombineMode::Enum wrp_combMode){
    //RET nat: void, man: void, ret: True, kind: Value
    //PAR nat: PxMaterialPtr, man: physx.PxMaterialPtr, kind: PtrStruct
    //PAR nat: physx::PxCombineMode::Enum, man: physx.PxCombineModeEnum, kind: Value
    wrp_this->setFrictionCombineMode(wrp_combMode);
}

//DEBUG: MethodNode physx::PxMaterial::getFrictionCombineMode - 280
ES physx::PxCombineMode::Enum physx_PxCombineModeEnum_const_physx_PxMaterial_getFrictionCombineMode(PxMaterialPtr wrp_this){
    //RET nat: physx::PxCombineMode::Enum, man: physx.PxCombineModeEnum, ret: True, kind: Value
    //PAR nat: PxMaterialPtr, man: physx.PxMaterialPtr, kind: PtrStruct
    return (physx::PxCombineMode::Enum) wrp_this->getFrictionCombineMode();
}

//DEBUG: MethodNode physx::PxMaterial::setRestitutionCombineMode - 293
ES void void_physx_PxMaterial_setRestitutionCombineMode_physx_PxCombineModeEnum_(PxMaterialPtr wrp_this, physx::PxCombineMode::Enum wrp_combMode){
    //RET nat: void, man: void, ret: True, kind: Value
    //PAR nat: PxMaterialPtr, man: physx.PxMaterialPtr, kind: PtrStruct
    //PAR nat: physx::PxCombineMode::Enum, man: physx.PxCombineModeEnum, kind: Value
    wrp_this->setRestitutionCombineMode(wrp_combMode);
}

//DEBUG: MethodNode physx::PxMaterial::getRestitutionCombineMode - 304
ES physx::PxCombineMode::Enum physx_PxCombineModeEnum_const_physx_PxMaterial_getRestitutionCombineMode(PxMaterialPtr wrp_this){
    //RET nat: physx::PxCombineMode::Enum, man: physx.PxCombineModeEnum, ret: True, kind: Value
    //PAR nat: PxMaterialPtr, man: physx.PxMaterialPtr, kind: PtrStruct
    return (physx::PxCombineMode::Enum) wrp_this->getRestitutionCombineMode();
}

//DEBUG: MethodNode physx::PxMaterial::getConcreteTypeName - 309
ES char* string_const_physx_PxMaterial_getConcreteTypeName(PxMaterialPtr wrp_this){
    //RET nat: char*, man: string, ret: True, kind: Value
    //PAR nat: PxMaterialPtr, man: physx.PxMaterialPtr, kind: PtrStruct
    return (char*) wrp_this->getConcreteTypeName();
}

//DEBUG: MethodNode physx::PxMaterial::operator= - 130
//ERRORS OCCURED IN physx::PxMaterial::operator=
//Implicit Function/Method
//Unbindable Operator: Equal

//DEBUG: DeclNode physx::PxMaterialFlags - 89
// TODO DeclNode.GenWrapper()
