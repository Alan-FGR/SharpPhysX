// Generated by minBND 5.1.81.43 - Â© github.com/Alan-FGR
ES void* PxMaterial_GET_userData(PxMaterialPtr cls) {return (void*)cls->userData;}
ES void PxMaterial_SET_userData(PxMaterialPtr cls, void* value) {cls->userData = value;}

ES void void_physx_PxMaterial_release(PxMaterialPtr wrp_this){
    wrp_this->release();
}

ES unsigned int uint_const_physx_PxMaterial_getReferenceCount(PxMaterialPtr wrp_this){
    return (unsigned int) wrp_this->getReferenceCount();
}

ES void void_physx_PxMaterial_acquireReference(PxMaterialPtr wrp_this){
    wrp_this->acquireReference();
}

ES void void_physx_PxMaterial_setDynamicFriction_float_(PxMaterialPtr wrp_this, float wrp_coef){
    wrp_this->setDynamicFriction(wrp_coef);
}

ES float float_const_physx_PxMaterial_getDynamicFriction(PxMaterialPtr wrp_this){
    return (float) wrp_this->getDynamicFriction();
}

ES void void_physx_PxMaterial_setStaticFriction_float_(PxMaterialPtr wrp_this, float wrp_coef){
    wrp_this->setStaticFriction(wrp_coef);
}

ES float float_const_physx_PxMaterial_getStaticFriction(PxMaterialPtr wrp_this){
    return (float) wrp_this->getStaticFriction();
}

ES void void_physx_PxMaterial_setRestitution_float_(PxMaterialPtr wrp_this, float wrp_rest){
    wrp_this->setRestitution(wrp_rest);
}

ES float float_const_physx_PxMaterial_getRestitution(PxMaterialPtr wrp_this){
    return (float) wrp_this->getRestitution();
}

ES void void_physx_PxMaterial_setFlag_physx_PxMaterialFlagEnum_bool_(PxMaterialPtr wrp_this, physx::PxMaterialFlag::Enum wrp_flag, bool wrp__2){
    wrp_this->setFlag(wrp_flag, wrp__2);
}

ES void void_physx_PxMaterial_setFlags_PxMaterialFlagsPtr_(PxMaterialPtr wrp_this, PxMaterialFlagsPtr wrp_inFlags){
    wrp_this->setFlags(*wrp_inFlags);
}

ES PxMaterialFlagsPtr PxMaterialFlagsPtr_const_physx_PxMaterial_getFlags(PxMaterialPtr wrp_this){
    auto ret = wrp_this->getFlags();
    auto heap = new char[sizeof PxMaterialFlags];
    std::memcpy(heap, &ret, sizeof PxMaterialFlags);
    return (PxMaterialFlagsPtr) heap;
}

ES void void_physx_PxMaterial_setFrictionCombineMode_physx_PxCombineModeEnum_(PxMaterialPtr wrp_this, physx::PxCombineMode::Enum wrp_combMode){
    wrp_this->setFrictionCombineMode(wrp_combMode);
}

ES physx::PxCombineMode::Enum physx_PxCombineModeEnum_const_physx_PxMaterial_getFrictionCombineMode(PxMaterialPtr wrp_this){
    return (physx::PxCombineMode::Enum) wrp_this->getFrictionCombineMode();
}

ES void void_physx_PxMaterial_setRestitutionCombineMode_physx_PxCombineModeEnum_(PxMaterialPtr wrp_this, physx::PxCombineMode::Enum wrp_combMode){
    wrp_this->setRestitutionCombineMode(wrp_combMode);
}

ES physx::PxCombineMode::Enum physx_PxCombineModeEnum_const_physx_PxMaterial_getRestitutionCombineMode(PxMaterialPtr wrp_this){
    return (physx::PxCombineMode::Enum) wrp_this->getRestitutionCombineMode();
}

ES char* string_const_physx_PxMaterial_getConcreteTypeName(PxMaterialPtr wrp_this){
    return (char*) wrp_this->getConcreteTypeName();
}
