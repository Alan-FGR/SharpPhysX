//Generated by MinBinder.

ES physx::PxVec3 C_OP_Star(float f,physx::PxVec3 v){ // L384

    return physx::operator*(f,v);
};

ES physx::PxVec3 C_PxVec3_PxVec3(physx::PxZERO r){ // L62

    return physx::PxVec3::PxVec3(r);
};

ES physx::PxVec3 C_PxVec3_PxVec3(float a){ // L74

    return physx::PxVec3::PxVec3(a);
};

ES physx::PxVec3 C_PxVec3_PxVec3(float nx,float ny,float nz){ // L85

    return physx::PxVec3::PxVec3(nx,ny,nz);
};

ES physx::PxVec3 C_PxVec3_PxVec3(physx::PxVec3 v){ // L92

    return physx::PxVec3::PxVec3(v);
};

ES bool C_CONST_PxVec3_OP_EqualEqual(physx::PxVec3 cls,physx::PxVec3 v){ // L132

    return cls.operator==(v);
};

ES bool C_CONST_PxVec3_OP_ExclaimEqual(physx::PxVec3 cls,physx::PxVec3 v){ // L140

    return cls.operator!=(v);
};

ES bool C_CONST_PxVec3_isZero(physx::PxVec3 cls){ // L148

    return cls.isZero();
};

ES bool C_CONST_PxVec3_isFinite(physx::PxVec3 cls){ // L156

    return cls.isFinite();
};

ES bool C_CONST_PxVec3_isNormalized(physx::PxVec3 cls){ // L164

    return cls.isNormalized();
};

ES float C_CONST_PxVec3_magnitudeSquared(physx::PxVec3 cls){ // L175

    return cls.magnitudeSquared();
};

ES float C_CONST_PxVec3_magnitude(physx::PxVec3 cls){ // L183

    return cls.magnitude();
};

ES physx::PxVec3 C_CONST_PxVec3_OP_Minus(physx::PxVec3 cls){ // L191

    return cls.operator-();
};

ES physx::PxVec3 C_CONST_PxVec3_OP_Plus(physx::PxVec3 cls,physx::PxVec3 v){ // L199

    return cls.operator+(v);
};

ES physx::PxVec3 C_CONST_PxVec3_OP_Minus(physx::PxVec3 cls,physx::PxVec3 v){ // L207

    return cls.operator-(v);
};

ES physx::PxVec3 C_CONST_PxVec3_OP_Star(physx::PxVec3 cls,float f){ // L215

    return cls.operator*(f);
};

ES physx::PxVec3 C_CONST_PxVec3_OP_Slash(physx::PxVec3 cls,float f){ // L223

    return cls.operator/(f);
};

ES float C_CONST_PxVec3_dot(physx::PxVec3 cls,physx::PxVec3 v){ // L276

    return cls.dot(v);
};

ES physx::PxVec3 C_CONST_PxVec3_cross(physx::PxVec3 cls,physx::PxVec3 v){ // L284

    return cls.cross(v);
};

ES physx::PxVec3 C_CONST_PxVec3_getNormalized(physx::PxVec3 cls){ // L291

    return cls.getNormalized();
};

ES float C_PxVec3_normalize(physx::PxVec3 cls){ // L300

    return cls.normalize();
};

ES float C_PxVec3_normalizeSafe(physx::PxVec3 cls){ // L312

    return cls.normalizeSafe();
};

ES float C_PxVec3_normalizeFast(physx::PxVec3 cls){ // L325

    return cls.normalizeFast();
};

ES physx::PxVec3 C_CONST_PxVec3_multiply(physx::PxVec3 cls,physx::PxVec3 a){ // L336

    return cls.multiply(a);
};

ES physx::PxVec3 C_CONST_PxVec3_minimum(physx::PxVec3 cls,physx::PxVec3 v){ // L344

    return cls.minimum(v);
};

ES float C_CONST_PxVec3_minElement(physx::PxVec3 cls){ // L352

    return cls.minElement();
};

ES physx::PxVec3 C_CONST_PxVec3_maximum(physx::PxVec3 cls,physx::PxVec3 v){ // L360

    return cls.maximum(v);
};

ES float C_CONST_PxVec3_maxElement(physx::PxVec3 cls){ // L368

    return cls.maxElement();
};

ES physx::PxVec3 C_CONST_PxVec3_abs(physx::PxVec3 cls){ // L376

    return cls.abs();
};

