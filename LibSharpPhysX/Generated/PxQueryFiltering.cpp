// Generated by minBND 5.1.90.51 - Â© github.com/Alan-FGR

//DBG: FunctionNode physx::operator| L86
//physx::operator| static physx.PxQueryFlagsPtr OpPipe_New(physx.PxQueryFlagEnum a, physx.PxQueryFlagEnum b) will also be bound as member operator
//RET nat: PxQueryFlagsPtr, man: physx.PxQueryFlagsPtr, ret: True, kind: PtrStruct
//PAR nat: physx::PxQueryFlag::Enum, man: physx.PxQueryFlagEnum, kind: Value
//PAR nat: physx::PxQueryFlag::Enum, man: physx.PxQueryFlagEnum, kind: Value
ES PxQueryFlagsPtr PxQueryFlagsPtr_operator_Ptr_Pipe_PxQueryFlagEnum_PxQueryFlagEnum_(physx::PxQueryFlag::Enum wrp_a, physx::PxQueryFlag::Enum wrp_b){
    auto ret = ::physx::operator|(wrp_a, wrp_b);
    auto heap = new char[sizeof PxQueryFlags];
    std::memcpy(heap, &ret, sizeof PxQueryFlags);
    return (PxQueryFlagsPtr) heap;
}

//DBG: FunctionNode physx::operator& L86
//physx::operator& static physx.PxQueryFlagsPtr OpAnd_New(physx.PxQueryFlagEnum a, physx.PxQueryFlagEnum b) will also be bound as member operator
//RET nat: PxQueryFlagsPtr, man: physx.PxQueryFlagsPtr, ret: True, kind: PtrStruct
//PAR nat: physx::PxQueryFlag::Enum, man: physx.PxQueryFlagEnum, kind: Value
//PAR nat: physx::PxQueryFlag::Enum, man: physx.PxQueryFlagEnum, kind: Value
ES PxQueryFlagsPtr PxQueryFlagsPtr_operator_Ptr_Amp_PxQueryFlagEnum_PxQueryFlagEnum_(physx::PxQueryFlag::Enum wrp_a, physx::PxQueryFlag::Enum wrp_b){
    auto ret = ::physx::operator&(wrp_a, wrp_b);
    auto heap = new char[sizeof PxQueryFlags];
    std::memcpy(heap, &ret, sizeof PxQueryFlags);
    return (PxQueryFlagsPtr) heap;
}

//DBG: FunctionNode physx::operator~ L86
//physx::operator~ static physx.PxQueryFlagsPtr OpTilde_New(physx.PxQueryFlagEnum a) will also be bound as member operator
//RET nat: PxQueryFlagsPtr, man: physx.PxQueryFlagsPtr, ret: True, kind: PtrStruct
//PAR nat: physx::PxQueryFlag::Enum, man: physx.PxQueryFlagEnum, kind: Value
ES PxQueryFlagsPtr PxQueryFlagsPtr_operator_Ptr_Tilde_PxQueryFlagEnum_(physx::PxQueryFlag::Enum wrp_a){
    auto ret = ::physx::operator~(wrp_a);
    auto heap = new char[sizeof PxQueryFlags];
    std::memcpy(heap, &ret, sizeof PxQueryFlags);
    return (PxQueryFlagsPtr) heap;
}

//DBG: ClassNode PxQueryFlag physx::PxQueryFlag L57-77

//DBG: ClassNode PxQueryHitType physx::PxQueryHitType L108-116
//Subclasses using this: 0

//DBG: ClassNode PxQueryFilterData physx::PxQueryFilterData L132-145

//DBG: NewerFreerNode PxQueryFilterData physx::PxQueryFilterData L132-145
ES void Freer_physx_PxQueryFilterDataPtr(PxQueryFilterDataPtr ptr){
    delete ptr;
}

//DBG: PtrWrapperCtorNode physx::PxQueryFilterData::PxQueryFilterData L135
//RET nat: PxQueryFilterDataPtr, man: physx.PxQueryFilterDataPtr, ret: True, kind: PtrStruct
ES PxQueryFilterDataPtr Ctor_PxQueryFilterDataPtr_(){
    auto ret = *(new std::remove_pointer<PxQueryFilterDataPtr>::type());
    auto heap = new char[sizeof PxQueryFilterData];
    std::memcpy(heap, &ret, sizeof PxQueryFilterData);
    return (PxQueryFilterDataPtr) heap;
}

//DBG: PtrWrapperCtorNode physx::PxQueryFilterData::PxQueryFilterData L138
//RET nat: PxQueryFilterDataPtr, man: physx.PxQueryFilterDataPtr, ret: True, kind: PtrStruct
//PAR nat: PxFilterDataPtr, man: physx.PxFilterDataPtr, kind: PtrStruct
//PAR nat: PxQueryFlagsPtr, man: physx.PxQueryFlagsPtr, kind: PtrStruct
ES PxQueryFilterDataPtr Ctor_PxQueryFilterDataPtr_PxFilterDataPtr_PxQueryFlagsPtr(PxFilterDataPtr wrp_fd, PxQueryFlagsPtr wrp_f){
    auto ret = *(new std::remove_pointer<PxQueryFilterDataPtr>::type(*wrp_fd, *wrp_f));
    auto heap = new char[sizeof PxQueryFilterData];
    std::memcpy(heap, &ret, sizeof PxQueryFilterData);
    return (PxQueryFilterDataPtr) heap;
}

//DBG: PtrWrapperCtorNode physx::PxQueryFilterData::PxQueryFilterData L141
//RET nat: PxQueryFilterDataPtr, man: physx.PxQueryFilterDataPtr, ret: True, kind: PtrStruct
//PAR nat: PxQueryFlagsPtr, man: physx.PxQueryFlagsPtr, kind: PtrStruct
ES PxQueryFilterDataPtr Ctor_PxQueryFilterDataPtr_PxQueryFlagsPtr(PxQueryFlagsPtr wrp_f){
    auto ret = *(new std::remove_pointer<PxQueryFilterDataPtr>::type(*wrp_f));
    auto heap = new char[sizeof PxQueryFilterData];
    std::memcpy(heap, &ret, sizeof PxQueryFilterData);
    return (PxQueryFilterDataPtr) heap;
}

//DBG: PtrWrapperCtorNode physx::PxQueryFilterData::PxQueryFilterData L132
//ERRORS in PtrWrapperCtorNode: Skipping Implicit PtrWrapperCtorNode physx::PxQueryFilterData::PxQueryFilterData L132

//DBG: PtrWrapperCtorNode physx::PxQueryFilterData::PxQueryFilterData L132
//ERRORS in PtrWrapperCtorNode: Skipping Implicit PtrWrapperCtorNode physx::PxQueryFilterData::PxQueryFilterData L132

//DBG: Field: data - 143-143
ES PxFilterDataPtr PxQueryFilterDataPtr_GET_data(PxQueryFilterDataPtr cls) {return (PxFilterDataPtr)&cls->data;}
ES void PxQueryFilterDataPtr_SET_data(PxQueryFilterDataPtr cls, PxFilterDataPtr value) {cls->data = *value;}

//DBG: Field: flags - 144-144
ES PxQueryFlagsPtr PxQueryFilterDataPtr_GET_flags(PxQueryFilterDataPtr cls) {return (PxQueryFlagsPtr)&cls->flags;}
ES void PxQueryFilterDataPtr_SET_flags(PxQueryFilterDataPtr cls, PxQueryFlagsPtr value) {cls->flags = *value;}

//DBG: MethodNode physx::PxQueryFilterData::operator= L132
//ERRORS in MethodNode: Skipping Implicit MethodNode physx::PxQueryFilterData::operator= L132

//DBG: MethodNode physx::PxQueryFilterData::~PxQueryFilterData L132
//ERRORS in MethodNode: Skipping Implicit MethodNode physx::PxQueryFilterData::~PxQueryFilterData L132, Destructor

//DBG: MethodNode physx::PxQueryFilterData::operator= L132
//ERRORS in MethodNode: Skipping Implicit MethodNode physx::PxQueryFilterData::operator= L132

//Operators
//Subclasses using this: 0

//DBG: ClassNode PxQueryFilterCallback physx::PxQueryFilterCallback L169-198

//DBG: MethodNode physx::PxQueryFilterCallback::preFilter L182-183
//RET nat: physx::PxQueryHitType::Enum, man: physx.PxQueryHitTypeEnum, ret: True, kind: Value
//PAR nat: PxQueryFilterCallbackPtr, man: physx.PxQueryFilterCallbackPtr, kind: PtrStruct
//PAR nat: PxFilterDataPtr, man: physx.PxFilterDataPtr, kind: PtrStruct
//PAR nat: PxShapePtr, man: physx.PxShapePtr, kind: PtrStruct
//PAR nat: PxRigidActorPtr, man: physx.PxRigidActorPtr, kind: PtrStruct
//PAR nat: PxHitFlagsPtr, man: physx.PxHitFlagsPtr, kind: PtrStruct
ES physx::PxQueryHitType::Enum PxQueryHitTypeEnum_PxQueryFilterCallbackPtr_preFilterPtr_PxFilterDataPtr_PxShapePtr_PxRigidActorPtr_PxHitFlagsPtr_(PxQueryFilterCallbackPtr wrp_this, PxFilterDataPtr wrp_filterData, PxShapePtr wrp_shape, PxRigidActorPtr wrp_actor, PxHitFlagsPtr wrp_queryFlags){
    return (physx::PxQueryHitType::Enum) wrp_this->preFilter(*wrp_filterData, wrp_shape, wrp_actor, *wrp_queryFlags);
}

//DBG: MethodNode physx::PxQueryFilterCallback::postFilter L192
//RET nat: physx::PxQueryHitType::Enum, man: physx.PxQueryHitTypeEnum, ret: True, kind: Value
//PAR nat: PxQueryFilterCallbackPtr, man: physx.PxQueryFilterCallbackPtr, kind: PtrStruct
//PAR nat: PxFilterDataPtr, man: physx.PxFilterDataPtr, kind: PtrStruct
//PAR nat: PxQueryHitPtr, man: physx.PxQueryHitPtr, kind: PtrStruct
ES physx::PxQueryHitType::Enum PxQueryHitTypeEnum_PxQueryFilterCallbackPtr_postFilterPtr_PxFilterDataPtr_PxQueryHitPtr_(PxQueryFilterCallbackPtr wrp_this, PxFilterDataPtr wrp_filterData, PxQueryHitPtr wrp_hit){
    return (physx::PxQueryHitType::Enum) wrp_this->postFilter(*wrp_filterData, *wrp_hit);
}

//DBG: MethodNode physx::PxQueryFilterCallback::~PxQueryFilterCallback L197
//ERRORS in MethodNode: Destructor

//DBG: MethodNode physx::PxQueryFilterCallback::operator= L169
//ERRORS in MethodNode: Skipping Implicit MethodNode physx::PxQueryFilterCallback::operator= L169

//Operators

//DBG: DeclNode PxQueryFlags physx::PxQueryFlags L85

//DBG: DeclNode PxCompileTimeAssert_Dummy physx::PxCompileTimeAssert_Dummy L78

//DBG: DeclNode PxBatchQueryPreFilterShader physx::PxBatchQueryPreFilterShader L233-236

//DBG: DeclNode PxBatchQueryPostFilterShader physx::PxBatchQueryPostFilterShader L266-269
