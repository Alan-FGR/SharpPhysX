// Generated by minBND 5.1.81.43 - Â© github.com/Alan-FGR
ES void void_physx_PxPhysics_release(PxPhysicsPtr wrp_this){
    wrp_this->release();
}

ES PxFoundationPtr physx_PxFoundationPtr_physx_PxPhysics_getFoundation(PxPhysicsPtr wrp_this){
    return (PxFoundationPtr) &wrp_this->getFoundation();
}

ES PxAggregatePtr physx_PxAggregatePtr_physx_PxPhysics_createAggregate_uint_bool_(PxPhysicsPtr wrp_this, unsigned int wrp_maxSize, bool wrp_enableSelfCollision){
    return (PxAggregatePtr) wrp_this->createAggregate(wrp_maxSize, wrp_enableSelfCollision);
}

ES physx::PxTolerancesScale* physx_PxTolerancesScale_const_physx_PxPhysics_getTolerancesScale(PxPhysicsPtr wrp_this){
    return (physx::PxTolerancesScale*) &wrp_this->getTolerancesScale();
}

ES unsigned int uint_const_physx_PxPhysics_getNbTriangleMeshes(PxPhysicsPtr wrp_this){
    return (unsigned int) wrp_this->getNbTriangleMeshes();
}

ES unsigned int uint_const_physx_PxPhysics_getTriangleMeshes_physx_PxTriangleMeshPtr_uint_uint_(PxPhysicsPtr wrp_this, PxTriangleMeshPtr* wrp_userBuffer, unsigned int wrp_bufferSize, unsigned int wrp_startIndex){
    return (unsigned int) wrp_this->getTriangleMeshes(wrp_userBuffer, wrp_bufferSize, wrp_startIndex);
}

ES unsigned int uint_const_physx_PxPhysics_getNbHeightFields(PxPhysicsPtr wrp_this){
    return (unsigned int) wrp_this->getNbHeightFields();
}

ES unsigned int uint_const_physx_PxPhysics_getHeightFields_physx_PxHeightFieldPtr_uint_uint_(PxPhysicsPtr wrp_this, PxHeightFieldPtr* wrp_userBuffer, unsigned int wrp_bufferSize, unsigned int wrp_startIndex){
    return (unsigned int) wrp_this->getHeightFields(wrp_userBuffer, wrp_bufferSize, wrp_startIndex);
}

ES unsigned int uint_const_physx_PxPhysics_getNbConvexMeshes(PxPhysicsPtr wrp_this){
    return (unsigned int) wrp_this->getNbConvexMeshes();
}

ES unsigned int uint_const_physx_PxPhysics_getConvexMeshes_physx_PxConvexMeshPtr_uint_uint_(PxPhysicsPtr wrp_this, PxConvexMeshPtr* wrp_userBuffer, unsigned int wrp_bufferSize, unsigned int wrp_startIndex){
    return (unsigned int) wrp_this->getConvexMeshes(wrp_userBuffer, wrp_bufferSize, wrp_startIndex);
}

ES unsigned int uint_const_physx_PxPhysics_getNbBVHStructures(PxPhysicsPtr wrp_this){
    return (unsigned int) wrp_this->getNbBVHStructures();
}

ES PxScenePtr physx_PxScenePtr_physx_PxPhysics_createScene_physx_PxSceneDescPtr_(PxPhysicsPtr wrp_this, PxSceneDescPtr wrp_sceneDesc){
    return (PxScenePtr) wrp_this->createScene(*wrp_sceneDesc);
}

ES unsigned int uint_const_physx_PxPhysics_getNbScenes(PxPhysicsPtr wrp_this){
    return (unsigned int) wrp_this->getNbScenes();
}

ES unsigned int uint_const_physx_PxPhysics_getScenes_physx_PxScenePtr_uint_uint_(PxPhysicsPtr wrp_this, PxScenePtr* wrp_userBuffer, unsigned int wrp_bufferSize, unsigned int wrp_startIndex){
    return (unsigned int) wrp_this->getScenes(wrp_userBuffer, wrp_bufferSize, wrp_startIndex);
}

ES PxRigidStaticPtr physx_PxRigidStaticPtr_physx_PxPhysics_createRigidStatic_physx_PxTransform_(PxPhysicsPtr wrp_this, physx::PxTransform* wrp_pose){
    return (PxRigidStaticPtr) wrp_this->createRigidStatic(*wrp_pose);
}

ES PxRigidDynamicPtr physx_PxRigidDynamicPtr_physx_PxPhysics_createRigidDynamic_physx_PxTransform_(PxPhysicsPtr wrp_this, physx::PxTransform* wrp_pose){
    return (PxRigidDynamicPtr) wrp_this->createRigidDynamic(*wrp_pose);
}

ES PxShapePtr physx_PxShapePtr_physx_PxPhysics_createShape_physx_PxGeometryPtr_physx_PxMaterialPtr_bool_PxShapeFlagsPtr_(PxPhysicsPtr wrp_this, PxGeometryPtr wrp_geometry, PxMaterialPtr wrp_material, bool wrp_isExclusive, PxShapeFlagsPtr wrp_shapeFlags){
    return (PxShapePtr) wrp_this->createShape(*wrp_geometry, *wrp_material, wrp_isExclusive, *wrp_shapeFlags);
}

ES PxShapePtr physx_PxShapePtr_physx_PxPhysics_createShape_physx_PxGeometryPtr_physx_PxMaterialPtr_ushort_bool_PxShapeFlagsPtr_(PxPhysicsPtr wrp_this, PxGeometryPtr wrp_geometry, PxMaterialPtr* wrp_materials, unsigned short wrp_materialCount, bool wrp_isExclusive, PxShapeFlagsPtr wrp_shapeFlags){
    return (PxShapePtr) wrp_this->createShape(*wrp_geometry, wrp_materials, wrp_materialCount, wrp_isExclusive, *wrp_shapeFlags);
}

ES unsigned int uint_const_physx_PxPhysics_getNbShapes(PxPhysicsPtr wrp_this){
    return (unsigned int) wrp_this->getNbShapes();
}

ES unsigned int uint_const_physx_PxPhysics_getShapes_physx_PxShapePtr_uint_uint_(PxPhysicsPtr wrp_this, PxShapePtr* wrp_userBuffer, unsigned int wrp_bufferSize, unsigned int wrp_startIndex){
    return (unsigned int) wrp_this->getShapes(wrp_userBuffer, wrp_bufferSize, wrp_startIndex);
}

ES PxConstraintPtr physx_PxConstraintPtr_physx_PxPhysics_createConstraint_physx_PxRigidActorPtr_physx_PxRigidActorPtr_physx_PxConstraintConnectorPtr_physx_PxConstraintShaderTablePtr_uint_(PxPhysicsPtr wrp_this, PxRigidActorPtr wrp_actor0, PxRigidActorPtr wrp_actor1, PxConstraintConnectorPtr wrp_connector, PxConstraintShaderTablePtr wrp_shaders, unsigned int wrp_dataSize){
    return (PxConstraintPtr) wrp_this->createConstraint(wrp_actor0, wrp_actor1, *wrp_connector, *wrp_shaders, wrp_dataSize);
}

ES PxArticulationPtr physx_PxArticulationPtr_physx_PxPhysics_createArticulation(PxPhysicsPtr wrp_this){
    return (PxArticulationPtr) wrp_this->createArticulation();
}

ES PxArticulationReducedCoordinatePtr physx_PxArticulationReducedCoordinatePtr_physx_PxPhysics_createArticulationReducedCoordinate(PxPhysicsPtr wrp_this){
    return (PxArticulationReducedCoordinatePtr) wrp_this->createArticulationReducedCoordinate();
}

ES PxMaterialPtr physx_PxMaterialPtr_physx_PxPhysics_createMaterial_float_float_float_(PxPhysicsPtr wrp_this, float wrp_staticFriction, float wrp_dynamicFriction, float wrp_restitution){
    return (PxMaterialPtr) wrp_this->createMaterial(wrp_staticFriction, wrp_dynamicFriction, wrp_restitution);
}

ES unsigned int uint_const_physx_PxPhysics_getNbMaterials(PxPhysicsPtr wrp_this){
    return (unsigned int) wrp_this->getNbMaterials();
}

ES unsigned int uint_const_physx_PxPhysics_getMaterials_physx_PxMaterialPtr_uint_uint_(PxPhysicsPtr wrp_this, PxMaterialPtr* wrp_userBuffer, unsigned int wrp_bufferSize, unsigned int wrp_startIndex){
    return (unsigned int) wrp_this->getMaterials(wrp_userBuffer, wrp_bufferSize, wrp_startIndex);
}

ES void void_physx_PxPhysics_registerDeletionListener_physx_PxDeletionListenerPtr_PxDeletionEventFlagsPtr_bool_(PxPhysicsPtr wrp_this, PxDeletionListenerPtr wrp_observer, PxDeletionEventFlagsPtr wrp_deletionEvents, bool wrp_restrictedObjectSet){
    wrp_this->registerDeletionListener(*wrp_observer, *wrp_deletionEvents, wrp_restrictedObjectSet);
}

ES void void_physx_PxPhysics_unregisterDeletionListener_physx_PxDeletionListenerPtr_(PxPhysicsPtr wrp_this, PxDeletionListenerPtr wrp_observer){
    wrp_this->unregisterDeletionListener(*wrp_observer);
}

ES void void_physx_PxPhysics_registerDeletionListenerObjects_physx_PxDeletionListenerPtr_physx_PxBasePtr_uint_(PxPhysicsPtr wrp_this, PxDeletionListenerPtr wrp_observer, const PxBasePtr* wrp_observables, unsigned int wrp_observableCount){
    wrp_this->registerDeletionListenerObjects(*wrp_observer, wrp_observables, wrp_observableCount);
}

ES void void_physx_PxPhysics_unregisterDeletionListenerObjects_physx_PxDeletionListenerPtr_physx_PxBasePtr_uint_(PxPhysicsPtr wrp_this, PxDeletionListenerPtr wrp_observer, const PxBasePtr* wrp_observables, unsigned int wrp_observableCount){
    wrp_this->unregisterDeletionListenerObjects(*wrp_observer, wrp_observables, wrp_observableCount);
}

ES unsigned int uint_const_physx_PxPhysics_getTriangleMeshes_physx_PxTriangleMeshPtr_uint_(PxPhysicsPtr wrp_this, PxTriangleMeshPtr* wrp_userBuffer, unsigned int wrp_bufferSize){
    return (unsigned int) wrp_this->getTriangleMeshes(wrp_userBuffer, wrp_bufferSize);
}

ES unsigned int uint_const_physx_PxPhysics_getHeightFields_physx_PxHeightFieldPtr_uint_(PxPhysicsPtr wrp_this, PxHeightFieldPtr* wrp_userBuffer, unsigned int wrp_bufferSize){
    return (unsigned int) wrp_this->getHeightFields(wrp_userBuffer, wrp_bufferSize);
}

ES unsigned int uint_const_physx_PxPhysics_getConvexMeshes_physx_PxConvexMeshPtr_uint_(PxPhysicsPtr wrp_this, PxConvexMeshPtr* wrp_userBuffer, unsigned int wrp_bufferSize){
    return (unsigned int) wrp_this->getConvexMeshes(wrp_userBuffer, wrp_bufferSize);
}

ES unsigned int uint_const_physx_PxPhysics_getScenes_physx_PxScenePtr_uint_(PxPhysicsPtr wrp_this, PxScenePtr* wrp_userBuffer, unsigned int wrp_bufferSize){
    return (unsigned int) wrp_this->getScenes(wrp_userBuffer, wrp_bufferSize);
}

ES PxShapePtr physx_PxShapePtr_physx_PxPhysics_createShape_physx_PxGeometryPtr_physx_PxMaterialPtr_(PxPhysicsPtr wrp_this, PxGeometryPtr wrp_geometry, PxMaterialPtr wrp_material){
    return (PxShapePtr) wrp_this->createShape(*wrp_geometry, *wrp_material);
}

ES PxShapePtr physx_PxShapePtr_physx_PxPhysics_createShape_physx_PxGeometryPtr_physx_PxMaterialPtr_bool_(PxPhysicsPtr wrp_this, PxGeometryPtr wrp_geometry, PxMaterialPtr wrp_material, bool wrp_isExclusive){
    return (PxShapePtr) wrp_this->createShape(*wrp_geometry, *wrp_material, wrp_isExclusive);
}

ES PxShapePtr physx_PxShapePtr_physx_PxPhysics_createShape_physx_PxGeometryPtr_physx_PxMaterialPtr_ushort_(PxPhysicsPtr wrp_this, PxGeometryPtr wrp_geometry, PxMaterialPtr* wrp_materials, unsigned short wrp_materialCount){
    return (PxShapePtr) wrp_this->createShape(*wrp_geometry, wrp_materials, wrp_materialCount);
}

ES PxShapePtr physx_PxShapePtr_physx_PxPhysics_createShape_physx_PxGeometryPtr_physx_PxMaterialPtr_ushort_bool_(PxPhysicsPtr wrp_this, PxGeometryPtr wrp_geometry, PxMaterialPtr* wrp_materials, unsigned short wrp_materialCount, bool wrp_isExclusive){
    return (PxShapePtr) wrp_this->createShape(*wrp_geometry, wrp_materials, wrp_materialCount, wrp_isExclusive);
}

ES unsigned int uint_const_physx_PxPhysics_getShapes_physx_PxShapePtr_uint_(PxPhysicsPtr wrp_this, PxShapePtr* wrp_userBuffer, unsigned int wrp_bufferSize){
    return (unsigned int) wrp_this->getShapes(wrp_userBuffer, wrp_bufferSize);
}

ES unsigned int uint_const_physx_PxPhysics_getMaterials_physx_PxMaterialPtr_uint_(PxPhysicsPtr wrp_this, PxMaterialPtr* wrp_userBuffer, unsigned int wrp_bufferSize){
    return (unsigned int) wrp_this->getMaterials(wrp_userBuffer, wrp_bufferSize);
}

ES void void_physx_PxPhysics_registerDeletionListener_physx_PxDeletionListenerPtr_PxDeletionEventFlagsPtr_(PxPhysicsPtr wrp_this, PxDeletionListenerPtr wrp_observer, PxDeletionEventFlagsPtr wrp_deletionEvents){
    wrp_this->registerDeletionListener(*wrp_observer, *wrp_deletionEvents);
}

ES void void_PxRegisterArticulations_physx_PxPhysicsPtr_(PxPhysicsPtr wrp_physics){
    PxRegisterArticulations(*wrp_physics);
}

ES void void_PxRegisterArticulationsReducedCoordinate_physx_PxPhysicsPtr_(PxPhysicsPtr wrp_physics){
    PxRegisterArticulationsReducedCoordinate(*wrp_physics);
}

ES void void_PxRegisterHeightFields_physx_PxPhysicsPtr_(PxPhysicsPtr wrp_physics){
    PxRegisterHeightFields(*wrp_physics);
}

ES PxPhysicsPtr physx_PxPhysicsPtr_PxCreateBasePhysics_uint_physx_PxFoundationPtr_physx_PxTolerancesScale_(unsigned int wrp_version, PxFoundationPtr wrp_foundation, physx::PxTolerancesScale* wrp_scale){
    return (PxPhysicsPtr) PxCreateBasePhysics(wrp_version, *wrp_foundation, *wrp_scale);
}

ES PxPhysicsPtr physx_PxPhysicsPtr_PxCreateBasePhysics_uint_physx_PxFoundationPtr_physx_PxTolerancesScale_bool_(unsigned int wrp_version, PxFoundationPtr wrp_foundation, physx::PxTolerancesScale* wrp_scale, bool wrp_trackOutstandingAllocations){
    return (PxPhysicsPtr) PxCreateBasePhysics(wrp_version, *wrp_foundation, *wrp_scale, wrp_trackOutstandingAllocations);
}

ES PxPhysicsPtr physx_PxPhysicsPtr_PxCreatePhysics_uint_physx_PxFoundationPtr_physx_PxTolerancesScale_(unsigned int wrp_version, PxFoundationPtr wrp_foundation, physx::PxTolerancesScale* wrp_scale){
    return (PxPhysicsPtr) PxCreatePhysics(wrp_version, *wrp_foundation, *wrp_scale);
}

ES PxPhysicsPtr physx_PxPhysicsPtr_PxCreatePhysics_uint_physx_PxFoundationPtr_physx_PxTolerancesScale_bool_(unsigned int wrp_version, PxFoundationPtr wrp_foundation, physx::PxTolerancesScale* wrp_scale, bool wrp_trackOutstandingAllocations){
    return (PxPhysicsPtr) PxCreatePhysics(wrp_version, *wrp_foundation, *wrp_scale, wrp_trackOutstandingAllocations);
}

ES PxPhysicsPtr physx_PxPhysicsPtr_PxGetPhysics(){
    return (PxPhysicsPtr) &PxGetPhysics();
}
