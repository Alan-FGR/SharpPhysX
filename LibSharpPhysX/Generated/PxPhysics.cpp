// Generated by minBND 5.1.94.90 - Â© github.com/Alan-FGR

ES void void_PxRegisterArticulationsPtr_PxPhysicsPtr_(PxPhysicsPtr wrp_physics){
    ::PxRegisterArticulations(*wrp_physics);
}

ES void void_PxRegisterArticulationsReducedCoordinatePtr_PxPhysicsPtr_(PxPhysicsPtr wrp_physics){
    ::PxRegisterArticulationsReducedCoordinate(*wrp_physics);
}

ES void void_PxRegisterHeightFieldsPtr_PxPhysicsPtr_(PxPhysicsPtr wrp_physics){
    ::PxRegisterHeightFields(*wrp_physics);
}

ES PxPhysicsPtr PxPhysicsPtr_PxCreateBasePhysicsPtr_uint_PxFoundationPtr_PxTolerancesScale_(PxU32 wrp_version, PxFoundationPtr wrp_foundation, physx::PxTolerancesScale* wrp_scale){
    return (PxPhysicsPtr) ::PxCreateBasePhysics(wrp_version, *wrp_foundation, *wrp_scale);
}

ES PxPhysicsPtr PxPhysicsPtr_PxCreateBasePhysicsPtr_uint_PxFoundationPtr_PxTolerancesScale_bool_(PxU32 wrp_version, PxFoundationPtr wrp_foundation, physx::PxTolerancesScale* wrp_scale, bool wrp_trackOutstandingAllocations){
    return (PxPhysicsPtr) ::PxCreateBasePhysics(wrp_version, *wrp_foundation, *wrp_scale, wrp_trackOutstandingAllocations);
}

ES PxPhysicsPtr PxPhysicsPtr_PxCreatePhysicsPtr_uint_PxFoundationPtr_PxTolerancesScale_(PxU32 wrp_version, PxFoundationPtr wrp_foundation, physx::PxTolerancesScale* wrp_scale){
    return (PxPhysicsPtr) ::PxCreatePhysics(wrp_version, *wrp_foundation, *wrp_scale);
}

ES PxPhysicsPtr PxPhysicsPtr_PxCreatePhysicsPtr_uint_PxFoundationPtr_PxTolerancesScale_bool_(PxU32 wrp_version, PxFoundationPtr wrp_foundation, physx::PxTolerancesScale* wrp_scale, bool wrp_trackOutstandingAllocations){
    return (PxPhysicsPtr) ::PxCreatePhysics(wrp_version, *wrp_foundation, *wrp_scale, wrp_trackOutstandingAllocations);
}

ES PxPhysicsPtr PxPhysicsPtr_PxGetPhysicsPtr(){
    return (PxPhysicsPtr) &::PxGetPhysics();
}

ES void void_PxPhysicsPtr_releasePtr(PxPhysicsPtr wrp_this){
    wrp_this->release();
}

ES PxFoundationPtr PxFoundationPtr_PxPhysicsPtr_getFoundationPtr(PxPhysicsPtr wrp_this){
    return (PxFoundationPtr) &wrp_this->getFoundation();
}

ES PxAggregatePtr PxAggregatePtr_PxPhysicsPtr_createAggregatePtr_uint_bool_(PxPhysicsPtr wrp_this, PxU32 wrp_maxSize, bool wrp_enableSelfCollision){
    return (PxAggregatePtr) wrp_this->createAggregate(wrp_maxSize, wrp_enableSelfCollision);
}

ES physx::PxTolerancesScale* PxTolerancesScale_const_PxPhysicsPtr_getTolerancesScalePtr(PxPhysicsPtr wrp_this){
    return (physx::PxTolerancesScale*) &wrp_this->getTolerancesScale();
}

ES PxU32 uint_const_PxPhysicsPtr_getNbTriangleMeshesPtr(PxPhysicsPtr wrp_this){
    return (PxU32) wrp_this->getNbTriangleMeshes();
}

ES PxU32 uint_const_PxPhysicsPtr_getTriangleMeshesPtr_PxTriangleMeshPtr_uint_uint_(PxPhysicsPtr wrp_this, PxTriangleMeshPtr* wrp_userBuffer, PxU32 wrp_bufferSize, PxU32 wrp_startIndex){
    return (PxU32) wrp_this->getTriangleMeshes(wrp_userBuffer, wrp_bufferSize, wrp_startIndex);
}

ES PxU32 uint_const_PxPhysicsPtr_getNbHeightFieldsPtr(PxPhysicsPtr wrp_this){
    return (PxU32) wrp_this->getNbHeightFields();
}

ES PxU32 uint_const_PxPhysicsPtr_getHeightFieldsPtr_PxHeightFieldPtr_uint_uint_(PxPhysicsPtr wrp_this, PxHeightFieldPtr* wrp_userBuffer, PxU32 wrp_bufferSize, PxU32 wrp_startIndex){
    return (PxU32) wrp_this->getHeightFields(wrp_userBuffer, wrp_bufferSize, wrp_startIndex);
}

ES PxU32 uint_const_PxPhysicsPtr_getNbConvexMeshesPtr(PxPhysicsPtr wrp_this){
    return (PxU32) wrp_this->getNbConvexMeshes();
}

ES PxU32 uint_const_PxPhysicsPtr_getConvexMeshesPtr_PxConvexMeshPtr_uint_uint_(PxPhysicsPtr wrp_this, PxConvexMeshPtr* wrp_userBuffer, PxU32 wrp_bufferSize, PxU32 wrp_startIndex){
    return (PxU32) wrp_this->getConvexMeshes(wrp_userBuffer, wrp_bufferSize, wrp_startIndex);
}

ES PxU32 uint_const_PxPhysicsPtr_getNbBVHStructuresPtr(PxPhysicsPtr wrp_this){
    return (PxU32) wrp_this->getNbBVHStructures();
}

ES PxScenePtr PxScenePtr_PxPhysicsPtr_createScenePtr_PxSceneDescPtr_(PxPhysicsPtr wrp_this, PxSceneDescPtr wrp_sceneDesc){
    return (PxScenePtr) wrp_this->createScene(*wrp_sceneDesc);
}

ES PxU32 uint_const_PxPhysicsPtr_getNbScenesPtr(PxPhysicsPtr wrp_this){
    return (PxU32) wrp_this->getNbScenes();
}

ES PxU32 uint_const_PxPhysicsPtr_getScenesPtr_PxScenePtr_uint_uint_(PxPhysicsPtr wrp_this, PxScenePtr* wrp_userBuffer, PxU32 wrp_bufferSize, PxU32 wrp_startIndex){
    return (PxU32) wrp_this->getScenes(wrp_userBuffer, wrp_bufferSize, wrp_startIndex);
}

ES PxRigidStaticPtr PxRigidStaticPtr_PxPhysicsPtr_createRigidStaticPtr_PxTransform_(PxPhysicsPtr wrp_this, physx::PxTransform* wrp_pose){
    return (PxRigidStaticPtr) wrp_this->createRigidStatic(*wrp_pose);
}

ES PxRigidDynamicPtr PxRigidDynamicPtr_PxPhysicsPtr_createRigidDynamicPtr_PxTransform_(PxPhysicsPtr wrp_this, physx::PxTransform* wrp_pose){
    return (PxRigidDynamicPtr) wrp_this->createRigidDynamic(*wrp_pose);
}

ES PxShapePtr PxShapePtr_PxPhysicsPtr_createShapePtr_PxGeometry_PxMaterialPtr_bool_PxShapeFlagsPtr_(PxPhysicsPtr wrp_this, physx::PxGeometry* wrp_geometry, PxMaterialPtr wrp_material, bool wrp_isExclusive, PxShapeFlagsPtr wrp_shapeFlags){
    return (PxShapePtr) wrp_this->createShape(*wrp_geometry, *wrp_material, wrp_isExclusive, *wrp_shapeFlags);
}

ES PxShapePtr PxShapePtr_PxPhysicsPtr_createShapePtr_PxGeometry_PxMaterialPtr_ushort_bool_PxShapeFlagsPtr_(PxPhysicsPtr wrp_this, physx::PxGeometry* wrp_geometry, PxMaterialPtr* wrp_materials, PxU16 wrp_materialCount, bool wrp_isExclusive, PxShapeFlagsPtr wrp_shapeFlags){
    return (PxShapePtr) wrp_this->createShape(*wrp_geometry, wrp_materials, wrp_materialCount, wrp_isExclusive, *wrp_shapeFlags);
}

ES PxU32 uint_const_PxPhysicsPtr_getNbShapesPtr(PxPhysicsPtr wrp_this){
    return (PxU32) wrp_this->getNbShapes();
}

ES PxU32 uint_const_PxPhysicsPtr_getShapesPtr_PxShapePtr_uint_uint_(PxPhysicsPtr wrp_this, PxShapePtr* wrp_userBuffer, PxU32 wrp_bufferSize, PxU32 wrp_startIndex){
    return (PxU32) wrp_this->getShapes(wrp_userBuffer, wrp_bufferSize, wrp_startIndex);
}

ES PxConstraintPtr PxConstraintPtr_PxPhysicsPtr_createConstraintPtr_PxRigidActorPtr_PxRigidActorPtr_PxConstraintConnectorPtr_PxConstraintShaderTablePtr_uint_(PxPhysicsPtr wrp_this, PxRigidActorPtr wrp_actor0, PxRigidActorPtr wrp_actor1, PxConstraintConnectorPtr wrp_connector, PxConstraintShaderTablePtr wrp_shaders, PxU32 wrp_dataSize){
    return (PxConstraintPtr) wrp_this->createConstraint(wrp_actor0, wrp_actor1, *wrp_connector, *wrp_shaders, wrp_dataSize);
}

ES PxArticulationPtr PxArticulationPtr_PxPhysicsPtr_createArticulationPtr(PxPhysicsPtr wrp_this){
    return (PxArticulationPtr) wrp_this->createArticulation();
}

ES PxArticulationReducedCoordinatePtr PxArticulationReducedCoordinatePtr_PxPhysicsPtr_createArticulationReducedCoordinatePtr(PxPhysicsPtr wrp_this){
    return (PxArticulationReducedCoordinatePtr) wrp_this->createArticulationReducedCoordinate();
}

ES PxMaterialPtr PxMaterialPtr_PxPhysicsPtr_createMaterialPtr_float_float_float_(PxPhysicsPtr wrp_this, PxReal wrp_staticFriction, PxReal wrp_dynamicFriction, PxReal wrp_restitution){
    return (PxMaterialPtr) wrp_this->createMaterial(wrp_staticFriction, wrp_dynamicFriction, wrp_restitution);
}

ES PxU32 uint_const_PxPhysicsPtr_getNbMaterialsPtr(PxPhysicsPtr wrp_this){
    return (PxU32) wrp_this->getNbMaterials();
}

ES PxU32 uint_const_PxPhysicsPtr_getMaterialsPtr_PxMaterialPtr_uint_uint_(PxPhysicsPtr wrp_this, PxMaterialPtr* wrp_userBuffer, PxU32 wrp_bufferSize, PxU32 wrp_startIndex){
    return (PxU32) wrp_this->getMaterials(wrp_userBuffer, wrp_bufferSize, wrp_startIndex);
}

ES void void_PxPhysicsPtr_registerDeletionListenerPtr_PxDeletionListenerPtr_PxDeletionEventFlagsPtr_bool_(PxPhysicsPtr wrp_this, PxDeletionListenerPtr wrp_observer, PxDeletionEventFlagsPtr wrp_deletionEvents, bool wrp_restrictedObjectSet){
    wrp_this->registerDeletionListener(*wrp_observer, *wrp_deletionEvents, wrp_restrictedObjectSet);
}

ES void void_PxPhysicsPtr_unregisterDeletionListenerPtr_PxDeletionListenerPtr_(PxPhysicsPtr wrp_this, PxDeletionListenerPtr wrp_observer){
    wrp_this->unregisterDeletionListener(*wrp_observer);
}

ES void void_PxPhysicsPtr_registerDeletionListenerObjectsPtr_PxDeletionListenerPtr_PxBasePtr_uint_(PxPhysicsPtr wrp_this, PxDeletionListenerPtr wrp_observer, const PxBasePtr* wrp_observables, PxU32 wrp_observableCount){
    wrp_this->registerDeletionListenerObjects(*wrp_observer, wrp_observables, wrp_observableCount);
}

ES void void_PxPhysicsPtr_unregisterDeletionListenerObjectsPtr_PxDeletionListenerPtr_PxBasePtr_uint_(PxPhysicsPtr wrp_this, PxDeletionListenerPtr wrp_observer, const PxBasePtr* wrp_observables, PxU32 wrp_observableCount){
    wrp_this->unregisterDeletionListenerObjects(*wrp_observer, wrp_observables, wrp_observableCount);
}

ES PxU32 uint_const_PxPhysicsPtr_getTriangleMeshesPtr_PxTriangleMeshPtr_uint_(PxPhysicsPtr wrp_this, PxTriangleMeshPtr* wrp_userBuffer, PxU32 wrp_bufferSize){
    return (PxU32) wrp_this->getTriangleMeshes(wrp_userBuffer, wrp_bufferSize);
}

ES PxU32 uint_const_PxPhysicsPtr_getHeightFieldsPtr_PxHeightFieldPtr_uint_(PxPhysicsPtr wrp_this, PxHeightFieldPtr* wrp_userBuffer, PxU32 wrp_bufferSize){
    return (PxU32) wrp_this->getHeightFields(wrp_userBuffer, wrp_bufferSize);
}

ES PxU32 uint_const_PxPhysicsPtr_getConvexMeshesPtr_PxConvexMeshPtr_uint_(PxPhysicsPtr wrp_this, PxConvexMeshPtr* wrp_userBuffer, PxU32 wrp_bufferSize){
    return (PxU32) wrp_this->getConvexMeshes(wrp_userBuffer, wrp_bufferSize);
}

ES PxU32 uint_const_PxPhysicsPtr_getScenesPtr_PxScenePtr_uint_(PxPhysicsPtr wrp_this, PxScenePtr* wrp_userBuffer, PxU32 wrp_bufferSize){
    return (PxU32) wrp_this->getScenes(wrp_userBuffer, wrp_bufferSize);
}

ES PxShapePtr PxShapePtr_PxPhysicsPtr_createShapePtr_PxGeometry_PxMaterialPtr_(PxPhysicsPtr wrp_this, physx::PxGeometry* wrp_geometry, PxMaterialPtr wrp_material){
    return (PxShapePtr) wrp_this->createShape(*wrp_geometry, *wrp_material);
}

ES PxShapePtr PxShapePtr_PxPhysicsPtr_createShapePtr_PxGeometry_PxMaterialPtr_bool_(PxPhysicsPtr wrp_this, physx::PxGeometry* wrp_geometry, PxMaterialPtr wrp_material, bool wrp_isExclusive){
    return (PxShapePtr) wrp_this->createShape(*wrp_geometry, *wrp_material, wrp_isExclusive);
}

ES PxShapePtr PxShapePtr_PxPhysicsPtr_createShapePtr_PxGeometry_PxMaterialPtr_ushort_(PxPhysicsPtr wrp_this, physx::PxGeometry* wrp_geometry, PxMaterialPtr* wrp_materials, PxU16 wrp_materialCount){
    return (PxShapePtr) wrp_this->createShape(*wrp_geometry, wrp_materials, wrp_materialCount);
}

ES PxShapePtr PxShapePtr_PxPhysicsPtr_createShapePtr_PxGeometry_PxMaterialPtr_ushort_bool_(PxPhysicsPtr wrp_this, physx::PxGeometry* wrp_geometry, PxMaterialPtr* wrp_materials, PxU16 wrp_materialCount, bool wrp_isExclusive){
    return (PxShapePtr) wrp_this->createShape(*wrp_geometry, wrp_materials, wrp_materialCount, wrp_isExclusive);
}

ES PxU32 uint_const_PxPhysicsPtr_getShapesPtr_PxShapePtr_uint_(PxPhysicsPtr wrp_this, PxShapePtr* wrp_userBuffer, PxU32 wrp_bufferSize){
    return (PxU32) wrp_this->getShapes(wrp_userBuffer, wrp_bufferSize);
}

ES PxU32 uint_const_PxPhysicsPtr_getMaterialsPtr_PxMaterialPtr_uint_(PxPhysicsPtr wrp_this, PxMaterialPtr* wrp_userBuffer, PxU32 wrp_bufferSize){
    return (PxU32) wrp_this->getMaterials(wrp_userBuffer, wrp_bufferSize);
}

ES void void_PxPhysicsPtr_registerDeletionListenerPtr_PxDeletionListenerPtr_PxDeletionEventFlagsPtr_(PxPhysicsPtr wrp_this, PxDeletionListenerPtr wrp_observer, PxDeletionEventFlagsPtr wrp_deletionEvents){
    wrp_this->registerDeletionListener(*wrp_observer, *wrp_deletionEvents);
}
