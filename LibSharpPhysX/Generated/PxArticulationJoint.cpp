// Generated by minBND 5.1.78.26 - Â© github.com/Alan-FGR
//DEBUG: UnitNode  - 0
//DEBUG: NamespaceNode physx - 40-568
//DEBUG: FunctionNode physx::operator| - 82
//Internal Op

//DEBUG: FunctionNode physx::operator& - 82
//Internal Op

//DEBUG: FunctionNode physx::operator~ - 82
//Internal Op

//DEBUG: FunctionNode physx::operator| - 95
//Internal Op

//DEBUG: FunctionNode physx::operator& - 95
//Internal Op

//DEBUG: FunctionNode physx::operator~ - 95
//Internal Op

//DEBUG: ClassNode physx::PxArticulationJointDriveType - 59-66
//DEBUG: EnumNode physx::PxArticulationJointDriveType::Enum - 61-65
// TODO EnumNode.GenWrapper()

//DEBUG: ClassNode physx::PxArticulationAxis - 68-80
//DEBUG: EnumNode physx::PxArticulationAxis::Enum - 70-79
// TODO EnumNode.GenWrapper()

//DEBUG: ClassNode physx::PxArticulationMotion - 84-92
//DEBUG: EnumNode physx::PxArticulationMotion::Enum - 86-91
// TODO EnumNode.GenWrapper()

//DEBUG: ClassNode physx::PxArticulationJointType - 97-107
//DEBUG: EnumNode physx::PxArticulationJointType::Enum - 99-106
// TODO EnumNode.GenWrapper()

//DEBUG: ClassNode physx::PxArticulationJointBase - 110-180
//Bases: PxBasePtr
//DEBUG: MethodNode physx::PxArticulationJointBase::getParentArticulationLink - 118
ES PxArticulationLinkPtr physx_PxArticulationLinkPtr_const_physx_PxArticulationJointBase_getParentArticulationLink(PxArticulationJointBasePtr wrp_this){
    //RET nat: PxArticulationLinkPtr, man: physx.PxArticulationLinkPtr, ret: True, kind: PtrStruct
    //PAR nat: PxArticulationJointBasePtr, man: physx.PxArticulationJointBasePtr, kind: PtrStruct
    return (PxArticulationLinkPtr) &wrp_this->getParentArticulationLink();
}

//DEBUG: MethodNode physx::PxArticulationJointBase::setParentPose - 129
ES void void_physx_PxArticulationJointBase_setParentPose_physx_PxTransform_(PxArticulationJointBasePtr wrp_this, physx::PxTransform* wrp_pose){
    //RET nat: void, man: void, ret: True, kind: Value
    //PAR nat: PxArticulationJointBasePtr, man: physx.PxArticulationJointBasePtr, kind: PtrStruct
    //PAR nat: physx::PxTransform*, man: physx.PxTransform*, kind: Value
    wrp_this->setParentPose(*wrp_pose);
}

//DEBUG: MethodNode physx::PxArticulationJointBase::getParentPose - 139
ES void physx_PxTransform_const_physx_PxArticulationJointBase_getParentPose(physx::PxTransform* RetRef, PxArticulationJointBasePtr wrp_this){
    //RET nat: physx::PxTransform, man: physx.PxTransform, ret: False, kind: Blittable
    //PAR nat: PxArticulationJointBasePtr, man: physx.PxArticulationJointBasePtr, kind: PtrStruct
    *RetRef = wrp_this->getParentPose();
}

//DEBUG: MethodNode physx::PxArticulationJointBase::getChildArticulationLink - 146
ES PxArticulationLinkPtr physx_PxArticulationLinkPtr_const_physx_PxArticulationJointBase_getChildArticulationLink(PxArticulationJointBasePtr wrp_this){
    //RET nat: PxArticulationLinkPtr, man: physx.PxArticulationLinkPtr, ret: True, kind: PtrStruct
    //PAR nat: PxArticulationJointBasePtr, man: physx.PxArticulationJointBasePtr, kind: PtrStruct
    return (PxArticulationLinkPtr) &wrp_this->getChildArticulationLink();
}

//DEBUG: MethodNode physx::PxArticulationJointBase::setChildPose - 158
ES void void_physx_PxArticulationJointBase_setChildPose_physx_PxTransform_(PxArticulationJointBasePtr wrp_this, physx::PxTransform* wrp_pose){
    //RET nat: void, man: void, ret: True, kind: Value
    //PAR nat: PxArticulationJointBasePtr, man: physx.PxArticulationJointBasePtr, kind: PtrStruct
    //PAR nat: physx::PxTransform*, man: physx.PxTransform*, kind: Value
    wrp_this->setChildPose(*wrp_pose);
}

//DEBUG: MethodNode physx::PxArticulationJointBase::getChildPose - 167
ES void physx_PxTransform_const_physx_PxArticulationJointBase_getChildPose(physx::PxTransform* RetRef, PxArticulationJointBasePtr wrp_this){
    //RET nat: physx::PxTransform, man: physx.PxTransform, ret: False, kind: Blittable
    //PAR nat: PxArticulationJointBasePtr, man: physx.PxArticulationJointBasePtr, kind: PtrStruct
    *RetRef = wrp_this->getChildPose();
}

//DEBUG: MethodNode physx::PxArticulationJointBase::getImpl - 169
//ERRORS OCCURED IN physx::PxArticulationJointBase::getImpl
////Type PxArticulationJointImplPtr explicitly forbidden by user configuration

//DEBUG: MethodNode physx::PxArticulationJointBase::getImpl - 170
//ERRORS OCCURED IN physx::PxArticulationJointBase::getImpl
////Type PxArticulationJointImplPtr explicitly forbidden by user configuration

//DEBUG: MethodNode physx::PxArticulationJointBase::~PxArticulationJointBase - 172
//ERRORS OCCURED IN physx::PxArticulationJointBase::~PxArticulationJointBase
//Destructor

//DEBUG: MethodNode physx::PxArticulationJointBase::operator= - 110
//ERRORS OCCURED IN physx::PxArticulationJointBase::operator=
//Implicit Function/Method
//Unbindable Operator: Equal

//DEBUG: ClassNode physx::PxArticulationJoint - 193-565
//Bases: PxArticulationJointBasePtr|PxBasePtr
//DEBUG: MethodNode physx::PxArticulationJoint::setTargetOrientation - 209
ES void void_physx_PxArticulationJoint_setTargetOrientation_physx_PxQuat_(PxArticulationJointPtr wrp_this, physx::PxQuat* wrp_orientation){
    //RET nat: void, man: void, ret: True, kind: Value
    //PAR nat: PxArticulationJointPtr, man: physx.PxArticulationJointPtr, kind: PtrStruct
    //PAR nat: physx::PxQuat*, man: physx.PxQuat*, kind: Value
    wrp_this->setTargetOrientation(*wrp_orientation);
}

//DEBUG: MethodNode physx::PxArticulationJoint::getTargetOrientation - 218
ES void physx_PxQuat_const_physx_PxArticulationJoint_getTargetOrientation(physx::PxQuat* RetRef, PxArticulationJointPtr wrp_this){
    //RET nat: physx::PxQuat, man: physx.PxQuat, ret: False, kind: Blittable
    //PAR nat: PxArticulationJointPtr, man: physx.PxArticulationJointPtr, kind: PtrStruct
    *RetRef = wrp_this->getTargetOrientation();
}

//DEBUG: MethodNode physx::PxArticulationJoint::setTargetVelocity - 230
ES void void_physx_PxArticulationJoint_setTargetVelocity_physx_PxVec3_(PxArticulationJointPtr wrp_this, physx::PxVec3* wrp_velocity){
    //RET nat: void, man: void, ret: True, kind: Value
    //PAR nat: PxArticulationJointPtr, man: physx.PxArticulationJointPtr, kind: PtrStruct
    //PAR nat: physx::PxVec3*, man: physx.PxVec3*, kind: Value
    wrp_this->setTargetVelocity(*wrp_velocity);
}

//DEBUG: MethodNode physx::PxArticulationJoint::getTargetVelocity - 239
ES void physx_PxVec3_const_physx_PxArticulationJoint_getTargetVelocity(physx::PxVec3* RetRef, PxArticulationJointPtr wrp_this){
    //RET nat: physx::PxVec3, man: physx.PxVec3, ret: False, kind: Blittable
    //PAR nat: PxArticulationJointPtr, man: physx.PxArticulationJointPtr, kind: PtrStruct
    *RetRef = wrp_this->getTargetVelocity();
}

//DEBUG: MethodNode physx::PxArticulationJoint::setDriveType - 250
ES void void_physx_PxArticulationJoint_setDriveType_physx_PxArticulationJointDriveTypeEnum_(PxArticulationJointPtr wrp_this, physx::PxArticulationJointDriveType::Enum wrp_driveType){
    //RET nat: void, man: void, ret: True, kind: Value
    //PAR nat: PxArticulationJointPtr, man: physx.PxArticulationJointPtr, kind: PtrStruct
    //PAR nat: physx::PxArticulationJointDriveType::Enum, man: physx.PxArticulationJointDriveTypeEnum, kind: Value
    wrp_this->setDriveType(wrp_driveType);
}

//DEBUG: MethodNode physx::PxArticulationJoint::getDriveType - 259-260
ES physx::PxArticulationJointDriveType::Enum physx_PxArticulationJointDriveTypeEnum_const_physx_PxArticulationJoint_getDriveType(PxArticulationJointPtr wrp_this){
    //RET nat: physx::PxArticulationJointDriveType::Enum, man: physx.PxArticulationJointDriveTypeEnum, ret: True, kind: Value
    //PAR nat: PxArticulationJointPtr, man: physx.PxArticulationJointPtr, kind: PtrStruct
    return (physx::PxArticulationJointDriveType::Enum) wrp_this->getDriveType();
}

//DEBUG: MethodNode physx::PxArticulationJoint::setStiffness - 277
ES void void_physx_PxArticulationJoint_setStiffness_float_(PxArticulationJointPtr wrp_this, float wrp_spring){
    //RET nat: void, man: void, ret: True, kind: Value
    //PAR nat: PxArticulationJointPtr, man: physx.PxArticulationJointPtr, kind: PtrStruct
    //PAR nat: float, man: float, kind: Value
    wrp_this->setStiffness(wrp_spring);
}

//DEBUG: MethodNode physx::PxArticulationJoint::getStiffness - 286
ES float float_const_physx_PxArticulationJoint_getStiffness(PxArticulationJointPtr wrp_this){
    //RET nat: float, man: float, ret: True, kind: Value
    //PAR nat: PxArticulationJointPtr, man: physx.PxArticulationJointPtr, kind: PtrStruct
    return (float) wrp_this->getStiffness();
}

//DEBUG: MethodNode physx::PxArticulationJoint::setDamping - 302
ES void void_physx_PxArticulationJoint_setDamping_float_(PxArticulationJointPtr wrp_this, float wrp_damping){
    //RET nat: void, man: void, ret: True, kind: Value
    //PAR nat: PxArticulationJointPtr, man: physx.PxArticulationJointPtr, kind: PtrStruct
    //PAR nat: float, man: float, kind: Value
    wrp_this->setDamping(wrp_damping);
}

//DEBUG: MethodNode physx::PxArticulationJoint::getDamping - 310
ES float float_const_physx_PxArticulationJoint_getDamping(PxArticulationJointPtr wrp_this){
    //RET nat: float, man: float, ret: True, kind: Value
    //PAR nat: PxArticulationJointPtr, man: physx.PxArticulationJointPtr, kind: PtrStruct
    return (float) wrp_this->getDamping();
}

//DEBUG: MethodNode physx::PxArticulationJoint::setInternalCompliance - 331
ES void void_physx_PxArticulationJoint_setInternalCompliance_float_(PxArticulationJointPtr wrp_this, float wrp_compliance){
    //RET nat: void, man: void, ret: True, kind: Value
    //PAR nat: PxArticulationJointPtr, man: physx.PxArticulationJointPtr, kind: PtrStruct
    //PAR nat: float, man: float, kind: Value
    wrp_this->setInternalCompliance(wrp_compliance);
}

//DEBUG: MethodNode physx::PxArticulationJoint::getInternalCompliance - 341
ES float float_const_physx_PxArticulationJoint_getInternalCompliance(PxArticulationJointPtr wrp_this){
    //RET nat: float, man: float, ret: True, kind: Value
    //PAR nat: PxArticulationJointPtr, man: physx.PxArticulationJointPtr, kind: PtrStruct
    return (float) wrp_this->getInternalCompliance();
}

//DEBUG: MethodNode physx::PxArticulationJoint::setExternalCompliance - 362
ES void void_physx_PxArticulationJoint_setExternalCompliance_float_(PxArticulationJointPtr wrp_this, float wrp_compliance){
    //RET nat: void, man: void, ret: True, kind: Value
    //PAR nat: PxArticulationJointPtr, man: physx.PxArticulationJointPtr, kind: PtrStruct
    //PAR nat: float, man: float, kind: Value
    wrp_this->setExternalCompliance(wrp_compliance);
}

//DEBUG: MethodNode physx::PxArticulationJoint::getExternalCompliance - 371
ES float float_const_physx_PxArticulationJoint_getExternalCompliance(PxArticulationJointPtr wrp_this){
    //RET nat: float, man: float, ret: True, kind: Value
    //PAR nat: PxArticulationJointPtr, man: physx.PxArticulationJointPtr, kind: PtrStruct
    return (float) wrp_this->getExternalCompliance();
}

//DEBUG: MethodNode physx::PxArticulationJoint::setSwingLimit - 388
ES void void_physx_PxArticulationJoint_setSwingLimit_float_float_(PxArticulationJointPtr wrp_this, float wrp_zLimit, float wrp_yLimit){
    //RET nat: void, man: void, ret: True, kind: Value
    //PAR nat: PxArticulationJointPtr, man: physx.PxArticulationJointPtr, kind: PtrStruct
    //PAR nat: float, man: float, kind: Value
    //PAR nat: float, man: float, kind: Value
    wrp_this->setSwingLimit(wrp_zLimit, wrp_yLimit);
}

//DEBUG: MethodNode physx::PxArticulationJoint::getSwingLimit - 401
ES void void_const_physx_PxArticulationJoint_getSwingLimit_float_float_(PxArticulationJointPtr wrp_this, float* wrp_zLimit, float* wrp_yLimit){
    //RET nat: void, man: void, ret: True, kind: Value
    //PAR nat: PxArticulationJointPtr, man: physx.PxArticulationJointPtr, kind: PtrStruct
    //PAR nat: float*, man: float*, kind: Value
    //PAR nat: float*, man: float*, kind: Value
    wrp_this->getSwingLimit(*wrp_zLimit, *wrp_yLimit);
}

//DEBUG: MethodNode physx::PxArticulationJoint::setTangentialStiffness - 411
ES void void_physx_PxArticulationJoint_setTangentialStiffness_float_(PxArticulationJointPtr wrp_this, float wrp_spring){
    //RET nat: void, man: void, ret: True, kind: Value
    //PAR nat: PxArticulationJointPtr, man: physx.PxArticulationJointPtr, kind: PtrStruct
    //PAR nat: float, man: float, kind: Value
    wrp_this->setTangentialStiffness(wrp_spring);
}

//DEBUG: MethodNode physx::PxArticulationJoint::getTangentialStiffness - 421
ES float float_const_physx_PxArticulationJoint_getTangentialStiffness(PxArticulationJointPtr wrp_this){
    //RET nat: float, man: float, ret: True, kind: Value
    //PAR nat: PxArticulationJointPtr, man: physx.PxArticulationJointPtr, kind: PtrStruct
    return (float) wrp_this->getTangentialStiffness();
}

//DEBUG: MethodNode physx::PxArticulationJoint::setTangentialDamping - 430
ES void void_physx_PxArticulationJoint_setTangentialDamping_float_(PxArticulationJointPtr wrp_this, float wrp_damping){
    //RET nat: void, man: void, ret: True, kind: Value
    //PAR nat: PxArticulationJointPtr, man: physx.PxArticulationJointPtr, kind: PtrStruct
    //PAR nat: float, man: float, kind: Value
    wrp_this->setTangentialDamping(wrp_damping);
}

//DEBUG: MethodNode physx::PxArticulationJoint::getTangentialDamping - 440
ES float float_const_physx_PxArticulationJoint_getTangentialDamping(PxArticulationJointPtr wrp_this){
    //RET nat: float, man: float, ret: True, kind: Value
    //PAR nat: PxArticulationJointPtr, man: physx.PxArticulationJointPtr, kind: PtrStruct
    return (float) wrp_this->getTangentialDamping();
}

//DEBUG: MethodNode physx::PxArticulationJoint::setSwingLimitContactDistance - 454
ES void void_physx_PxArticulationJoint_setSwingLimitContactDistance_float_(PxArticulationJointPtr wrp_this, float wrp_contactDistance){
    //RET nat: void, man: void, ret: True, kind: Value
    //PAR nat: PxArticulationJointPtr, man: physx.PxArticulationJointPtr, kind: PtrStruct
    //PAR nat: float, man: float, kind: Value
    wrp_this->setSwingLimitContactDistance(wrp_contactDistance);
}

//DEBUG: MethodNode physx::PxArticulationJoint::getSwingLimitContactDistance - 464
ES float float_const_physx_PxArticulationJoint_getSwingLimitContactDistance(PxArticulationJointPtr wrp_this){
    //RET nat: float, man: float, ret: True, kind: Value
    //PAR nat: PxArticulationJointPtr, man: physx.PxArticulationJointPtr, kind: PtrStruct
    return (float) wrp_this->getSwingLimitContactDistance();
}

//DEBUG: MethodNode physx::PxArticulationJoint::setSwingLimitEnabled - 476
ES void void_physx_PxArticulationJoint_setSwingLimitEnabled_bool_(PxArticulationJointPtr wrp_this, bool wrp_enabled){
    //RET nat: void, man: void, ret: True, kind: Value
    //PAR nat: PxArticulationJointPtr, man: physx.PxArticulationJointPtr, kind: PtrStruct
    //PAR nat: bool, man: bool, kind: Value
    wrp_this->setSwingLimitEnabled(wrp_enabled);
}

//DEBUG: MethodNode physx::PxArticulationJoint::getSwingLimitEnabled - 486
ES bool bool_const_physx_PxArticulationJoint_getSwingLimitEnabled(PxArticulationJointPtr wrp_this){
    //RET nat: bool, man: bool, ret: True, kind: Value
    //PAR nat: PxArticulationJointPtr, man: physx.PxArticulationJointPtr, kind: PtrStruct
    return (bool) wrp_this->getSwingLimitEnabled();
}

//DEBUG: MethodNode physx::PxArticulationJoint::setTwistLimit - 501
ES void void_physx_PxArticulationJoint_setTwistLimit_float_float_(PxArticulationJointPtr wrp_this, float wrp_lower, float wrp_upper){
    //RET nat: void, man: void, ret: True, kind: Value
    //PAR nat: PxArticulationJointPtr, man: physx.PxArticulationJointPtr, kind: PtrStruct
    //PAR nat: float, man: float, kind: Value
    //PAR nat: float, man: float, kind: Value
    wrp_this->setTwistLimit(wrp_lower, wrp_upper);
}

//DEBUG: MethodNode physx::PxArticulationJoint::getTwistLimit - 512
ES void void_const_physx_PxArticulationJoint_getTwistLimit_float_float_(PxArticulationJointPtr wrp_this, float* wrp_lower, float* wrp_upper){
    //RET nat: void, man: void, ret: True, kind: Value
    //PAR nat: PxArticulationJointPtr, man: physx.PxArticulationJointPtr, kind: PtrStruct
    //PAR nat: float*, man: float*, kind: Value
    //PAR nat: float*, man: float*, kind: Value
    wrp_this->getTwistLimit(*wrp_lower, *wrp_upper);
}

//DEBUG: MethodNode physx::PxArticulationJoint::setTwistLimitEnabled - 522
ES void void_physx_PxArticulationJoint_setTwistLimitEnabled_bool_(PxArticulationJointPtr wrp_this, bool wrp_enabled){
    //RET nat: void, man: void, ret: True, kind: Value
    //PAR nat: PxArticulationJointPtr, man: physx.PxArticulationJointPtr, kind: PtrStruct
    //PAR nat: bool, man: bool, kind: Value
    wrp_this->setTwistLimitEnabled(wrp_enabled);
}

//DEBUG: MethodNode physx::PxArticulationJoint::getTwistLimitEnabled - 532
ES bool bool_const_physx_PxArticulationJoint_getTwistLimitEnabled(PxArticulationJointPtr wrp_this){
    //RET nat: bool, man: bool, ret: True, kind: Value
    //PAR nat: PxArticulationJointPtr, man: physx.PxArticulationJointPtr, kind: PtrStruct
    return (bool) wrp_this->getTwistLimitEnabled();
}

//DEBUG: MethodNode physx::PxArticulationJoint::setTwistLimitContactDistance - 546
ES void void_physx_PxArticulationJoint_setTwistLimitContactDistance_float_(PxArticulationJointPtr wrp_this, float wrp_contactDistance){
    //RET nat: void, man: void, ret: True, kind: Value
    //PAR nat: PxArticulationJointPtr, man: physx.PxArticulationJointPtr, kind: PtrStruct
    //PAR nat: float, man: float, kind: Value
    wrp_this->setTwistLimitContactDistance(wrp_contactDistance);
}

//DEBUG: MethodNode physx::PxArticulationJoint::getTwistLimitContactDistance - 556
ES float float_const_physx_PxArticulationJoint_getTwistLimitContactDistance(PxArticulationJointPtr wrp_this){
    //RET nat: float, man: float, ret: True, kind: Value
    //PAR nat: PxArticulationJointPtr, man: physx.PxArticulationJointPtr, kind: PtrStruct
    return (float) wrp_this->getTwistLimitContactDistance();
}

//DEBUG: MethodNode physx::PxArticulationJoint::getConcreteTypeName - 558
ES char* string_const_physx_PxArticulationJoint_getConcreteTypeName(PxArticulationJointPtr wrp_this){
    //RET nat: char*, man: string, ret: True, kind: Value
    //PAR nat: PxArticulationJointPtr, man: physx.PxArticulationJointPtr, kind: PtrStruct
    return (char*) wrp_this->getConcreteTypeName();
}

//DEBUG: MethodNode physx::PxArticulationJoint::operator= - 193
//ERRORS OCCURED IN physx::PxArticulationJoint::operator=
//Implicit Function/Method
//Unbindable Operator: Equal

//DEBUG: DeclNode physx::PxArticulationMotions - 94
// TODO DeclNode.GenWrapper()
