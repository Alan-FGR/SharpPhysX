// Generated by minBND 5.1.81.43 - Â© github.com/Alan-FGR
ES void Default_physx_PxVec2_(physx::PxVec2* RetRef){
    *RetRef = *RetRef = physx::PxVec2();
}

ES void void_physx_PxVec2_PxVec2_Ctor_physx_PxZERO_(physx::PxVec2* wrp_this, physx::PxZERO wrp_r){
    *wrp_this = physx::PxVec2::PxVec2(wrp_r);
}

ES void void_physx_PxVec2_PxVec2_Ctor_float_(physx::PxVec2* wrp_this, float wrp_a){
    *wrp_this = physx::PxVec2::PxVec2(wrp_a);
}

ES void void_physx_PxVec2_PxVec2_Ctor_float_float_(physx::PxVec2* wrp_this, float wrp_nx, float wrp_ny){
    *wrp_this = physx::PxVec2::PxVec2(wrp_nx, wrp_ny);
}

ES void void_physx_PxVec2_PxVec2_Ctor_physx_PxVec2_(physx::PxVec2* wrp_this, physx::PxVec2* wrp_v){
    *wrp_this = physx::PxVec2::PxVec2(*wrp_v);
}

ES bool bool_const_physx_PxVec2_operator_EqualEqual_physx_PxVec2_(physx::PxVec2* wrp_lhs, physx::PxVec2* wrp_v){
    return (bool) wrp_lhs->operator==(*wrp_v);
}

ES bool bool_const_physx_PxVec2_operator_ExclaimEqual_physx_PxVec2_(physx::PxVec2* wrp_lhs, physx::PxVec2* wrp_v){
    return (bool) wrp_lhs->operator!=(*wrp_v);
}

ES bool bool_const_physx_PxVec2_isZero(physx::PxVec2* wrp_this){
    return (bool) wrp_this->isZero();
}

ES bool bool_const_physx_PxVec2_isFinite(physx::PxVec2* wrp_this){
    return (bool) wrp_this->isFinite();
}

ES bool bool_const_physx_PxVec2_isNormalized(physx::PxVec2* wrp_this){
    return (bool) wrp_this->isNormalized();
}

ES float float_const_physx_PxVec2_magnitudeSquared(physx::PxVec2* wrp_this){
    return (float) wrp_this->magnitudeSquared();
}

ES float float_const_physx_PxVec2_magnitude(physx::PxVec2* wrp_this){
    return (float) wrp_this->magnitude();
}

ES void physx_PxVec2_const_physx_PxVec2_operator_Minus(physx::PxVec2* RetRef, physx::PxVec2* wrp_lhs){
    *RetRef = wrp_lhs->operator-();
}

ES void physx_PxVec2_const_physx_PxVec2_operator_Plus_physx_PxVec2_(physx::PxVec2* RetRef, physx::PxVec2* wrp_lhs, physx::PxVec2* wrp_v){
    *RetRef = wrp_lhs->operator+(*wrp_v);
}

ES void physx_PxVec2_const_physx_PxVec2_operator_Minus_physx_PxVec2_(physx::PxVec2* RetRef, physx::PxVec2* wrp_lhs, physx::PxVec2* wrp_v){
    *RetRef = wrp_lhs->operator-(*wrp_v);
}

ES void physx_PxVec2_const_physx_PxVec2_operator_Star_float_(physx::PxVec2* RetRef, physx::PxVec2* wrp_lhs, float wrp_f){
    *RetRef = wrp_lhs->operator*(wrp_f);
}

ES void physx_PxVec2_const_physx_PxVec2_operator_Slash_float_(physx::PxVec2* RetRef, physx::PxVec2* wrp_lhs, float wrp_f){
    *RetRef = wrp_lhs->operator/(wrp_f);
}

ES float float_const_physx_PxVec2_dot_physx_PxVec2_(physx::PxVec2* wrp_this, physx::PxVec2* wrp_v){
    return (float) wrp_this->dot(*wrp_v);
}

ES void physx_PxVec2_const_physx_PxVec2_getNormalized(physx::PxVec2* RetRef, physx::PxVec2* wrp_this){
    *RetRef = wrp_this->getNormalized();
}

ES float float_physx_PxVec2_normalize(physx::PxVec2* wrp_this){
    return (float) wrp_this->normalize();
}

ES void physx_PxVec2_const_physx_PxVec2_multiply_physx_PxVec2_(physx::PxVec2* RetRef, physx::PxVec2* wrp_this, physx::PxVec2* wrp_a){
    *RetRef = wrp_this->multiply(*wrp_a);
}

ES void physx_PxVec2_const_physx_PxVec2_minimum_physx_PxVec2_(physx::PxVec2* RetRef, physx::PxVec2* wrp_this, physx::PxVec2* wrp_v){
    *RetRef = wrp_this->minimum(*wrp_v);
}

ES float float_const_physx_PxVec2_minElement(physx::PxVec2* wrp_this){
    return (float) wrp_this->minElement();
}

ES void physx_PxVec2_const_physx_PxVec2_maximum_physx_PxVec2_(physx::PxVec2* RetRef, physx::PxVec2* wrp_this, physx::PxVec2* wrp_v){
    *RetRef = wrp_this->maximum(*wrp_v);
}

ES float float_const_physx_PxVec2_maxElement(physx::PxVec2* wrp_this){
    return (float) wrp_this->maxElement();
}
    ES void physx_PxVec2_physx_operator_Star_float_physx_PxVec2_(physx::PxVec2* RetRef, float wrp_f, physx::PxVec2* wrp_v){
        *RetRef = operator*(wrp_f, *wrp_v);
    }
