// Generated by minBND 5.1.93.2 - Â© github.com/Alan-FGR

ES PxCollectionPtr PxCollectionPtr_PxCreateCollectionPtr(){
    return (PxCollectionPtr) ::PxCreateCollection();
}

ES void void_PxCollectionPtr_addPtr_PxBasePtr_ulong_(PxCollectionPtr wrp_this, PxBasePtr wrp_object, PxSerialObjectId wrp_id){
    wrp_this->add(*wrp_object, wrp_id);
}

ES void void_PxCollectionPtr_removePtr_PxBasePtr_(PxCollectionPtr wrp_this, PxBasePtr wrp_object){
    wrp_this->remove(*wrp_object);
}

ES bool bool_const_PxCollectionPtr_containsPtr_PxBasePtr_(PxCollectionPtr wrp_this, PxBasePtr wrp_object){
    return (bool) wrp_this->contains(*wrp_object);
}

ES void void_PxCollectionPtr_addIdPtr_PxBasePtr_ulong_(PxCollectionPtr wrp_this, PxBasePtr wrp_object, PxSerialObjectId wrp_id){
    wrp_this->addId(*wrp_object, wrp_id);
}

ES void void_PxCollectionPtr_removeIdPtr_ulong_(PxCollectionPtr wrp_this, PxSerialObjectId wrp_id){
    wrp_this->removeId(wrp_id);
}

ES void void_PxCollectionPtr_addPtr_PxCollectionPtr_(PxCollectionPtr wrp_this, PxCollectionPtr wrp_collection){
    wrp_this->add(*wrp_collection);
}

ES void void_PxCollectionPtr_removePtr_PxCollectionPtr_(PxCollectionPtr wrp_this, PxCollectionPtr wrp_collection){
    wrp_this->remove(*wrp_collection);
}

ES PxU32 uint_const_PxCollectionPtr_getNbObjectsPtr(PxCollectionPtr wrp_this){
    return (PxU32) wrp_this->getNbObjects();
}

ES PxBasePtr PxBasePtr_const_PxCollectionPtr_getObjectPtr_uint_(PxCollectionPtr wrp_this, PxU32 wrp_index){
    return (PxBasePtr) &wrp_this->getObject(wrp_index);
}

ES PxU32 uint_const_PxCollectionPtr_getObjectsPtr_PxBasePtr_uint_uint_(PxCollectionPtr wrp_this, PxBasePtr* wrp_userBuffer, PxU32 wrp_bufferSize, PxU32 wrp_startIndex){
    return (PxU32) wrp_this->getObjects(wrp_userBuffer, wrp_bufferSize, wrp_startIndex);
}

ES PxBasePtr PxBasePtr_const_PxCollectionPtr_findPtr_ulong_(PxCollectionPtr wrp_this, PxSerialObjectId wrp_id){
    return (PxBasePtr) wrp_this->find(wrp_id);
}

ES PxU32 uint_const_PxCollectionPtr_getNbIdsPtr(PxCollectionPtr wrp_this){
    return (PxU32) wrp_this->getNbIds();
}

ES PxU32 uint_const_PxCollectionPtr_getIdsPtr_ulong_uint_uint_(PxCollectionPtr wrp_this, PxSerialObjectId* wrp_userBuffer, PxU32 wrp_bufferSize, PxU32 wrp_startIndex){
    return (PxU32) wrp_this->getIds(wrp_userBuffer, wrp_bufferSize, wrp_startIndex);
}

ES PxSerialObjectId ulong_const_PxCollectionPtr_getIdPtr_PxBasePtr_(PxCollectionPtr wrp_this, PxBasePtr wrp_object){
    return (PxSerialObjectId) wrp_this->getId(*wrp_object);
}

ES void void_PxCollectionPtr_releasePtr(PxCollectionPtr wrp_this){
    wrp_this->release();
}

ES void void_PxCollectionPtr_addPtr_PxBasePtr_(PxCollectionPtr wrp_this, PxBasePtr wrp_object){
    wrp_this->add(*wrp_object);
}

ES PxU32 uint_const_PxCollectionPtr_getObjectsPtr_PxBasePtr_uint_(PxCollectionPtr wrp_this, PxBasePtr* wrp_userBuffer, PxU32 wrp_bufferSize){
    return (PxU32) wrp_this->getObjects(wrp_userBuffer, wrp_bufferSize);
}

ES PxU32 uint_const_PxCollectionPtr_getIdsPtr_ulong_uint_(PxCollectionPtr wrp_this, PxSerialObjectId* wrp_userBuffer, PxU32 wrp_bufferSize){
    return (PxU32) wrp_this->getIds(wrp_userBuffer, wrp_bufferSize);
}
