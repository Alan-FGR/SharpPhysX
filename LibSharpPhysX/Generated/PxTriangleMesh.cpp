// Generated by minBND 5.1.91.1 - Â© github.com/Alan-FGR

ES PxTriangleMeshFlagsPtr PxTriangleMeshFlagsPtr_operator_Ptr_Pipe_PxTriangleMeshFlagEnum_PxTriangleMeshFlagEnum_(physx::PxTriangleMeshFlag::Enum wrp_a, physx::PxTriangleMeshFlag::Enum wrp_b){
    auto ret = ::physx::operator|(wrp_a, wrp_b);
    auto heap = new char[sizeof PxTriangleMeshFlags];
    std::memcpy(heap, &ret, sizeof PxTriangleMeshFlags);
    return (PxTriangleMeshFlagsPtr) heap;
}

ES PxTriangleMeshFlagsPtr PxTriangleMeshFlagsPtr_operator_Ptr_Amp_PxTriangleMeshFlagEnum_PxTriangleMeshFlagEnum_(physx::PxTriangleMeshFlag::Enum wrp_a, physx::PxTriangleMeshFlag::Enum wrp_b){
    auto ret = ::physx::operator&(wrp_a, wrp_b);
    auto heap = new char[sizeof PxTriangleMeshFlags];
    std::memcpy(heap, &ret, sizeof PxTriangleMeshFlags);
    return (PxTriangleMeshFlagsPtr) heap;
}

ES PxTriangleMeshFlagsPtr PxTriangleMeshFlagsPtr_operator_Ptr_Tilde_PxTriangleMeshFlagEnum_(physx::PxTriangleMeshFlag::Enum wrp_a){
    auto ret = ::physx::operator~(wrp_a);
    auto heap = new char[sizeof PxTriangleMeshFlags];
    std::memcpy(heap, &ret, sizeof PxTriangleMeshFlags);
    return (PxTriangleMeshFlagsPtr) heap;
}

ES PxU32 uint_const_PxTriangleMeshPtr_getNbVerticesPtr(PxTriangleMeshPtr wrp_this){
    return (PxU32) wrp_this->getNbVertices();
}

ES physx::PxVec3* PxVec3_const_PxTriangleMeshPtr_getVerticesPtr(PxTriangleMeshPtr wrp_this){
    return (physx::PxVec3*) wrp_this->getVertices();
}

ES physx::PxVec3* PxVec3_PxTriangleMeshPtr_getVerticesForModificationPtr(PxTriangleMeshPtr wrp_this){
    return (physx::PxVec3*) wrp_this->getVerticesForModification();
}

ES void PxBounds3_PxTriangleMeshPtr_refitBVHPtr(physx::PxBounds3* nRetRef, PxTriangleMeshPtr wrp_this){
    *nRetRef = wrp_this->refitBVH();
}

ES PxU32 uint_const_PxTriangleMeshPtr_getNbTrianglesPtr(PxTriangleMeshPtr wrp_this){
    return (PxU32) wrp_this->getNbTriangles();
}

ES void* IntPtr_const_PxTriangleMeshPtr_getTrianglesPtr(PxTriangleMeshPtr wrp_this){
    return (void*) wrp_this->getTriangles();
}

ES PxTriangleMeshFlagsPtr PxTriangleMeshFlagsPtr_const_PxTriangleMeshPtr_getTriangleMeshFlagsPtr(PxTriangleMeshPtr wrp_this){
    auto ret = wrp_this->getTriangleMeshFlags();
    auto heap = new char[sizeof PxTriangleMeshFlags];
    std::memcpy(heap, &ret, sizeof PxTriangleMeshFlags);
    return (PxTriangleMeshFlagsPtr) heap;
}

ES PxU32* uint_const_PxTriangleMeshPtr_getTrianglesRemapPtr(PxTriangleMeshPtr wrp_this){
    return (PxU32*) wrp_this->getTrianglesRemap();
}

ES void void_PxTriangleMeshPtr_releasePtr(PxTriangleMeshPtr wrp_this){
    wrp_this->release();
}

ES PxMaterialTableIndex ushort_const_PxTriangleMeshPtr_getTriangleMaterialIndexPtr_uint_(PxTriangleMeshPtr wrp_this, PxTriangleID wrp_triangleIndex){
    return (PxMaterialTableIndex) wrp_this->getTriangleMaterialIndex(wrp_triangleIndex);
}

ES void PxBounds3_const_PxTriangleMeshPtr_getLocalBoundsPtr(physx::PxBounds3* nRetRef, PxTriangleMeshPtr wrp_this){
    *nRetRef = wrp_this->getLocalBounds();
}

ES PxU32 uint_const_PxTriangleMeshPtr_getReferenceCountPtr(PxTriangleMeshPtr wrp_this){
    return (PxU32) wrp_this->getReferenceCount();
}

ES void void_PxTriangleMeshPtr_acquireReferencePtr(PxTriangleMeshPtr wrp_this){
    wrp_this->acquireReference();
}

