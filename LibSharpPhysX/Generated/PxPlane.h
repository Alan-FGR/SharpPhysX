//Generated by MinBinder.

ES physx::PxPlane C_PxPlane_PxPlane(){ // L56

    return physx::PxPlane::PxPlane();
}

ES physx::PxPlane C_PxPlane_PxPlane(float nx,float ny,float nz,float distance){ // L63

    return physx::PxPlane::PxPlane(nx,ny,nz,distance);
}

ES physx::PxPlane C_PxPlane_PxPlane(physx::PxVec3 normal,float distance){ // L70

    return physx::PxPlane::PxPlane(normal,distance);
}

ES physx::PxPlane C_PxPlane_PxPlane(physx::PxVec3 point,physx::PxVec3 normal){ // L77

    return physx::PxPlane::PxPlane(point,normal);
}

ES physx::PxPlane C_PxPlane_PxPlane(physx::PxVec3 p0,physx::PxVec3 p1,physx::PxVec3 p2){ // L85

    return physx::PxPlane::PxPlane(p0,p1,p2);
}

ES bool C_CONST_PxPlane_OP_EqualEqual(physx::PxPlane cls,physx::PxPlane* p){ // L94

    return cls.operator==(*p);
}

ES float C_CONST_PxPlane_distance(physx::PxPlane cls,physx::PxVec3 p){ // L99

    return cls.distance(p);
}

ES bool C_CONST_PxPlane_contains(physx::PxPlane cls,physx::PxVec3 p){ // L104

    return cls.contains(p);
}

ES physx::PxVec3 C_CONST_PxPlane_project(physx::PxPlane cls,physx::PxVec3 p){ // L112

    return cls.project(p);
}

ES physx::PxVec3 C_CONST_PxPlane_pointInPlane(physx::PxPlane cls){ // L120

    return cls.pointInPlane();
}

ES void C_PxPlane_normalize(physx::PxPlane cls){ // L129

    return cls.normalize();
}

