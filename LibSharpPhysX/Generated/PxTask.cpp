// Generated by minBND 5.1.78.10 - Â© github.com/Alan-FGR
ES void void_physx_PxBaseTask_release(PxBaseTaskPtr wrp_this){
    wrp_this->release();
}

ES void void_physx_PxBaseTask_addReference(PxBaseTaskPtr wrp_this){
    wrp_this->addReference();
}

ES void void_physx_PxBaseTask_removeReference(PxBaseTaskPtr wrp_this){
    wrp_this->removeReference();
}

ES int int_const_physx_PxBaseTask_getReference(PxBaseTaskPtr wrp_this){
    return (int) wrp_this->getReference();
}

ES void void_physx_PxBaseTask_run(PxBaseTaskPtr wrp_this){
    wrp_this->run();
}

ES char* string_const_physx_PxBaseTask_getName(PxBaseTaskPtr wrp_this){
    return (char*) wrp_this->getName();
}

ES PxTaskManagerPtr physx_PxTaskManagerPtr_const_physx_PxBaseTask_getTaskManager(PxBaseTaskPtr wrp_this){
    return (PxTaskManagerPtr) wrp_this->getTaskManager();
}

ES void void_physx_PxBaseTask_setContextId_ulong_(PxBaseTaskPtr wrp_this, unsigned long long wrp_id){
    wrp_this->setContextId(wrp_id);
}

ES unsigned long long ulong_const_physx_PxBaseTask_getContextId(PxBaseTaskPtr wrp_this){
    return (unsigned long long) wrp_this->getContextId();
}

ES void void_physx_PxTask_release(PxTaskPtr wrp_this){
    wrp_this->release();
}

ES void void_physx_PxTask_finishBefore_uint_(PxTaskPtr wrp_this, unsigned int wrp_taskID){
    wrp_this->finishBefore(wrp_taskID);
}

ES void void_physx_PxTask_startAfter_uint_(PxTaskPtr wrp_this, unsigned int wrp_taskID){
    wrp_this->startAfter(wrp_taskID);
}

ES void void_physx_PxTask_addReference(PxTaskPtr wrp_this){
    wrp_this->addReference();
}

ES void void_physx_PxTask_removeReference(PxTaskPtr wrp_this){
    wrp_this->removeReference();
}

ES int int_const_physx_PxTask_getReference(PxTaskPtr wrp_this){
    return (int) wrp_this->getReference();
}

ES unsigned int uint_const_physx_PxTask_getTaskID(PxTaskPtr wrp_this){
    return (unsigned int) wrp_this->getTaskID();
}

ES void void_physx_PxTask_submitted(PxTaskPtr wrp_this){
    wrp_this->submitted();
}

ES void void_physx_PxTask_requestSyncPoint(PxTaskPtr wrp_this){
    wrp_this->requestSyncPoint();
}

ES void void_physx_PxLightCpuTask_setContinuation_physx_PxTaskManagerPtr_physx_PxBaseTaskPtr_(PxLightCpuTaskPtr wrp_this, PxTaskManagerPtr wrp_tm, PxBaseTaskPtr wrp_c){
    wrp_this->setContinuation(*wrp_tm, wrp_c);
}

ES void void_physx_PxLightCpuTask_setContinuation_physx_PxBaseTaskPtr_(PxLightCpuTaskPtr wrp_this, PxBaseTaskPtr wrp_c){
    wrp_this->setContinuation(wrp_c);
}

ES PxBaseTaskPtr physx_PxBaseTaskPtr_const_physx_PxLightCpuTask_getContinuation(PxLightCpuTaskPtr wrp_this){
    return (PxBaseTaskPtr) wrp_this->getContinuation();
}

ES void void_physx_PxLightCpuTask_removeReference(PxLightCpuTaskPtr wrp_this){
    wrp_this->removeReference();
}

ES int int_const_physx_PxLightCpuTask_getReference(PxLightCpuTaskPtr wrp_this){
    return (int) wrp_this->getReference();
}

ES void void_physx_PxLightCpuTask_addReference(PxLightCpuTaskPtr wrp_this){
    wrp_this->addReference();
}

ES void void_physx_PxLightCpuTask_release(PxLightCpuTaskPtr wrp_this){
    wrp_this->release();
}
