// Generated by minBND 5.1.78.26 - Â© github.com/Alan-FGR
//DEBUG: UnitNode  - 0
//DEBUG: NamespaceNode physx - 37-331
//DEBUG: ClassNode physx::PxBaseTask - 45-102
//DEBUG: DeclNode physx::PxBaseTask - 101
// TODO DeclNode.GenWrapper()

//DEBUG: MethodNode physx::PxBaseTask::~PxBaseTask - 49
//ERRORS OCCURED IN physx::PxBaseTask::~PxBaseTask
//Destructor

//DEBUG: MethodNode physx::PxBaseTask::release - 81
ES void void_physx_PxBaseTask_release(PxBaseTaskPtr wrp_this){
    //RET nat: void, man: void, ret: True, kind: Value
    //PAR nat: PxBaseTaskPtr, man: physx.PxBaseTaskPtr, kind: PtrStruct
    wrp_this->release();
}

//DEBUG: MethodNode physx::PxBaseTask::addReference - 69
ES void void_physx_PxBaseTask_addReference(PxBaseTaskPtr wrp_this){
    //RET nat: void, man: void, ret: True, kind: Value
    //PAR nat: PxBaseTaskPtr, man: physx.PxBaseTaskPtr, kind: PtrStruct
    wrp_this->addReference();
}

//DEBUG: MethodNode physx::PxBaseTask::removeReference - 71
ES void void_physx_PxBaseTask_removeReference(PxBaseTaskPtr wrp_this){
    //RET nat: void, man: void, ret: True, kind: Value
    //PAR nat: PxBaseTaskPtr, man: physx.PxBaseTaskPtr, kind: PtrStruct
    wrp_this->removeReference();
}

//DEBUG: MethodNode physx::PxBaseTask::getReference - 73
ES int int_const_physx_PxBaseTask_getReference(PxBaseTaskPtr wrp_this){
    //RET nat: int, man: int, ret: True, kind: Value
    //PAR nat: PxBaseTaskPtr, man: physx.PxBaseTaskPtr, kind: PtrStruct
    return (int) wrp_this->getReference();
}

//DEBUG: MethodNode physx::PxBaseTask::run - 57
ES void void_physx_PxBaseTask_run(PxBaseTaskPtr wrp_this){
    //RET nat: void, man: void, ret: True, kind: Value
    //PAR nat: PxBaseTaskPtr, man: physx.PxBaseTaskPtr, kind: PtrStruct
    wrp_this->run();
}

//DEBUG: MethodNode physx::PxBaseTask::getName - 66
ES char* string_const_physx_PxBaseTask_getName(PxBaseTaskPtr wrp_this){
    //RET nat: char*, man: string, ret: True, kind: Value
    //PAR nat: PxBaseTaskPtr, man: physx.PxBaseTaskPtr, kind: PtrStruct
    return (char*) wrp_this->getName();
}

//DEBUG: MethodNode physx::PxBaseTask::getTaskManager - 89-92
ES PxTaskManagerPtr physx_PxTaskManagerPtr_const_physx_PxBaseTask_getTaskManager(PxBaseTaskPtr wrp_this){
    //RET nat: PxTaskManagerPtr, man: physx.PxTaskManagerPtr, ret: True, kind: PtrStruct
    //PAR nat: PxBaseTaskPtr, man: physx.PxBaseTaskPtr, kind: PtrStruct
    return (PxTaskManagerPtr) wrp_this->getTaskManager();
}

//DEBUG: MethodNode physx::PxBaseTask::setContextId - 94
ES void void_physx_PxBaseTask_setContextId_ulong_(PxBaseTaskPtr wrp_this, unsigned long long wrp_id){
    //RET nat: void, man: void, ret: True, kind: Value
    //PAR nat: PxBaseTaskPtr, man: physx.PxBaseTaskPtr, kind: PtrStruct
    //PAR nat: unsigned long long, man: ulong, kind: Value
    wrp_this->setContextId(wrp_id);
}

//DEBUG: MethodNode physx::PxBaseTask::getContextId - 95
ES unsigned long long ulong_const_physx_PxBaseTask_getContextId(PxBaseTaskPtr wrp_this){
    //RET nat: unsigned long long, man: ulong, ret: True, kind: Value
    //PAR nat: PxBaseTaskPtr, man: physx.PxBaseTaskPtr, kind: PtrStruct
    return (unsigned long long) wrp_this->getContextId();
}

//DEBUG: MethodNode physx::PxBaseTask::operator= - 45
//ERRORS OCCURED IN physx::PxBaseTask::operator=
//Implicit Function/Method
//Unbindable Operator: Equal

//DEBUG: ClassNode physx::PxTask - 111-206
//Bases: PxBaseTaskPtr
//DEBUG: DeclNode physx::PxTask - 204
// TODO DeclNode.GenWrapper()

//DEBUG: MethodNode physx::PxTask::~PxTask - 115
//ERRORS OCCURED IN physx::PxTask::~PxTask
//Destructor

//DEBUG: MethodNode physx::PxTask::release - 118-126
ES void void_physx_PxTask_release(PxTaskPtr wrp_this){
    //RET nat: void, man: void, ret: True, kind: Value
    //PAR nat: PxTaskPtr, man: physx.PxTaskPtr, kind: PtrStruct
    wrp_this->release();
}

//DEBUG: MethodNode physx::PxTask::finishBefore - 130-134
ES void void_physx_PxTask_finishBefore_uint_(PxTaskPtr wrp_this, unsigned int wrp_taskID){
    //RET nat: void, man: void, ret: True, kind: Value
    //PAR nat: PxTaskPtr, man: physx.PxTaskPtr, kind: PtrStruct
    //PAR nat: unsigned int, man: uint, kind: Value
    wrp_this->finishBefore(wrp_taskID);
}

//DEBUG: MethodNode physx::PxTask::startAfter - 138-142
ES void void_physx_PxTask_startAfter_uint_(PxTaskPtr wrp_this, unsigned int wrp_taskID){
    //RET nat: void, man: void, ret: True, kind: Value
    //PAR nat: PxTaskPtr, man: physx.PxTaskPtr, kind: PtrStruct
    //PAR nat: unsigned int, man: uint, kind: Value
    wrp_this->startAfter(wrp_taskID);
}

//DEBUG: MethodNode physx::PxTask::addReference - 148-152
ES void void_physx_PxTask_addReference(PxTaskPtr wrp_this){
    //RET nat: void, man: void, ret: True, kind: Value
    //PAR nat: PxTaskPtr, man: physx.PxTaskPtr, kind: PtrStruct
    wrp_this->addReference();
}

//DEBUG: MethodNode physx::PxTask::removeReference - 158-162
ES void void_physx_PxTask_removeReference(PxTaskPtr wrp_this){
    //RET nat: void, man: void, ret: True, kind: Value
    //PAR nat: PxTaskPtr, man: physx.PxTaskPtr, kind: PtrStruct
    wrp_this->removeReference();
}

//DEBUG: MethodNode physx::PxTask::getReference - 167-170
ES int int_const_physx_PxTask_getReference(PxTaskPtr wrp_this){
    //RET nat: int, man: int, ret: True, kind: Value
    //PAR nat: PxTaskPtr, man: physx.PxTaskPtr, kind: PtrStruct
    return (int) wrp_this->getReference();
}

//DEBUG: MethodNode physx::PxTask::getTaskID - 175-178
ES unsigned int uint_const_physx_PxTask_getTaskID(PxTaskPtr wrp_this){
    //RET nat: unsigned int, man: uint, ret: True, kind: Value
    //PAR nat: PxTaskPtr, man: physx.PxTaskPtr, kind: PtrStruct
    return (unsigned int) wrp_this->getTaskID();
}

//DEBUG: MethodNode physx::PxTask::submitted - 185-189
ES void void_physx_PxTask_submitted(PxTaskPtr wrp_this){
    //RET nat: void, man: void, ret: True, kind: Value
    //PAR nat: PxTaskPtr, man: physx.PxTaskPtr, kind: PtrStruct
    wrp_this->submitted();
}

//DEBUG: MethodNode physx::PxTask::requestSyncPoint - 194-197
ES void void_physx_PxTask_requestSyncPoint(PxTaskPtr wrp_this){
    //RET nat: void, man: void, ret: True, kind: Value
    //PAR nat: PxTaskPtr, man: physx.PxTaskPtr, kind: PtrStruct
    wrp_this->requestSyncPoint();
}

//DEBUG: MethodNode physx::PxTask::operator= - 111
//ERRORS OCCURED IN physx::PxTask::operator=
//Implicit Function/Method
//Unbindable Operator: Equal

//DEBUG: ClassNode physx::PxLightCpuTask - 222-328
//Bases: PxBaseTaskPtr
//DEBUG: DeclNode physx::PxLightCpuTask - 327
// TODO DeclNode.GenWrapper()

//DEBUG: MethodNode physx::PxLightCpuTask::~PxLightCpuTask - 230-233
//ERRORS OCCURED IN physx::PxLightCpuTask::~PxLightCpuTask
//Destructor

//DEBUG: MethodNode physx::PxLightCpuTask::setContinuation - 244-254
ES void void_physx_PxLightCpuTask_setContinuation_physx_PxTaskManagerPtr_physx_PxBaseTaskPtr_(PxLightCpuTaskPtr wrp_this, PxTaskManagerPtr wrp_tm, PxBaseTaskPtr wrp_c){
    //RET nat: void, man: void, ret: True, kind: Value
    //PAR nat: PxLightCpuTaskPtr, man: physx.PxLightCpuTaskPtr, kind: PtrStruct
    //PAR nat: PxTaskManagerPtr, man: physx.PxTaskManagerPtr, kind: PtrStruct
    //PAR nat: PxBaseTaskPtr, man: physx.PxBaseTaskPtr, kind: PtrStruct
    wrp_this->setContinuation(*wrp_tm, wrp_c);
}

//DEBUG: MethodNode physx::PxLightCpuTask::setContinuation - 263-275
ES void void_physx_PxLightCpuTask_setContinuation_physx_PxBaseTaskPtr_(PxLightCpuTaskPtr wrp_this, PxBaseTaskPtr wrp_c){
    //RET nat: void, man: void, ret: True, kind: Value
    //PAR nat: PxLightCpuTaskPtr, man: physx.PxLightCpuTaskPtr, kind: PtrStruct
    //PAR nat: PxBaseTaskPtr, man: physx.PxBaseTaskPtr, kind: PtrStruct
    wrp_this->setContinuation(wrp_c);
}

//DEBUG: MethodNode physx::PxLightCpuTask::getContinuation - 280-283
ES PxBaseTaskPtr physx_PxBaseTaskPtr_const_physx_PxLightCpuTask_getContinuation(PxLightCpuTaskPtr wrp_this){
    //RET nat: PxBaseTaskPtr, man: physx.PxBaseTaskPtr, ret: True, kind: PtrStruct
    //PAR nat: PxLightCpuTaskPtr, man: physx.PxLightCpuTaskPtr, kind: PtrStruct
    return (PxBaseTaskPtr) wrp_this->getContinuation();
}

//DEBUG: MethodNode physx::PxLightCpuTask::removeReference - 289-292
ES void void_physx_PxLightCpuTask_removeReference(PxLightCpuTaskPtr wrp_this){
    //RET nat: void, man: void, ret: True, kind: Value
    //PAR nat: PxLightCpuTaskPtr, man: physx.PxLightCpuTaskPtr, kind: PtrStruct
    wrp_this->removeReference();
}

//DEBUG: MethodNode physx::PxLightCpuTask::getReference - 295-298
ES int int_const_physx_PxLightCpuTask_getReference(PxLightCpuTaskPtr wrp_this){
    //RET nat: int, man: int, ret: True, kind: Value
    //PAR nat: PxLightCpuTaskPtr, man: physx.PxLightCpuTaskPtr, kind: PtrStruct
    return (int) wrp_this->getReference();
}

//DEBUG: MethodNode physx::PxLightCpuTask::addReference - 304-307
ES void void_physx_PxLightCpuTask_addReference(PxLightCpuTaskPtr wrp_this){
    //RET nat: void, man: void, ret: True, kind: Value
    //PAR nat: PxLightCpuTaskPtr, man: physx.PxLightCpuTaskPtr, kind: PtrStruct
    wrp_this->addReference();
}

//DEBUG: MethodNode physx::PxLightCpuTask::release - 314-320
ES void void_physx_PxLightCpuTask_release(PxLightCpuTaskPtr wrp_this){
    //RET nat: void, man: void, ret: True, kind: Value
    //PAR nat: PxLightCpuTaskPtr, man: physx.PxLightCpuTaskPtr, kind: PtrStruct
    wrp_this->release();
}

//DEBUG: MethodNode physx::PxLightCpuTask::operator= - 222
//ERRORS OCCURED IN physx::PxLightCpuTask::operator=
//Implicit Function/Method
//Unbindable Operator: Equal
