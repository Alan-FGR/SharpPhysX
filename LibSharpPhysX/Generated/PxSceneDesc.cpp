// Generated by minBND 5.1.90.51 - Â© github.com/Alan-FGR

//DBG: FunctionNode physx::operator| L385
//physx::operator| static physx.PxSceneFlagsPtr OpPipe_New(physx.PxSceneFlagEnum a, physx.PxSceneFlagEnum b) will also be bound as member operator
//RET nat: PxSceneFlagsPtr, man: physx.PxSceneFlagsPtr, ret: True, kind: PtrStruct
//PAR nat: physx::PxSceneFlag::Enum, man: physx.PxSceneFlagEnum, kind: Value
//PAR nat: physx::PxSceneFlag::Enum, man: physx.PxSceneFlagEnum, kind: Value
ES PxSceneFlagsPtr PxSceneFlagsPtr_operator_Ptr_Pipe_PxSceneFlagEnum_PxSceneFlagEnum_(physx::PxSceneFlag::Enum wrp_a, physx::PxSceneFlag::Enum wrp_b){
    auto ret = ::physx::operator|(wrp_a, wrp_b);
    auto heap = new char[sizeof PxSceneFlags];
    std::memcpy(heap, &ret, sizeof PxSceneFlags);
    return (PxSceneFlagsPtr) heap;
}

//DBG: FunctionNode physx::operator& L385
//physx::operator& static physx.PxSceneFlagsPtr OpAnd_New(physx.PxSceneFlagEnum a, physx.PxSceneFlagEnum b) will also be bound as member operator
//RET nat: PxSceneFlagsPtr, man: physx.PxSceneFlagsPtr, ret: True, kind: PtrStruct
//PAR nat: physx::PxSceneFlag::Enum, man: physx.PxSceneFlagEnum, kind: Value
//PAR nat: physx::PxSceneFlag::Enum, man: physx.PxSceneFlagEnum, kind: Value
ES PxSceneFlagsPtr PxSceneFlagsPtr_operator_Ptr_Amp_PxSceneFlagEnum_PxSceneFlagEnum_(physx::PxSceneFlag::Enum wrp_a, physx::PxSceneFlag::Enum wrp_b){
    auto ret = ::physx::operator&(wrp_a, wrp_b);
    auto heap = new char[sizeof PxSceneFlags];
    std::memcpy(heap, &ret, sizeof PxSceneFlags);
    return (PxSceneFlagsPtr) heap;
}

//DBG: FunctionNode physx::operator~ L385
//physx::operator~ static physx.PxSceneFlagsPtr OpTilde_New(physx.PxSceneFlagEnum a) will also be bound as member operator
//RET nat: PxSceneFlagsPtr, man: physx.PxSceneFlagsPtr, ret: True, kind: PtrStruct
//PAR nat: physx::PxSceneFlag::Enum, man: physx.PxSceneFlagEnum, kind: Value
ES PxSceneFlagsPtr PxSceneFlagsPtr_operator_Ptr_Tilde_PxSceneFlagEnum_(physx::PxSceneFlag::Enum wrp_a){
    auto ret = ::physx::operator~(wrp_a);
    auto heap = new char[sizeof PxSceneFlags];
    std::memcpy(heap, &ret, sizeof PxSceneFlags);
    return (PxSceneFlagsPtr) heap;
}

//DBG: DeclTree PxSimulationEventCallback physx::PxSimulationEventCallback L388
//Skipping DeclTree PxSimulationEventCallback physx::PxSimulationEventCallback L388...

//DBG: DeclTree PxContactModifyCallback physx::PxContactModifyCallback L389
//Skipping DeclTree PxContactModifyCallback physx::PxContactModifyCallback L389...

//DBG: DeclTree PxCCDContactModifyCallback physx::PxCCDContactModifyCallback L390
//Skipping DeclTree PxCCDContactModifyCallback physx::PxCCDContactModifyCallback L390...

//DBG: ClassNode PxPruningStructureType physx::PxPruningStructureType L68-78

//DBG: ClassNode PxSceneQueryUpdateMode physx::PxSceneQueryUpdateMode L99-107

//DBG: ClassNode PxFrictionType physx::PxFrictionType L125-134

//DBG: ClassNode PxSolverType physx::PxSolverType L144-151

//DBG: ClassNode PxSceneFlag physx::PxSceneFlag L160-376
//Subclasses using this: 0

//DBG: ClassNode PxSceneLimits physx::PxSceneLimits L401-428

//DBG: NewerFreerNode PxSceneLimits physx::PxSceneLimits L401-428
ES void Freer_physx_PxSceneLimitsPtr(PxSceneLimitsPtr ptr){
    delete ptr;
}

//DBG: PtrWrapperCtorNode physx::PxSceneLimits::PxSceneLimits L416
//RET nat: PxSceneLimitsPtr, man: physx.PxSceneLimitsPtr, ret: True, kind: PtrStruct
ES PxSceneLimitsPtr Ctor_PxSceneLimitsPtr_(){
    auto ret = *(new std::remove_pointer<PxSceneLimitsPtr>::type());
    auto heap = new char[sizeof PxSceneLimits];
    std::memcpy(heap, &ret, sizeof PxSceneLimits);
    return (PxSceneLimitsPtr) heap;
}

//DBG: PtrWrapperCtorNode physx::PxSceneLimits::PxSceneLimits L401
//ERRORS in PtrWrapperCtorNode: Skipping Implicit PtrWrapperCtorNode physx::PxSceneLimits::PxSceneLimits L401

//DBG: PtrWrapperCtorNode physx::PxSceneLimits::PxSceneLimits L401
//ERRORS in PtrWrapperCtorNode: Skipping Implicit PtrWrapperCtorNode physx::PxSceneLimits::PxSceneLimits L401

//DBG: Field: maxNbActors - 404-404
ES PxU32 PxSceneLimitsPtr_GET_maxNbActors(PxSceneLimitsPtr cls) {return (PxU32)cls->maxNbActors;}
ES void PxSceneLimitsPtr_SET_maxNbActors(PxSceneLimitsPtr cls, PxU32 value) {cls->maxNbActors = value;}

//DBG: Field: maxNbBodies - 405-405
ES PxU32 PxSceneLimitsPtr_GET_maxNbBodies(PxSceneLimitsPtr cls) {return (PxU32)cls->maxNbBodies;}
ES void PxSceneLimitsPtr_SET_maxNbBodies(PxSceneLimitsPtr cls, PxU32 value) {cls->maxNbBodies = value;}

//DBG: Field: maxNbStaticShapes - 406-406
ES PxU32 PxSceneLimitsPtr_GET_maxNbStaticShapes(PxSceneLimitsPtr cls) {return (PxU32)cls->maxNbStaticShapes;}
ES void PxSceneLimitsPtr_SET_maxNbStaticShapes(PxSceneLimitsPtr cls, PxU32 value) {cls->maxNbStaticShapes = value;}

//DBG: Field: maxNbDynamicShapes - 407-407
ES PxU32 PxSceneLimitsPtr_GET_maxNbDynamicShapes(PxSceneLimitsPtr cls) {return (PxU32)cls->maxNbDynamicShapes;}
ES void PxSceneLimitsPtr_SET_maxNbDynamicShapes(PxSceneLimitsPtr cls, PxU32 value) {cls->maxNbDynamicShapes = value;}

//DBG: Field: maxNbAggregates - 408-408
ES PxU32 PxSceneLimitsPtr_GET_maxNbAggregates(PxSceneLimitsPtr cls) {return (PxU32)cls->maxNbAggregates;}
ES void PxSceneLimitsPtr_SET_maxNbAggregates(PxSceneLimitsPtr cls, PxU32 value) {cls->maxNbAggregates = value;}

//DBG: Field: maxNbConstraints - 409-409
ES PxU32 PxSceneLimitsPtr_GET_maxNbConstraints(PxSceneLimitsPtr cls) {return (PxU32)cls->maxNbConstraints;}
ES void PxSceneLimitsPtr_SET_maxNbConstraints(PxSceneLimitsPtr cls, PxU32 value) {cls->maxNbConstraints = value;}

//DBG: Field: maxNbRegions - 410-410
ES PxU32 PxSceneLimitsPtr_GET_maxNbRegions(PxSceneLimitsPtr cls) {return (PxU32)cls->maxNbRegions;}
ES void PxSceneLimitsPtr_SET_maxNbRegions(PxSceneLimitsPtr cls, PxU32 value) {cls->maxNbRegions = value;}

//DBG: Field: maxNbBroadPhaseOverlaps - 411-411
ES PxU32 PxSceneLimitsPtr_GET_maxNbBroadPhaseOverlaps(PxSceneLimitsPtr cls) {return (PxU32)cls->maxNbBroadPhaseOverlaps;}
ES void PxSceneLimitsPtr_SET_maxNbBroadPhaseOverlaps(PxSceneLimitsPtr cls, PxU32 value) {cls->maxNbBroadPhaseOverlaps = value;}

//DBG: MethodNode physx::PxSceneLimits::setToDefault L421
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: PxSceneLimitsPtr, man: physx.PxSceneLimitsPtr, kind: PtrStruct
ES void void_PxSceneLimitsPtr_setToDefaultPtr(PxSceneLimitsPtr wrp_this){
    wrp_this->setToDefault();
}

//DBG: MethodNode physx::PxSceneLimits::isValid L427
//RET nat: bool, man: bool, ret: True, kind: Value
//PAR nat: PxSceneLimitsPtr, man: physx.PxSceneLimitsPtr, kind: PtrStruct
ES bool bool_const_PxSceneLimitsPtr_isValidPtr(PxSceneLimitsPtr wrp_this){
    return (bool) wrp_this->isValid();
}

//DBG: MethodNode physx::PxSceneLimits::~PxSceneLimits L401
//ERRORS in MethodNode: Skipping Implicit MethodNode physx::PxSceneLimits::~PxSceneLimits L401, Destructor

//DBG: MethodNode physx::PxSceneLimits::operator= L401
//ERRORS in MethodNode: Skipping Implicit MethodNode physx::PxSceneLimits::operator= L401

//DBG: MethodNode physx::PxSceneLimits::operator= L401
//ERRORS in MethodNode: Skipping Implicit MethodNode physx::PxSceneLimits::operator= L401

//Operators
//Subclasses using this: 0

//DBG: ClassNode PxgDynamicsMemoryConfig physx::PxgDynamicsMemoryConfig L460-482

//DBG: NewerFreerNode PxgDynamicsMemoryConfig physx::PxgDynamicsMemoryConfig L460-482
ES void Freer_physx_PxgDynamicsMemoryConfigPtr(PxgDynamicsMemoryConfigPtr ptr){
    delete ptr;
}

//DBG: PtrWrapperCtorNode physx::PxgDynamicsMemoryConfig::PxgDynamicsMemoryConfig L471-481
//RET nat: PxgDynamicsMemoryConfigPtr, man: physx.PxgDynamicsMemoryConfigPtr, ret: True, kind: PtrStruct
ES PxgDynamicsMemoryConfigPtr Ctor_PxgDynamicsMemoryConfigPtr_(){
    auto ret = *(new std::remove_pointer<PxgDynamicsMemoryConfigPtr>::type());
    auto heap = new char[sizeof PxgDynamicsMemoryConfig];
    std::memcpy(heap, &ret, sizeof PxgDynamicsMemoryConfig);
    return (PxgDynamicsMemoryConfigPtr) heap;
}

//DBG: PtrWrapperCtorNode physx::PxgDynamicsMemoryConfig::PxgDynamicsMemoryConfig L460
//ERRORS in PtrWrapperCtorNode: Skipping Implicit PtrWrapperCtorNode physx::PxgDynamicsMemoryConfig::PxgDynamicsMemoryConfig L460

//DBG: PtrWrapperCtorNode physx::PxgDynamicsMemoryConfig::PxgDynamicsMemoryConfig L460
//ERRORS in PtrWrapperCtorNode: Skipping Implicit PtrWrapperCtorNode physx::PxgDynamicsMemoryConfig::PxgDynamicsMemoryConfig L460

//DBG: Field: constraintBufferCapacity - 462-462
ES PxU32 PxgDynamicsMemoryConfigPtr_GET_constraintBufferCapacity(PxgDynamicsMemoryConfigPtr cls) {return (PxU32)cls->constraintBufferCapacity;}
ES void PxgDynamicsMemoryConfigPtr_SET_constraintBufferCapacity(PxgDynamicsMemoryConfigPtr cls, PxU32 value) {cls->constraintBufferCapacity = value;}

//DBG: Field: contactBufferCapacity - 463-463
ES PxU32 PxgDynamicsMemoryConfigPtr_GET_contactBufferCapacity(PxgDynamicsMemoryConfigPtr cls) {return (PxU32)cls->contactBufferCapacity;}
ES void PxgDynamicsMemoryConfigPtr_SET_contactBufferCapacity(PxgDynamicsMemoryConfigPtr cls, PxU32 value) {cls->contactBufferCapacity = value;}

//DBG: Field: tempBufferCapacity - 464-464
ES PxU32 PxgDynamicsMemoryConfigPtr_GET_tempBufferCapacity(PxgDynamicsMemoryConfigPtr cls) {return (PxU32)cls->tempBufferCapacity;}
ES void PxgDynamicsMemoryConfigPtr_SET_tempBufferCapacity(PxgDynamicsMemoryConfigPtr cls, PxU32 value) {cls->tempBufferCapacity = value;}

//DBG: Field: contactStreamSize - 465-465
ES PxU32 PxgDynamicsMemoryConfigPtr_GET_contactStreamSize(PxgDynamicsMemoryConfigPtr cls) {return (PxU32)cls->contactStreamSize;}
ES void PxgDynamicsMemoryConfigPtr_SET_contactStreamSize(PxgDynamicsMemoryConfigPtr cls, PxU32 value) {cls->contactStreamSize = value;}

//DBG: Field: patchStreamSize - 466-466
ES PxU32 PxgDynamicsMemoryConfigPtr_GET_patchStreamSize(PxgDynamicsMemoryConfigPtr cls) {return (PxU32)cls->patchStreamSize;}
ES void PxgDynamicsMemoryConfigPtr_SET_patchStreamSize(PxgDynamicsMemoryConfigPtr cls, PxU32 value) {cls->patchStreamSize = value;}

//DBG: Field: forceStreamCapacity - 467-467
ES PxU32 PxgDynamicsMemoryConfigPtr_GET_forceStreamCapacity(PxgDynamicsMemoryConfigPtr cls) {return (PxU32)cls->forceStreamCapacity;}
ES void PxgDynamicsMemoryConfigPtr_SET_forceStreamCapacity(PxgDynamicsMemoryConfigPtr cls, PxU32 value) {cls->forceStreamCapacity = value;}

//DBG: Field: heapCapacity - 468-468
ES PxU32 PxgDynamicsMemoryConfigPtr_GET_heapCapacity(PxgDynamicsMemoryConfigPtr cls) {return (PxU32)cls->heapCapacity;}
ES void PxgDynamicsMemoryConfigPtr_SET_heapCapacity(PxgDynamicsMemoryConfigPtr cls, PxU32 value) {cls->heapCapacity = value;}

//DBG: Field: foundLostPairsCapacity - 469-469
ES PxU32 PxgDynamicsMemoryConfigPtr_GET_foundLostPairsCapacity(PxgDynamicsMemoryConfigPtr cls) {return (PxU32)cls->foundLostPairsCapacity;}
ES void PxgDynamicsMemoryConfigPtr_SET_foundLostPairsCapacity(PxgDynamicsMemoryConfigPtr cls, PxU32 value) {cls->foundLostPairsCapacity = value;}

//DBG: MethodNode physx::PxgDynamicsMemoryConfig::~PxgDynamicsMemoryConfig L460
//ERRORS in MethodNode: Skipping Implicit MethodNode physx::PxgDynamicsMemoryConfig::~PxgDynamicsMemoryConfig L460, Destructor

//DBG: MethodNode physx::PxgDynamicsMemoryConfig::operator= L460
//ERRORS in MethodNode: Skipping Implicit MethodNode physx::PxgDynamicsMemoryConfig::operator= L460

//DBG: MethodNode physx::PxgDynamicsMemoryConfig::operator= L460
//ERRORS in MethodNode: Skipping Implicit MethodNode physx::PxgDynamicsMemoryConfig::operator= L460

//Operators
//Subclasses using this: 0

//DBG: ClassNode PxSceneDesc physx::PxSceneDesc L493-938

//DBG: NewerFreerNode PxSceneDesc physx::PxSceneDesc L493-938
ES void Freer_physx_PxSceneDescPtr(PxSceneDescPtr ptr){
    delete ptr;
}

//DBG: PtrWrapperCtorNode physx::PxSceneDesc::PxSceneDesc L912
//RET nat: PxSceneDescPtr, man: physx.PxSceneDescPtr, ret: True, kind: PtrStruct
//PAR nat: physx::PxTolerancesScale*, man: physx.PxTolerancesScale*, kind: Value
ES PxSceneDescPtr Ctor_PxSceneDescPtr_PxTolerancesScale_(physx::PxTolerancesScale* wrp_scale){
    auto ret = *(new std::remove_pointer<PxSceneDescPtr>::type(*wrp_scale));
    auto heap = new char[sizeof PxSceneDesc];
    std::memcpy(heap, &ret, sizeof PxSceneDesc);
    return (PxSceneDescPtr) heap;
}

//DBG: PtrWrapperCtorNode physx::PxSceneDesc::PxSceneDesc L493
//ERRORS in PtrWrapperCtorNode: Skipping Implicit PtrWrapperCtorNode physx::PxSceneDesc::PxSceneDesc L493

//DBG: PtrWrapperCtorNode physx::PxSceneDesc::PxSceneDesc L493
//ERRORS in PtrWrapperCtorNode: Skipping Implicit PtrWrapperCtorNode physx::PxSceneDesc::PxSceneDesc L493

//DBG: PtrWrapperCtorNode physx::PxSceneDesc::PxSceneDesc L912
//Value Converter New
//RET nat: PxSceneDescPtr, man: physx.PxSceneDescPtr, ret: True, kind: PtrStruct
//PAR nat: physx::PxTolerancesScale, man: physx.PxTolerancesScale, kind: Blittable

//DBG: PtrWrapperCtorNode physx::PxSceneDesc::PxSceneDesc L912
//Value Converter New
//RET nat: PxSceneDescPtr, man: physx.PxSceneDescPtr, ret: True, kind: PtrStruct
//PAR nat: physx::PxTolerancesScale, man: physx.PxTolerancesScale, kind: Blittable

//DBG: Field: gravity - 507-507
ES void PxSceneDescPtr_GET_gravity(PxSceneDescPtr cls, physx::PxVec3* GetRetRef) {*GetRetRef = cls->gravity;}
ES void PxSceneDescPtr_SET_gravity(PxSceneDescPtr cls, physx::PxVec3 value) {cls->gravity = value;}

//DBG: Field: simulationEventCallback - 516-516
//Errors in type simulationEventCallbackPtr, field physx::PxSceneDesc::simulationEventCallback

//DBG: Field: contactModifyCallback - 525-525
//Errors in type contactModifyCallbackPtr, field physx::PxSceneDesc::contactModifyCallback

//DBG: Field: ccdContactModifyCallback - 534-534
//Errors in type ccdContactModifyCallbackPtr, field physx::PxSceneDesc::ccdContactModifyCallback

//DBG: Field: filterShaderData - 545-545
ES void* PxSceneDescPtr_GET_filterShaderData(PxSceneDescPtr cls) {return (void*)cls->filterShaderData;}
ES void PxSceneDescPtr_SET_filterShaderData(PxSceneDescPtr cls, void* value) {cls->filterShaderData = value;}

//DBG: Field: filterShaderDataSize - 554-554
ES PxU32 PxSceneDescPtr_GET_filterShaderDataSize(PxSceneDescPtr cls) {return (PxU32)cls->filterShaderDataSize;}
ES void PxSceneDescPtr_SET_filterShaderDataSize(PxSceneDescPtr cls, PxU32 value) {cls->filterShaderDataSize = value;}

//DBG: Field: filterShader - 565-565
ES PxSimulationFilterShader PxSceneDescPtr_GET_filterShader(PxSceneDescPtr cls) {return (PxSimulationFilterShader)cls->filterShader;}
ES void PxSceneDescPtr_SET_filterShader(PxSceneDescPtr cls, PxSimulationFilterShader value) {cls->filterShader = value;}

//DBG: Field: filterCallback - 575-575
ES PxSimulationFilterCallbackPtr PxSceneDescPtr_GET_filterCallback(PxSceneDescPtr cls) {return (PxSimulationFilterCallbackPtr)cls->filterCallback;}
ES void PxSceneDescPtr_SET_filterCallback(PxSceneDescPtr cls, PxSimulationFilterCallbackPtr value) {cls->filterCallback = value;}

//DBG: Field: kineKineFilteringMode - 584-584
ES physx::PxPairFilteringMode::Enum PxSceneDescPtr_GET_kineKineFilteringMode(PxSceneDescPtr cls) {return (physx::PxPairFilteringMode::Enum)cls->kineKineFilteringMode;}
ES void PxSceneDescPtr_SET_kineKineFilteringMode(PxSceneDescPtr cls, physx::PxPairFilteringMode::Enum value) {cls->kineKineFilteringMode = value;}

//DBG: Field: staticKineFilteringMode - 593-593
ES physx::PxPairFilteringMode::Enum PxSceneDescPtr_GET_staticKineFilteringMode(PxSceneDescPtr cls) {return (physx::PxPairFilteringMode::Enum)cls->staticKineFilteringMode;}
ES void PxSceneDescPtr_SET_staticKineFilteringMode(PxSceneDescPtr cls, physx::PxPairFilteringMode::Enum value) {cls->staticKineFilteringMode = value;}

//DBG: Field: broadPhaseType - 602-602
ES physx::PxBroadPhaseType::Enum PxSceneDescPtr_GET_broadPhaseType(PxSceneDescPtr cls) {return (physx::PxBroadPhaseType::Enum)cls->broadPhaseType;}
ES void PxSceneDescPtr_SET_broadPhaseType(PxSceneDescPtr cls, physx::PxBroadPhaseType::Enum value) {cls->broadPhaseType = value;}

//DBG: Field: broadPhaseCallback - 611-611
ES PxBroadPhaseCallbackPtr PxSceneDescPtr_GET_broadPhaseCallback(PxSceneDescPtr cls) {return (PxBroadPhaseCallbackPtr)cls->broadPhaseCallback;}
ES void PxSceneDescPtr_SET_broadPhaseCallback(PxSceneDescPtr cls, PxBroadPhaseCallbackPtr value) {cls->broadPhaseCallback = value;}

//DBG: Field: limits - 618-618
ES PxSceneLimitsPtr PxSceneDescPtr_GET_limits(PxSceneDescPtr cls) {return (PxSceneLimitsPtr)&cls->limits;}
ES void PxSceneDescPtr_SET_limits(PxSceneDescPtr cls, PxSceneLimitsPtr value) {cls->limits = *value;}

//DBG: Field: frictionType - 630-630
ES physx::PxFrictionType::Enum PxSceneDescPtr_GET_frictionType(PxSceneDescPtr cls) {return (physx::PxFrictionType::Enum)cls->frictionType;}
ES void PxSceneDescPtr_SET_frictionType(PxSceneDescPtr cls, physx::PxFrictionType::Enum value) {cls->frictionType = value;}

//DBG: Field: solverType - 639-639
ES physx::PxSolverType::Enum PxSceneDescPtr_GET_solverType(PxSceneDescPtr cls) {return (physx::PxSolverType::Enum)cls->solverType;}
ES void PxSceneDescPtr_SET_solverType(PxSceneDescPtr cls, physx::PxSolverType::Enum value) {cls->solverType = value;}

//DBG: Field: bounceThresholdVelocity - 650-650
ES PxReal PxSceneDescPtr_GET_bounceThresholdVelocity(PxSceneDescPtr cls) {return (PxReal)cls->bounceThresholdVelocity;}
ES void PxSceneDescPtr_SET_bounceThresholdVelocity(PxSceneDescPtr cls, PxReal value) {cls->bounceThresholdVelocity = value;}

//DBG: Field: frictionOffsetThreshold - 665-665
ES PxReal PxSceneDescPtr_GET_frictionOffsetThreshold(PxSceneDescPtr cls) {return (PxReal)cls->frictionOffsetThreshold;}
ES void PxSceneDescPtr_SET_frictionOffsetThreshold(PxSceneDescPtr cls, PxReal value) {cls->frictionOffsetThreshold = value;}

//DBG: Field: ccdMaxSeparation - 676-676
ES PxReal PxSceneDescPtr_GET_ccdMaxSeparation(PxSceneDescPtr cls) {return (PxReal)cls->ccdMaxSeparation;}
ES void PxSceneDescPtr_SET_ccdMaxSeparation(PxSceneDescPtr cls, PxReal value) {cls->ccdMaxSeparation = value;}

//DBG: Field: solverOffsetSlop - 686-686
ES PxReal PxSceneDescPtr_GET_solverOffsetSlop(PxSceneDescPtr cls) {return (PxReal)cls->solverOffsetSlop;}
ES void PxSceneDescPtr_SET_solverOffsetSlop(PxSceneDescPtr cls, PxReal value) {cls->solverOffsetSlop = value;}

//DBG: Field: flags - 693-693
ES PxSceneFlagsPtr PxSceneDescPtr_GET_flags(PxSceneDescPtr cls) {return (PxSceneFlagsPtr)&cls->flags;}
ES void PxSceneDescPtr_SET_flags(PxSceneDescPtr cls, PxSceneFlagsPtr value) {cls->flags = *value;}

//DBG: Field: cpuDispatcher - 700-700
ES PxCpuDispatcherPtr PxSceneDescPtr_GET_cpuDispatcher(PxSceneDescPtr cls) {return (PxCpuDispatcherPtr)cls->cpuDispatcher;}
ES void PxSceneDescPtr_SET_cpuDispatcher(PxSceneDescPtr cls, PxCpuDispatcherPtr value) {cls->cpuDispatcher = value;}

//DBG: Field: gpuDispatcher - 709-709
ES PxGpuDispatcherPtr PxSceneDescPtr_GET_gpuDispatcher(PxSceneDescPtr cls) {return (PxGpuDispatcherPtr)cls->gpuDispatcher;}
ES void PxSceneDescPtr_SET_gpuDispatcher(PxSceneDescPtr cls, PxGpuDispatcherPtr value) {cls->gpuDispatcher = value;}

//DBG: Field: staticStructure - 716-716
ES physx::PxPruningStructureType::Enum PxSceneDescPtr_GET_staticStructure(PxSceneDescPtr cls) {return (physx::PxPruningStructureType::Enum)cls->staticStructure;}
ES void PxSceneDescPtr_SET_staticStructure(PxSceneDescPtr cls, physx::PxPruningStructureType::Enum value) {cls->staticStructure = value;}

//DBG: Field: dynamicStructure - 721-721
ES physx::PxPruningStructureType::Enum PxSceneDescPtr_GET_dynamicStructure(PxSceneDescPtr cls) {return (physx::PxPruningStructureType::Enum)cls->dynamicStructure;}
ES void PxSceneDescPtr_SET_dynamicStructure(PxSceneDescPtr cls, physx::PxPruningStructureType::Enum value) {cls->dynamicStructure = value;}

//DBG: Field: dynamicTreeRebuildRateHint - 740-740
ES PxU32 PxSceneDescPtr_GET_dynamicTreeRebuildRateHint(PxSceneDescPtr cls) {return (PxU32)cls->dynamicTreeRebuildRateHint;}
ES void PxSceneDescPtr_SET_dynamicTreeRebuildRateHint(PxSceneDescPtr cls, PxU32 value) {cls->dynamicTreeRebuildRateHint = value;}

//DBG: Field: sceneQueryUpdateMode - 746-746
ES physx::PxSceneQueryUpdateMode::Enum PxSceneDescPtr_GET_sceneQueryUpdateMode(PxSceneDescPtr cls) {return (physx::PxSceneQueryUpdateMode::Enum)cls->sceneQueryUpdateMode;}
ES void PxSceneDescPtr_SET_sceneQueryUpdateMode(PxSceneDescPtr cls, physx::PxSceneQueryUpdateMode::Enum value) {cls->sceneQueryUpdateMode = value;}

//DBG: Field: userData - 753-753
ES void* PxSceneDescPtr_GET_userData(PxSceneDescPtr cls) {return (void*)cls->userData;}
ES void PxSceneDescPtr_SET_userData(PxSceneDescPtr cls, void* value) {cls->userData = value;}

//DBG: Field: solverBatchSize - 768-768
ES PxU32 PxSceneDescPtr_GET_solverBatchSize(PxSceneDescPtr cls) {return (PxU32)cls->solverBatchSize;}
ES void PxSceneDescPtr_SET_solverBatchSize(PxSceneDescPtr cls, PxU32 value) {cls->solverBatchSize = value;}

//DBG: Field: nbContactDataBlocks - 783-783
ES PxU32 PxSceneDescPtr_GET_nbContactDataBlocks(PxSceneDescPtr cls) {return (PxU32)cls->nbContactDataBlocks;}
ES void PxSceneDescPtr_SET_nbContactDataBlocks(PxSceneDescPtr cls, PxU32 value) {cls->nbContactDataBlocks = value;}

//DBG: Field: maxNbContactDataBlocks - 803-803
ES PxU32 PxSceneDescPtr_GET_maxNbContactDataBlocks(PxSceneDescPtr cls) {return (PxU32)cls->maxNbContactDataBlocks;}
ES void PxSceneDescPtr_SET_maxNbContactDataBlocks(PxSceneDescPtr cls, PxU32 value) {cls->maxNbContactDataBlocks = value;}

//DBG: Field: maxBiasCoefficient - 821-821
ES PxReal PxSceneDescPtr_GET_maxBiasCoefficient(PxSceneDescPtr cls) {return (PxReal)cls->maxBiasCoefficient;}
ES void PxSceneDescPtr_SET_maxBiasCoefficient(PxSceneDescPtr cls, PxReal value) {cls->maxBiasCoefficient = value;}

//DBG: Field: contactReportStreamBufferSize - 836-836
ES PxU32 PxSceneDescPtr_GET_contactReportStreamBufferSize(PxSceneDescPtr cls) {return (PxU32)cls->contactReportStreamBufferSize;}
ES void PxSceneDescPtr_SET_contactReportStreamBufferSize(PxSceneDescPtr cls, PxU32 value) {cls->contactReportStreamBufferSize = value;}

//DBG: Field: ccdMaxPasses - 849-849
ES PxU32 PxSceneDescPtr_GET_ccdMaxPasses(PxSceneDescPtr cls) {return (PxU32)cls->ccdMaxPasses;}
ES void PxSceneDescPtr_SET_ccdMaxPasses(PxSceneDescPtr cls, PxU32 value) {cls->ccdMaxPasses = value;}

//DBG: Field: wakeCounterResetValue - 861-861
ES PxReal PxSceneDescPtr_GET_wakeCounterResetValue(PxSceneDescPtr cls) {return (PxReal)cls->wakeCounterResetValue;}
ES void PxSceneDescPtr_SET_wakeCounterResetValue(PxSceneDescPtr cls, PxReal value) {cls->wakeCounterResetValue = value;}

//DBG: Field: sanityBounds - 872-872
ES void PxSceneDescPtr_GET_sanityBounds(PxSceneDescPtr cls, physx::PxBounds3* GetRetRef) {*GetRetRef = cls->sanityBounds;}
ES void PxSceneDescPtr_SET_sanityBounds(PxSceneDescPtr cls, physx::PxBounds3 value) {cls->sanityBounds = value;}

//DBG: Field: gpuDynamicsConfig - 877-877
ES PxgDynamicsMemoryConfigPtr PxSceneDescPtr_GET_gpuDynamicsConfig(PxSceneDescPtr cls) {return (PxgDynamicsMemoryConfigPtr)&cls->gpuDynamicsConfig;}
ES void PxSceneDescPtr_SET_gpuDynamicsConfig(PxSceneDescPtr cls, PxgDynamicsMemoryConfigPtr value) {cls->gpuDynamicsConfig = *value;}

//DBG: Field: gpuMaxNumPartitions - 885-885
ES PxU32 PxSceneDescPtr_GET_gpuMaxNumPartitions(PxSceneDescPtr cls) {return (PxU32)cls->gpuMaxNumPartitions;}
ES void PxSceneDescPtr_SET_gpuMaxNumPartitions(PxSceneDescPtr cls, PxU32 value) {cls->gpuMaxNumPartitions = value;}

//DBG: Field: gpuComputeVersion - 890-890
ES PxU32 PxSceneDescPtr_GET_gpuComputeVersion(PxSceneDescPtr cls) {return (PxU32)cls->gpuComputeVersion;}
ES void PxSceneDescPtr_SET_gpuComputeVersion(PxSceneDescPtr cls, PxU32 value) {cls->gpuComputeVersion = value;}

//DBG: MethodNode physx::PxSceneDesc::setToDefault L922
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: PxSceneDescPtr, man: physx.PxSceneDescPtr, kind: PtrStruct
//PAR nat: physx::PxTolerancesScale*, man: physx.PxTolerancesScale*, kind: Value
ES void void_PxSceneDescPtr_setToDefaultPtr_PxTolerancesScale_(PxSceneDescPtr wrp_this, physx::PxTolerancesScale* wrp_scale){
    wrp_this->setToDefault(*wrp_scale);
}

//DBG: MethodNode physx::PxSceneDesc::isValid L928
//RET nat: bool, man: bool, ret: True, kind: Value
//PAR nat: PxSceneDescPtr, man: physx.PxSceneDescPtr, kind: PtrStruct
ES bool bool_const_PxSceneDescPtr_isValidPtr(PxSceneDescPtr wrp_this){
    return (bool) wrp_this->isValid();
}

//DBG: MethodNode physx::PxSceneDesc::getTolerancesScale L934
//RET nat: physx::PxTolerancesScale*, man: physx.PxTolerancesScale*, ret: True, kind: Value
//PAR nat: PxSceneDescPtr, man: physx.PxSceneDescPtr, kind: PtrStruct
ES physx::PxTolerancesScale* PxTolerancesScale_const_PxSceneDescPtr_getTolerancesScalePtr(PxSceneDescPtr wrp_this){
    return (physx::PxTolerancesScale*) &wrp_this->getTolerancesScale();
}

//DBG: MethodNode physx::PxSceneDesc::operator= L493
//ERRORS in MethodNode: Skipping Implicit MethodNode physx::PxSceneDesc::operator= L493

//DBG: MethodNode physx::PxSceneDesc::~PxSceneDesc L493
//ERRORS in MethodNode: Skipping Implicit MethodNode physx::PxSceneDesc::~PxSceneDesc L493, Destructor

//DBG: MethodNode physx::PxSceneDesc::operator= L493
//ERRORS in MethodNode: Skipping Implicit MethodNode physx::PxSceneDesc::operator= L493

//DBG: MethodNode physx::PxSceneDesc::setToDefault L922
//Value Converter setToDefault
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: PxSceneDescPtr, man: physx.PxSceneDescPtr, kind: PtrStruct
//PAR nat: physx::PxTolerancesScale, man: physx.PxTolerancesScale, kind: Blittable

//DBG: MethodNode physx::PxSceneDesc::setToDefault L922
//Value Converter setToDefault
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: PxSceneDescPtr, man: physx.PxSceneDescPtr, kind: PtrStruct
//PAR nat: physx::PxTolerancesScale, man: physx.PxTolerancesScale, kind: Blittable

//Operators

//DBG: DeclNode PxSceneFlags physx::PxSceneFlags L384
