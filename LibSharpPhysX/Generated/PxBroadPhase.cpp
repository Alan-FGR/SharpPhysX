// Generated by minBND 5.1.93.2 - Â© github.com/Alan-FGR

ES void void_PxBroadPhaseCallbackPtr_onObjectOutOfBoundsPtr_PxShapePtr_PxActorPtr_(PxBroadPhaseCallbackPtr wrp_this, PxShapePtr wrp_shape, PxActorPtr wrp_actor){
    wrp_this->onObjectOutOfBounds(*wrp_shape, *wrp_actor);
}

ES void void_PxBroadPhaseCallbackPtr_onObjectOutOfBoundsPtr_PxAggregatePtr_(PxBroadPhaseCallbackPtr wrp_this, PxAggregatePtr wrp_aggregate){
    wrp_this->onObjectOutOfBounds(*wrp_aggregate);
}

ES PxBroadPhaseRegionPtr Newer_physx_PxBroadPhaseRegionPtr(){
    return new std::remove_pointer<PxBroadPhaseRegionPtr>::type();
}
ES void Freer_physx_PxBroadPhaseRegionPtr(PxBroadPhaseRegionPtr ptr){
    delete ptr;
}

ES void PxBroadPhaseRegionPtr_GET_bounds(PxBroadPhaseRegionPtr cls, physx::PxBounds3* GetRetRef) {*GetRetRef = cls->bounds;}
ES void PxBroadPhaseRegionPtr_SET_bounds(PxBroadPhaseRegionPtr cls, physx::PxBounds3 value) {cls->bounds = value;}

ES void* PxBroadPhaseRegionPtr_GET_userData(PxBroadPhaseRegionPtr cls) {return (void*)cls->userData;}
ES void PxBroadPhaseRegionPtr_SET_userData(PxBroadPhaseRegionPtr cls, void* value) {cls->userData = value;}

ES PxBroadPhaseRegionInfoPtr Newer_physx_PxBroadPhaseRegionInfoPtr(){
    return new std::remove_pointer<PxBroadPhaseRegionInfoPtr>::type();
}
ES void Freer_physx_PxBroadPhaseRegionInfoPtr(PxBroadPhaseRegionInfoPtr ptr){
    delete ptr;
}

ES PxBroadPhaseRegionPtr PxBroadPhaseRegionInfoPtr_GET_region(PxBroadPhaseRegionInfoPtr cls) {return (PxBroadPhaseRegionPtr)&cls->region;}
ES void PxBroadPhaseRegionInfoPtr_SET_region(PxBroadPhaseRegionInfoPtr cls, PxBroadPhaseRegionPtr value) {cls->region = *value;}

ES PxU32 PxBroadPhaseRegionInfoPtr_GET_nbStaticObjects(PxBroadPhaseRegionInfoPtr cls) {return (PxU32)cls->nbStaticObjects;}
ES void PxBroadPhaseRegionInfoPtr_SET_nbStaticObjects(PxBroadPhaseRegionInfoPtr cls, PxU32 value) {cls->nbStaticObjects = value;}

ES PxU32 PxBroadPhaseRegionInfoPtr_GET_nbDynamicObjects(PxBroadPhaseRegionInfoPtr cls) {return (PxU32)cls->nbDynamicObjects;}
ES void PxBroadPhaseRegionInfoPtr_SET_nbDynamicObjects(PxBroadPhaseRegionInfoPtr cls, PxU32 value) {cls->nbDynamicObjects = value;}

ES bool PxBroadPhaseRegionInfoPtr_GET_active(PxBroadPhaseRegionInfoPtr cls) {return (bool)cls->active;}
ES void PxBroadPhaseRegionInfoPtr_SET_active(PxBroadPhaseRegionInfoPtr cls, bool value) {cls->active = value;}

ES bool PxBroadPhaseRegionInfoPtr_GET_overlap(PxBroadPhaseRegionInfoPtr cls) {return (bool)cls->overlap;}
ES void PxBroadPhaseRegionInfoPtr_SET_overlap(PxBroadPhaseRegionInfoPtr cls, bool value) {cls->overlap = value;}

ES PxBroadPhaseCapsPtr Newer_physx_PxBroadPhaseCapsPtr(){
    return new std::remove_pointer<PxBroadPhaseCapsPtr>::type();
}
ES void Freer_physx_PxBroadPhaseCapsPtr(PxBroadPhaseCapsPtr ptr){
    delete ptr;
}

ES PxU32 PxBroadPhaseCapsPtr_GET_maxNbRegions(PxBroadPhaseCapsPtr cls) {return (PxU32)cls->maxNbRegions;}
ES void PxBroadPhaseCapsPtr_SET_maxNbRegions(PxBroadPhaseCapsPtr cls, PxU32 value) {cls->maxNbRegions = value;}

ES PxU32 PxBroadPhaseCapsPtr_GET_maxNbObjects(PxBroadPhaseCapsPtr cls) {return (PxU32)cls->maxNbObjects;}
ES void PxBroadPhaseCapsPtr_SET_maxNbObjects(PxBroadPhaseCapsPtr cls, PxU32 value) {cls->maxNbObjects = value;}

ES bool PxBroadPhaseCapsPtr_GET_needsPredefinedBounds(PxBroadPhaseCapsPtr cls) {return (bool)cls->needsPredefinedBounds;}
ES void PxBroadPhaseCapsPtr_SET_needsPredefinedBounds(PxBroadPhaseCapsPtr cls, bool value) {cls->needsPredefinedBounds = value;}

