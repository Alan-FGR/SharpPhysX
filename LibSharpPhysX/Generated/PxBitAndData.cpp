// Generated by minBND 5.1.90.51 - Â© github.com/Alan-FGR
//Subclasses using this: 0

//DBG: ClassNode PxBitAndDataT physx::PxBitAndDataT<byte, > L-1

//DBG: NewerFreerNode PxBitAndDataT physx::PxBitAndDataT<byte, > L-1
ES void Freer_physx_PxBitAndBytePtr(PxBitAndBytePtr ptr){
    delete ptr;
}

//DBG: PtrWrapperCtorNode physx::PxBitAndDataT<byte, >::PxBitAndDataT L47
//RET nat: PxBitAndBytePtr, man: physx.PxBitAndBytePtr, ret: True, kind: PtrStruct
//PAR nat: physx::PxEMPTY, man: physx.PxEMPTY, kind: Value
ES PxBitAndBytePtr Ctor_PxBitAndBytePtr_PxEMPTY(physx::PxEMPTY wrp__){
    auto ret = *(new std::remove_pointer<PxBitAndBytePtr>::type(wrp__));
    auto heap = new char[sizeof PxBitAndByte];
    std::memcpy(heap, &ret, sizeof PxBitAndByte);
    return (PxBitAndBytePtr) heap;
}

//DBG: PtrWrapperCtorNode physx::PxBitAndDataT<byte, >::PxBitAndDataT L50
//RET nat: PxBitAndBytePtr, man: physx.PxBitAndBytePtr, ret: True, kind: PtrStruct
ES PxBitAndBytePtr Ctor_PxBitAndBytePtr_(){
    auto ret = *(new std::remove_pointer<PxBitAndBytePtr>::type());
    auto heap = new char[sizeof PxBitAndByte];
    std::memcpy(heap, &ret, sizeof PxBitAndByte);
    return (PxBitAndBytePtr) heap;
}

//DBG: PtrWrapperCtorNode physx::PxBitAndDataT<byte, >::PxBitAndDataT L53
//RET nat: PxBitAndBytePtr, man: physx.PxBitAndBytePtr, ret: True, kind: PtrStruct
//PAR nat: unsigned char, man: byte, kind: Value
//PAR nat: bool, man: bool, kind: Value
ES PxBitAndBytePtr Ctor_PxBitAndBytePtr_byte_bool(unsigned char wrp_data, bool wrp_bit){
    auto ret = *(new std::remove_pointer<PxBitAndBytePtr>::type(wrp_data, wrp_bit));
    auto heap = new char[sizeof PxBitAndByte];
    std::memcpy(heap, &ret, sizeof PxBitAndByte);
    return (PxBitAndBytePtr) heap;
}

//DBG: PtrWrapperCtorNode physx::PxBitAndDataT<byte, >::PxBitAndDataT L44
//ERRORS in PtrWrapperCtorNode: Skipping Implicit PtrWrapperCtorNode physx::PxBitAndDataT<byte, >::PxBitAndDataT L44

//DBG: PtrWrapperCtorNode physx::PxBitAndDataT<byte, >::PxBitAndDataT L44
//ERRORS in PtrWrapperCtorNode: Skipping Implicit PtrWrapperCtorNode physx::PxBitAndDataT<byte, >::PxBitAndDataT L44

//DBG: PtrWrapperCtorNode physx::PxBitAndDataT<byte, >::PxBitAndDataT L53
//RET nat: PxBitAndBytePtr, man: physx.PxBitAndBytePtr, ret: True, kind: PtrStruct
//PAR nat: unsigned char, man: byte, kind: Value
ES PxBitAndBytePtr Ctor_PxBitAndBytePtr_byte(unsigned char wrp_data){
    auto ret = *(new std::remove_pointer<PxBitAndBytePtr>::type(wrp_data));
    auto heap = new char[sizeof PxBitAndByte];
    std::memcpy(heap, &ret, sizeof PxBitAndByte);
    return (PxBitAndBytePtr) heap;
}

//DBG: MethodNode physx::PxBitAndDataT<byte, >::operator unsigned char L58
//RET nat: unsigned char, man: byte, ret: True, kind: Value
//PAR nat: PxBitAndBytePtr, man: physx.PxBitAndBytePtr, kind: PtrStruct
ES unsigned char byte_const_PxBitAndBytePtr_operator_unsigned_charPtr_Conversion(PxBitAndBytePtr wrp_lhs){
    return (unsigned char) wrp_lhs->PxBitAndDataT<unsigned char, 128>::operator unsigned char();
}

//DBG: MethodNode physx::PxBitAndDataT<byte, >::setBit L62-65
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: PxBitAndBytePtr, man: physx.PxBitAndBytePtr, kind: PtrStruct
ES void void_PxBitAndBytePtr_setBitPtr(PxBitAndBytePtr wrp_this){
    wrp_this->setBit();
}

//DBG: MethodNode physx::PxBitAndDataT<byte, >::clearBit L66-69
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: PxBitAndBytePtr, man: physx.PxBitAndBytePtr, kind: PtrStruct
ES void void_PxBitAndBytePtr_clearBitPtr(PxBitAndBytePtr wrp_this){
    wrp_this->clearBit();
}

//DBG: MethodNode physx::PxBitAndDataT<byte, >::isBitSet L70-73
//RET nat: unsigned char, man: byte, ret: True, kind: Value
//PAR nat: PxBitAndBytePtr, man: physx.PxBitAndBytePtr, kind: PtrStruct
ES unsigned char byte_const_PxBitAndBytePtr_isBitSetPtr(PxBitAndBytePtr wrp_this){
    return (unsigned char) wrp_this->isBitSet();
}

//DBG: MethodNode physx::PxBitAndDataT<byte, >::~PxBitAndDataT L44
//ERRORS in MethodNode: Skipping Implicit MethodNode physx::PxBitAndDataT<byte, >::~PxBitAndDataT L44, Destructor

//DBG: MethodNode physx::PxBitAndDataT<byte, >::operator= L44
//ERRORS in MethodNode: Skipping Implicit MethodNode physx::PxBitAndDataT<byte, >::operator= L44

//DBG: MethodNode physx::PxBitAndDataT<byte, >::operator= L44
//ERRORS in MethodNode: Skipping Implicit MethodNode physx::PxBitAndDataT<byte, >::operator= L44

//Operators
//Subclasses using this: 0

//DBG: ClassNode PxBitAndDataT physx::PxBitAndDataT<ushort, > L-1

//DBG: NewerFreerNode PxBitAndDataT physx::PxBitAndDataT<ushort, > L-1
ES void Freer_physx_PxBitAndWordPtr(PxBitAndWordPtr ptr){
    delete ptr;
}

//Operators
//Subclasses using this: 0

//DBG: ClassNode PxBitAndDataT physx::PxBitAndDataT<uint, > L-1

//DBG: NewerFreerNode PxBitAndDataT physx::PxBitAndDataT<uint, > L-1
ES void Freer_physx_PxBitAndDwordPtr(PxBitAndDwordPtr ptr){
    delete ptr;
}

//Operators

//DBG: DeclNode PxBitAndDataT physx::PxBitAndDataT L43-77

//DBG: DeclNode PxBitAndByte physx::PxBitAndByte L78

//DBG: DeclNode PxBitAndWord physx::PxBitAndWord L79

//DBG: DeclNode PxBitAndDword physx::PxBitAndDword L80
