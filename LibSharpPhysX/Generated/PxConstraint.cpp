// Generated by minBND 5.1.78.10 - Â© github.com/Alan-FGR
ES PxConstraintShaderTablePtr Newer_physx_PxConstraintShaderTablePtr(){
    return new std::remove_pointer<PxConstraintShaderTablePtr>::type();
}

ES void Freer_physx_PxConstraintShaderTablePtr(PxConstraintShaderTablePtr ptr){
    delete ptr;
}

ES PxConstraintSolverPrep PxConstraintShaderTable_GET_solverPrep(PxConstraintShaderTablePtr cls) {return (PxConstraintSolverPrep)cls->solverPrep;}
ES void PxConstraintShaderTable_SET_solverPrep(PxConstraintShaderTablePtr cls, PxConstraintSolverPrep value) {cls->solverPrep = value;}

ES PxConstraintProject PxConstraintShaderTable_GET_project(PxConstraintShaderTablePtr cls) {return (PxConstraintProject)cls->project;}
ES void PxConstraintShaderTable_SET_project(PxConstraintShaderTablePtr cls, PxConstraintProject value) {cls->project = value;}

ES PxConstraintVisualize PxConstraintShaderTable_GET_visualize(PxConstraintShaderTablePtr cls) {return (PxConstraintVisualize)cls->visualize;}
ES void PxConstraintShaderTable_SET_visualize(PxConstraintShaderTablePtr cls, PxConstraintVisualize value) {cls->visualize = value;}

ES physx::PxConstraintFlag::Enum PxConstraintShaderTable_GET_flag(PxConstraintShaderTablePtr cls) {return (physx::PxConstraintFlag::Enum)cls->flag;}
ES void PxConstraintShaderTable_SET_flag(PxConstraintShaderTablePtr cls, physx::PxConstraintFlag::Enum value) {cls->flag = value;}

ES void void_physx_PxConstraint_release(PxConstraintPtr wrp_this){
    wrp_this->release();
}

ES PxScenePtr physx_PxScenePtr_const_physx_PxConstraint_getScene(PxConstraintPtr wrp_this){
    return (PxScenePtr) wrp_this->getScene();
}

ES void void_const_physx_PxConstraint_getActors_physx_PxRigidActorPtr_physx_PxRigidActorPtr_(PxConstraintPtr wrp_this, PxRigidActorPtr* wrp_actor0, PxRigidActorPtr* wrp_actor1){
    wrp_this->getActors(*wrp_actor0, *wrp_actor1);
}

ES void void_physx_PxConstraint_setActors_physx_PxRigidActorPtr_physx_PxRigidActorPtr_(PxConstraintPtr wrp_this, PxRigidActorPtr wrp_actor0, PxRigidActorPtr wrp_actor1){
    wrp_this->setActors(wrp_actor0, wrp_actor1);
}

ES void void_physx_PxConstraint_markDirty(PxConstraintPtr wrp_this){
    wrp_this->markDirty();
}

ES void void_physx_PxConstraint_setFlags_PxConstraintFlagsPtr_(PxConstraintPtr wrp_this, PxConstraintFlagsPtr wrp_flags){
    wrp_this->setFlags(*wrp_flags);
}

ES PxConstraintFlagsPtr PxConstraintFlagsPtr_const_physx_PxConstraint_getFlags(PxConstraintPtr wrp_this){
    auto ret = wrp_this->getFlags();
    auto heap = new char[sizeof PxConstraintFlags];
    std::memcpy(heap, &ret, sizeof PxConstraintFlags);
    return (PxConstraintFlagsPtr) heap;
}

ES void void_physx_PxConstraint_setFlag_physx_PxConstraintFlagEnum_bool_(PxConstraintPtr wrp_this, physx::PxConstraintFlag::Enum wrp_flag, bool wrp_value){
    wrp_this->setFlag(wrp_flag, wrp_value);
}

ES void void_const_physx_PxConstraint_getForce_physx_PxVec3Ptr_physx_PxVec3Ptr_(PxConstraintPtr wrp_this, PxVec3Ptr wrp_linear, PxVec3Ptr wrp_angular){
    wrp_this->getForce(*wrp_linear, *wrp_angular);
}

ES bool bool_const_physx_PxConstraint_isValid(PxConstraintPtr wrp_this){
    return (bool) wrp_this->isValid();
}

ES void void_physx_PxConstraint_setBreakForce_float_float_(PxConstraintPtr wrp_this, float wrp_linear, float wrp_angular){
    wrp_this->setBreakForce(wrp_linear, wrp_angular);
}

ES void void_const_physx_PxConstraint_getBreakForce_float_float_(PxConstraintPtr wrp_this, float* wrp_linear, float* wrp_angular){
    wrp_this->getBreakForce(*wrp_linear, *wrp_angular);
}

ES void void_physx_PxConstraint_setMinResponseThreshold_float_(PxConstraintPtr wrp_this, float wrp_threshold){
    wrp_this->setMinResponseThreshold(wrp_threshold);
}

ES float float_const_physx_PxConstraint_getMinResponseThreshold(PxConstraintPtr wrp_this){
    return (float) wrp_this->getMinResponseThreshold();
}

ES void* IntPtr_physx_PxConstraint_getExternalReference_uint_(PxConstraintPtr wrp_this, unsigned int* wrp_typeID){
    return (void*) wrp_this->getExternalReference(*wrp_typeID);
}

ES void void_physx_PxConstraint_setConstraintFunctions_physx_PxConstraintConnectorPtr_physx_PxConstraintShaderTablePtr_(PxConstraintPtr wrp_this, PxConstraintConnectorPtr wrp_connector, PxConstraintShaderTablePtr wrp_shaders){
    wrp_this->setConstraintFunctions(*wrp_connector, *wrp_shaders);
}

ES char* string_const_physx_PxConstraint_getConcreteTypeName(PxConstraintPtr wrp_this){
    return (char*) wrp_this->getConcreteTypeName();
}
