// Generated by minBND 5.1.78.10 - Â© github.com/Alan-FGR
ES void void_physx_PxHeightField_release(PxHeightFieldPtr wrp_this){
    wrp_this->release();
}

ES unsigned int uint_const_physx_PxHeightField_saveCells_IntPtr_uint_(PxHeightFieldPtr wrp_this, void* wrp_destBuffer, unsigned int wrp_destBufferSize){
    return (unsigned int) wrp_this->saveCells(wrp_destBuffer, wrp_destBufferSize);
}

ES bool bool_physx_PxHeightField_modifySamples_int_int_physx_PxHeightFieldDescPtr_bool_(PxHeightFieldPtr wrp_this, int wrp_startCol, int wrp_startRow, PxHeightFieldDescPtr wrp_subfieldDesc, bool wrp_shrinkBounds){
    return (bool) wrp_this->modifySamples(wrp_startCol, wrp_startRow, *wrp_subfieldDesc, wrp_shrinkBounds);
}

ES bool bool_physx_PxHeightField_modifySamples_int_int_physx_PxHeightFieldDescPtr_(PxHeightFieldPtr wrp_this, int wrp_startCol, int wrp_startRow, PxHeightFieldDescPtr wrp_subfieldDesc){
    return (bool) wrp_this->modifySamples(wrp_startCol, wrp_startRow, *wrp_subfieldDesc);
}

ES unsigned int uint_const_physx_PxHeightField_getNbRows(PxHeightFieldPtr wrp_this){
    return (unsigned int) wrp_this->getNbRows();
}

ES unsigned int uint_const_physx_PxHeightField_getNbColumns(PxHeightFieldPtr wrp_this){
    return (unsigned int) wrp_this->getNbColumns();
}

ES physx::PxHeightFieldFormat::Enum physx_PxHeightFieldFormatEnum_const_physx_PxHeightField_getFormat(PxHeightFieldPtr wrp_this){
    return (physx::PxHeightFieldFormat::Enum) wrp_this->getFormat();
}

ES unsigned int uint_const_physx_PxHeightField_getSampleStride(PxHeightFieldPtr wrp_this){
    return (unsigned int) wrp_this->getSampleStride();
}

ES float float_const_physx_PxHeightField_getConvexEdgeThreshold(PxHeightFieldPtr wrp_this){
    return (float) wrp_this->getConvexEdgeThreshold();
}

ES PxHeightFieldFlagsPtr PxHeightFieldFlagsPtr_const_physx_PxHeightField_getFlags(PxHeightFieldPtr wrp_this){
    auto ret = wrp_this->getFlags();
    auto heap = new char[sizeof PxHeightFieldFlags];
    std::memcpy(heap, &ret, sizeof PxHeightFieldFlags);
    return (PxHeightFieldFlagsPtr) heap;
}

ES float float_const_physx_PxHeightField_getHeight_float_float_(PxHeightFieldPtr wrp_this, float wrp_x, float wrp_z){
    return (float) wrp_this->getHeight(wrp_x, wrp_z);
}

ES unsigned int uint_const_physx_PxHeightField_getReferenceCount(PxHeightFieldPtr wrp_this){
    return (unsigned int) wrp_this->getReferenceCount();
}

ES void void_physx_PxHeightField_acquireReference(PxHeightFieldPtr wrp_this){
    wrp_this->acquireReference();
}

ES unsigned short ushort_const_physx_PxHeightField_getTriangleMaterialIndex_uint_(PxHeightFieldPtr wrp_this, unsigned int wrp_triangleIndex){
    return (unsigned short) wrp_this->getTriangleMaterialIndex(wrp_triangleIndex);
}

ES PxVec3Ptr physx_PxVec3Ptr_const_physx_PxHeightField_getTriangleNormal_uint_(PxHeightFieldPtr wrp_this, unsigned int wrp_triangleIndex){
    auto ret = wrp_this->getTriangleNormal(wrp_triangleIndex);
    auto heap = new char[sizeof PxVec3];
    std::memcpy(heap, &ret, sizeof PxVec3);
    return (PxVec3Ptr) heap;
}

ES PxHeightFieldSamplePtr physx_PxHeightFieldSamplePtr_const_physx_PxHeightField_getSample_uint_uint_(PxHeightFieldPtr wrp_this, unsigned int wrp_row, unsigned int wrp_column){
    return (PxHeightFieldSamplePtr) &wrp_this->getSample(wrp_row, wrp_column);
}

ES unsigned int uint_const_physx_PxHeightField_getTimestamp(PxHeightFieldPtr wrp_this){
    return (unsigned int) wrp_this->getTimestamp();
}

ES char* string_const_physx_PxHeightField_getConcreteTypeName(PxHeightFieldPtr wrp_this){
    return (char*) wrp_this->getConcreteTypeName();
}
