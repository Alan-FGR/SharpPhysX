// Generated by minBND 5.1.90.51 - Â© github.com/Alan-FGR

//DBG: FunctionNode physx::intrinsics::abs L51-54
//RET nat: float, man: float, ret: True, kind: Value
//PAR nat: float, man: float, kind: Value
ES float float_intrinsics_absPtr_float_(float wrp_a){
    return (float) ::physx::intrinsics::abs(wrp_a);
}

//DBG: FunctionNode physx::intrinsics::fsel L57-60
//RET nat: float, man: float, ret: True, kind: Value
//PAR nat: float, man: float, kind: Value
//PAR nat: float, man: float, kind: Value
//PAR nat: float, man: float, kind: Value
ES float float_intrinsics_fselPtr_float_float_float_(float wrp_a, float wrp_b, float wrp_c){
    return (float) ::physx::intrinsics::fsel(wrp_a, wrp_b, wrp_c);
}

//DBG: FunctionNode physx::intrinsics::sign L63-66
//RET nat: float, man: float, ret: True, kind: Value
//PAR nat: float, man: float, kind: Value
ES float float_intrinsics_signPtr_float_(float wrp_a){
    return (float) ::physx::intrinsics::sign(wrp_a);
}

//DBG: FunctionNode physx::intrinsics::recip L69-72
//RET nat: float, man: float, ret: True, kind: Value
//PAR nat: float, man: float, kind: Value
ES float float_intrinsics_recipPtr_float_(float wrp_a){
    return (float) ::physx::intrinsics::recip(wrp_a);
}

//DBG: FunctionNode physx::intrinsics::recipFast L75-78
//RET nat: float, man: float, ret: True, kind: Value
//PAR nat: float, man: float, kind: Value
ES float float_intrinsics_recipFastPtr_float_(float wrp_a){
    return (float) ::physx::intrinsics::recipFast(wrp_a);
}

//DBG: FunctionNode physx::intrinsics::sqrt L81-84
//RET nat: float, man: float, ret: True, kind: Value
//PAR nat: float, man: float, kind: Value
ES float float_intrinsics_sqrtPtr_float_(float wrp_a){
    return (float) ::physx::intrinsics::sqrt(wrp_a);
}

//DBG: FunctionNode physx::intrinsics::recipSqrt L87-90
//RET nat: float, man: float, ret: True, kind: Value
//PAR nat: float, man: float, kind: Value
ES float float_intrinsics_recipSqrtPtr_float_(float wrp_a){
    return (float) ::physx::intrinsics::recipSqrt(wrp_a);
}

//DBG: FunctionNode physx::intrinsics::recipSqrtFast L93-96
//RET nat: float, man: float, ret: True, kind: Value
//PAR nat: float, man: float, kind: Value
ES float float_intrinsics_recipSqrtFastPtr_float_(float wrp_a){
    return (float) ::physx::intrinsics::recipSqrtFast(wrp_a);
}

//DBG: FunctionNode physx::intrinsics::sin L99-102
//RET nat: float, man: float, ret: True, kind: Value
//PAR nat: float, man: float, kind: Value
ES float float_intrinsics_sinPtr_float_(float wrp_a){
    return (float) ::physx::intrinsics::sin(wrp_a);
}

//DBG: FunctionNode physx::intrinsics::cos L105-108
//RET nat: float, man: float, ret: True, kind: Value
//PAR nat: float, man: float, kind: Value
ES float float_intrinsics_cosPtr_float_(float wrp_a){
    return (float) ::physx::intrinsics::cos(wrp_a);
}

//DBG: FunctionNode physx::intrinsics::selectMin L111-114
//RET nat: float, man: float, ret: True, kind: Value
//PAR nat: float, man: float, kind: Value
//PAR nat: float, man: float, kind: Value
ES float float_intrinsics_selectMinPtr_float_float_(float wrp_a, float wrp_b){
    return (float) ::physx::intrinsics::selectMin(wrp_a, wrp_b);
}

//DBG: FunctionNode physx::intrinsics::selectMax L117-120
//RET nat: float, man: float, ret: True, kind: Value
//PAR nat: float, man: float, kind: Value
//PAR nat: float, man: float, kind: Value
ES float float_intrinsics_selectMaxPtr_float_float_(float wrp_a, float wrp_b){
    return (float) ::physx::intrinsics::selectMax(wrp_a, wrp_b);
}

//DBG: FunctionNode physx::intrinsics::isFinite L123-130
//RET nat: bool, man: bool, ret: True, kind: Value
//PAR nat: float, man: float, kind: Value
ES bool bool_intrinsics_isFinitePtr_float_(float wrp_a){
    return (bool) ::physx::intrinsics::isFinite(wrp_a);
}

//DBG: FunctionNode physx::intrinsics::isFinite L133-140
//RET nat: bool, man: bool, ret: True, kind: Value
//PAR nat: double, man: double, kind: Value
ES bool bool_intrinsics_isFinitePtr_double_(double wrp_a){
    return (bool) ::physx::intrinsics::isFinite(wrp_a);
}

//DBG: FunctionNode physx::intrinsics::memZero L145-148
//RET nat: void*, man: IntPtr, ret: True, kind: Value
//PAR nat: void*, man: IntPtr, kind: Value
//PAR nat: uint32_t, man: uint, kind: Value
ES void* IntPtr_intrinsics_memZeroPtr_IntPtr_uint_(void* wrp_dest, uint32_t wrp_count){
    return (void*) ::physx::intrinsics::memZero(wrp_dest, wrp_count);
}

//DBG: FunctionNode physx::intrinsics::memSet L153-156
//RET nat: void*, man: IntPtr, ret: True, kind: Value
//PAR nat: void*, man: IntPtr, kind: Value
//PAR nat: int32_t, man: int, kind: Value
//PAR nat: uint32_t, man: uint, kind: Value
ES void* IntPtr_intrinsics_memSetPtr_IntPtr_int_uint_(void* wrp_dest, int32_t wrp_c, uint32_t wrp_count){
    return (void*) ::physx::intrinsics::memSet(wrp_dest, wrp_c, wrp_count);
}

//DBG: FunctionNode physx::intrinsics::memCopy L161-164
//RET nat: void*, man: IntPtr, ret: True, kind: Value
//PAR nat: void*, man: IntPtr, kind: Value
//PAR nat: void*, man: IntPtr, kind: Value
//PAR nat: uint32_t, man: uint, kind: Value
ES void* IntPtr_intrinsics_memCopyPtr_IntPtr_IntPtr_uint_(void* wrp_dest, void* wrp_src, uint32_t wrp_count){
    return (void*) ::physx::intrinsics::memCopy(wrp_dest, wrp_src, wrp_count);
}

//DBG: FunctionNode physx::intrinsics::memMove L169-172
//RET nat: void*, man: IntPtr, ret: True, kind: Value
//PAR nat: void*, man: IntPtr, kind: Value
//PAR nat: void*, man: IntPtr, kind: Value
//PAR nat: uint32_t, man: uint, kind: Value
ES void* IntPtr_intrinsics_memMovePtr_IntPtr_IntPtr_uint_(void* wrp_dest, void* wrp_src, uint32_t wrp_count){
    return (void*) ::physx::intrinsics::memMove(wrp_dest, wrp_src, wrp_count);
}

//DBG: FunctionNode physx::intrinsics::memZero128 L177-181
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: void*, man: IntPtr, kind: Value
ES void void_intrinsics_memZero128Ptr_IntPtr_(void* wrp_dest){
    ::physx::intrinsics::memZero128(wrp_dest);
}

//DBG: FunctionNode physx::intrinsics::memZero128 L177-181
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: void*, man: IntPtr, kind: Value
//PAR nat: uint32_t, man: uint, kind: Value
ES void void_intrinsics_memZero128Ptr_IntPtr_uint_(void* wrp_dest, uint32_t wrp_offset){
    ::physx::intrinsics::memZero128(wrp_dest, wrp_offset);
}
