// Generated by minBND 5.1.78.26 - Â© github.com/Alan-FGR
//DEBUG: UnitNode  - 0
//DEBUG: NamespaceNode physx - 40-390
//DEBUG: FunctionNode physx::operator* - 384-387
//Internal Op

//DEBUG: ClassNode physx::PxVec3 - 49-382
//DEBUG: DefaulterNode physx::PxVec3::PxVec3 - 55-57
ES void Default_physx_PxVec3_(physx::PxVec3* RetRef){
    //RET nat: physx::PxVec3, man: physx.PxVec3, ret: False, kind: Blittable
    *RetRef = *RetRef = physx::PxVec3();
}

//DEBUG: BlittableCtorNode physx::PxVec3::PxVec3 - 62-65
ES void void_physx_PxVec3_PxVec3_Ctor_physx_PxZERO_(physx::PxVec3* wrp_this, physx::PxZERO wrp_r){
    //RET nat: void, man: void, ret: True, kind: Value
    //PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
    //PAR nat: physx::PxZERO, man: physx.PxZERO, kind: Value
    *wrp_this = physx::PxVec3::PxVec3(wrp_r);
}

//DEBUG: BlittableCtorNode physx::PxVec3::PxVec3 - 74-76
ES void void_physx_PxVec3_PxVec3_Ctor_float_(physx::PxVec3* wrp_this, float wrp_a){
    //RET nat: void, man: void, ret: True, kind: Value
    //PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
    //PAR nat: float, man: float, kind: Value
    *wrp_this = physx::PxVec3::PxVec3(wrp_a);
}

//DEBUG: BlittableCtorNode physx::PxVec3::PxVec3 - 85-87
ES void void_physx_PxVec3_PxVec3_Ctor_float_float_float_(physx::PxVec3* wrp_this, float wrp_nx, float wrp_ny, float wrp_nz){
    //RET nat: void, man: void, ret: True, kind: Value
    //PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
    //PAR nat: float, man: float, kind: Value
    //PAR nat: float, man: float, kind: Value
    //PAR nat: float, man: float, kind: Value
    *wrp_this = physx::PxVec3::PxVec3(wrp_nx, wrp_ny, wrp_nz);
}

//DEBUG: BlittableCtorNode physx::PxVec3::PxVec3 - 92-94
ES void void_physx_PxVec3_PxVec3_Ctor_physx_PxVec3_(physx::PxVec3* wrp_this, physx::PxVec3* wrp_v){
    //RET nat: void, man: void, ret: True, kind: Value
    //PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
    //PAR nat: physx::PxVec3*, man: physx.PxVec3*, kind: Value
    *wrp_this = physx::PxVec3::PxVec3(*wrp_v);
}

//DEBUG: MethodNode physx::PxVec3::operator= - 101-107
//ERRORS OCCURED IN physx::PxVec3::operator=
//Unbindable Operator: Equal

//DEBUG: MethodNode physx::PxVec3::operator[] - 112-117
//ERRORS OCCURED IN physx::PxVec3::operator[]
//Unbindable Operator: Subscript

//DEBUG: MethodNode physx::PxVec3::operator[] - 122-127
//ERRORS OCCURED IN physx::PxVec3::operator[]
//Unbindable Operator: Subscript

//DEBUG: MethodNode physx::PxVec3::operator== - 132-135
ES bool bool_const_physx_PxVec3_operator_EqualEqual_physx_PxVec3_(physx::PxVec3* wrp_lhs, physx::PxVec3* wrp_v){
    //RET nat: bool, man: bool, ret: True, kind: Value
    //PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
    //PAR nat: physx::PxVec3*, man: physx.PxVec3*, kind: Value
    return (bool) wrp_lhs->operator==(*wrp_v);
}

//DEBUG: MethodNode physx::PxVec3::operator!= - 140-143
ES bool bool_const_physx_PxVec3_operator_ExclaimEqual_physx_PxVec3_(physx::PxVec3* wrp_lhs, physx::PxVec3* wrp_v){
    //RET nat: bool, man: bool, ret: True, kind: Value
    //PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
    //PAR nat: physx::PxVec3*, man: physx.PxVec3*, kind: Value
    return (bool) wrp_lhs->operator!=(*wrp_v);
}

//DEBUG: MethodNode physx::PxVec3::isZero - 148-151
ES bool bool_const_physx_PxVec3_isZero(physx::PxVec3* wrp_this){
    //RET nat: bool, man: bool, ret: True, kind: Value
    //PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
    return (bool) wrp_this->isZero();
}

//DEBUG: MethodNode physx::PxVec3::isFinite - 156-159
ES bool bool_const_physx_PxVec3_isFinite(physx::PxVec3* wrp_this){
    //RET nat: bool, man: bool, ret: True, kind: Value
    //PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
    return (bool) wrp_this->isFinite();
}

//DEBUG: MethodNode physx::PxVec3::isNormalized - 164-168
ES bool bool_const_physx_PxVec3_isNormalized(physx::PxVec3* wrp_this){
    //RET nat: bool, man: bool, ret: True, kind: Value
    //PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
    return (bool) wrp_this->isNormalized();
}

//DEBUG: MethodNode physx::PxVec3::magnitudeSquared - 175-178
ES float float_const_physx_PxVec3_magnitudeSquared(physx::PxVec3* wrp_this){
    //RET nat: float, man: float, ret: True, kind: Value
    //PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
    return (float) wrp_this->magnitudeSquared();
}

//DEBUG: MethodNode physx::PxVec3::magnitude - 183-186
ES float float_const_physx_PxVec3_magnitude(physx::PxVec3* wrp_this){
    //RET nat: float, man: float, ret: True, kind: Value
    //PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
    return (float) wrp_this->magnitude();
}

//DEBUG: MethodNode physx::PxVec3::operator- - 191-194
ES void physx_PxVec3_const_physx_PxVec3_operator_Minus(physx::PxVec3* RetRef, physx::PxVec3* wrp_lhs){
    //RET nat: physx::PxVec3, man: physx.PxVec3, ret: False, kind: Blittable
    //PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
    *RetRef = wrp_lhs->operator-();
}

//DEBUG: MethodNode physx::PxVec3::operator+ - 199-202
ES void physx_PxVec3_const_physx_PxVec3_operator_Plus_physx_PxVec3_(physx::PxVec3* RetRef, physx::PxVec3* wrp_lhs, physx::PxVec3* wrp_v){
    //RET nat: physx::PxVec3, man: physx.PxVec3, ret: False, kind: Blittable
    //PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
    //PAR nat: physx::PxVec3*, man: physx.PxVec3*, kind: Value
    *RetRef = wrp_lhs->operator+(*wrp_v);
}

//DEBUG: MethodNode physx::PxVec3::operator- - 207-210
ES void physx_PxVec3_const_physx_PxVec3_operator_Minus_physx_PxVec3_(physx::PxVec3* RetRef, physx::PxVec3* wrp_lhs, physx::PxVec3* wrp_v){
    //RET nat: physx::PxVec3, man: physx.PxVec3, ret: False, kind: Blittable
    //PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
    //PAR nat: physx::PxVec3*, man: physx.PxVec3*, kind: Value
    *RetRef = wrp_lhs->operator-(*wrp_v);
}

//DEBUG: MethodNode physx::PxVec3::operator* - 215-218
ES void physx_PxVec3_const_physx_PxVec3_operator_Star_float_(physx::PxVec3* RetRef, physx::PxVec3* wrp_lhs, float wrp_f){
    //RET nat: physx::PxVec3, man: physx.PxVec3, ret: False, kind: Blittable
    //PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
    //PAR nat: float, man: float, kind: Value
    *RetRef = wrp_lhs->operator*(wrp_f);
}

//DEBUG: MethodNode physx::PxVec3::operator/ - 223-227
ES void physx_PxVec3_const_physx_PxVec3_operator_Slash_float_(physx::PxVec3* RetRef, physx::PxVec3* wrp_lhs, float wrp_f){
    //RET nat: physx::PxVec3, man: physx.PxVec3, ret: False, kind: Blittable
    //PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
    //PAR nat: float, man: float, kind: Value
    *RetRef = wrp_lhs->operator/(wrp_f);
}

//DEBUG: MethodNode physx::PxVec3::operator+= - 232-238
//ERRORS OCCURED IN physx::PxVec3::operator+=
//Unbindable Operator: PlusEqual

//DEBUG: MethodNode physx::PxVec3::operator-= - 243-249
//ERRORS OCCURED IN physx::PxVec3::operator-=
//Unbindable Operator: MinusEqual

//DEBUG: MethodNode physx::PxVec3::operator*= - 254-260
//ERRORS OCCURED IN physx::PxVec3::operator*=
//Unbindable Operator: StarEqual

//DEBUG: MethodNode physx::PxVec3::operator/= - 264-271
//ERRORS OCCURED IN physx::PxVec3::operator/=
//Unbindable Operator: SlashEqual

//DEBUG: MethodNode physx::PxVec3::dot - 276-279
ES float float_const_physx_PxVec3_dot_physx_PxVec3_(physx::PxVec3* wrp_this, physx::PxVec3* wrp_v){
    //RET nat: float, man: float, ret: True, kind: Value
    //PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
    //PAR nat: physx::PxVec3*, man: physx.PxVec3*, kind: Value
    return (float) wrp_this->dot(*wrp_v);
}

//DEBUG: MethodNode physx::PxVec3::cross - 284-287
ES void physx_PxVec3_const_physx_PxVec3_cross_physx_PxVec3_(physx::PxVec3* RetRef, physx::PxVec3* wrp_this, physx::PxVec3* wrp_v){
    //RET nat: physx::PxVec3, man: physx.PxVec3, ret: False, kind: Blittable
    //PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
    //PAR nat: physx::PxVec3*, man: physx.PxVec3*, kind: Value
    *RetRef = wrp_this->cross(*wrp_v);
}

//DEBUG: MethodNode physx::PxVec3::getNormalized - 291-295
ES void physx_PxVec3_const_physx_PxVec3_getNormalized(physx::PxVec3* RetRef, physx::PxVec3* wrp_this){
    //RET nat: physx::PxVec3, man: physx.PxVec3, ret: False, kind: Blittable
    //PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
    *RetRef = wrp_this->getNormalized();
}

//DEBUG: MethodNode physx::PxVec3::normalize - 300-306
ES float float_physx_PxVec3_normalize(physx::PxVec3* wrp_this){
    //RET nat: float, man: float, ret: True, kind: Value
    //PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
    return (float) wrp_this->normalize();
}

//DEBUG: MethodNode physx::PxVec3::normalizeSafe - 312-319
ES float float_physx_PxVec3_normalizeSafe(physx::PxVec3* wrp_this){
    //RET nat: float, man: float, ret: True, kind: Value
    //PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
    return (float) wrp_this->normalizeSafe();
}

//DEBUG: MethodNode physx::PxVec3::normalizeFast - 325-331
ES float float_physx_PxVec3_normalizeFast(physx::PxVec3* wrp_this){
    //RET nat: float, man: float, ret: True, kind: Value
    //PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
    return (float) wrp_this->normalizeFast();
}

//DEBUG: MethodNode physx::PxVec3::multiply - 336-339
ES void physx_PxVec3_const_physx_PxVec3_multiply_physx_PxVec3_(physx::PxVec3* RetRef, physx::PxVec3* wrp_this, physx::PxVec3* wrp_a){
    //RET nat: physx::PxVec3, man: physx.PxVec3, ret: False, kind: Blittable
    //PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
    //PAR nat: physx::PxVec3*, man: physx.PxVec3*, kind: Value
    *RetRef = wrp_this->multiply(*wrp_a);
}

//DEBUG: MethodNode physx::PxVec3::minimum - 344-347
ES void physx_PxVec3_const_physx_PxVec3_minimum_physx_PxVec3_(physx::PxVec3* RetRef, physx::PxVec3* wrp_this, physx::PxVec3* wrp_v){
    //RET nat: physx::PxVec3, man: physx.PxVec3, ret: False, kind: Blittable
    //PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
    //PAR nat: physx::PxVec3*, man: physx.PxVec3*, kind: Value
    *RetRef = wrp_this->minimum(*wrp_v);
}

//DEBUG: MethodNode physx::PxVec3::minElement - 352-355
ES float float_const_physx_PxVec3_minElement(physx::PxVec3* wrp_this){
    //RET nat: float, man: float, ret: True, kind: Value
    //PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
    return (float) wrp_this->minElement();
}

//DEBUG: MethodNode physx::PxVec3::maximum - 360-363
ES void physx_PxVec3_const_physx_PxVec3_maximum_physx_PxVec3_(physx::PxVec3* RetRef, physx::PxVec3* wrp_this, physx::PxVec3* wrp_v){
    //RET nat: physx::PxVec3, man: physx.PxVec3, ret: False, kind: Blittable
    //PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
    //PAR nat: physx::PxVec3*, man: physx.PxVec3*, kind: Value
    *RetRef = wrp_this->maximum(*wrp_v);
}

//DEBUG: MethodNode physx::PxVec3::maxElement - 368-371
ES float float_const_physx_PxVec3_maxElement(physx::PxVec3* wrp_this){
    //RET nat: float, man: float, ret: True, kind: Value
    //PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
    return (float) wrp_this->maxElement();
}

//DEBUG: MethodNode physx::PxVec3::abs - 376-379
ES void physx_PxVec3_const_physx_PxVec3_abs(physx::PxVec3* RetRef, physx::PxVec3* wrp_this){
    //RET nat: physx::PxVec3, man: physx.PxVec3, ret: False, kind: Blittable
    //PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
    *RetRef = wrp_this->abs();
}

//DEBUG: MethodNode physx::PxVec3::~PxVec3 - 49
//ERRORS OCCURED IN physx::PxVec3::~PxVec3
//Implicit Function/Method
//Destructor
    //DEBUG: ExternalOpNode physx::operator* - 384-387
    ES void physx_PxVec3_physx_operator_Star_float_physx_PxVec3_(physx::PxVec3* RetRef, float wrp_f, physx::PxVec3* wrp_v){
        //RET nat: physx::PxVec3, man: physx.PxVec3, ret: False, kind: Blittable
        //PAR nat: float, man: float, kind: Value
        //PAR nat: physx::PxVec3*, man: physx.PxVec3*, kind: Value
        *RetRef = operator*(wrp_f, *wrp_v);
    }
