// Generated by minBND 5.1.90.51 - Â© github.com/Alan-FGR

//DBG: FunctionNode physx::operator* L384-387
//Value Converter OpMultiply
//physx::operator* static physx.PxVec3 OpMultiply(float f, physx.PxVec3 v) will also be bound as member operator
//RET nat: physx::PxVec3, man: physx.PxVec3, ret: False, kind: Blittable
//PAR nat: float, man: float, kind: Value
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable

//DBG: FunctionNode physx::operator* L384-387
//Value Converter OpMultiply
//physx::operator* static physx.PxVec3 OpMultiply(float f, physx.PxVec3.Ref v) will also be bound as member operator
//RET nat: physx::PxVec3, man: physx.PxVec3, ret: False, kind: Blittable
//PAR nat: float, man: float, kind: Value
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable

//DBG: FunctionNode physx::operator* L384-387
//physx::operator* static physx.PxVec3 OpMultiply(float f, physx.PxVec3* v) will also be bound as member operator
//RET nat: physx::PxVec3, man: physx.PxVec3, ret: False, kind: Blittable
//PAR nat: float, man: float, kind: Value
//PAR nat: physx::PxVec3*, man: physx.PxVec3*, kind: Value
ES void PxVec3_operator_Ptr_Star_float_PxVec3_(physx::PxVec3* nRetRef, float wrp_f, physx::PxVec3* wrp_v){
    *nRetRef = ::physx::operator*(wrp_f, *wrp_v);
}
//Subclasses using this: 0

//DBG: ClassNode PxVec3 physx::PxVec3 L49-382

//DBG: DefaultValueCtorNode physx::PxVec3::PxVec3 L55-57
//RET nat: physx::PxVec3, man: physx.PxVec3, ret: False, kind: Blittable
ES void Default_PxVec3_(physx::PxVec3* nRetRef){
    *nRetRef = PxVec3();
}

//DBG: BlittableCtorNode physx::PxVec3::PxVec3 L62-65
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
//PAR nat: physx::PxZERO, man: physx.PxZERO, kind: Value
ES void void_PxVec3_PxVec3Ptr_Ctor_PxZERO_(physx::PxVec3* wrp_this, physx::PxZERO wrp_r){
    *wrp_this = ::physx::PxVec3::PxVec3(wrp_r);
}

//DBG: BlittableCtorNode physx::PxVec3::PxVec3 L74-76
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
//PAR nat: float, man: float, kind: Value
ES void void_PxVec3_PxVec3Ptr_Ctor_float_(physx::PxVec3* wrp_this, float wrp_a){
    *wrp_this = ::physx::PxVec3::PxVec3(wrp_a);
}

//DBG: BlittableCtorNode physx::PxVec3::PxVec3 L85-87
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
//PAR nat: float, man: float, kind: Value
//PAR nat: float, man: float, kind: Value
//PAR nat: float, man: float, kind: Value
ES void void_PxVec3_PxVec3Ptr_Ctor_float_float_float_(physx::PxVec3* wrp_this, float wrp_nx, float wrp_ny, float wrp_nz){
    *wrp_this = ::physx::PxVec3::PxVec3(wrp_nx, wrp_ny, wrp_nz);
}

//DBG: BlittableCtorNode physx::PxVec3::PxVec3 L92-94
//Value Converter PxVec3
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable

//DBG: BlittableCtorNode physx::PxVec3::PxVec3 L92-94
//Value Converter PxVec3
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable

//DBG: BlittableCtorNode physx::PxVec3::PxVec3 L92-94
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
//PAR nat: physx::PxVec3*, man: physx.PxVec3*, kind: Value
ES void void_PxVec3_PxVec3Ptr_Ctor_PxVec3_(physx::PxVec3* wrp_this, physx::PxVec3* wrp_v){
    *wrp_this = ::physx::PxVec3::PxVec3(*wrp_v);
}

//DBG: MethodNode physx::PxVec3::operator= L101-107
//Value Converter OpEqual
//RET nat: physx::PxVec3*, man: physx.PxVec3*, ret: True, kind: Value
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable

//DBG: MethodNode physx::PxVec3::operator= L101-107
//Value Converter OpEqual
//RET nat: physx::PxVec3*, man: physx.PxVec3*, ret: True, kind: Value
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable

//DBG: MethodNode physx::PxVec3::operator= L101-107
//RET nat: physx::PxVec3*, man: physx.PxVec3*, ret: True, kind: Value
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
//PAR nat: physx::PxVec3*, man: physx.PxVec3*, kind: Value
ES physx::PxVec3* PxVec3_PxVec3_operator_Ptr_Equal_PxVec3_(physx::PxVec3* wrp_lhs, physx::PxVec3* wrp_p){
    return (physx::PxVec3*) &wrp_lhs->::physx::PxVec3::operator=(*wrp_p);
}

//DBG: MethodNode physx::PxVec3::operator[] L112-117
//RET nat: float*, man: float*, ret: True, kind: Value
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
//PAR nat: unsigned int, man: uint, kind: Value
ES float* float_PxVec3_operator_Ptr_Subscript_uint_(physx::PxVec3* wrp_lhs, unsigned int wrp_index){
    return (float*) &wrp_lhs->::physx::PxVec3::operator[](wrp_index);
}

//DBG: MethodNode physx::PxVec3::operator[] L122-127
//RET nat: float*, man: float*, ret: True, kind: Value
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
//PAR nat: unsigned int, man: uint, kind: Value
ES float* float_const_PxVec3_operator_Ptr_Subscript_uint_(physx::PxVec3* wrp_lhs, unsigned int wrp_index){
    return (float*) &wrp_lhs->::physx::PxVec3::operator[](wrp_index);
}

//DBG: MethodNode physx::PxVec3::operator== L132-135
//Value Converter OpEquals
//RET nat: bool, man: bool, ret: True, kind: Value
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable

//DBG: MethodNode physx::PxVec3::operator== L132-135
//Value Converter OpEquals
//RET nat: bool, man: bool, ret: True, kind: Value
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable

//DBG: MethodNode physx::PxVec3::operator== L132-135
//RET nat: bool, man: bool, ret: True, kind: Value
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
//PAR nat: physx::PxVec3*, man: physx.PxVec3*, kind: Value
ES bool bool_const_PxVec3_operator_Ptr_EqualEqual_PxVec3_(physx::PxVec3* wrp_lhs, physx::PxVec3* wrp_v){
    return (bool) wrp_lhs->::physx::PxVec3::operator==(*wrp_v);
}

//DBG: MethodNode physx::PxVec3::operator!= L140-143
//Value Converter OpExclaimEqual
//RET nat: bool, man: bool, ret: True, kind: Value
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable

//DBG: MethodNode physx::PxVec3::operator!= L140-143
//Value Converter OpExclaimEqual
//RET nat: bool, man: bool, ret: True, kind: Value
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable

//DBG: MethodNode physx::PxVec3::operator!= L140-143
//RET nat: bool, man: bool, ret: True, kind: Value
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
//PAR nat: physx::PxVec3*, man: physx.PxVec3*, kind: Value
ES bool bool_const_PxVec3_operator_Ptr_ExclaimEqual_PxVec3_(physx::PxVec3* wrp_lhs, physx::PxVec3* wrp_v){
    return (bool) wrp_lhs->::physx::PxVec3::operator!=(*wrp_v);
}

//DBG: MethodNode physx::PxVec3::isZero L148-151
//RET nat: bool, man: bool, ret: True, kind: Value
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
ES bool bool_const_PxVec3_isZeroPtr(physx::PxVec3* wrp_this){
    return (bool) wrp_this->isZero();
}

//DBG: MethodNode physx::PxVec3::isFinite L156-159
//RET nat: bool, man: bool, ret: True, kind: Value
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
ES bool bool_const_PxVec3_isFinitePtr(physx::PxVec3* wrp_this){
    return (bool) wrp_this->isFinite();
}

//DBG: MethodNode physx::PxVec3::isNormalized L164-168
//RET nat: bool, man: bool, ret: True, kind: Value
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
ES bool bool_const_PxVec3_isNormalizedPtr(physx::PxVec3* wrp_this){
    return (bool) wrp_this->isNormalized();
}

//DBG: MethodNode physx::PxVec3::magnitudeSquared L175-178
//RET nat: float, man: float, ret: True, kind: Value
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
ES float float_const_PxVec3_magnitudeSquaredPtr(physx::PxVec3* wrp_this){
    return (float) wrp_this->magnitudeSquared();
}

//DBG: MethodNode physx::PxVec3::magnitude L183-186
//RET nat: float, man: float, ret: True, kind: Value
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
ES float float_const_PxVec3_magnitudePtr(physx::PxVec3* wrp_this){
    return (float) wrp_this->magnitude();
}

//DBG: MethodNode physx::PxVec3::operator- L191-194
//RET nat: physx::PxVec3, man: physx.PxVec3, ret: False, kind: Blittable
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
ES void PxVec3_const_PxVec3_operator_Ptr_Minus(physx::PxVec3* nRetRef, physx::PxVec3* wrp_lhs){
    *nRetRef = wrp_lhs->::physx::PxVec3::operator-();
}

//DBG: MethodNode physx::PxVec3::operator+ L199-202
//Value Converter OpPlus
//RET nat: physx::PxVec3, man: physx.PxVec3, ret: False, kind: Blittable
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable

//DBG: MethodNode physx::PxVec3::operator+ L199-202
//Value Converter OpPlus
//RET nat: physx::PxVec3, man: physx.PxVec3, ret: False, kind: Blittable
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable

//DBG: MethodNode physx::PxVec3::operator+ L199-202
//RET nat: physx::PxVec3, man: physx.PxVec3, ret: False, kind: Blittable
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
//PAR nat: physx::PxVec3*, man: physx.PxVec3*, kind: Value
ES void PxVec3_const_PxVec3_operator_Ptr_Plus_PxVec3_(physx::PxVec3* nRetRef, physx::PxVec3* wrp_lhs, physx::PxVec3* wrp_v){
    *nRetRef = wrp_lhs->::physx::PxVec3::operator+(*wrp_v);
}

//DBG: MethodNode physx::PxVec3::operator- L207-210
//Value Converter OpMinus
//RET nat: physx::PxVec3, man: physx.PxVec3, ret: False, kind: Blittable
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable

//DBG: MethodNode physx::PxVec3::operator- L207-210
//Value Converter OpMinus
//RET nat: physx::PxVec3, man: physx.PxVec3, ret: False, kind: Blittable
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable

//DBG: MethodNode physx::PxVec3::operator- L207-210
//RET nat: physx::PxVec3, man: physx.PxVec3, ret: False, kind: Blittable
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
//PAR nat: physx::PxVec3*, man: physx.PxVec3*, kind: Value
ES void PxVec3_const_PxVec3_operator_Ptr_Minus_PxVec3_(physx::PxVec3* nRetRef, physx::PxVec3* wrp_lhs, physx::PxVec3* wrp_v){
    *nRetRef = wrp_lhs->::physx::PxVec3::operator-(*wrp_v);
}

//DBG: MethodNode physx::PxVec3::operator* L215-218
//RET nat: physx::PxVec3, man: physx.PxVec3, ret: False, kind: Blittable
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
//PAR nat: float, man: float, kind: Value
ES void PxVec3_const_PxVec3_operator_Ptr_Star_float_(physx::PxVec3* nRetRef, physx::PxVec3* wrp_lhs, float wrp_f){
    *nRetRef = wrp_lhs->::physx::PxVec3::operator*(wrp_f);
}

//DBG: MethodNode physx::PxVec3::operator/ L223-227
//RET nat: physx::PxVec3, man: physx.PxVec3, ret: False, kind: Blittable
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
//PAR nat: float, man: float, kind: Value
ES void PxVec3_const_PxVec3_operator_Ptr_Slash_float_(physx::PxVec3* nRetRef, physx::PxVec3* wrp_lhs, float wrp_f){
    *nRetRef = wrp_lhs->::physx::PxVec3::operator/(wrp_f);
}

//DBG: MethodNode physx::PxVec3::operator+= L232-238
//Value Converter OpPlusEqual
//RET nat: physx::PxVec3*, man: physx.PxVec3*, ret: True, kind: Value
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable

//DBG: MethodNode physx::PxVec3::operator+= L232-238
//Value Converter OpPlusEqual
//RET nat: physx::PxVec3*, man: physx.PxVec3*, ret: True, kind: Value
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable

//DBG: MethodNode physx::PxVec3::operator+= L232-238
//RET nat: physx::PxVec3*, man: physx.PxVec3*, ret: True, kind: Value
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
//PAR nat: physx::PxVec3*, man: physx.PxVec3*, kind: Value
ES physx::PxVec3* PxVec3_PxVec3_operator_Ptr_PlusEqual_PxVec3_(physx::PxVec3* wrp_lhs, physx::PxVec3* wrp_v){
    return (physx::PxVec3*) &wrp_lhs->::physx::PxVec3::operator+=(*wrp_v);
}

//DBG: MethodNode physx::PxVec3::operator-= L243-249
//Value Converter OpMinusEqual
//RET nat: physx::PxVec3*, man: physx.PxVec3*, ret: True, kind: Value
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable

//DBG: MethodNode physx::PxVec3::operator-= L243-249
//Value Converter OpMinusEqual
//RET nat: physx::PxVec3*, man: physx.PxVec3*, ret: True, kind: Value
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable

//DBG: MethodNode physx::PxVec3::operator-= L243-249
//RET nat: physx::PxVec3*, man: physx.PxVec3*, ret: True, kind: Value
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
//PAR nat: physx::PxVec3*, man: physx.PxVec3*, kind: Value
ES physx::PxVec3* PxVec3_PxVec3_operator_Ptr_MinusEqual_PxVec3_(physx::PxVec3* wrp_lhs, physx::PxVec3* wrp_v){
    return (physx::PxVec3*) &wrp_lhs->::physx::PxVec3::operator-=(*wrp_v);
}

//DBG: MethodNode physx::PxVec3::operator*= L254-260
//RET nat: physx::PxVec3*, man: physx.PxVec3*, ret: True, kind: Value
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
//PAR nat: float, man: float, kind: Value
ES physx::PxVec3* PxVec3_PxVec3_operator_Ptr_StarEqual_float_(physx::PxVec3* wrp_lhs, float wrp_f){
    return (physx::PxVec3*) &wrp_lhs->::physx::PxVec3::operator*=(wrp_f);
}

//DBG: MethodNode physx::PxVec3::operator/= L264-271
//RET nat: physx::PxVec3*, man: physx.PxVec3*, ret: True, kind: Value
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
//PAR nat: float, man: float, kind: Value
ES physx::PxVec3* PxVec3_PxVec3_operator_Ptr_SlashEqual_float_(physx::PxVec3* wrp_lhs, float wrp_f){
    return (physx::PxVec3*) &wrp_lhs->::physx::PxVec3::operator/=(wrp_f);
}

//DBG: MethodNode physx::PxVec3::dot L276-279
//Value Converter dot
//RET nat: float, man: float, ret: True, kind: Value
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable

//DBG: MethodNode physx::PxVec3::dot L276-279
//Value Converter dot
//RET nat: float, man: float, ret: True, kind: Value
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable

//DBG: MethodNode physx::PxVec3::dot L276-279
//RET nat: float, man: float, ret: True, kind: Value
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
//PAR nat: physx::PxVec3*, man: physx.PxVec3*, kind: Value
ES float float_const_PxVec3_dotPtr_PxVec3_(physx::PxVec3* wrp_this, physx::PxVec3* wrp_v){
    return (float) wrp_this->dot(*wrp_v);
}

//DBG: MethodNode physx::PxVec3::cross L284-287
//Value Converter cross
//RET nat: physx::PxVec3, man: physx.PxVec3, ret: False, kind: Blittable
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable

//DBG: MethodNode physx::PxVec3::cross L284-287
//Value Converter cross
//RET nat: physx::PxVec3, man: physx.PxVec3, ret: False, kind: Blittable
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable

//DBG: MethodNode physx::PxVec3::cross L284-287
//RET nat: physx::PxVec3, man: physx.PxVec3, ret: False, kind: Blittable
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
//PAR nat: physx::PxVec3*, man: physx.PxVec3*, kind: Value
ES void PxVec3_const_PxVec3_crossPtr_PxVec3_(physx::PxVec3* nRetRef, physx::PxVec3* wrp_this, physx::PxVec3* wrp_v){
    *nRetRef = wrp_this->cross(*wrp_v);
}

//DBG: MethodNode physx::PxVec3::getNormalized L291-295
//RET nat: physx::PxVec3, man: physx.PxVec3, ret: False, kind: Blittable
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
ES void PxVec3_const_PxVec3_getNormalizedPtr(physx::PxVec3* nRetRef, physx::PxVec3* wrp_this){
    *nRetRef = wrp_this->getNormalized();
}

//DBG: MethodNode physx::PxVec3::normalize L300-306
//RET nat: float, man: float, ret: True, kind: Value
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
ES float float_PxVec3_normalizePtr(physx::PxVec3* wrp_this){
    return (float) wrp_this->normalize();
}

//DBG: MethodNode physx::PxVec3::normalizeSafe L312-319
//RET nat: float, man: float, ret: True, kind: Value
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
ES float float_PxVec3_normalizeSafePtr(physx::PxVec3* wrp_this){
    return (float) wrp_this->normalizeSafe();
}

//DBG: MethodNode physx::PxVec3::normalizeFast L325-331
//RET nat: float, man: float, ret: True, kind: Value
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
ES float float_PxVec3_normalizeFastPtr(physx::PxVec3* wrp_this){
    return (float) wrp_this->normalizeFast();
}

//DBG: MethodNode physx::PxVec3::multiply L336-339
//Value Converter multiply
//RET nat: physx::PxVec3, man: physx.PxVec3, ret: False, kind: Blittable
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable

//DBG: MethodNode physx::PxVec3::multiply L336-339
//Value Converter multiply
//RET nat: physx::PxVec3, man: physx.PxVec3, ret: False, kind: Blittable
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable

//DBG: MethodNode physx::PxVec3::multiply L336-339
//RET nat: physx::PxVec3, man: physx.PxVec3, ret: False, kind: Blittable
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
//PAR nat: physx::PxVec3*, man: physx.PxVec3*, kind: Value
ES void PxVec3_const_PxVec3_multiplyPtr_PxVec3_(physx::PxVec3* nRetRef, physx::PxVec3* wrp_this, physx::PxVec3* wrp_a){
    *nRetRef = wrp_this->multiply(*wrp_a);
}

//DBG: MethodNode physx::PxVec3::minimum L344-347
//Value Converter minimum
//RET nat: physx::PxVec3, man: physx.PxVec3, ret: False, kind: Blittable
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable

//DBG: MethodNode physx::PxVec3::minimum L344-347
//Value Converter minimum
//RET nat: physx::PxVec3, man: physx.PxVec3, ret: False, kind: Blittable
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable

//DBG: MethodNode physx::PxVec3::minimum L344-347
//RET nat: physx::PxVec3, man: physx.PxVec3, ret: False, kind: Blittable
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
//PAR nat: physx::PxVec3*, man: physx.PxVec3*, kind: Value
ES void PxVec3_const_PxVec3_minimumPtr_PxVec3_(physx::PxVec3* nRetRef, physx::PxVec3* wrp_this, physx::PxVec3* wrp_v){
    *nRetRef = wrp_this->minimum(*wrp_v);
}

//DBG: MethodNode physx::PxVec3::minElement L352-355
//RET nat: float, man: float, ret: True, kind: Value
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
ES float float_const_PxVec3_minElementPtr(physx::PxVec3* wrp_this){
    return (float) wrp_this->minElement();
}

//DBG: MethodNode physx::PxVec3::maximum L360-363
//Value Converter maximum
//RET nat: physx::PxVec3, man: physx.PxVec3, ret: False, kind: Blittable
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable

//DBG: MethodNode physx::PxVec3::maximum L360-363
//Value Converter maximum
//RET nat: physx::PxVec3, man: physx.PxVec3, ret: False, kind: Blittable
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable

//DBG: MethodNode physx::PxVec3::maximum L360-363
//RET nat: physx::PxVec3, man: physx.PxVec3, ret: False, kind: Blittable
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
//PAR nat: physx::PxVec3*, man: physx.PxVec3*, kind: Value
ES void PxVec3_const_PxVec3_maximumPtr_PxVec3_(physx::PxVec3* nRetRef, physx::PxVec3* wrp_this, physx::PxVec3* wrp_v){
    *nRetRef = wrp_this->maximum(*wrp_v);
}

//DBG: MethodNode physx::PxVec3::maxElement L368-371
//RET nat: float, man: float, ret: True, kind: Value
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
ES float float_const_PxVec3_maxElementPtr(physx::PxVec3* wrp_this){
    return (float) wrp_this->maxElement();
}

//DBG: MethodNode physx::PxVec3::abs L376-379
//RET nat: physx::PxVec3, man: physx.PxVec3, ret: False, kind: Blittable
//PAR nat: physx::PxVec3, man: physx.PxVec3, kind: Blittable
ES void PxVec3_const_PxVec3_absPtr(physx::PxVec3* nRetRef, physx::PxVec3* wrp_this){
    *nRetRef = wrp_this->abs();
}

//DBG: MethodNode physx::PxVec3::~PxVec3 L49
//ERRORS in MethodNode: Skipping Implicit MethodNode physx::PxVec3::~PxVec3 L49, Destructor

//REFERENCES

//Operators
//SKIPPED PARAMETER WITH CONVERSION BUT NO ENCLOSING TYPE
