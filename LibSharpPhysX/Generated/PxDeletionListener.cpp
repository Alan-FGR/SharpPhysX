// Generated by minBND 5.1.91.1 - Â© github.com/Alan-FGR

ES PxDeletionEventFlagsPtr PxDeletionEventFlagsPtr_operator_Ptr_Pipe_PxDeletionEventFlagEnum_PxDeletionEventFlagEnum_(physx::PxDeletionEventFlag::Enum wrp_a, physx::PxDeletionEventFlag::Enum wrp_b){
    auto ret = ::physx::operator|(wrp_a, wrp_b);
    auto heap = new char[sizeof PxDeletionEventFlags];
    std::memcpy(heap, &ret, sizeof PxDeletionEventFlags);
    return (PxDeletionEventFlagsPtr) heap;
}

ES PxDeletionEventFlagsPtr PxDeletionEventFlagsPtr_operator_Ptr_Amp_PxDeletionEventFlagEnum_PxDeletionEventFlagEnum_(physx::PxDeletionEventFlag::Enum wrp_a, physx::PxDeletionEventFlag::Enum wrp_b){
    auto ret = ::physx::operator&(wrp_a, wrp_b);
    auto heap = new char[sizeof PxDeletionEventFlags];
    std::memcpy(heap, &ret, sizeof PxDeletionEventFlags);
    return (PxDeletionEventFlagsPtr) heap;
}

ES PxDeletionEventFlagsPtr PxDeletionEventFlagsPtr_operator_Ptr_Tilde_PxDeletionEventFlagEnum_(physx::PxDeletionEventFlag::Enum wrp_a){
    auto ret = ::physx::operator~(wrp_a);
    auto heap = new char[sizeof PxDeletionEventFlags];
    std::memcpy(heap, &ret, sizeof PxDeletionEventFlags);
    return (PxDeletionEventFlagsPtr) heap;
}

ES void void_PxDeletionListenerPtr_onReleasePtr_PxBasePtr_IntPtr_PxDeletionEventFlagEnum_(PxDeletionListenerPtr wrp_this, PxBasePtr wrp_observed, void* wrp_userData, physx::PxDeletionEventFlag::Enum wrp_deletionEvent){
    wrp_this->onRelease(wrp_observed, wrp_userData, wrp_deletionEvent);
}

