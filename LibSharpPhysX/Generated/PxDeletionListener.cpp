// Generated by minBND 5.1.90.51 - Â© github.com/Alan-FGR

//DBG: FunctionNode physx::operator| L66
//physx::operator| static physx.PxDeletionEventFlagsPtr OpPipe_New(physx.PxDeletionEventFlagEnum a, physx.PxDeletionEventFlagEnum b) will also be bound as member operator
//RET nat: PxDeletionEventFlagsPtr, man: physx.PxDeletionEventFlagsPtr, ret: True, kind: PtrStruct
//PAR nat: physx::PxDeletionEventFlag::Enum, man: physx.PxDeletionEventFlagEnum, kind: Value
//PAR nat: physx::PxDeletionEventFlag::Enum, man: physx.PxDeletionEventFlagEnum, kind: Value
ES PxDeletionEventFlagsPtr PxDeletionEventFlagsPtr_operator_Ptr_Pipe_PxDeletionEventFlagEnum_PxDeletionEventFlagEnum_(physx::PxDeletionEventFlag::Enum wrp_a, physx::PxDeletionEventFlag::Enum wrp_b){
    auto ret = ::physx::operator|(wrp_a, wrp_b);
    auto heap = new char[sizeof PxDeletionEventFlags];
    std::memcpy(heap, &ret, sizeof PxDeletionEventFlags);
    return (PxDeletionEventFlagsPtr) heap;
}

//DBG: FunctionNode physx::operator& L66
//physx::operator& static physx.PxDeletionEventFlagsPtr OpAnd_New(physx.PxDeletionEventFlagEnum a, physx.PxDeletionEventFlagEnum b) will also be bound as member operator
//RET nat: PxDeletionEventFlagsPtr, man: physx.PxDeletionEventFlagsPtr, ret: True, kind: PtrStruct
//PAR nat: physx::PxDeletionEventFlag::Enum, man: physx.PxDeletionEventFlagEnum, kind: Value
//PAR nat: physx::PxDeletionEventFlag::Enum, man: physx.PxDeletionEventFlagEnum, kind: Value
ES PxDeletionEventFlagsPtr PxDeletionEventFlagsPtr_operator_Ptr_Amp_PxDeletionEventFlagEnum_PxDeletionEventFlagEnum_(physx::PxDeletionEventFlag::Enum wrp_a, physx::PxDeletionEventFlag::Enum wrp_b){
    auto ret = ::physx::operator&(wrp_a, wrp_b);
    auto heap = new char[sizeof PxDeletionEventFlags];
    std::memcpy(heap, &ret, sizeof PxDeletionEventFlags);
    return (PxDeletionEventFlagsPtr) heap;
}

//DBG: FunctionNode physx::operator~ L66
//physx::operator~ static physx.PxDeletionEventFlagsPtr OpTilde_New(physx.PxDeletionEventFlagEnum a) will also be bound as member operator
//RET nat: PxDeletionEventFlagsPtr, man: physx.PxDeletionEventFlagsPtr, ret: True, kind: PtrStruct
//PAR nat: physx::PxDeletionEventFlag::Enum, man: physx.PxDeletionEventFlagEnum, kind: Value
ES PxDeletionEventFlagsPtr PxDeletionEventFlagsPtr_operator_Ptr_Tilde_PxDeletionEventFlagEnum_(physx::PxDeletionEventFlag::Enum wrp_a){
    auto ret = ::physx::operator~(wrp_a);
    auto heap = new char[sizeof PxDeletionEventFlags];
    std::memcpy(heap, &ret, sizeof PxDeletionEventFlags);
    return (PxDeletionEventFlagsPtr) heap;
}

//DBG: ClassNode PxDeletionEventFlag physx::PxDeletionEventFlag L51-58
//Subclasses using this: 0

//DBG: ClassNode PxDeletionListener physx::PxDeletionListener L73-98

//DBG: MethodNode physx::PxDeletionListener::onRelease L93
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: PxDeletionListenerPtr, man: physx.PxDeletionListenerPtr, kind: PtrStruct
//PAR nat: PxBasePtr, man: physx.PxBasePtr, kind: PtrStruct
//PAR nat: void*, man: IntPtr, kind: Value
//PAR nat: physx::PxDeletionEventFlag::Enum, man: physx.PxDeletionEventFlagEnum, kind: Value
ES void void_PxDeletionListenerPtr_onReleasePtr_PxBasePtr_IntPtr_PxDeletionEventFlagEnum_(PxDeletionListenerPtr wrp_this, PxBasePtr wrp_observed, void* wrp_userData, physx::PxDeletionEventFlag::Enum wrp_deletionEvent){
    wrp_this->onRelease(wrp_observed, wrp_userData, wrp_deletionEvent);
}

//DBG: MethodNode physx::PxDeletionListener::operator= L73
//ERRORS in MethodNode: Skipping Implicit MethodNode physx::PxDeletionListener::operator= L73

//Operators

//DBG: DeclNode PxDeletionEventFlags physx::PxDeletionEventFlags L65
