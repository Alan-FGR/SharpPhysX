// Generated by minBND 5.1.90.51 - Â© github.com/Alan-FGR

//DBG: FunctionNode physx::operator| L113
//physx::operator| static physx.PxActorFlagsPtr OpPipe_New(physx.PxActorFlagEnum a, physx.PxActorFlagEnum b) will also be bound as member operator
//RET nat: PxActorFlagsPtr, man: physx.PxActorFlagsPtr, ret: True, kind: PtrStruct
//PAR nat: physx::PxActorFlag::Enum, man: physx.PxActorFlagEnum, kind: Value
//PAR nat: physx::PxActorFlag::Enum, man: physx.PxActorFlagEnum, kind: Value
ES PxActorFlagsPtr PxActorFlagsPtr_operator_Ptr_Pipe_PxActorFlagEnum_PxActorFlagEnum_(physx::PxActorFlag::Enum wrp_a, physx::PxActorFlag::Enum wrp_b){
    auto ret = ::physx::operator|(wrp_a, wrp_b);
    auto heap = new char[sizeof PxActorFlags];
    std::memcpy(heap, &ret, sizeof PxActorFlags);
    return (PxActorFlagsPtr) heap;
}

//DBG: FunctionNode physx::operator& L113
//physx::operator& static physx.PxActorFlagsPtr OpAnd_New(physx.PxActorFlagEnum a, physx.PxActorFlagEnum b) will also be bound as member operator
//RET nat: PxActorFlagsPtr, man: physx.PxActorFlagsPtr, ret: True, kind: PtrStruct
//PAR nat: physx::PxActorFlag::Enum, man: physx.PxActorFlagEnum, kind: Value
//PAR nat: physx::PxActorFlag::Enum, man: physx.PxActorFlagEnum, kind: Value
ES PxActorFlagsPtr PxActorFlagsPtr_operator_Ptr_Amp_PxActorFlagEnum_PxActorFlagEnum_(physx::PxActorFlag::Enum wrp_a, physx::PxActorFlag::Enum wrp_b){
    auto ret = ::physx::operator&(wrp_a, wrp_b);
    auto heap = new char[sizeof PxActorFlags];
    std::memcpy(heap, &ret, sizeof PxActorFlags);
    return (PxActorFlagsPtr) heap;
}

//DBG: FunctionNode physx::operator~ L113
//physx::operator~ static physx.PxActorFlagsPtr OpTilde_New(physx.PxActorFlagEnum a) will also be bound as member operator
//RET nat: PxActorFlagsPtr, man: physx.PxActorFlagsPtr, ret: True, kind: PtrStruct
//PAR nat: physx::PxActorFlag::Enum, man: physx.PxActorFlagEnum, kind: Value
ES PxActorFlagsPtr PxActorFlagsPtr_operator_Ptr_Tilde_PxActorFlagEnum_(physx::PxActorFlag::Enum wrp_a){
    auto ret = ::physx::operator~(wrp_a);
    auto heap = new char[sizeof PxActorFlags];
    std::memcpy(heap, &ret, sizeof PxActorFlags);
    return (PxActorFlagsPtr) heap;
}

//DBG: ClassNode PxActorFlag physx::PxActorFlag L64-105

//DBG: ClassNode PxActorType physx::PxActorType L119-146
//Subclasses using this: 5

//DBG: ClassNode PxActor physx::PxActor L154-323Bases: PxBasePtr

//DBG: Field: userData - 314-314
ES void* PxActorPtr_GET_userData(PxActorPtr cls) {return (void*)cls->userData;}
ES void PxActorPtr_SET_userData(PxActorPtr cls, void* value) {cls->userData = value;}

//DBG: MethodNode physx::PxActor::release L166
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: PxActorPtr, man: physx.PxActorPtr, kind: PtrStruct
ES void void_PxActorPtr_releasePtr(PxActorPtr wrp_this){
    wrp_this->release();
}

//DBG: MethodNode physx::PxActor::getType L175
//RET nat: physx::PxActorType::Enum, man: physx.PxActorTypeEnum, ret: True, kind: Value
//PAR nat: PxActorPtr, man: physx.PxActorPtr, kind: PtrStruct
ES physx::PxActorType::Enum PxActorTypeEnum_const_PxActorPtr_getTypePtr(PxActorPtr wrp_this){
    return (physx::PxActorType::Enum) wrp_this->getType();
}

//DBG: MethodNode physx::PxActor::getScene L184
//RET nat: PxScenePtr, man: physx.PxScenePtr, ret: True, kind: PtrStruct
//PAR nat: PxActorPtr, man: physx.PxActorPtr, kind: PtrStruct
ES PxScenePtr PxScenePtr_const_PxActorPtr_getScenePtr(PxActorPtr wrp_this){
    return (PxScenePtr) wrp_this->getScene();
}

//DBG: MethodNode physx::PxActor::setName L200
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: PxActorPtr, man: physx.PxActorPtr, kind: PtrStruct
//PAR nat: char*, man: string, kind: Value
ES void void_PxActorPtr_setNamePtr_string_(PxActorPtr wrp_this, char* wrp_name){
    wrp_this->setName(wrp_name);
}

//DBG: MethodNode physx::PxActor::getName L209
//RET nat: char*, man: string, ret: True, kind: Value
//PAR nat: PxActorPtr, man: physx.PxActorPtr, kind: PtrStruct
ES char* string_const_PxActorPtr_getNamePtr(PxActorPtr wrp_this){
    return (char*) wrp_this->getName();
}

//DBG: MethodNode physx::PxActor::getWorldBounds L220
//RET nat: physx::PxBounds3, man: physx.PxBounds3, ret: False, kind: Blittable
//PAR nat: PxActorPtr, man: physx.PxActorPtr, kind: PtrStruct
//PAR nat: float, man: float, kind: Value
ES void PxBounds3_const_PxActorPtr_getWorldBoundsPtr_float_(physx::PxBounds3* nRetRef, PxActorPtr wrp_this, float wrp_inflation){
    *nRetRef = wrp_this->getWorldBounds(wrp_inflation);
}

//DBG: MethodNode physx::PxActor::setActorFlag L236
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: PxActorPtr, man: physx.PxActorPtr, kind: PtrStruct
//PAR nat: physx::PxActorFlag::Enum, man: physx.PxActorFlagEnum, kind: Value
//PAR nat: bool, man: bool, kind: Value
ES void void_PxActorPtr_setActorFlagPtr_PxActorFlagEnum_bool_(PxActorPtr wrp_this, physx::PxActorFlag::Enum wrp_flag, bool wrp_value){
    wrp_this->setActorFlag(wrp_flag, wrp_value);
}

//DBG: MethodNode physx::PxActor::setActorFlags L243
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: PxActorPtr, man: physx.PxActorPtr, kind: PtrStruct
//PAR nat: PxActorFlagsPtr, man: physx.PxActorFlagsPtr, kind: PtrStruct
ES void void_PxActorPtr_setActorFlagsPtr_PxActorFlagsPtr_(PxActorPtr wrp_this, PxActorFlagsPtr wrp_inFlags){
    wrp_this->setActorFlags(*wrp_inFlags);
}

//DBG: MethodNode physx::PxActor::getActorFlags L254
//RET nat: PxActorFlagsPtr, man: physx.PxActorFlagsPtr, ret: True, kind: PtrStruct
//PAR nat: PxActorPtr, man: physx.PxActorPtr, kind: PtrStruct
ES PxActorFlagsPtr PxActorFlagsPtr_const_PxActorPtr_getActorFlagsPtr(PxActorPtr wrp_this){
    auto ret = wrp_this->getActorFlags();
    auto heap = new char[sizeof PxActorFlags];
    std::memcpy(heap, &ret, sizeof PxActorFlags);
    return (PxActorFlagsPtr) heap;
}

//DBG: MethodNode physx::PxActor::setDominanceGroup L272
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: PxActorPtr, man: physx.PxActorPtr, kind: PtrStruct
//PAR nat: PxDominanceGroup, man: byte, kind: Value
ES void void_PxActorPtr_setDominanceGroupPtr_byte_(PxActorPtr wrp_this, PxDominanceGroup wrp_dominanceGroup){
    wrp_this->setDominanceGroup(wrp_dominanceGroup);
}

//DBG: MethodNode physx::PxActor::getDominanceGroup L281
//RET nat: PxDominanceGroup, man: byte, ret: True, kind: Value
//PAR nat: PxActorPtr, man: physx.PxActorPtr, kind: PtrStruct
ES PxDominanceGroup byte_const_PxActorPtr_getDominanceGroupPtr(PxActorPtr wrp_this){
    return (PxDominanceGroup) wrp_this->getDominanceGroup();
}

//DBG: MethodNode physx::PxActor::setOwnerClient L293
//RET nat: void, man: void, ret: True, kind: Value
//PAR nat: PxActorPtr, man: physx.PxActorPtr, kind: PtrStruct
//PAR nat: PxClientID, man: byte, kind: Value
ES void void_PxActorPtr_setOwnerClientPtr_byte_(PxActorPtr wrp_this, PxClientID wrp_inClient){
    wrp_this->setOwnerClient(wrp_inClient);
}

//DBG: MethodNode physx::PxActor::getOwnerClient L302
//RET nat: PxClientID, man: byte, ret: True, kind: Value
//PAR nat: PxActorPtr, man: physx.PxActorPtr, kind: PtrStruct
ES PxClientID byte_const_PxActorPtr_getOwnerClientPtr(PxActorPtr wrp_this){
    return (PxClientID) wrp_this->getOwnerClient();
}

//DBG: MethodNode physx::PxActor::getAggregate L311
//RET nat: PxAggregatePtr, man: physx.PxAggregatePtr, ret: True, kind: PtrStruct
//PAR nat: PxActorPtr, man: physx.PxActorPtr, kind: PtrStruct
ES PxAggregatePtr PxAggregatePtr_const_PxActorPtr_getAggregatePtr(PxActorPtr wrp_this){
    return (PxAggregatePtr) wrp_this->getAggregate();
}

//DBG: MethodNode physx::PxActor::operator= L154
//ERRORS in MethodNode: Skipping Implicit MethodNode physx::PxActor::operator= L154

//DBG: MethodNode physx::PxActor::getWorldBounds L220
//RET nat: physx::PxBounds3, man: physx.PxBounds3, ret: False, kind: Blittable
//PAR nat: PxActorPtr, man: physx.PxActorPtr, kind: PtrStruct
ES void PxBounds3_const_PxActorPtr_getWorldBoundsPtr(physx::PxBounds3* nRetRef, PxActorPtr wrp_this){
    *nRetRef = wrp_this->getWorldBounds();
}
//PIPING
//Skipping: SKIPPING! MethodNode physx::PxBase::is L101 is | 
//Skipping: SKIPPING! MethodNode physx::PxBase::is L111 isConst | 
//INTERFACES

//Operators

//DBG: DeclNode PxActorFlags physx::PxActorFlags L112

//DBG: DeclNode PxDominanceGroup physx::PxDominanceGroup L57
